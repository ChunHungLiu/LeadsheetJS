/*!
 * mustache.js - Logic-less {{mustache}} templates with JavaScript
 * http://github.com/janl/mustache.js
 */

/*global define: false*/

(function (global, factory) {
  if (typeof exports === "object" && exports) {
    factory(exports); // CommonJS
  } else if (typeof define === "function" && define.amd) {
    define('mustache',['exports'], factory); // AMD
  } else {
    factory(global.Mustache = {}); // <script>
  }
}(this, function (mustache) {

  var Object_toString = Object.prototype.toString;
  var isArray = Array.isArray || function (object) {
    return Object_toString.call(object) === '[object Array]';
  };

  function isFunction(object) {
    return typeof object === 'function';
  }

  function escapeRegExp(string) {
    return string.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&");
  }

  // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577
  // See https://github.com/janl/mustache.js/issues/189
  var RegExp_test = RegExp.prototype.test;
  function testRegExp(re, string) {
    return RegExp_test.call(re, string);
  }

  var nonSpaceRe = /\S/;
  function isWhitespace(string) {
    return !testRegExp(nonSpaceRe, string);
  }

  var entityMap = {
    "&": "&amp;",
    "<": "&lt;",
    ">": "&gt;",
    '"': '&quot;',
    "'": '&#39;',
    "/": '&#x2F;'
  };

  function escapeHtml(string) {
    return String(string).replace(/[&<>"'\/]/g, function (s) {
      return entityMap[s];
    });
  }

  var whiteRe = /\s*/;
  var spaceRe = /\s+/;
  var equalsRe = /\s*=/;
  var curlyRe = /\s*\}/;
  var tagRe = /#|\^|\/|>|\{|&|=|!/;

  /**
   * Breaks up the given `template` string into a tree of tokens. If the `tags`
   * argument is given here it must be an array with two string values: the
   * opening and closing tags used in the template (e.g. [ "<%", "%>" ]). Of
   * course, the default is to use mustaches (i.e. mustache.tags).
   *
   * A token is an array with at least 4 elements. The first element is the
   * mustache symbol that was used inside the tag, e.g. "#" or "&". If the tag
   * did not contain a symbol (i.e. {{myValue}}) this element is "name". For
   * all text that appears outside a symbol this element is "text".
   *
   * The second element of a token is its "value". For mustache tags this is
   * whatever else was inside the tag besides the opening symbol. For text tokens
   * this is the text itself.
   *
   * The third and fourth elements of the token are the start and end indices,
   * respectively, of the token in the original template.
   *
   * Tokens that are the root node of a subtree contain two more elements: 1) an
   * array of tokens in the subtree and 2) the index in the original template at
   * which the closing tag for that section begins.
   */
  function parseTemplate(template, tags) {
    if (!template)
      return [];

    var sections = [];     // Stack to hold section tokens
    var tokens = [];       // Buffer to hold the tokens
    var spaces = [];       // Indices of whitespace tokens on the current line
    var hasTag = false;    // Is there a {{tag}} on the current line?
    var nonSpace = false;  // Is there a non-space char on the current line?

    // Strips all whitespace tokens array for the current line
    // if there was a {{#tag}} on it and otherwise only space.
    function stripSpace() {
      if (hasTag && !nonSpace) {
        while (spaces.length)
          delete tokens[spaces.pop()];
      } else {
        spaces = [];
      }

      hasTag = false;
      nonSpace = false;
    }

    var openingTagRe, closingTagRe, closingCurlyRe;
    function compileTags(tags) {
      if (typeof tags === 'string')
        tags = tags.split(spaceRe, 2);

      if (!isArray(tags) || tags.length !== 2)
        throw new Error('Invalid tags: ' + tags);

      openingTagRe = new RegExp(escapeRegExp(tags[0]) + '\\s*');
      closingTagRe = new RegExp('\\s*' + escapeRegExp(tags[1]));
      closingCurlyRe = new RegExp('\\s*' + escapeRegExp('}' + tags[1]));
    }

    compileTags(tags || mustache.tags);

    var scanner = new Scanner(template);

    var start, type, value, chr, token, openSection;
    while (!scanner.eos()) {
      start = scanner.pos;

      // Match any text between tags.
      value = scanner.scanUntil(openingTagRe);

      if (value) {
        for (var i = 0, valueLength = value.length; i < valueLength; ++i) {
          chr = value.charAt(i);

          if (isWhitespace(chr)) {
            spaces.push(tokens.length);
          } else {
            nonSpace = true;
          }

          tokens.push([ 'text', chr, start, start + 1 ]);
          start += 1;

          // Check for whitespace on the current line.
          if (chr === '\n')
            stripSpace();
        }
      }

      // Match the opening tag.
      if (!scanner.scan(openingTagRe))
        break;

      hasTag = true;

      // Get the tag type.
      type = scanner.scan(tagRe) || 'name';
      scanner.scan(whiteRe);

      // Get the tag value.
      if (type === '=') {
        value = scanner.scanUntil(equalsRe);
        scanner.scan(equalsRe);
        scanner.scanUntil(closingTagRe);
      } else if (type === '{') {
        value = scanner.scanUntil(closingCurlyRe);
        scanner.scan(curlyRe);
        scanner.scanUntil(closingTagRe);
        type = '&';
      } else {
        value = scanner.scanUntil(closingTagRe);
      }

      // Match the closing tag.
      if (!scanner.scan(closingTagRe))
        throw new Error('Unclosed tag at ' + scanner.pos);

      token = [ type, value, start, scanner.pos ];
      tokens.push(token);

      if (type === '#' || type === '^') {
        sections.push(token);
      } else if (type === '/') {
        // Check section nesting.
        openSection = sections.pop();

        if (!openSection)
          throw new Error('Unopened section "' + value + '" at ' + start);

        if (openSection[1] !== value)
          throw new Error('Unclosed section "' + openSection[1] + '" at ' + start);
      } else if (type === 'name' || type === '{' || type === '&') {
        nonSpace = true;
      } else if (type === '=') {
        // Set the tags for the next time around.
        compileTags(value);
      }
    }

    // Make sure there are no open sections when we're done.
    openSection = sections.pop();

    if (openSection)
      throw new Error('Unclosed section "' + openSection[1] + '" at ' + scanner.pos);

    return nestTokens(squashTokens(tokens));
  }

  /**
   * Combines the values of consecutive text tokens in the given `tokens` array
   * to a single token.
   */
  function squashTokens(tokens) {
    var squashedTokens = [];

    var token, lastToken;
    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {
      token = tokens[i];

      if (token) {
        if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {
          lastToken[1] += token[1];
          lastToken[3] = token[3];
        } else {
          squashedTokens.push(token);
          lastToken = token;
        }
      }
    }

    return squashedTokens;
  }

  /**
   * Forms the given array of `tokens` into a nested tree structure where
   * tokens that represent a section have two additional items: 1) an array of
   * all tokens that appear in that section and 2) the index in the original
   * template that represents the end of that section.
   */
  function nestTokens(tokens) {
    var nestedTokens = [];
    var collector = nestedTokens;
    var sections = [];

    var token, section;
    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {
      token = tokens[i];

      switch (token[0]) {
      case '#':
      case '^':
        collector.push(token);
        sections.push(token);
        collector = token[4] = [];
        break;
      case '/':
        section = sections.pop();
        section[5] = token[2];
        collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;
        break;
      default:
        collector.push(token);
      }
    }

    return nestedTokens;
  }

  /**
   * A simple string scanner that is used by the template parser to find
   * tokens in template strings.
   */
  function Scanner(string) {
    this.string = string;
    this.tail = string;
    this.pos = 0;
  }

  /**
   * Returns `true` if the tail is empty (end of string).
   */
  Scanner.prototype.eos = function () {
    return this.tail === "";
  };

  /**
   * Tries to match the given regular expression at the current position.
   * Returns the matched text if it can match, the empty string otherwise.
   */
  Scanner.prototype.scan = function (re) {
    var match = this.tail.match(re);

    if (!match || match.index !== 0)
      return '';

    var string = match[0];

    this.tail = this.tail.substring(string.length);
    this.pos += string.length;

    return string;
  };

  /**
   * Skips all text until the given regular expression can be matched. Returns
   * the skipped string, which is the entire tail if no match can be made.
   */
  Scanner.prototype.scanUntil = function (re) {
    var index = this.tail.search(re), match;

    switch (index) {
    case -1:
      match = this.tail;
      this.tail = "";
      break;
    case 0:
      match = "";
      break;
    default:
      match = this.tail.substring(0, index);
      this.tail = this.tail.substring(index);
    }

    this.pos += match.length;

    return match;
  };

  /**
   * Represents a rendering context by wrapping a view object and
   * maintaining a reference to the parent context.
   */
  function Context(view, parentContext) {
    this.view = view == null ? {} : view;
    this.cache = { '.': this.view };
    this.parent = parentContext;
  }

  /**
   * Creates a new context using the given view with this context
   * as the parent.
   */
  Context.prototype.push = function (view) {
    return new Context(view, this);
  };

  /**
   * Returns the value of the given name in this context, traversing
   * up the context hierarchy if the value is absent in this context's view.
   */
  Context.prototype.lookup = function (name) {
    var cache = this.cache;

    var value;
    if (name in cache) {
      value = cache[name];
    } else {
      var context = this, names, index;

      while (context) {
        if (name.indexOf('.') > 0) {
          value = context.view;
          names = name.split('.');
          index = 0;

          while (value != null && index < names.length)
            value = value[names[index++]];
        } else {
          value = context.view[name];
        }

        if (value != null)
          break;

        context = context.parent;
      }

      cache[name] = value;
    }

    if (isFunction(value))
      value = value.call(this.view);

    return value;
  };

  /**
   * A Writer knows how to take a stream of tokens and render them to a
   * string, given a context. It also maintains a cache of templates to
   * avoid the need to parse the same template twice.
   */
  function Writer() {
    this.cache = {};
  }

  /**
   * Clears all cached templates in this writer.
   */
  Writer.prototype.clearCache = function () {
    this.cache = {};
  };

  /**
   * Parses and caches the given `template` and returns the array of tokens
   * that is generated from the parse.
   */
  Writer.prototype.parse = function (template, tags) {
    var cache = this.cache;
    var tokens = cache[template];

    if (tokens == null)
      tokens = cache[template] = parseTemplate(template, tags);

    return tokens;
  };

  /**
   * High-level method that is used to render the given `template` with
   * the given `view`.
   *
   * The optional `partials` argument may be an object that contains the
   * names and templates of partials that are used in the template. It may
   * also be a function that is used to load partial templates on the fly
   * that takes a single argument: the name of the partial.
   */
  Writer.prototype.render = function (template, view, partials) {
    var tokens = this.parse(template);
    var context = (view instanceof Context) ? view : new Context(view);
    return this.renderTokens(tokens, context, partials, template);
  };

  /**
   * Low-level method that renders the given array of `tokens` using
   * the given `context` and `partials`.
   *
   * Note: The `originalTemplate` is only ever used to extract the portion
   * of the original template that was contained in a higher-order section.
   * If the template doesn't use higher-order sections, this argument may
   * be omitted.
   */
  Writer.prototype.renderTokens = function (tokens, context, partials, originalTemplate) {
    var buffer = '';

    // This function is used to render an arbitrary template
    // in the current context by higher-order sections.
    var self = this;
    function subRender(template) {
      return self.render(template, context, partials);
    }

    var token, value;
    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {
      token = tokens[i];

      switch (token[0]) {
      case '#':
        value = context.lookup(token[1]);

        if (!value)
          continue;

        if (isArray(value)) {
          for (var j = 0, valueLength = value.length; j < valueLength; ++j) {
            buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);
          }
        } else if (typeof value === 'object' || typeof value === 'string') {
          buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);
        } else if (isFunction(value)) {
          if (typeof originalTemplate !== 'string')
            throw new Error('Cannot use higher-order sections without the original template');

          // Extract the portion of the original template that the section contains.
          value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);

          if (value != null)
            buffer += value;
        } else {
          buffer += this.renderTokens(token[4], context, partials, originalTemplate);
        }

        break;
      case '^':
        value = context.lookup(token[1]);

        // Use JavaScript's definition of falsy. Include empty arrays.
        // See https://github.com/janl/mustache.js/issues/186
        if (!value || (isArray(value) && value.length === 0))
          buffer += this.renderTokens(token[4], context, partials, originalTemplate);

        break;
      case '>':
        if (!partials)
          continue;

        value = isFunction(partials) ? partials(token[1]) : partials[token[1]];

        if (value != null)
          buffer += this.renderTokens(this.parse(value), context, partials, value);

        break;
      case '&':
        value = context.lookup(token[1]);

        if (value != null)
          buffer += value;

        break;
      case 'name':
        value = context.lookup(token[1]);

        if (value != null)
          buffer += mustache.escape(value);

        break;
      case 'text':
        buffer += token[1];
        break;
      }
    }

    return buffer;
  };

  mustache.name = "mustache.js";
  mustache.version = "0.8.1";
  mustache.tags = [ "{{", "}}" ];

  // All high-level mustache.* functions use this writer.
  var defaultWriter = new Writer();

  /**
   * Clears all cached templates in the default writer.
   */
  mustache.clearCache = function () {
    return defaultWriter.clearCache();
  };

  /**
   * Parses and caches the given template in the default writer and returns the
   * array of tokens it contains. Doing this ahead of time avoids the need to
   * parse templates on the fly as they are rendered.
   */
  mustache.parse = function (template, tags) {
    return defaultWriter.parse(template, tags);
  };

  /**
   * Renders the `template` with the given `view` and `partials` using the
   * default writer.
   */
  mustache.render = function (template, view, partials) {
    return defaultWriter.render(template, view, partials);
  };

  // This is here for backwards compatibility with 0.4.x.
  mustache.to_html = function (template, view, partials, send) {
    var result = mustache.render(template, view, partials);

    if (isFunction(send)) {
      send(result);
    } else {
      return result;
    }
  };

  // Export the escaping function so that the user may override it.
  // See https://github.com/janl/mustache.js/issues/244
  mustache.escape = escapeHtml;

  // Export these mainly for testing, but also for advanced usage.
  mustache.Scanner = Scanner;
  mustache.Context = Context;
  mustache.Writer = Writer;

}));

define('utils/NoteUtils',[],function() {
	var NoteUtils = {};
	NoteUtils.PITCH_CLASSES = ["C", "D", "E", "F", "G", "A", "B"];
	NoteUtils.DURATIONS = {
		4: "w",
		2: "h",
		1: "q",
		0.5: "8",
		0.25: "16",
		0.125: "32",
		0.0625: "64"
	};

	NoteUtils.getStringFromBeatDuration = function(beat) {
		return NoteUtils.DURATIONS[beat];
	};

	NoteUtils.getBeatFromStringDuration = function(string) {
		for (var dur in NoteUtils.DURATIONS) {
			if (NoteUtils.DURATIONS[dur] === string) {
				return Number(dur);
			}
		}
	};

	/**
	 * sorting pitches in case of polyphony because Vexflow adds accidentals in order relating to pitch order,
	 * not to the actual array order
	 * @param  {Array} pitches e.g.: ["A"]
	 * @return {Array}         [description]
	 */
	NoteUtils.sortPitches = function(pitches) {

		/**
		 * @param  {string} pitch1 example: "A/4"
		 * @param  {string} pitch2 example: "Db/3"
		 * @return {int}    1 if (pitch1>pitch2), 0 if they are equal, -1 if (pitch1<pitch2)
		 */
		function comparePitches(pitch1, pitch2) {
			var r;
			var pc1 = pitch1.substring(0, 1).toUpperCase();
			var oct1 = parseInt(pitch1.slice(-1), null);
			var pc2 = pitch2.substring(0, 1).toUpperCase();
			var oct2 = parseInt(pitch2.slice(-1), null);

			if (oct1 > oct2) r = 1;
			else if (oct1 < oct2) r = -1;
			else { //if equal
				var map = {
					"C": 0,
					"D": 1,
					"E": 2,
					"F": 3,
					"G": 4,
					"A": 5,
					"B": 6
				};

				if (map[pc1] > map[pc2]) r = 1;
				if (map[pc1] < map[pc2]) r = -1;
				else r = 0;
			}
			return r;
		}

		var pitchClass,
			octave,
			sortedPitches = [],
			curPitch,
			prevPitch = null,
			i = 0,
			inserted,
			op,
			resultComparison,
			oPitch;

		for (var p in pitches) {
			curPitch = pitches[p];
			if (sortedPitches.length === 0) {
				sortedPitches.push(curPitch);
			} else {
				inserted = false;
				op = 0;
				while (inserted === false && op < sortedPitches.length) {
					oPitch = sortedPitches[op];
					resultComparison = comparePitches(curPitch, oPitch);
					if (resultComparison < 0) {
						sortedPitches.splice(op, 0, curPitch);
						inserted = true;
					}
					op++;
				}
				if (inserted === false) {
					sortedPitches.push(curPitch);
				}
			}

		}
		return sortedPitches;
	};

	NoteUtils.pitch2Number = function(pitch) {
		var pitch2NumberArray = {
			"C": 0,
			"C#": 1,
			"Db": 1,
			"D": 2,
			"D#": 3,
			"Eb": 3,
			"E": 4,
			"Fb": 4,
			"E#": 5,
			"F": 5,
			"F#": 6,
			"Gb": 6,
			"G": 7,
			"G#": 8,
			"Ab": 8,
			"A": 9,
			"A#": 10,
			"Bb": 10,
			"B": 11,
			"Cb": 11,
			"B#": 0,
		};
		var number;
		if (typeof pitch2NumberArray[pitch] !== "undefined") {
			number = pitch2NumberArray[pitch];
		}
		return number;
	};

	NoteUtils.number2Pitch = function(number) {
		number2PitchArray = {
			0: "C",
			1: "C#",
			2: "D",
			3: "D#",
			4: "E",
			5: "F",
			6: "F#",
			7: "G",
			8: "G#",
			9: "A",
			10: "A#",
			11: "B",
		};
		number = (number + 12) % 12;
		var pitch;
		if (typeof number2PitchArray[number] !== "undefined") {
			pitch = number2PitchArray[number];
		}
		return pitch;
	};

	NoteUtils.transformStringNote2ArrayNote = function(chordString) {
		var chordArray = [];
		if (typeof chordString !== "undefined") {
			var chord = chordString.split(',');
			for (var i = 0; i < chord.length; i++) {
				var s = (/[A-Z][b,#]{0,2}[0-9]?/i).exec(chord[i]);
				if (s) {
					chordArray.push(s[0]);
				}
			}
		}
		return chordArray;
	};

	NoteUtils.getValidPitch = function(value) {
		var re = /[a-g|A-G]/;
		if (typeof value === "number") {
			return -1;
		} else {
			if (!value.match(re))
				return -1;
			else
				return value.toUpperCase();
		}

	};

	NoteUtils.getClosestKey = function(pitch, pitchClass2) {
		var pitchClass = pitch.split('/')[0];
		var pos1 = this.getKeyPosition(pitchClass);
		var pos2 = this.getKeyPosition(pitchClass2);
		var d1 = pos2 - pos1;
		var d2 = this.PITCH_CLASSES.length - Math.abs(d1);
		if (d1 > 0) d2 *= -1;
		var inc = (Math.abs(d2) < Math.abs(d1)) ? d2 : d1;

		return this.getKey(pitch, inc);
	};

	NoteUtils.getKeyPosition = function(key) {
		for (var i = 0; i < this.PITCH_CLASSES.length; i++) {
			if (this.PITCH_CLASSES[i] == key.toUpperCase()) break;
		}
		return i;
	};


	NoteUtils.getKey = function(key, inc) {
		var keyParts = key.split("/");
		var pitch = keyParts[0];
		var accidentals = "";
		if (typeof pitch[1] !== "undefined") {
			accidentals = pitch[1];
		}
		var octave = parseInt(keyParts[1], null);

		var newAbsPos = this.getKeyPosition(pitch[0]) + inc;
		var newPos = newAbsPos % this.PITCH_CLASSES.length;
		if (newPos < 0) newPos += this.PITCH_CLASSES.length;

		var octavesInc = Math.floor(newAbsPos / this.PITCH_CLASSES.length);

		var newOctave = octave + octavesInc;
		//range: from e/3 to f/6
		if ((newOctave <= 1 && newPos < 2) || (newOctave >= 7 && newPos > 3)) return null;
		else return this.PITCH_CLASSES[newPos] + accidentals + "/" + newOctave;
	};


	NoteUtils.durationToNotes = function(duration, initBeat) {
		var durs = ["q", "8", "16", "32", "64"];

		function findDur(arrNotes, duration) {
			arrNotes = arrNotes || [];
			var matchedDur = 1;
			var iDur = 0;
			while (iDur <= durs.length) {
				if (duration == matchedDur) {
					arrNotes.push(durs[iDur]);
					break;
				} else if (duration > matchedDur) {
					arrNotes.push(durs[iDur]);
					arrNotes = findDur(arrNotes, duration - matchedDur);
					break;
				}
				iDur++;
				matchedDur /= 2;
			}
			return arrNotes;
		}

		var notes = [];

		/* this "if" code assures that in the special case with two condition: 
				1. replaced frase starts at a non absolute beat (4.5, 4.25..etc)
				2. duration is longer than firstSilenceDur, which is difference with following absolute beat 
				(i.e. if 4.5 -> difference is 0.5, if 4.25, difference is 0.75)
			this is normally the case when we remove several measures starting from, beat 4.5 in a measure
			We can check it relative to the absolute beat beacause the biggest figure is a quarter note 
			(if we created half notes or whole notes, we should check it relative to those figures), also, this would give problems
			in measures with no exact number of quarter beats: e.g.: 3/8 (= 1.5 beats) 5/8 (2.5 beats...etc.)
		*/
		if (initBeat != null) {
			initBeat = Number(initBeat);
			var residuBeat = initBeat - Math.floor(initBeat);
			if (residuBeat !== 0) {
				var firstSilenceDur = 1 - residuBeat;
				if (duration > firstSilenceDur) {
					notes = findDur(notes, firstSilenceDur);
					duration -= firstSilenceDur;
				}
			}
		}

		return findDur(notes, duration);
	};


	return NoteUtils;
});
define('modules/core/src/NoteModel',['utils/NoteUtils'], function(NoteUtils) {

	/**
	 * [NoteModel description]
	 * @see [description]
	 * @param {Object, String, null} param : depending on the type it will create an empty note, a rest note or a pitch note
	 */
	function NoteModel(param) {
		this.pitchClass = []; // Note c, b
		this.octave = []; // octave from 0 to 8
		this.accidental = []; // b or #
		this.duration = (param && param.duration) ? param.duration : undefined;
		this.isRest = (param && param.isRest) ? param.isRest : false;
		this.dot = (param && param.dot) ? param.dot : 0; // 0,1,2
		this.tie = (param && param.tie) ? param.tie : undefined; // contain "start", "stop", "stop_start"
		this.tuplet = (param && param.tuplet) ? param.tuplet : undefined;
		this.timeModification = (param && param.timeModification) ? param.timeModification : undefined;

		if (typeof this.tuplet !== "undefined") {
			this.setTuplet(this.tuplet, this.timeModification);
		}

		if (typeof param == "string") { //duration "h","d","8" or C#/4-8r
			this.setNoteFromString(param);
		} else if (typeof param !== "undefined" && typeof param.pitchList !== "undefined") {
			if (param.pitchList.length > 1) {
				param.pitchList = NoteUtils.sortPitches(param.pitchList);
			}
			for (var i = 0, c = param.pitchList.length; i < c; i++) {
				this.setNoteFromString(param.pitchList[i], i);
			}
		}
	}


	NoteModel.prototype.toString = function(string, index) {
		if (this.isRest){
			return this.duration + "r";
		}else{
			var str = this.pitchClass[0] + this.accidental[0] + "/" + this.octave[0] + "-" + this.duration;
			for (var i = 0; i < this.dot; i++){
				str += ".";
			}
			return str;
		}
		
	};

	NoteModel.prototype.setNoteFromString = function(string, index) {
		index = index || 0;
		var re = /[a-g|A-G](#{1,2}|b{1,2}|n)?(-[w|h|q|8|16|32|64])?\.{0,2}\/\d/;
		if (string.match(re)) {
			var parts = string.split("-");
			var partsPitch = parts[0].split("/");
			this.pitchClass[index] = partsPitch[0].substr(0, 1).toUpperCase();
			this.accidental[index] = partsPitch[0].substr(1, partsPitch[0].length);
			this.octave[index] = partsPitch[1];
			if (parts.length == 2) {
				var partsDuration = parts[1].split("/");

				// look if there is a dot
				var dotPosition = partsDuration[0].indexOf(".");
				if (dotPosition == -1) {
					this.duration = partsDuration[0];
				} else {
					this.duration = partsDuration[0].split('.')[0];
					this.dot = partsDuration[0].length - dotPosition;
				}
			}

		} else {
			re = /[w|h|q|8|16|32|64](r)?/;
			if (!string.match(re)) {
				throw "Creating pitch " + string + ". Should be in de form [pitch][acc]/[octave]. e.g. Ab/4 or [duration] if you want a rest eg. '8'";
			}
			this.pitchClass[0] = 'B';
			this.octave[0] = '4';
			this.accidental[0] = '';
			var restPosition = string.indexOf("r");
			if (restPosition === -1) {
				this.duration = string;
			} else {
				this.duration = string.substr(0, restPosition);
			}
			this.isRest = true;
		}
	};

	NoteModel.prototype.getNumPitches = function() {
		return this.pitchClass.length;
	};

	NoteModel.prototype.getPitchClass = function(i) {
		i = i || 0;
		return this.pitchClass[i];
	};

	NoteModel.prototype.getAccidental = function(i) {
		i = i || 0;
		return this.accidental[i];
	};
	NoteModel.prototype.getOctave = function(i) {
		i = i || 0;
		return this.octave[i];
	};

	/**
	 * @param  {Number} index
	 * @return {String} pitch. e.g.: "A#/5", "Bb/4"
	 */
	NoteModel.prototype.getPitch = function(index) {
		// check if number, check if  < numPitches
		index = index || 0;

		var accidental = '';
		if (typeof this.accidental[index] !== "undefined") {
			accidental = this.accidental[index];
		}

		var octave = '';
		if (typeof this.octave[index] !== "undefined") {
			octave = '/' + this.octave[index];
		}
		return this.pitchClass[index] + accidental + octave;
	};

	/**
	 * @param {Number} dots
	 */
	NoteModel.prototype.setDot = function(dots) {
		if (typeof dots === "undefined") {
			return;
		}
		var nDots = Number(dots);
		if (isNaN(nDots) || nDots < 0 || nDots > 2) throw "not valid number of dots";
		this.dot = nDots;
	};

	NoteModel.prototype.getDot = function() {
		return this.dot;
	};

	/**
	 * @param {String} tieType "start","stop" or "stop_start"
	 */
	NoteModel.prototype.setTie = function(tieType) {
		if (!tieType) return;

		var arr = ["start", "stop", "stop_start"];
		if (arr.indexOf(tieType) == -1) throw "not valid tie type " + tieType;

		if (!this.tie) this.tie = tieType;
		else if (tieType != this.tie) this.tie = "stop_start";
	};

	NoteModel.prototype.getTie = function() {
		return this.tie;
	};

	NoteModel.prototype.removeTie = function(tieType) {
		if (this.tie != "stop_start") this.tie = null;
		else {
			if (tieType === undefined) throw "tieType not defined";
			this.tie = (tieType == "start") ? "stop" : "start";
		}
	};
	/**
	 * if tieType not specified, returns boolean if there is actually a tie (no matter which type)
	 * if tieType is specified checks in a 'soft' way, that means that for tie "stop_start", both isTie("start")
	 * and isTie("stop") will return true
	 *
	 * @param  {String}  tieType
	 * @return {Boolean}
	 */
	NoteModel.prototype.isTie = function(tieType) {
		if (!tieType) return this.tie != null;
		else return this.tie && this.tie.indexOf(tieType) != -1;
	};

	/* if both parameters are null or undefined, function does not do anything, this happens on constructor
	 *
	 * @param {[type]} typeTuplet       "start","stop","middle", middle does not set the value this.tuplet
	 * @param {[type]} timeModification if empty set to "3/2"
	 * examples:
	 *		setTuplet(), setTuplet(undefined)  won't do anything
	 *		setTuplet("middle")	will set only this.timeModification
	 */
	NoteModel.prototype.setTuplet = function(typeTuplet, timeModification) {
		if (!typeTuplet && !timeModification) return;

		var validTypes = ["start", "stop", "stop_start", "middle"];
		if (typeTuplet && validTypes.indexOf(typeTuplet) == -1) {
			throw "not valid typeTuplet " + typeTuplet;
		}
		this.timeModification = timeModification || "3/2";
		//we know typeTuple is a valid type, just check that is not middle
		if (typeTuplet != "middle") this.tuplet = typeTuplet;
	};
	/**
	 * @return {"start","stop","stop_start","middle"}
	 */
	NoteModel.prototype.getTuplet = function() {
		if (this.timeModification && !this.tuplet) return "middle";
		else return this.tuplet;
	};

	NoteModel.prototype.getTimeModification = function() {
		return this.timeModification || null;
	};

	NoteModel.prototype.removeTuplet = function() {
		this.timeModification = null;
		this.tuplet = null;
	};
	/**
	 * if "type" is undefined, just checkes that is tuplet,
	 * if type is 'start' or 'stop' returns checks that tuplet is type
	 * @param  {String}  type  "start" , "stop" or undefined
	 * @return {Boolean}
	 */
	NoteModel.prototype.isTuplet = function(type) {
		return (!type) ? this.timeModification != null :
			this.timeModification != null && this.tuplet && this.tuplet.indexOf(type) != -1;
	};

	/**
	 * @param {Boolean} bool
	 */
	NoteModel.prototype.setRest = function(bool) {
		if (typeof bool === "undefined") bool = true;
		this.isRest = bool;
		//if (this.isRest) this.setRestPitch(); // maybe use it in module viewer, because it's only for vexflow viewer
		this.setAccidental("");
	};

	/**	
	 * @param {String} acc ["","#","b","n"]
	 * @param {Number} i   default 0
	 */
	NoteModel.prototype.setAccidental = function(acc, i) {
		var validAccidentals = ["", "#", "b", "n", "##", "bb"];
		if (validAccidentals.indexOf(acc) == -1) throw "invalid accidental";
		i = i || 0;
		this.accidental[i] = acc;
	};
	NoteModel.prototype.getAccidental = function(i) {
		i = i || 0;
		return this.accidental[i];
	};
	NoteModel.prototype.removeAccidental = function(i) {
		this.setAccidental("", i);
	};

	NoteModel.prototype.getNumPitches = function() {
		return this.pitchClass.length;
	};
	/**
	 * returns duration in number of beats. where 1.0 is a quarter note, regardless of the time signature (6/8, 4/4...)
	 * @param  {Number} numBeats optional: useful for whole rests, their duration depends on number of beats of the bar,
	 * in that case it's sent as parameter
	 * @return {Float}
	 */
	NoteModel.prototype.getDuration = function(numBeats) {
		var dur = 0.0;
		dur = NoteUtils.getBeatFromStringDuration(this.duration);
		if (dur === 4) {
			if (this.isRest) {
				dur = (typeof numBeats === "undefined" || numBeats > 4) ? 4 : numBeats;
			}
		}
		if (this.timeModification != null) {
			var nums = this.timeModification.split("/");
			dur = dur * parseInt(nums[1], null) / parseInt(nums[0], null);
		}
		var durTmp = dur;
		for (var i = 0, c = this.dot; i < c; i++) {
			durTmp /= 2;
			dur += durTmp;
		}
		return dur;
	};

	NoteModel.prototype.setDuration = function(dur) {
		if (typeof dur === "number") {
			dur = NoteUtils.getStringFromBeatDuration(dur);
		}
		this.duration = dur;
	};


	NoteModel.prototype.serialize = function(complete) {
		if (complete === undefined) complete = true;

		var noteObj = {};
		noteObj.pitchList = [];

		for (var i = 0, c = this.getNumPitches(); i < c; i++) {
			noteObj.pitchList.push(this.getPitch(i));
		}
		noteObj.duration = this.duration;
		//important only set property if not null, 
		if (this.dot != null) noteObj.dot = this.dot;
		if (this.tie != null && complete) noteObj.tie = this.tie;
		if (this.tuplet != null && complete) noteObj.tuplet = this.tuplet;
		if (this.time_modification != null && complete) noteObj.time_modification = this.time_modification;
		if (this.isRest) noteObj.isRest = this.isRest;

		return noteObj;
	};



	/**
	 * @param  {boolean} complete: if true, clones completely (case of copy/paste), if false,
	 *                             ommits ties and tuplets (case of addNote). If not defined, it's true
	 * @return {NoteModel}
	 */
	NoteModel.prototype.clone = function(complete) {
		return new NoteModel(this.serialize(complete));
	};

	return NoteModel;
});
define('modules/core/src/NoteManager',['modules/core/src/NoteModel', 'utils/NoteUtils'], function(NoteModel, NoteUtils) {
	function NoteManager() {
		this.notes = [];
	}

	// Interface functions (this functions are also in ChordManagerModel)

	/**
	 * @interface
	 * @return {integer}
	 */
	NoteManager.prototype.getTotal = function() {
		return this.notes.length;
	};
	/**
	 * returns duration in number of beats
	 * @param  {Integer} pos1
	 * @param  {Integer} pos2
	 * @return {float}
	 */
	NoteManager.prototype.getTotalDuration = function(pos1, pos2) {
		var notes = this.getNotes(pos1, pos2);
		var totalDur = 0;
		notes.forEach(function(note) {
			totalDur += note.getDuration();
		});
		return roundBeat(totalDur);
	};

	NoteManager.prototype.addNote = function(note, pos) {
		if (!note instanceof NoteModel) throw "note is not an instance of Note";
		if (typeof pos === "undefined") {
			this.notes.push(note);
		} else { //check
			this.notes.splice(pos, 0, note);
		}
	};
	/**
	 * @param  {integer} by default 0
	 * @return {NoteModel}
	 */
	NoteManager.prototype.getNote = function(pos) {
		pos = pos || 0;
		return this.notes[pos];
	};

	NoteManager.prototype.deleteNote = function(pos) {
		if (typeof pos === "undefined") throw "pos undefined. Can't delete note";
		var notes = this.getNotes();
		this.notes.splice(pos, 1);
	};

	/**
	 * gets notes (by reference. To clone use cloneElems)
	 * @param  {Integer} from :  index, if not specified, 0
	 * @param  {Integer} to   :  index, first note that is not taken, e.g if to = 4, notes will be taken from 'from' to 3.
	 * @return {Array}   array of NoteModel
	 */
	NoteManager.prototype.getNotes = function(from, to) {
		return this.notes.slice(from, to);
	};

	/**
	 * [setNotes description]
	 * @param {Array} notes array of NoteModel
	 */
	NoteManager.prototype.setNotes = function(notes) {
		if (typeof notes !== "undefined") this.notes = notes;
	};


	NoteManager.prototype.insertNote = function(pos, note) {
		if (isNaN(pos) || !(note instanceof NoteModel)) {
			throw 'NoteManager - insertNote - attribute incorrect ' + pos + ' ' + note;
		}
		this.notes.splice(pos + 1, 0, note);
	};

	/**
	 * @interface
	 *
	 * returns a copy of the notes from, pos1, to pos2.
	 * @param  {Integer} pos1 if not specified, 0
	 * @param  {Integer} pos2 first note that is not taken, e.g if to = 4, notes will be taken from 'from' to 3.
	 * @return {Array}  array of cloned NoteModel
	 */
	NoteManager.prototype.cloneElems = function(pos1, pos2) {
		var newNotes = [];
		var notesToClone = this.getNotes(pos1, pos2);
		var note;
		notesToClone.forEach(function(note) {
			newNotes.push(note.clone());
		});
		return newNotes;
	};


	/**
	 * replace notes from pos1 to pos2+1, by default will always replace one note, if we want to insert notes at
	 * position pos without replacing note at 'pos' (e.g. scoreeditor.addBar() does it) we need to call it with cursor = [pos, pos -1 ]
	 * @param  {Array} cursor       [pos1,pos2]
	 * @param  {Array } notesToPaste array of NoteModel
	 */
	NoteManager.prototype.notesSplice = function(cursor, notesToPaste) {
		var part1 = this.notes.slice(0, cursor[0]);
		var part2 = this.notes.slice(cursor[1] + 1, this.notes.length); //selected notes are removed
		var copyArr = [];
		for (var i = 0, c = notesToPaste.length; i < c; i++) copyArr.push(notesToPaste[i].clone());
		this.notes = part1.concat(copyArr, part2);
	};

	/**
	 * Adds notes in a given position (special case of noteSplice)
	 * @param {Array of NoteModel} notes
	 * @param {Integer} position
	 */
	NoteManager.prototype.addNotes = function(notes, position) {
		if (position === undefined) {
			position = this.notes.length;
		}
		this.notesSplice([position, position - 1], notes);
	};
	/**
	 * returns the global beat of a note specified by its index (starting at 1)
	 * @param  {Integer} index of the note
	 * @return {Float}   beat
	 */
	NoteManager.prototype.getNoteBeat = function(index) {
		if (typeof index === "undefined" || isNaN(index) ||
			index >= this.notes.length || index < 0) {
			throw "NoteManager - getNoteBeat: problem with index " + index;
		}
		var noteBeat = 1, // because beats are based on 1
			i;
		for (i = 0; i < index; i++) {
			noteBeat += this.notes[i].getDuration();
		}
		return roundBeat(noteBeat);
	};

	/**
	 *
	 * @return {Array} array of pitches of all the notes. e.g.  ["Db/4", "E/4", "F/4", "A#/4", "C/5", "B/4"]
	 */
	NoteManager.prototype.getNotesAsString = function() {
		var arrPitches = [];
		this.notes.forEach(function(note) {
			arrPitches.push(note.toString());
		});
		return arrPitches;
	};


	/**
	 * FUNCTION DOES NOT WORK AS EXPECTED
	 * @param  {NoteModel} note
	 * @return {Integer}
	 */
	NoteManager.prototype.getNoteIndex = function(note) {
		if (typeof note !== "undefined" && note instanceof NoteModel) {
			console.warn('getNoteIndex does not work as expected');
			for (var i = 0; i < this.notes.length; i++) {
				if (JSON.stringify(this.notes[i].serialize(true)) === JSON.stringify(note.serialize(true))) {
					return i;
				}
			}
		}
		return undefined;
	};


	NoteManager.prototype.getNotesAtBarNumber = function(barNumber, song) {
		if (!song) {
			throw "NoteManager - getNotesAtBarNumber - incorrect song parameter";
		}

		var startBeat = 1,
			endBeat;
		startBeat = song.getStartBeatFromBarNumber(barNumber);
		endBeat = startBeat + song.getTimeSignatureAt(barNumber).getBeats();

		if (this.getTotalDuration() + 1 < endBeat) {
			console.warn("NoteManager - getNotesAtBarNumber - notes on bar " + barNumber + " do not fill the total bar duration" + (this.getTotalDuration() + 1) + ' ' + endBeat);
			//throw "NoteManager - getNotesAtBarNumber - notes on bar " + barNumber + " do not fill the total bar duration" + (this.getTotalDuration() + 1) + ' ' + endBeat;
		}

		return this.getNotes(
			this.getNextIndexNoteByBeat(startBeat),
			this.getNextIndexNoteByBeat(endBeat)
		);
	};

	NoteManager.prototype.getNoteBarNumber = function(index, song) {
		if (isNaN(index) || index < 0 || typeof song === "undefined") {
			throw "NoteManager - getNoteBarNumber - attributes are not what expected, song: " + song + ", index: " + index;
		}
		var numBar = 0,
			duration = 0;

		var barNumBeats = song.getBarNumBeats(numBar, null);
		for (var i = 0; i <= index; i++) {
			if (roundBeat(duration) == barNumBeats) {
				numBar++;
				duration = 0;
				barNumBeats = song.getBarNumBeats(numBar, barNumBeats);
			}
			duration += this.notes[i].getDuration();
		}
		return numBar;
	};

	/**
	 * @param  {integer} start
	 * @param  {integer} end
	 * @return {Array}
	 */
	NoteManager.prototype.getBeatIntervalByIndexes = function(start, end) {
		if (typeof start === "undefined" || isNaN(start) ||
			start >= this.notes.length || start < 0) {
			throw "NoteManager - getBeatIntervalByIndexes:  problem with start " + start;
		}
		if (typeof end === "undefined" || isNaN(end) ||
			end >= this.notes.length || end < 0) {
			throw "problem with end " + end;
		}
		var startBeat = this.getNoteBeat(start);
		var endBeat = this.getNoteBeat(end) + this.getNote(end).getDuration();
		endBeat = roundBeat(endBeat);
		return [startBeat, endBeat];
	};
	/**
	 * abstraction of code used by both getNextIndexNoteByBeat and getPrevIndexNoteByBeat
	 * @param  {} curBeat [description]
	 * @param  {[type]} beat    [description]
	 * @return {[type]}         [description]
	 */
	NoteManager.prototype._getIndexAndCurBeat = function(beat) {
		var i = 0,
			curNote,
			curBeat = 1;
		//we round in the comparison in order to not carry the rounding in curBeat (which is cumulative inside the iteration)
		while (roundBeat(curBeat) < beat) { //to avoid problems with tuplet 
			curNote = this.getNote(i);
			if (curNote === undefined) {
				// throw 'NoteManager - _getIndexAndCurBeat - Note not found (possibly beat is greater than last note beat)';
				return {
					index: undefined,
					curBeat: curBeat
				};
			}
			curBeat += curNote.getDuration();
			i++;
		}
		return {
			index: i,
			curBeat: curBeat
		};
	};
	/**
	 * Returns the index of the note found at the exact beat, and if not, at the
	 * closest note just after a given beat
	 * @param  {float} beat global beat (first beat starts at 1, not 0)
	 * @return {Integer} index of the note
	 * TODO: optimisation: accept object with cached index and beat to start from, useful when function is called in loops (iterator)
	 */
	NoteManager.prototype.getNextIndexNoteByBeat = function(beat) {
		if (isNaN(beat) || beat < 1) {
			throw 'NoteManager - getNextIndexNoteByBeat - beat must be a positive float greater than 1 ' + beat;
		}
		return this._getIndexAndCurBeat(beat).index;
	};


	/**
	 * Similar to previous one (getNextIndexNote()), but if
	 * exact beat is not found, it returns the closest previous note
	 * @param  {float} beat global beat (first beat starts at 1, not 0)
	 * @return {Integer} index of the note
	 */
	NoteManager.prototype.getPrevIndexNoteByBeat = function(beat) {
		if (isNaN(beat) || beat < 0) {
			throw 'NoteManager - getPrevIndexNoteByBeat - beat must be a positive float ' + beat;
		}
		var r = this._getIndexAndCurBeat(beat);
		return (r.curBeat === beat) ? r.index : r.index - 1;
	};

	/**
	 * @param  {Integer} startBeat
	 * @param  {Integer} endBeat
	 * @return {Array}           indexes e.g. [1,2]
	 */

	NoteManager.prototype.getIndexesStartingBetweenBeatInterval = function(startBeat, endBeat) {
		if (isNaN(startBeat) || startBeat < 0) {
			startBeat = 1;
		}
		if (isNaN(endBeat)) {
			throw 'NoteManager - getIndexesStartingBetweenBeatInterval - endBeat must be a positive integer ' + endBeat;
		}
		var index1 = this.getNextIndexNoteByBeat(startBeat);
		var index2 = this.getPrevIndexNoteByBeat(endBeat);
		return [index1, index2];
	};

	/**
	 * adds silences at the end of array of notes so that they fill the gapDuration
	 * @param  {integer} gapDuration
	 * @param  {integer} initBeat
	 */
	NoteManager.prototype.fillGapWithRests = function(gapDuration, initBeat) {
		if (isNaN(gapDuration)) {
			return;
		}
		if (isNaN(initBeat) || initBeat <= 0) {
			initBeat = 1;
		}
		gapDuration = Math.round(gapDuration * 1000000) / 1000000;
		var newNote;
		var silenceDurs = NoteUtils.durationToNotes(gapDuration, initBeat);
		var self = this;
		silenceDurs.forEach(function(dur) {
			if (typeof dur !== "undefined") {
				newNote = new NoteModel(dur + 'r');
				var pos = self.getNextIndexNoteByBeat(initBeat);
				if (typeof pos === "undefined") {
					self.addNote(newNote);
				}else{
					self.insertNote(pos, newNote);
				}
			}
		});
	};

	/**
	 * if there are ties that with different pitches, we remove the tie
	 */
	NoteManager.prototype.reviseTiesPitch = function() {
		var notes = this.notes;
		var note, notes2;
		for (var i = 0; i < notes.length - 1; i++) {
			note = notes[i];
			note2 = notes[i + 1];
			if (note.isTie('start') && note2.isTie('stop') && note.getPitch() != note2.getPitch()) {
				note.removeTie(note.getTie());
				note2.removeTie(note2.getTie());
			}
		}
	};

	/**
	 * this function is called after deleting a notes or copy and pasting notes, to check if there is a malformed tuplet or a malformed tie
	 * if it does, it deletes the tie or the tuplet
	 * @return {[type]} [description]
	 */
	NoteManager.prototype.reviseNotes = function() {

		function getRemoveSet(input, i) {
			var min = i;
			var max = i;
			while (min > 0 && input[min - 1] != "no") {
				min--;
			}
			while (max + 1 < input.length && input[max + 1] != "no") {
				max++;
			}
			return {
				min: min,
				max: max
			};
		}

		/**
		 * This function parses input controling that all transitions are valid,
		 * if it finds a problem, removes the property that causes the error
		 *
		 * @param  {Array of NoteModel} notes          notes to modify
		 * @param  {Object} graph          tranistion graph represents valid transitions
		 * @param  {Array}  input          array of states, taken from notes
		 * @param  {[type]} removeFunction function to remove property
		 */
		function parser(notes, graph, input, removeFunction) {
			var prevState, currState;
			var isTie = [];
			var states = Object.keys(graph);
			var iToStartRemoving;
			var intervalsToRemove = [];
			for (var i = 0; i < input.length; i++) {
				prevState = (i < 1) ? "no" : input[i - 1];
				currState = (i == input.length) ? "no" : input[i];
				if ($.inArray(prevState, states) == -1) {
					throw "value " + prevState + "(position " + i + ") not specified on transitions graph";
				}
				if ($.inArray(currState, graph[prevState]) == -1) {
					var iToStartRemove = (currState == "no") ? i - 1 : i;
					intervalsToRemove.push(getRemoveSet(input, iToStartRemove));
				}
			}

			var max, min;
			for (var i in intervalsToRemove) {
				max = intervalsToRemove[i].max;
				min = intervalsToRemove[i].min;

				for (var j = min; j <= max; j++) {
					NoteModel.prototype[removeFunction].call(notes[j], notes[j].tie);
				}
			}

		}

		function checkTuplets(notes) {
			var note;
			var states = [];
			var state;
			for (var i = 0; i < notes.length; i++) {
				note = notes[i];
				state = note.getTuplet() || "no";
				states.push(state);
			}
			parser(notes, {
					"no": ["no", "start"],
					"start": ["middle"],
					"middle": ["stop"],
					"stop": ["start", "no"]
				}, states,
				"removeTuplet"
			);
		}

		function checkTies(notes) {
			var note;
			var states = [];
			var state;
			for (var i = 0; i < notes.length; i++) {
				note = notes[i];
				state = note.getTie() || "no";
				states.push(state);
			}
			parser(notes, {
					"no": ["no", "start"],
					"start": ["stop", "stop_start"],
					"stop_start": ["stop", "stop_start"],
					"stop": ["start", "no"]
				}, states,
				"removeTie"
			);

		}
		checkTuplets(this.notes);
		checkTies(this.notes);
	};


	/**
	 * private function for rounding beats
	 * we round to avoid problems with triplet as 12.9999999 is less than 13 and that would not work
	 * @return {[type]} [description]
	 */
	function roundBeat(beat) {
		return Math.round(beat * 1000000) / 1000000;
	}

	// NoteManager.prototype.incrOffset = function(offset, dur) {
	// 	offset += dur;
	// 	var roundOffset = Math.round(offset);
	// 	if (Math.abs(roundOffset - offset) < 0.01) offset = roundOffset; //0.01 to round only for 0.99999
	// 	return offset;
	// };
	//NoteManager.prototype.toString = function() {
	//	this.getNotes().forEach(function(note) {
	//		console.log(note.toString());
	//	});
	//};

	return NoteManager;
});
define('modules/core/src/TimeSignatureModel',[],function() {
	function TimeSignatureModel(timeSig) {
		var re = /\d\/\d/;
		if (!timeSig || !timeSig.match(re)) {
			throw "TimeSignatureModel - Time signature not valid " + timeSig;
		}

		var timeSigArr = timeSig.split("/");

		// eg. 6/8 will be numBeats = 6 and beatUnit = 8
		this.numBeats = parseInt(timeSigArr[0], 10);
		this.beatUnit = parseInt(timeSigArr[1], 10);
	}

	/**
	 * The function returns the number of beats from the timeSig arguments or by default on current timeSignature
	 * @return {int} number of beats in a measure  in the unit of the signature. E.g.: for 6/8 -> 6, for 4/4 -> 4 for 2/2 -> 2
	 */
	TimeSignatureModel.prototype.getBeats = function() {
		return this.numBeats;
	};


	/**
	 * The function returns the beats unit from the current time signature
	 * @return {int} beat unit in a measure. E.g.: for 6/8 -> 0.5, for 4/4 -> 1 for 2/2 -> 2
	 */
	TimeSignatureModel.prototype.getBeatUnitQuarter = function() {
		return 4 / this.beatUnit;
	};
	
	TimeSignatureModel.prototype.getBeatUnit = function() {
		return this.beatUnit;
	};
	/**
	 * @return {int} number of quarter beats in a measure, e.g. for 6/8 -> 3, for 4/4 -> 4, for 2/2 -> 4
	 */
	TimeSignatureModel.prototype.getQuarterBeats = function() {
		return (4 / this.beatUnit) * this.numBeats;
	};

	/**
	 * @return {string} return a string of the timesignature in the type 3/4
	 */
	TimeSignatureModel.prototype.toString = function() {
		return this.numBeats + '/' + this.beatUnit;
	};

	return TimeSignatureModel;
});
define('modules/core/src/BarModel',['modules/core/src/TimeSignatureModel'], function(TimeSignatureModel) {
	function BarModel(option) {
		if (typeof option === "undefined") {
			option = {};
		}
		this.begining = (typeof(option.begining) !== "undefined") ? option.begining : undefined;
		this.clef = (typeof(option.clef) !== "undefined") ? option.clef : undefined; // empty clef means it doesn't change from previous 
		this.ending = (typeof(option.ending) !== "undefined") ? option.ending : undefined; // object with repeat, type (BEGIN,END, BEGIN_END, MID) and ending (text)
		this.style = (typeof(option.style) !== "undefined") ? option.style : '';
		this.timeSignature = (typeof(option.timeSignature) !== "undefined") ? option.timeSignature : undefined; // empty timeSignature means it doesn't change from previous
		this.tonality = (typeof(option.tonality) !== "undefined") ? option.tonality : undefined;
		this.label = (typeof(option.label) !== "undefined") ? option.label : undefined; // Segno, fine, coda, on cue ...
		this.sublabel = (typeof(option.sublabel) !== "undefined") ? option.sublabel : undefined; // Ds, Ds al fine, ds al capo ...
	}


	BarModel.prototype.setBegining = function(begining) {
		if (typeof begining === "undefined") {
			throw 'BarModel - begining should not be undefined';
		}
		this.begining = begining;
	};

	BarModel.prototype.getBegining = function() {
		return this.begining;
	};

	BarModel.prototype.setClef = function(clef) {
		var clefType = ['', 'treble', 'bass', 'alto', 'tenor', 'percussion'];
		if (typeof clef === "undefined" && typeof clefType[clef] === "undefined") {
			throw 'BarModel - clef should not be undefined';
		}
		this.clef = clef;
	};

	BarModel.prototype.getClef = function() {
		return this.clef;
	};

	BarModel.prototype.setEnding = function(ending) {
		if (typeof ending === "undefined") {
			ending = undefined;
		}
		this.ending = ending;
	};
	BarModel.prototype.removeEnding = function() {
		this.ending = undefined;
	};
	BarModel.prototype.getEnding = function() {
		return this.ending;
	};

	BarModel.prototype.setStyle = function(style) {
		if (typeof style === "undefined") {
			style = '';
		}
		this.style = style;
	};

	BarModel.prototype.getStyle = function() {
		return this.style;
	};

	BarModel.prototype.setTimeSignature = function(timeSignature) {
		if (!timeSignature) {
			this.timeSignature = undefined;
		} else {
			this.timeSignature = new TimeSignatureModel(timeSignature);
		}
	};

	BarModel.prototype.getTimeSignature = function() {
		return this.timeSignature;
	};

	BarModel.prototype.setTonality = function(tonality) {
		if (typeof tonality === "undefined") {
			tonality = '';
		}
		this.tonality = tonality;
	};

	BarModel.prototype.getTonality = function() {
		return this.tonality;
	};

	BarModel.prototype.setLabel = function(label) {
		if (typeof label === "undefined") {
			label = '';
		}
		this.label = label;
	};

	BarModel.prototype.getLabel = function() {
		return this.label;
	};

	BarModel.prototype.setSublabel = function(sublabel) {
		if (typeof sublabel === "undefined") {
			sublabel = '';
		}
		this.sublabel = sublabel;
	};

	/**
	 *
	 * @param  {boolan} formatted : if true, it returns formatted example for drawing.
	 * @return {String}  e.g.: if formatted -> "DC_AL_CODA"; else -> "DC al Coda"
	 */
	BarModel.prototype.getSublabel = function(formatted) {
		if (formatted && typeof this.sublabel !== 'undefined') {
			return this.sublabel.replace(/ /g, "_").toUpperCase();
		} else {
			return this.sublabel;
		}
	};
	/**
	 * @param  {boolean} unfolding , if true it means we are unfolding so we want to remove endings, labels..etc., if false, is pure cloning
	 * @return {BarModel}
	 */
	BarModel.prototype.clone = function(unfolding) {
		var newBar = new BarModel(this);
		if (unfolding)
		{
			newBar.removeEnding();
		}
		return newBar;
	};

	return BarModel;
});
define('modules/core/src/BarManager',['modules/core/src/BarModel'], function(BarModel) {
	function BarManager() {
		this.bars = [];
	}

	BarManager.prototype.getTotal = function() {
		return this.bars.length;
	};

	BarManager.prototype.getBars = function() {
		return this.bars;
	};
	BarManager.prototype.setBars = function(bars) {
		this.bars = bars;
	};

	BarManager.prototype.getBar = function(index) {
		if (isNaN(index) || index < 0) {
			throw "BarManager - getBar - invalid index :" + index;
		}
		return this.bars[index];
	};

	/**
	 * @param {BarModel} bar
	 */
	BarManager.prototype.addBar = function(bar) {
		if (typeof bar === "undefined" || !(bar instanceof BarModel)) {
			bar = new BarModel();
		}
		this.bars.push(bar);
		return bar;
	};

	BarManager.prototype.removeBar = function(index) {
		if (typeof index === "undefined" || isNaN(index) || index < 0) {
			throw "BarManager - removeBar - invalid index " + index;
		}
		this.bars.splice(index, 1);
	};
	BarManager.prototype.clear = function() {
		this.bars = [];
	};

	return BarManager;
});
define('modules/core/src/ChordModel',[],function() {
	/**
	 * Chord Model is a core model representing a leadsheet chord
	 * @param {} param is an object of parameters
	 * param accept : {
	 *		note: "C",				// note is a string indicating the root pitch of chord, it also can be % or %% (for repeat) or NC for No Chords
	 *		chordType: "7",			// chordtype is a string indicating a chordtype
	 *		base: {ChordModel},		// base is a chordModel which represent a base note
	 *		parenthesis: false,		// booalean indicating if there are parenthesis or not
	 *		beat: 1,				// startbeat in the current measure (start at 1)
	 *		barNumber: 0			// start bar number (start at 0)
	 * }
	 */
	function ChordModel(param) {
		this.note = (param && param.note) ? param.note : "";
		this.chordType = (param && param.chordType) ? param.chordType : "";
		this.base = (param && param.base) ? param.base : {};
		this.parenthesis = (param && typeof param.parenthesis !== "undefined") ? param.parenthesis : false;
		this.beat = (param && typeof param.beat !== "undefined") ? param.beat : 1;
		this.barNumber = (param && typeof param.barNumber !== "undefined") ? param.barNumber : 0;
		this.chordSymbolList = getChordSymbolList();

		function getChordSymbolList() {
			function htmlDecode(value) {
				var div = document.createElement('div');
				div.innerHTML = value;
				return div.firstChild.nodeValue;
			}
			var maps = {
				"halfdim": "&#248;", //ø   //216 -> Ø
				//"M7":"&#916;",//Δ
				"dim": "&#959;"
			};
			for (var prop in maps) {
				maps[prop] = htmlDecode(maps[prop]);
			}
			return maps;
		}

	}

	/* Basic getter setter */
	ChordModel.prototype.getNote = function() {
		return this.note;
	};
	ChordModel.prototype.setNote = function(note) {
		if (typeof note === "undefined") {
			throw 'Undefined note';
		}
		this.note = note;
	};

	ChordModel.prototype.getChordType = function() {
		return this.chordType;
	};

	/**
	 *
	 * @param {String} chordType, could be undefined, e.g. in "NC" (no chord)
	 */
	ChordModel.prototype.setChordType = function(chordType) {
		this.chordType = chordType;
	};

	ChordModel.prototype.getBase = function() {
		return this.base;
	};
	ChordModel.prototype.isEmptyBase = function() {
		return (Object.keys(this.base).length === 0) ? true : false;
	};

	ChordModel.prototype.setBase = function(chordBase) {
		if ((typeof chordBase === "undefined" || !(chordBase instanceof ChordModel)) && chordBase !== "") {
			throw "Base don't have the correct ChordModel type";
		}
		this.base = chordBase;
	};

	ChordModel.prototype.getParenthesis = function() {
		return this.parenthesis;
	};
	ChordModel.prototype.setParenthesis = function(parenthesis) {
		this.parenthesis = !!parenthesis;
	};

	ChordModel.prototype.getBeat = function() {
		return this.beat;
	};

	ChordModel.prototype.setBeat = function(beat) {
		if (typeof beat !== "undefined" && !isNaN(beat)) {
			this.beat = beat;
			return true;
		}
		return false;
	};

	ChordModel.prototype.getBarNumber = function() {
		return this.barNumber;
	};

	ChordModel.prototype.setBarNumber = function(barNumber) {
		if (typeof barNumber !== "undefined" && !isNaN(barNumber)) {
			this.barNumber = Number(barNumber);
			return true;
		}
		return false;
	};
	/*End basic getter and setters*/


	ChordModel.prototype.isEmpty = function() {
		if (typeof this.note === "undefined" || this.note === "") {
			return true;
		}
		return false;
	};


	/**
	 *
	 * @param  {string}  delimiter  It's the separator between note and chordtype, by default there is no delimiter : C M7
	 * @param  {Boolean} isFormated If true some chordsd are formatted with symbiols like Δ or ø
	 * @return {string}             [description]
	 */
	ChordModel.prototype.toString = function(delimiter, isFormated) {
		if (typeof delimiter === "undefined") {
			delimiter = "";
		}
		if (typeof isFormated === "undefined") {
			isFormated = true;
		}

		var chordType = this.getChordType();
		if (isFormated) {
			if (typeof chordType !== "undefined") chordType = this.formatChordType(chordType);
			else chordType = "";
		}

		var string = "";
		if (!this.isEmpty()) {
			string = this.getNote() + delimiter + chordType;
		}

		var base = this.getBase();
		if (base instanceof ChordModel && base.getNote() !== "") {
			var baseChordType = base.getChordType();
			if (isFormated) {
				if (typeof baseChordType !== "undefined") baseChordType = this.formatChordType(baseChordType);
				else baseChordType = "";
			}
			string += "/" + base.getNote() + delimiter + baseChordType;
		}

		if (this.getParenthesis()) {
			string = '(' + string + ')';
		}

		return string;
	};

	ChordModel.prototype.setChordFromString = function(stringChord) {
		// Looking for base chord
		stringChord = stringChord.split('/');
		var note, chordType;

		var stringChordRoot = stringChord[0];

		if (stringChord.length >= 2) {
			var stringChordBase = stringChord[1];
			if (this.base instanceof ChordModel === false) {
				this.base = new ChordModel();
			}
			this.base.setChordFromString(stringChordBase);
		}

		// Set current chord note and chordtype
		stringChordRoot = stringChordRoot.replace(/\s/g, '');

		//var r = validateSimpleChord(stringChordRoot);
		var pos;
		if (stringChordRoot.charAt(1) == "b" || stringChordRoot.charAt(1) == "#" || stringChordRoot.charAt(1) == "%")
			pos = 2;
		else if (stringChordRoot == "NC")
			pos = stringChordRoot.length;
		else
			pos = 1;

		var pitchClass = stringChordRoot.substring(0, pos);
		var chordType = stringChordRoot.substring(pos, stringChordRoot.length);
		this.setNote(pitchClass);
		this.setChordType(chordType);

		/*
		function validateSimpleChord(cChord) {
			var pitchClasses = ["C", "C#", "Cb", "D", "D#", "Db", "E", "E#", "Eb", "F", "F#", "Fb", "G", "G#", "Gb", "A", "A#", "Ab", "B", "B#", "Bb", "%", "%%", "NC"];

			var chordTypes = NoteTools.getCollection('chordtype');
			var nChord = jQuery.trim(cChord);
			var pos;
			if (nChord.charAt(1) == "b" || nChord.charAt(1) == "#" || nChord.charAt(1) == "%")
				pos = 2;
			else if (nChord == "NC")
				pos = nChord.length;
			else
				pos = 1;

			var pitchClass = nChord.substring(0, pos);
			var chordType = nChord.substring(pos, nChord.length);

			if ((pitchClasses.indexOf(pitchClass) == -1 || chordTypes.indexOf(chordType) == -1) && cChord.length != 0) {
				//error            
				return {
					err: true,
					msg: "incorrect chord " + pitchClass + " " + chordType
				}
			} else return {
				note: pitchClass,
				chordType: chordType
			}
		};
*/
	};

	ChordModel.prototype.serialize = function() {
		var chordObj = {};
		chordObj.note = this.note;
		chordObj.chordType = this.chordType;

		if (this.isEmptyBase() !== true) {
			chordObj.base = this.base.toString();
		}
		chordObj.parenthesis = this.parenthesis;
		chordObj.beat = this.beat;
		chordObj.barNumber = this.barNumber;
		return chordObj;
	};


	ChordModel.prototype.clone = function() {
		return new ChordModel(this.serialize());
	};

	/*
	 * The function transform a chordType String to symbols according chordSymbolList maps
	 * Example: halfdim become ø
	 */
	ChordModel.prototype.formatChordType = function(chordTypeName) {
		if (typeof chordTypeName === "undefined") {
			return '';
		}
		for (var props in this.chordSymbolList) {
			chordTypeName = chordTypeName.replace(props, this.chordSymbolList[props]);
		}
		return chordTypeName;
	};

	ChordModel.prototype.unformatChordType = function(chordTypeName) {
		if (typeof chordTypeName === "undefined") {
			return '';
		}
		for (var props in this.chordSymbolList) {
			chordTypeName = chordTypeName.replace(this.chordSymbolList[props], props);
		}
		return chordTypeName;
	};

	return ChordModel;
});
define('modules/core/src/ChordManager',['modules/core/src/SongModel', 'modules/core/src/ChordModel'], function(SongModel, ChordModel) {
	function ChordManager(chords) {
		this.chords = chords ? chords : []; // array of chordModel
	}

	/**
	 * Interface functions (this functions are also in NoteManagerModel  )
	 * @interface
	 */
	ChordManager.prototype.getTotal = function() {
		return this.chords.length;
	};

	ChordManager.prototype.isEmpty = function() {
		return this.chords.length === 0;
	};

	ChordManager.prototype.getChords = function(from, to) {
		return this.chords.slice(from, to);
	};

	ChordManager.prototype.setAllChords = function(chords) {
		this.chords = chords;
	};

	ChordManager.prototype.getChord = function(index) {
		if (typeof index !== "undefined" && !isNaN(index)) {
			if (this.chords[index]) {
				return this.chords[index];
			}
		}
		return undefined;
	};

	ChordManager.prototype.getChordIndex = function(chord) {
		if (typeof chord === "undefined" || !(chord instanceof ChordModel)) {
			throw 'Chord must be a ChordModel';
		}
		for (var i = 0, c = this.chords.length; i < c; i++) {
			if (JSON.stringify(this.getChord(i)) === JSON.stringify(chord)) {
				return i;
			}
		}
		return undefined;
	};

	/**
	 * Set a new chord to a specific index, if chords[index] already have a chord it will replace it
	 * @param {ChordModel} chord
	 * @param {int} index
	 */
	ChordManager.prototype.setChord = function(chord, index) {
		if (typeof chord === "undefined" || !(chord instanceof ChordModel) || typeof index === "undefined" || isNaN(index) || index < 0) {
			throw 'Wrong Parameters';
		}
		this.chords[index] = chord;
	}

	/**
	 * Add a new chord at the end of chords array, if chord is not set, it create a new instance of chordModel
	 * @param {ChordModel} chord
	 */
	ChordManager.prototype.addChord = function(chord) {
		if (typeof chord !== "undefined" && chord instanceof ChordModel) {
			this.chords.push(chord);
		} else {
			this.chords.push(new ChordModel());
		}
	}

	/**
	 * Insert a  new chord to a specific index, all chords after index will have their index incremented
	 * @param {ChordModel} chord
	 * @param {int} index
	 */
	ChordManager.prototype.insertChord = function(index, chord) {
		if (typeof index !== "undefined" && isNaN(index)) {
			throw 'Index must be a int in insert chord';
		}
		if (typeof chord === "undefined" || !(chord instanceof ChordModel)) {
			var chord = new ChordModel();
		}
		this.chords.splice(index, 0, chord);
	}

	/**
	 * Search and remove a chord from the array, chordModel is destroyed
	 * @param  {ChordModel} chord
	 */
	ChordManager.prototype.removeChord = function(chord) {
		if (typeof chord !== "undefined" && !(chord instanceof ChordModel)) {
			throw 'Chord must be a ChordModel';
		}
		var chordIndex = this.getChordIndex(chord);
		this.removeChordByIndex(chordIndex);
	};

	/**
	 * Remove a chord from the array based on it's index, chordModel is destroyed
	 * @param  {int} index
	 */
	ChordManager.prototype.removeChordByIndex = function(index) {
		if (typeof index === "undefined" || isNaN(index) || index < 0) {
			throw 'Index must be a int in removeChordByIndex';
		}
		if (this.chords[index]) {
			var deletedChords = this.chords.splice(index, 1);
		}
	};


	/**
	 * Functions changes bar number of each chords that is equal or greater than barNumber
	 * @param  {Int} inc       Increment bar number (usually it's 1 or -1)
	 * @param  {Int} barNumber start bar from which we start to increment
	 */
	ChordManager.prototype.incrementChordsBarNumberFromBarNumber = function(inc, barNumber) {
		if (typeof barNumber !== "undefined" && !isNaN(barNumber) && barNumber >= 0) {
			var currentChord;
			for (var i = 0, c = this.chords.length; i < c; i++) {
				currentChord = this.chords[i];
				if (currentChord.getBarNumber() >= barNumber) {
					currentChord.setBarNumber(currentChord.getBarNumber() + inc);
				}
			}
		}
	};

	/**
	 * Return an array of chords that are in a bar define by barNumber argument
	 * @param  {int} barNumber
	 */
	ChordManager.prototype.getChordsByBarNumber = function(barNumber) {
		var chordsByBarNumber = [];
		if (typeof barNumber !== "undefined" && !isNaN(barNumber) && barNumber >= 0) {
			var currentChord;
			for (var i = 0, c = this.chords.length; i < c; i++) {
				currentChord = this.chords[i];
				if (currentChord.getBarNumber() === barNumber) {
					chordsByBarNumber.push(currentChord);
				}
			}
		}
		return chordsByBarNumber;
	};

	/**
	 * Return all chords in a bar
	 * @param  {int} barNumber
	 */
	ChordManager.prototype.removeChordsByBarNumber = function(barNumber) {
		if (typeof barNumber !== "undefined" && !isNaN(barNumber) && barNumber >= 0) {
			var currentChord;
			for (var i = this.chords.length - 1; i >= 0; i--) {
				currentChord = this.chords[i];
				if (currentChord.getBarNumber() === barNumber) {
					this.removeChordByIndex(i);
				}
			}
		}
	};
	
	/**
	 * Return a chord that is matching correct Bar and beat number
	 * @param  {ChordModel} chord or undefined if no chord match
	 */
	ChordManager.prototype.searchChordByBarAndBeat = function(barNumber, beat) {
		if (!isNaN(barNumber) && barNumber >= 0 && !isNaN(beat) && beat >= 0) {
			var currentChord;
			for (var i = 0, c = this.chords.length; i < c; i++) {
				currentChord = this.chords[i];
				if (currentChord.getBarNumber() === barNumber && currentChord.getBeat() === beat) {
					return currentChord;
				}
			}
		}
		return undefined;
	};

	/**
	 * @interface
	 *
	 * returns a copy of the chords from, pos1, to pos2.
	 * @param  {Integer} pos1
	 * @param  {Integer} pos2
	 * @return {[type]}      [description]
	 */
	ChordManager.prototype.cloneElems = function(pos1, pos2) {
		var newChords = [];
		var chordsToClone = this.getChords(pos1, pos2);
		chordsToClone.forEach(function(chord) {
			var cChord = chord.clone();
			newChords.push(cChord);
		});
		return newChords;
	};

	/**
	 * Return the duration of a chord in beat
	 * @param  {songModel} current songModel in which the chord is
	 * @param  {int} index of chord in this.chords
	 * @return {int} number of beat the chord last
	 */
	ChordManager.prototype.getChordDuration = function(songModel, index) {
		if (typeof songModel === "undefined" || typeof index === "undefined" || isNaN(index)) {
			throw "ChordManager - getChordDuration - wrong arguments";
		}
		if (typeof this.chords[index] === "undefined") {
			return undefined;
		}

		var currentBn = this.chords[index].getBarNumber();
		var currentBeat = this.chords[index].getBeat();
		var beats = songModel.getTimeSignatureAt(currentBn).getBeats();
		var nextBn, nextBeat;
		if (typeof this.chords[index + 1] !== "undefined") {
			nextBn = this.chords[index + 1].getBarNumber();
			nextBeat = this.chords[index + 1].getBeat();
		} else {
			// case last chords, we set next to the end
			var sectionNumber = songModel.getSectionNumberFromBarNumber(currentBn);
			nextBn = songModel.getStartBarNumberFromSectionNumber(sectionNumber) + songModel.getSection(sectionNumber).getNumberOfBars();
			nextBeat = 1;
		}
		var duration = 0;
		if (nextBn === currentBn) { // if chord are on the same bar
			duration = nextBeat - currentBeat;
		} else if (nextBn > currentBn) {
			duration = beats * (nextBn - currentBn) + nextBeat - currentBeat;
			// TODO test duration 2, it's probably more correct because it take into account time modification change
			//duration2 = songModel.getStartBeatFromBarNumber(nextBn-1) + songModel.getTimeSignatureAt(nextBn-1).getBeats() + nextBeat - songModel.getStartBeatFromBarNumber(currentBn) - currentBeat;
			//console.log(duration, duration2);
		}
		return duration;
	};

	/**
	 * Return the duration of a chord in beat in one bar,
	 * if the chord last less than one bar, function is the same as getChordDuration otherwise it truncate
	 * @param  {songModel} current songModel in which the chord is
	 * @param  {int} index of chord in this.chords
	 * @return {int} number of beat the chord last
	 */
	ChordManager.prototype.getChordDurationFromBarNumber = function(songModel, index, barNumber) {
		if (typeof songModel === "undefined" || isNaN(index) || isNaN(barNumber)) {
			throw "ChordManager - getChordDurationFromBarNumber - wrong arguments";
		}
		if (typeof this.chords[index] !== "undefined") {
			var currentBn = this.chords[index].getBarNumber();
			var currentBeat = this.chords[index].getBeat();
			var beats = songModel.getTimeSignatureAt(currentBn).getBeats();
			var nextBn, nextBeat;
			if (typeof this.chords[index + 1] !== "undefined") {
				nextBn = this.chords[index + 1].getBarNumber();
				nextBeat = this.chords[index + 1].getBeat();
			} else {
				// case last chords, we set next to the end
				nextBn = barNumber + 1;
				nextBeat = 1;
			}
			var duration = 0;
			// console.log(this.chords[index].toString());
			if (nextBn === currentBn) { // if chord are on the same bar
				duration = nextBeat - currentBeat;
			} else if (nextBn > currentBn) {
				if (currentBn === barNumber) {
					duration = beats - currentBeat + 1;
				} else if (barNumber < nextBn) {
					duration = songModel.getTimeSignatureAt(barNumber).getBeats();
				} else if (barNumber === nextBn) {
					duration = nextBeat - 1;
				}
			}
			// console.log(duration);
			return duration;
		}
		return undefined;
	};

	/**
	 * returns the index of the chord in the demanded position. If there is no chord with that exact position , it returns the closest previous one (or the following one, depending on 'next' param)
	 * returns also if it found the exact one or not
	 * @param  {Object} pos {	numBar: valNumBar,
	 *	                     	numBeat: valNumBeat}
	 * @param  {boolean} next if true, when there is no chord found at the exact position we get the next one, if false or undefined, we get the previous one
	 * @return {Object}     {
	 *         					index: number
	 *			exact: boolean
	 * 	       				}
	 */
	ChordManager.prototype.getChordIndexByPosition = function(pos, next) {
		function equalPosition(pos, chord) {
				return pos.numBar == chord.getBarNumber() && pos.numBeat == chord.getBeat();
			}
			//greater than
		function posGtChordPos(pos, chord) {
				return pos.numBar > chord.getBarNumber() || (pos.numBar == chord.getBarNumber() && pos.numBeat > chord.getBeat());
			}
			//less than
		function posLtChordPos(pos, chord) {
			return pos.numBar < chord.getBarNumber() || (pos.numBar == chord.getBarNumber() && pos.numBeat < chord.getBeat());
		}

		var chords = this.getChords();
		var r;
		for (var i = 0, c = chords.length; i < c; i++) {
			if (equalPosition(pos, chords[i])) {
				r = "equal";
				break;
			} else if (posGtChordPos(pos, chords[i])) {
				if (i + 1 == chords.length || posLtChordPos(pos, chords[i + 1])) {
					r = "greater";
					break;
				}
			}
		}
		if (next && r != "equal") i++;
		return {
			index: i,
			exact: r == "equal"
		};
	};
	
	ChordManager.prototype.getChordsAsString = function() {
		var strChords = [];
		for (var i = 0; i < this.chords.length; i++) {
			strChords.push(this.chords[i].toString());
		}
		return strChords;
	};

	/**
	 * getBeatIntervalByIndexes return the beat interval between chords[start] and chords[end] + chords[end] duration
	 * @interface
	 * @param  {integer} start
	 * @param  {integer} end
	 * @return {Array}
	 */
	ChordManager.prototype.getBeatIntervalByIndexes = function(start, end) {
		if (typeof start === "undefined" || isNaN(start) || typeof end === "undefined" || isNaN(end)) {
			throw 'Start and End parameters should be number';
		}
		var song = this.songModel;
		var startChord = this.getChord(start);
		var endChord = this.getChord(end);
		var startBeat = song.getBeatsBeforeBarNumber(startChord.getBarNumber()) + startChord.getBeat();
		var endBeat = song.getBeatsBeforeBarNumber(endChord.getBarNumber()) + 1 + song.getTimeSignatureAt(endChord.getBarNumber()).getBeats();
		return [startBeat, endBeat];
	};

	/**
	 * Function look which chords have their startbeat between startBeat and EndBeat
	 * It returns an array of 2 chords index, first index is the first chord that match, second is the last chord that match (it can be the same)
	 * by beat interval without including the last beat (just like in notes).
	 * E.g.: in a 4/4 song, with one chord per bar,  getIndexesStartingBetweenBeatInterval(1,6) would return [0,0]
	 * @interface
	 * @param  {Number} startBeat
	 * @param  {Number} endBeat
	 * @return {Array}  [indexStart, indexEnd]
	 */
	ChordManager.prototype.getIndexesStartingBetweenBeatInterval = function(startBeat, endBeat) {
		if (typeof startBeat === "undefined" || isNaN(startBeat) || typeof endBeat === "undefined" || isNaN(endBeat)) {
			throw 'Start and End parameters should be number';
		}
		var song = this.songModel;
		var pos1 = song.getPositionFromBeat(startBeat);
		var pos2 = song.getPositionFromBeat(endBeat);
		var index1 = this.getChordIndexByPosition(pos1, true);
		var index2 = this.getChordIndexByPosition(pos2);
		if (index2.exact) index2.index--;
		return [index1.index, index2.index];
	};

	return ChordManager;
});
define('modules/core/src/SongModel',[
	'modules/core/src/NoteManager',
	'modules/core/src/BarManager',
	'modules/core/src/ChordManager',
	'modules/core/src/TimeSignatureModel'
], function(NoteManager, BarManager, ChordManager, TimeSignatureModel) {
	function SongModel(param) {
		this.init(param);
	}

	SongModel.prototype.init = function(param) {
		this.title = (typeof param !== "undefined" && param.title) ? param.title : '';
		this.composers = (typeof param !== "undefined" && param.composers) ? param.composers : [];
		this.style = (typeof param !== "undefined" && param.style) ? param.style : '';
		this.source = (typeof param !== "undefined" && param.source) ? param.source : '';
		this.tempo = (typeof param !== "undefined" && param.tempo) ? param.tempo : 120;
		this.tonality = (typeof param !== "undefined" && param.tonality) ? param.tonality : "C";
		this.timeSignature = (typeof param !== "undefined" && param.timeSignature) ? param.timeSignature : new TimeSignatureModel('4/4');
		this.sections = (typeof param !== "undefined" && param.sections) ? param.sections : [];
		this.components = (typeof param !== "undefined" && param.components) ? param.components : [];

		this.addComponent('notes', new NoteManager());
		this.addComponent('bars', new BarManager());
	};

	///////////////////////////////
	// Basic getters and setters //
	///////////////////////////////

	SongModel.prototype.getTitle = function() {
		return this.title;
	};
	SongModel.prototype.setTitle = function(title) {
		this.title = title;
	};

	SongModel.prototype.getComposer = function(i) {
		i = i || 0;
		return this.composers[i];
	};
	SongModel.prototype.addComposer = function(composer) {
		if (typeof composer !== "undefined") {
			this.composers.push(composer);
			return true;
		}
		return false;
	};
	/*SongModel.prototype.clearComposers = function(composer) {
		if (typeof composer !== "undefined") {
			this.composers = [];
			return true;
		}
		return false;
	};*/

	SongModel.prototype.getStyle = function() {
		return this.style;
	};

	SongModel.prototype.setStyle = function(style) {
		if (typeof style === "undefined") {
			return;
		}
		this.style = style;
	};

	SongModel.prototype.getSource = function() {
		return this.source;
	};

	SongModel.prototype.setSource = function(source) {
		if (typeof source !== "undefined") {
			this.source = source;
			return true;
		}
		return false;
	};

	SongModel.prototype.setTempo = function(tempo) {
		if (typeof tempo === "undefined" || isNaN(tempo) || tempo < 0) {
			return;
		}
		this.tempo = tempo;
	};

	SongModel.prototype.getTempo = function() {
		return this.tempo;
	};

	SongModel.prototype.setTonality = function(tonality) {
		if (typeof tonality === "undefined") {
			return;
		}
		this.tonality = tonality;
	};

	SongModel.prototype.getTonality = function() {
		return this.tonality;
	};

	/**
	 * Get the tonality of a bar by looping for each previous bar or by default on song tonality
	 * @param  {int} barNumber
	 * @return {string} eg. C, Bb etc
	 */
	SongModel.prototype.getTonalityAt = function(barNumber) {
		if (typeof barNumber === "undefined" || isNaN(barNumber)) {
			throw "invalid barNumber " + barNumber;
		}
		var currentTonality = this.tonality;
		var bm = this.getComponent("bars");
		var tonality;
		while (barNumber >= 0) {
			if (bm.getBar(barNumber) != null) {
				tonality = bm.getBar(barNumber).getTonality();
				if (typeof tonality !== "undefined" && tonality !== '') {
					return tonality;
				}
			}
			barNumber--;
		}
		return currentTonality;
	};

	SongModel.prototype.setTimeSignature = function(timeSignature) {
		if (typeof timeSignature === "undefined") {
			this.timeSignature = new TimeSignatureModel('4/4');
		} else {
			this.timeSignature = new TimeSignatureModel(timeSignature);
		}
	};

	SongModel.prototype.getTimeSignature = function() {
		return this.timeSignature;
	};

	/**
	 * GetTimeSignatureAt returns the time signature at one precise moment defined by the barNumber
	 * @param  {int} barNumber
	 * @return {timeSignatureModel} currentTimeSignature like 3/4
	 */
	SongModel.prototype.getTimeSignatureAt = function(barNumber) {
		var currentTimeSignature = this.getTimeSignature();
		var timeSig;
		var sectionNumber = this.getSectionNumberFromBarNumber(barNumber);
		if (typeof sectionNumber === "undefined") {
			return currentTimeSignature; // TODO need test on song that have repetitions on last section and a time signature change
		}
		var startBarSection = this.getStartBarNumberFromSectionNumber(sectionNumber);
		var bm = this.getComponent("bars");
		// loop in all previous bar in the current section
		while (barNumber >= startBarSection) {
			timeSig = bm.getBar(barNumber).getTimeSignature();
			if (typeof timeSig !== "undefined") {
				return timeSig;
			}
			barNumber--;
		}
		// loop in current Section attributes
		timeSig = this.getSection(sectionNumber).getTimeSignature();
		if (typeof timeSig !== "undefined") {
			return timeSig;
		}
		// otherwise returns song timeSig
		return currentTimeSignature;
	};


	// USELESS function, use directly timesignature function instead
	/**
	 * The function returns the number of beats from the timeSig arguments or by default on current timeSignature
	 * @param  {TimeSignatureModel} timeSig
	 * @return {int} number of beats in a measure in the unit of the signature. E.g.: for 6/8 -> 6, for 4/4 -> 4 for 2/2 -> 2
	 */
	/*SongModel.prototype.getBeatsFromTimeSignature = function(timeSig) {
		if (timeSig !== "undefined") {
			return timeSig.getBeats();
		}
	};*/
	/*
	SongModel.prototype.getBeatsFromTimeSignatureAt = function(barNumber) {
		return this.getBeatsFromTimeSignature(this.getTimeSignatureAt(barNumber));
	};
*/
	/**
	 * @param  {Integer} index  index of the section
	 * @return {SectionModel}
	 */
	SongModel.prototype.getSection = function(index) {
		if (isNaN(index) || index < 0 || index > this.sections.length) {
			throw "getSection - invalid index :" + index;
		}
		return this.sections[index];
	};
	SongModel.prototype.getSections = function() {
		return this.sections;
	};

	SongModel.prototype.addSection = function(sectionsItem) {
		this.sections.push(sectionsItem);
	};
	SongModel.prototype.removeSection = function(sectionIndex) {
		if (typeof sectionIndex === "undefined" || isNaN(sectionIndex) || sectionIndex < 0) {
			throw "SongModel - removeSection - invalid sectionIndex " + sectionIndex;
		}
		this.sections.splice(sectionIndex, 1);
	};

	/**
	 * gets component (either chords or notes)
	 * @param  {String} componentTitle must be "chords" or "notes" or "bars"
	 * @return {NoteManager or ChordManager}
	 */
	SongModel.prototype.getComponent = function(componentTitle) {
		if (this.components.hasOwnProperty(componentTitle))
			return this.components[componentTitle];
		else
			return undefined;
	};

	SongModel.prototype.addComponent = function(componentTitle, componentItem) {
		if (!componentItem) return false;
		this.components[componentTitle] = componentItem;
		return true;
	};

	SongModel.prototype.getBar = function(index) {
		//TODO, remove function, duplicate
		console.warn('get bar will be deleted, use getComponent("bars") instead');
		return this.getComponent("bars").getBar(index);
	};

	/**
	 * Function has to be called inside an iteration, it checks if there is a timesignature change in current bar
	 * if not, it returns the currentBeats (calculated previously and sent as parameter		)
	 * @param  {Number} index
	 * @param  {Number}
	 * @return {Number}
	 */
	SongModel.prototype.getBarNumBeats = function(numBar, currentBeats) {
		//console.log(currentBeats, numBar, this.getComponent("bars").getTotal());
		var barTimeSig = this.getComponent("bars").getBar(numBar).getTimeSignature(),
			timeSig = barTimeSig || this.getTimeSignature();
		if (!timeSig && !currentBeats) throw "bad use: either song is not well formatted, either currentBeats is not sent";

		return (timeSig) ? timeSig.getBeats() : currentBeats;
	};

	SongModel.prototype.getBars = function() {
		//TODO, remove function, duplicate
		console.warn('getBars will be deleted, use getComponent("bars").getBars() instead');
		return this.getComponent("bars").getBars();
	};


	/**
	 * get component using unfolded song structure
	 * @param  {String} componentTitle must be "chords" or "notes"
	 * @return {array} array of component (noteModel, chordModel)
	 */
	SongModel.prototype.getUnfoldedSongComponents = function(componentTitle) {
		var song = [];
		if (typeof componentTitle === "undefined") {
			componentTitle = undefined;
		}
		var barsIndex = this.getUnfoldedSongStructure();
		for (var i = 0; i < barsIndex.length; i++) {
			song.push(this.getComponentsAtBarNumber(barsIndex[i], componentTitle));
		}
		return song;
	};

	/**
	 * Returns an array of index of bars when song if unfolded.
	 * like getUnfoldedSongSection() but for the whole song
	 * @return {array}
	 */
	SongModel.prototype.getUnfoldedSongStructure = function() {
		var pointerBarNumberStructure = [];
		for (var i = 0, c = this.getSections().length; i < c; i++) {
			pointerBarNumberStructure = pointerBarNumberStructure.concat(this.getUnfoldedSongSection(i));
		}
		return pointerBarNumberStructure;
	};

	/**
	 * Returns an array containing index of bars in an unfolded song
	 *	e.g.: [	0, 1, 2, 3, 4, 5, 6, 7,
	 *			0, 1, 2, 3, 4, 5, 8, 9]
	 * @return {array}
	 */
	SongModel.prototype.getUnfoldedSongSection = function(sectionNumber) {
		if (typeof sectionNumber !== "undefined" && !isNaN(sectionNumber)) {
			var bm = this.getComponent("bars");
			var section = this.getSection(sectionNumber);
			var repeat = section.getRepeatTimes();
			var whileSecurity = 0;
			var startBar, endBar;
			var currentRepeatedPart = 0;
			var repeatedPart = [];
			var pointerBarNumberStructure = [];
			var endingBar;
			while (repeat >= 0 || whileSecurity > 1000) {
				whileSecurity++;
				// looping in all sections repeat
				repeatedPart = [];
				currentRepeatedPart = 0;
				startBar = this.getStartBarNumberFromSectionNumber(sectionNumber);
				endBar = startBar + section.getNumberOfBars();
				for (var barNumber = startBar; barNumber < endBar; barNumber++) {
					endingBar = parseInt(bm.getBar(barNumber).getEnding(), 10);
					// case there is an ending
					if (!isNaN(endingBar) && endingBar > 0) {
						currentRepeatedPart = endingBar;
						repeat--;
					}
					// case there is no ending found yet, we save this part
					if (currentRepeatedPart === 0) {
						repeatedPart.push(barNumber);
					}
					// case there is an ending, we add saved part to begining
					if (!isNaN(endingBar) && endingBar > 1) {
						pointerBarNumberStructure = pointerBarNumberStructure.concat(repeatedPart);
					}
					pointerBarNumberStructure.push(barNumber);
				}
				repeat--;
			}
			return pointerBarNumberStructure;
		}
	};

	/**
	 * Function return the start bar number of any section, first bar is 0
	 * @param  {int} sectionNumber
	 * @return {int} start Bar Number of section
	 */
	SongModel.prototype.getStartBarNumberFromSectionNumber = function(sectionNumber) {
		if (isNaN(sectionNumber)) {
			throw "SongModel - getStartBarNumberFromSectionNumber - sectionNumber is not a number: " + sectionNumber;
		}
		var barNumber = 0;
		for (var i = 0; i < sectionNumber; i++) {
			barNumber += this.getSection(i).getNumberOfBars();
		}
		return barNumber;
	};

	/**
	 * Function return the section number in which the bar is
	 * @param  {int} barNumber
	 * @return {int} section number (index) start at 0
	 */
	SongModel.prototype.getSectionNumberFromBarNumber = function(barNumber) {
		if (typeof barNumber === "undefined" || isNaN(barNumber) || barNumber < 0) {
			throw "SongModel - getSectionNumberFromBarNumber - barNumber is not a number: " + barNumber;
		}
		var sections = this.getSections();
		var sumBar = 0;
		for (var i = 0, c = sections.length; i < c; i++) {
			if (typeof sections[i] !== "undefined") {
				sumBar += sections[i].getNumberOfBars();
				if (sumBar > barNumber) {
					return i;
				}
			}
		}
		return undefined;
	};

	/**
	 * Function return the number of beat before a bar number in a folded song
	 * @param  {int} barNumber is the number of bar you want to have the first beat
	 * @return {int} number of beat to reach realBarNumber
	 */
	SongModel.prototype.getStartBeatFromBarNumber = function(barNumber) {
		var numberOfBeats = 1;
		if (typeof barNumber !== "undefined" && !isNaN(barNumber) && barNumber >= 0) {
			for (var i = 0; i < barNumber; i++) {
				numberOfBeats += this.getTimeSignatureAt(i).getBeats();
			}
		}
		return numberOfBeats;
	};

	/**
	 * Compute song length in beats
	 * @return {int} length of the song in beats
	 */
	SongModel.prototype.getSongTotalBeats = function() {
		var numberOfBeats = 0;
		var bm = this.getComponent('bars');
		var currentNumberBeatsByBar = this.getTimeSignature().getBeats();
		var barNumber = 0;
		for (var i = 0, c = this.sections.length; i < c; i++) {
			for (var j = 0, v = this.sections[i].getNumberOfBars(); j < v; j++) {
				if (typeof bm.getBar(barNumber) !== "undefined" && typeof bm.getBar(barNumber).getTimeSignature() !== "undefined") {
					currentNumberBeatsByBar = bm.getBar(barNumber).getTimeSignature().getBeats();
				}
				numberOfBeats += currentNumberBeatsByBar;
				barNumber++;
			}
		}
		return numberOfBeats;
	};

	/**
	 * Returns all components in a given bar number, componentTitle attriubtes is a filter for component title (eg chords, notes...)
	 * @param  {int} barNumber
	 * @param  {string} componentTitle will filter all the result depending the type (chords, notes...)
	 * @return {array} it returns an array of the direct object
	 */
	SongModel.prototype.getComponentsAtBarNumber = function(barNumber, componentTitle) {
		var components = [];

		if (!componentTitle || !this.components.hasOwnProperty(componentTitle)) {
			throw 'the item is matching no known type in getComponentsAtBarNumber';
		}

		var modelManager = this.components[componentTitle];
		if (typeof ChordManager !== "undefined" && modelManager instanceof ChordManager) {
			var chords = modelManager.getChordsByBarNumber(barNumber);
			for (var i = 0; i < chords.length; i++) {
				components.push(chords[i]);
			}
		} else if (typeof NoteManager !== "undefined" && modelManager instanceof NoteManager) {
			var notes = components.concat(modelManager.getNotesAtBarNumber(barNumber, this));
			for (var j = 0; j < notes.length; j++) {
				components.push(notes[j]);
			}
		}
		return components;
	};

	/**
	 * Alias for init function, it can be more adapted to some situations
	 */
	SongModel.prototype.clear = function() {
		this.init();
	};

	SongModel.prototype.unfold = function() {
		var self = this;

		function getUnfoldedNotes() {
			var barNotes = self.getUnfoldedSongComponents("notes");
			var newNoteMng = new NoteManager();
			for (var i in barNotes) {
				newNoteMng.addNotes(barNotes[i]);
			}
			return newNoteMng.getNotes();
		}

		function getUnfoldedChords() {
			var newChords = [];
			var chord;
			var barChords = self.getUnfoldedSongComponents("chords");
			for (var i in barChords) {
				for (var j in barChords[i]) {
					chord = barChords[i][j].clone();
					chord.setBarNumber(i);
					newChords.push(chord);
				}
			}
			return newChords;
		}

		function getUnfoldedSectionsAndBars() {
			var i, c, j,
				section,
				pointerBarNumberStructure,
				newSections = [],
				newBars = [],
				barMng = self.getComponent("bars");

			for (i = 0, c = self.getSections().length; i < c; i++) {
				section = self.getSection(i);
				pointerBarNumberStructure = self.getUnfoldedSongSection(i);
				newSections.push(
					section.cloneUnfolded(pointerBarNumberStructure.length)
				);

				for (j = 0; j < pointerBarNumberStructure.length; j++) {
					newBars.push(
						barMng.getBar(pointerBarNumberStructure[j]).clone(true)
					);
				}
			}
			return {
				newBars: newBars,
				newSections: newSections
			};
		}

		// Copy basic song data. 
		var newSong = new SongModel({
			title: this.getTitle(),
			composers: this.composers,
			style: this.getStyle(),
			source: this.getSource(),
			tempo: this.getTempo(),
			tonality: this.getTonality(),
			timeSignature: this.getTimeSignature()
		});

		// BARS and SECTIONS
		var r = getUnfoldedSectionsAndBars();

		var barMng = new BarManager();
		barMng.setBars(r.newBars);

		newSong.sections = [];
		for (var i in r.newSections) {
			newSong.addSection(r.newSections[i]);
		}

		//NOTES
		var noteMng = new NoteManager();
		noteMng.setNotes(getUnfoldedNotes());

		//CHORDS
		var chordMng = new ChordManager();
		chordMng.setAllChords(getUnfoldedChords());

		newSong.addComponent('notes', noteMng);
		newSong.addComponent('chords', chordMng);
		newSong.addComponent('bars', barMng);

		return newSong;
	};



	return SongModel;
});
/*! jQuery v2.1.0 | (c) 2005, 2014 jQuery Foundation, Inc. | jquery.org/license */
!function(a,b){"object"==typeof module&&"object"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error("jQuery requires a window with a document");return b(a)}:b(a)}("undefined"!=typeof window?window:this,function(a,b){var c=[],d=c.slice,e=c.concat,f=c.push,g=c.indexOf,h={},i=h.toString,j=h.hasOwnProperty,k="".trim,l={},m=a.document,n="2.1.0",o=function(a,b){return new o.fn.init(a,b)},p=/^-ms-/,q=/-([\da-z])/gi,r=function(a,b){return b.toUpperCase()};o.fn=o.prototype={jquery:n,constructor:o,selector:"",length:0,toArray:function(){return d.call(this)},get:function(a){return null!=a?0>a?this[a+this.length]:this[a]:d.call(this)},pushStack:function(a){var b=o.merge(this.constructor(),a);return b.prevObject=this,b.context=this.context,b},each:function(a,b){return o.each(this,a,b)},map:function(a){return this.pushStack(o.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(d.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(0>a?b:0);return this.pushStack(c>=0&&b>c?[this[c]]:[])},end:function(){return this.prevObject||this.constructor(null)},push:f,sort:c.sort,splice:c.splice},o.extend=o.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for("boolean"==typeof g&&(j=g,g=arguments[h]||{},h++),"object"==typeof g||o.isFunction(g)||(g={}),h===i&&(g=this,h--);i>h;h++)if(null!=(a=arguments[h]))for(b in a)c=g[b],d=a[b],g!==d&&(j&&d&&(o.isPlainObject(d)||(e=o.isArray(d)))?(e?(e=!1,f=c&&o.isArray(c)?c:[]):f=c&&o.isPlainObject(c)?c:{},g[b]=o.extend(j,f,d)):void 0!==d&&(g[b]=d));return g},o.extend({expando:"jQuery"+(n+Math.random()).replace(/\D/g,""),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return"function"===o.type(a)},isArray:Array.isArray,isWindow:function(a){return null!=a&&a===a.window},isNumeric:function(a){return a-parseFloat(a)>=0},isPlainObject:function(a){if("object"!==o.type(a)||a.nodeType||o.isWindow(a))return!1;try{if(a.constructor&&!j.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(b){return!1}return!0},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},type:function(a){return null==a?a+"":"object"==typeof a||"function"==typeof a?h[i.call(a)]||"object":typeof a},globalEval:function(a){var b,c=eval;a=o.trim(a),a&&(1===a.indexOf("use strict")?(b=m.createElement("script"),b.text=a,m.head.appendChild(b).parentNode.removeChild(b)):c(a))},camelCase:function(a){return a.replace(p,"ms-").replace(q,r)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,b,c){var d,e=0,f=a.length,g=s(a);if(c){if(g){for(;f>e;e++)if(d=b.apply(a[e],c),d===!1)break}else for(e in a)if(d=b.apply(a[e],c),d===!1)break}else if(g){for(;f>e;e++)if(d=b.call(a[e],e,a[e]),d===!1)break}else for(e in a)if(d=b.call(a[e],e,a[e]),d===!1)break;return a},trim:function(a){return null==a?"":k.call(a)},makeArray:function(a,b){var c=b||[];return null!=a&&(s(Object(a))?o.merge(c,"string"==typeof a?[a]:a):f.call(c,a)),c},inArray:function(a,b,c){return null==b?-1:g.call(b,a,c)},merge:function(a,b){for(var c=+b.length,d=0,e=a.length;c>d;d++)a[e++]=b[d];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;g>f;f++)d=!b(a[f],f),d!==h&&e.push(a[f]);return e},map:function(a,b,c){var d,f=0,g=a.length,h=s(a),i=[];if(h)for(;g>f;f++)d=b(a[f],f,c),null!=d&&i.push(d);else for(f in a)d=b(a[f],f,c),null!=d&&i.push(d);return e.apply([],i)},guid:1,proxy:function(a,b){var c,e,f;return"string"==typeof b&&(c=a[b],b=a,a=c),o.isFunction(a)?(e=d.call(arguments,2),f=function(){return a.apply(b||this,e.concat(d.call(arguments)))},f.guid=a.guid=a.guid||o.guid++,f):void 0},now:Date.now,support:l}),o.each("Boolean Number String Function Array Date RegExp Object Error".split(" "),function(a,b){h["[object "+b+"]"]=b.toLowerCase()});function s(a){var b=a.length,c=o.type(a);return"function"===c||o.isWindow(a)?!1:1===a.nodeType&&b?!0:"array"===c||0===b||"number"==typeof b&&b>0&&b-1 in a}var t=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s="sizzle"+-new Date,t=a.document,u=0,v=0,w=eb(),x=eb(),y=eb(),z=function(a,b){return a===b&&(j=!0),0},A="undefined",B=1<<31,C={}.hasOwnProperty,D=[],E=D.pop,F=D.push,G=D.push,H=D.slice,I=D.indexOf||function(a){for(var b=0,c=this.length;c>b;b++)if(this[b]===a)return b;return-1},J="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",K="[\\x20\\t\\r\\n\\f]",L="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",M=L.replace("w","w#"),N="\\["+K+"*("+L+")"+K+"*(?:([*^$|!~]?=)"+K+"*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|("+M+")|)|)"+K+"*\\]",O=":("+L+")(?:\\(((['\"])((?:\\\\.|[^\\\\])*?)\\3|((?:\\\\.|[^\\\\()[\\]]|"+N.replace(3,8)+")*)|.*)\\)|)",P=new RegExp("^"+K+"+|((?:^|[^\\\\])(?:\\\\.)*)"+K+"+$","g"),Q=new RegExp("^"+K+"*,"+K+"*"),R=new RegExp("^"+K+"*([>+~]|"+K+")"+K+"*"),S=new RegExp("="+K+"*([^\\]'\"]*?)"+K+"*\\]","g"),T=new RegExp(O),U=new RegExp("^"+M+"$"),V={ID:new RegExp("^#("+L+")"),CLASS:new RegExp("^\\.("+L+")"),TAG:new RegExp("^("+L.replace("w","w*")+")"),ATTR:new RegExp("^"+N),PSEUDO:new RegExp("^"+O),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+K+"*(even|odd|(([+-]|)(\\d*)n|)"+K+"*(?:([+-]|)"+K+"*(\\d+)|))"+K+"*\\)|)","i"),bool:new RegExp("^(?:"+J+")$","i"),needsContext:new RegExp("^"+K+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+K+"*((?:-\\d)?\\d*)"+K+"*\\)|)(?=[^-]|$)","i")},W=/^(?:input|select|textarea|button)$/i,X=/^h\d$/i,Y=/^[^{]+\{\s*\[native \w/,Z=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,$=/[+~]/,_=/'|\\/g,ab=new RegExp("\\\\([\\da-f]{1,6}"+K+"?|("+K+")|.)","ig"),bb=function(a,b,c){var d="0x"+b-65536;return d!==d||c?b:0>d?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)};try{G.apply(D=H.call(t.childNodes),t.childNodes),D[t.childNodes.length].nodeType}catch(cb){G={apply:D.length?function(a,b){F.apply(a,H.call(b))}:function(a,b){var c=a.length,d=0;while(a[c++]=b[d++]);a.length=c-1}}}function db(a,b,d,e){var f,g,h,i,j,m,p,q,u,v;if((b?b.ownerDocument||b:t)!==l&&k(b),b=b||l,d=d||[],!a||"string"!=typeof a)return d;if(1!==(i=b.nodeType)&&9!==i)return[];if(n&&!e){if(f=Z.exec(a))if(h=f[1]){if(9===i){if(g=b.getElementById(h),!g||!g.parentNode)return d;if(g.id===h)return d.push(g),d}else if(b.ownerDocument&&(g=b.ownerDocument.getElementById(h))&&r(b,g)&&g.id===h)return d.push(g),d}else{if(f[2])return G.apply(d,b.getElementsByTagName(a)),d;if((h=f[3])&&c.getElementsByClassName&&b.getElementsByClassName)return G.apply(d,b.getElementsByClassName(h)),d}if(c.qsa&&(!o||!o.test(a))){if(q=p=s,u=b,v=9===i&&a,1===i&&"object"!==b.nodeName.toLowerCase()){m=ob(a),(p=b.getAttribute("id"))?q=p.replace(_,"\\$&"):b.setAttribute("id",q),q="[id='"+q+"'] ",j=m.length;while(j--)m[j]=q+pb(m[j]);u=$.test(a)&&mb(b.parentNode)||b,v=m.join(",")}if(v)try{return G.apply(d,u.querySelectorAll(v)),d}catch(w){}finally{p||b.removeAttribute("id")}}}return xb(a.replace(P,"$1"),b,d,e)}function eb(){var a=[];function b(c,e){return a.push(c+" ")>d.cacheLength&&delete b[a.shift()],b[c+" "]=e}return b}function fb(a){return a[s]=!0,a}function gb(a){var b=l.createElement("div");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}function hb(a,b){var c=a.split("|"),e=a.length;while(e--)d.attrHandle[c[e]]=b}function ib(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&(~b.sourceIndex||B)-(~a.sourceIndex||B);if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}function jb(a){return function(b){var c=b.nodeName.toLowerCase();return"input"===c&&b.type===a}}function kb(a){return function(b){var c=b.nodeName.toLowerCase();return("input"===c||"button"===c)&&b.type===a}}function lb(a){return fb(function(b){return b=+b,fb(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function mb(a){return a&&typeof a.getElementsByTagName!==A&&a}c=db.support={},f=db.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return b?"HTML"!==b.nodeName:!1},k=db.setDocument=function(a){var b,e=a?a.ownerDocument||a:t,g=e.defaultView;return e!==l&&9===e.nodeType&&e.documentElement?(l=e,m=e.documentElement,n=!f(e),g&&g!==g.top&&(g.addEventListener?g.addEventListener("unload",function(){k()},!1):g.attachEvent&&g.attachEvent("onunload",function(){k()})),c.attributes=gb(function(a){return a.className="i",!a.getAttribute("className")}),c.getElementsByTagName=gb(function(a){return a.appendChild(e.createComment("")),!a.getElementsByTagName("*").length}),c.getElementsByClassName=Y.test(e.getElementsByClassName)&&gb(function(a){return a.innerHTML="<div class='a'></div><div class='a i'></div>",a.firstChild.className="i",2===a.getElementsByClassName("i").length}),c.getById=gb(function(a){return m.appendChild(a).id=s,!e.getElementsByName||!e.getElementsByName(s).length}),c.getById?(d.find.ID=function(a,b){if(typeof b.getElementById!==A&&n){var c=b.getElementById(a);return c&&c.parentNode?[c]:[]}},d.filter.ID=function(a){var b=a.replace(ab,bb);return function(a){return a.getAttribute("id")===b}}):(delete d.find.ID,d.filter.ID=function(a){var b=a.replace(ab,bb);return function(a){var c=typeof a.getAttributeNode!==A&&a.getAttributeNode("id");return c&&c.value===b}}),d.find.TAG=c.getElementsByTagName?function(a,b){return typeof b.getElementsByTagName!==A?b.getElementsByTagName(a):void 0}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if("*"===a){while(c=f[e++])1===c.nodeType&&d.push(c);return d}return f},d.find.CLASS=c.getElementsByClassName&&function(a,b){return typeof b.getElementsByClassName!==A&&n?b.getElementsByClassName(a):void 0},p=[],o=[],(c.qsa=Y.test(e.querySelectorAll))&&(gb(function(a){a.innerHTML="<select t=''><option selected=''></option></select>",a.querySelectorAll("[t^='']").length&&o.push("[*^$]="+K+"*(?:''|\"\")"),a.querySelectorAll("[selected]").length||o.push("\\["+K+"*(?:value|"+J+")"),a.querySelectorAll(":checked").length||o.push(":checked")}),gb(function(a){var b=e.createElement("input");b.setAttribute("type","hidden"),a.appendChild(b).setAttribute("name","D"),a.querySelectorAll("[name=d]").length&&o.push("name"+K+"*[*^$|!~]?="),a.querySelectorAll(":enabled").length||o.push(":enabled",":disabled"),a.querySelectorAll("*,:x"),o.push(",.*:")})),(c.matchesSelector=Y.test(q=m.webkitMatchesSelector||m.mozMatchesSelector||m.oMatchesSelector||m.msMatchesSelector))&&gb(function(a){c.disconnectedMatch=q.call(a,"div"),q.call(a,"[s!='']:x"),p.push("!=",O)}),o=o.length&&new RegExp(o.join("|")),p=p.length&&new RegExp(p.join("|")),b=Y.test(m.compareDocumentPosition),r=b||Y.test(m.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&&b.parentNode;return a===d||!(!d||1!==d.nodeType||!(c.contains?c.contains(d):a.compareDocumentPosition&&16&a.compareDocumentPosition(d)))}:function(a,b){if(b)while(b=b.parentNode)if(b===a)return!0;return!1},z=b?function(a,b){if(a===b)return j=!0,0;var d=!a.compareDocumentPosition-!b.compareDocumentPosition;return d?d:(d=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&d||!c.sortDetached&&b.compareDocumentPosition(a)===d?a===e||a.ownerDocument===t&&r(t,a)?-1:b===e||b.ownerDocument===t&&r(t,b)?1:i?I.call(i,a)-I.call(i,b):0:4&d?-1:1)}:function(a,b){if(a===b)return j=!0,0;var c,d=0,f=a.parentNode,g=b.parentNode,h=[a],k=[b];if(!f||!g)return a===e?-1:b===e?1:f?-1:g?1:i?I.call(i,a)-I.call(i,b):0;if(f===g)return ib(a,b);c=a;while(c=c.parentNode)h.unshift(c);c=b;while(c=c.parentNode)k.unshift(c);while(h[d]===k[d])d++;return d?ib(h[d],k[d]):h[d]===t?-1:k[d]===t?1:0},e):l},db.matches=function(a,b){return db(a,null,null,b)},db.matchesSelector=function(a,b){if((a.ownerDocument||a)!==l&&k(a),b=b.replace(S,"='$1']"),!(!c.matchesSelector||!n||p&&p.test(b)||o&&o.test(b)))try{var d=q.call(a,b);if(d||c.disconnectedMatch||a.document&&11!==a.document.nodeType)return d}catch(e){}return db(b,l,null,[a]).length>0},db.contains=function(a,b){return(a.ownerDocument||a)!==l&&k(a),r(a,b)},db.attr=function(a,b){(a.ownerDocument||a)!==l&&k(a);var e=d.attrHandle[b.toLowerCase()],f=e&&C.call(d.attrHandle,b.toLowerCase())?e(a,b,!n):void 0;return void 0!==f?f:c.attributes||!n?a.getAttribute(b):(f=a.getAttributeNode(b))&&f.specified?f.value:null},db.error=function(a){throw new Error("Syntax error, unrecognized expression: "+a)},db.uniqueSort=function(a){var b,d=[],e=0,f=0;if(j=!c.detectDuplicates,i=!c.sortStable&&a.slice(0),a.sort(z),j){while(b=a[f++])b===a[f]&&(e=d.push(f));while(e--)a.splice(d[e],1)}return i=null,a},e=db.getText=function(a){var b,c="",d=0,f=a.nodeType;if(f){if(1===f||9===f||11===f){if("string"==typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=e(a)}else if(3===f||4===f)return a.nodeValue}else while(b=a[d++])c+=e(b);return c},d=db.selectors={cacheLength:50,createPseudo:fb,match:V,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(ab,bb),a[3]=(a[4]||a[5]||"").replace(ab,bb),"~="===a[2]&&(a[3]=" "+a[3]+" "),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),"nth"===a[1].slice(0,3)?(a[3]||db.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*("even"===a[3]||"odd"===a[3])),a[5]=+(a[7]+a[8]||"odd"===a[3])):a[3]&&db.error(a[0]),a},PSEUDO:function(a){var b,c=!a[5]&&a[2];return V.CHILD.test(a[0])?null:(a[3]&&void 0!==a[4]?a[2]=a[4]:c&&T.test(c)&&(b=ob(c,!0))&&(b=c.indexOf(")",c.length-b)-c.length)&&(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var b=a.replace(ab,bb).toLowerCase();return"*"===a?function(){return!0}:function(a){return a.nodeName&&a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=w[a+" "];return b||(b=new RegExp("(^|"+K+")"+a+"("+K+"|$)"))&&w(a,function(a){return b.test("string"==typeof a.className&&a.className||typeof a.getAttribute!==A&&a.getAttribute("class")||"")})},ATTR:function(a,b,c){return function(d){var e=db.attr(d,a);return null==e?"!="===b:b?(e+="","="===b?e===c:"!="===b?e!==c:"^="===b?c&&0===e.indexOf(c):"*="===b?c&&e.indexOf(c)>-1:"$="===b?c&&e.slice(-c.length)===c:"~="===b?(" "+e+" ").indexOf(c)>-1:"|="===b?e===c||e.slice(0,c.length+1)===c+"-":!1):!0}},CHILD:function(a,b,c,d,e){var f="nth"!==a.slice(0,3),g="last"!==a.slice(-4),h="of-type"===b;return 1===d&&0===e?function(a){return!!a.parentNode}:function(b,c,i){var j,k,l,m,n,o,p=f!==g?"nextSibling":"previousSibling",q=b.parentNode,r=h&&b.nodeName.toLowerCase(),t=!i&&!h;if(q){if(f){while(p){l=b;while(l=l[p])if(h?l.nodeName.toLowerCase()===r:1===l.nodeType)return!1;o=p="only"===a&&!o&&"nextSibling"}return!0}if(o=[g?q.firstChild:q.lastChild],g&&t){k=q[s]||(q[s]={}),j=k[a]||[],n=j[0]===u&&j[1],m=j[0]===u&&j[2],l=n&&q.childNodes[n];while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if(1===l.nodeType&&++m&&l===b){k[a]=[u,n,m];break}}else if(t&&(j=(b[s]||(b[s]={}))[a])&&j[0]===u)m=j[1];else while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if((h?l.nodeName.toLowerCase()===r:1===l.nodeType)&&++m&&(t&&((l[s]||(l[s]={}))[a]=[u,m]),l===b))break;return m-=e,m===d||m%d===0&&m/d>=0}}},PSEUDO:function(a,b){var c,e=d.pseudos[a]||d.setFilters[a.toLowerCase()]||db.error("unsupported pseudo: "+a);return e[s]?e(b):e.length>1?(c=[a,a,"",b],d.setFilters.hasOwnProperty(a.toLowerCase())?fb(function(a,c){var d,f=e(a,b),g=f.length;while(g--)d=I.call(a,f[g]),a[d]=!(c[d]=f[g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:fb(function(a){var b=[],c=[],d=g(a.replace(P,"$1"));return d[s]?fb(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)(f=g[h])&&(a[h]=!(b[h]=f))}):function(a,e,f){return b[0]=a,d(b,null,f,c),!c.pop()}}),has:fb(function(a){return function(b){return db(a,b).length>0}}),contains:fb(function(a){return function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)>-1}}),lang:fb(function(a){return U.test(a||"")||db.error("unsupported lang: "+a),a=a.replace(ab,bb).toLowerCase(),function(b){var c;do if(c=n?b.lang:b.getAttribute("xml:lang")||b.getAttribute("lang"))return c=c.toLowerCase(),c===a||0===c.indexOf(a+"-");while((b=b.parentNode)&&1===b.nodeType);return!1}}),target:function(b){var c=a.location&&a.location.hash;return c&&c.slice(1)===b.id},root:function(a){return a===m},focus:function(a){return a===l.activeElement&&(!l.hasFocus||l.hasFocus())&&!!(a.type||a.href||~a.tabIndex)},enabled:function(a){return a.disabled===!1},disabled:function(a){return a.disabled===!0},checked:function(a){var b=a.nodeName.toLowerCase();return"input"===b&&!!a.checked||"option"===b&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(a.nodeType<6)return!1;return!0},parent:function(a){return!d.pseudos.empty(a)},header:function(a){return X.test(a.nodeName)},input:function(a){return W.test(a.nodeName)},button:function(a){var b=a.nodeName.toLowerCase();return"input"===b&&"button"===a.type||"button"===b},text:function(a){var b;return"input"===a.nodeName.toLowerCase()&&"text"===a.type&&(null==(b=a.getAttribute("type"))||"text"===b.toLowerCase())},first:lb(function(){return[0]}),last:lb(function(a,b){return[b-1]}),eq:lb(function(a,b,c){return[0>c?c+b:c]}),even:lb(function(a,b){for(var c=0;b>c;c+=2)a.push(c);return a}),odd:lb(function(a,b){for(var c=1;b>c;c+=2)a.push(c);return a}),lt:lb(function(a,b,c){for(var d=0>c?c+b:c;--d>=0;)a.push(d);return a}),gt:lb(function(a,b,c){for(var d=0>c?c+b:c;++d<b;)a.push(d);return a})}},d.pseudos.nth=d.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})d.pseudos[b]=jb(b);for(b in{submit:!0,reset:!0})d.pseudos[b]=kb(b);function nb(){}nb.prototype=d.filters=d.pseudos,d.setFilters=new nb;function ob(a,b){var c,e,f,g,h,i,j,k=x[a+" "];if(k)return b?0:k.slice(0);h=a,i=[],j=d.preFilter;while(h){(!c||(e=Q.exec(h)))&&(e&&(h=h.slice(e[0].length)||h),i.push(f=[])),c=!1,(e=R.exec(h))&&(c=e.shift(),f.push({value:c,type:e[0].replace(P," ")}),h=h.slice(c.length));for(g in d.filter)!(e=V[g].exec(h))||j[g]&&!(e=j[g](e))||(c=e.shift(),f.push({value:c,type:g,matches:e}),h=h.slice(c.length));if(!c)break}return b?h.length:h?db.error(a):x(a,i).slice(0)}function pb(a){for(var b=0,c=a.length,d="";c>b;b++)d+=a[b].value;return d}function qb(a,b,c){var d=b.dir,e=c&&"parentNode"===d,f=v++;return b.first?function(b,c,f){while(b=b[d])if(1===b.nodeType||e)return a(b,c,f)}:function(b,c,g){var h,i,j=[u,f];if(g){while(b=b[d])if((1===b.nodeType||e)&&a(b,c,g))return!0}else while(b=b[d])if(1===b.nodeType||e){if(i=b[s]||(b[s]={}),(h=i[d])&&h[0]===u&&h[1]===f)return j[2]=h[2];if(i[d]=j,j[2]=a(b,c,g))return!0}}}function rb(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function sb(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i>h;h++)(f=a[h])&&(!c||c(f,d,e))&&(g.push(f),j&&b.push(h));return g}function tb(a,b,c,d,e,f){return d&&!d[s]&&(d=tb(d)),e&&!e[s]&&(e=tb(e,f)),fb(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||wb(b||"*",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:sb(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=sb(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?I.call(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=sb(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):G.apply(g,r)})}function ub(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],i=g||d.relative[" "],j=g?1:0,k=qb(function(a){return a===b},i,!0),l=qb(function(a){return I.call(b,a)>-1},i,!0),m=[function(a,c,d){return!g&&(d||c!==h)||((b=c).nodeType?k(a,c,d):l(a,c,d))}];f>j;j++)if(c=d.relative[a[j].type])m=[qb(rb(m),c)];else{if(c=d.filter[a[j].type].apply(null,a[j].matches),c[s]){for(e=++j;f>e;e++)if(d.relative[a[e].type])break;return tb(j>1&&rb(m),j>1&&pb(a.slice(0,j-1).concat({value:" "===a[j-2].type?"*":""})).replace(P,"$1"),c,e>j&&ub(a.slice(j,e)),f>e&&ub(a=a.slice(e)),f>e&&pb(a))}m.push(c)}return rb(m)}function vb(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,i,j,k){var m,n,o,p=0,q="0",r=f&&[],s=[],t=h,v=f||e&&d.find.TAG("*",k),w=u+=null==t?1:Math.random()||.1,x=v.length;for(k&&(h=g!==l&&g);q!==x&&null!=(m=v[q]);q++){if(e&&m){n=0;while(o=a[n++])if(o(m,g,i)){j.push(m);break}k&&(u=w)}c&&((m=!o&&m)&&p--,f&&r.push(m))}if(p+=q,c&&q!==p){n=0;while(o=b[n++])o(r,s,g,i);if(f){if(p>0)while(q--)r[q]||s[q]||(s[q]=E.call(j));s=sb(s)}G.apply(j,s),k&&!f&&s.length>0&&p+b.length>1&&db.uniqueSort(j)}return k&&(u=w,h=t),r};return c?fb(f):f}g=db.compile=function(a,b){var c,d=[],e=[],f=y[a+" "];if(!f){b||(b=ob(a)),c=b.length;while(c--)f=ub(b[c]),f[s]?d.push(f):e.push(f);f=y(a,vb(e,d))}return f};function wb(a,b,c){for(var d=0,e=b.length;e>d;d++)db(a,b[d],c);return c}function xb(a,b,e,f){var h,i,j,k,l,m=ob(a);if(!f&&1===m.length){if(i=m[0]=m[0].slice(0),i.length>2&&"ID"===(j=i[0]).type&&c.getById&&9===b.nodeType&&n&&d.relative[i[1].type]){if(b=(d.find.ID(j.matches[0].replace(ab,bb),b)||[])[0],!b)return e;a=a.slice(i.shift().value.length)}h=V.needsContext.test(a)?0:i.length;while(h--){if(j=i[h],d.relative[k=j.type])break;if((l=d.find[k])&&(f=l(j.matches[0].replace(ab,bb),$.test(i[0].type)&&mb(b.parentNode)||b))){if(i.splice(h,1),a=f.length&&pb(i),!a)return G.apply(e,f),e;break}}}return g(a,m)(f,b,!n,e,$.test(a)&&mb(b.parentNode)||b),e}return c.sortStable=s.split("").sort(z).join("")===s,c.detectDuplicates=!!j,k(),c.sortDetached=gb(function(a){return 1&a.compareDocumentPosition(l.createElement("div"))}),gb(function(a){return a.innerHTML="<a href='#'></a>","#"===a.firstChild.getAttribute("href")})||hb("type|href|height|width",function(a,b,c){return c?void 0:a.getAttribute(b,"type"===b.toLowerCase()?1:2)}),c.attributes&&gb(function(a){return a.innerHTML="<input/>",a.firstChild.setAttribute("value",""),""===a.firstChild.getAttribute("value")})||hb("value",function(a,b,c){return c||"input"!==a.nodeName.toLowerCase()?void 0:a.defaultValue}),gb(function(a){return null==a.getAttribute("disabled")})||hb(J,function(a,b,c){var d;return c?void 0:a[b]===!0?b.toLowerCase():(d=a.getAttributeNode(b))&&d.specified?d.value:null}),db}(a);o.find=t,o.expr=t.selectors,o.expr[":"]=o.expr.pseudos,o.unique=t.uniqueSort,o.text=t.getText,o.isXMLDoc=t.isXML,o.contains=t.contains;var u=o.expr.match.needsContext,v=/^<(\w+)\s*\/?>(?:<\/\1>|)$/,w=/^.[^:#\[\.,]*$/;function x(a,b,c){if(o.isFunction(b))return o.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return o.grep(a,function(a){return a===b!==c});if("string"==typeof b){if(w.test(b))return o.filter(b,a,c);b=o.filter(b,a)}return o.grep(a,function(a){return g.call(b,a)>=0!==c})}o.filter=function(a,b,c){var d=b[0];return c&&(a=":not("+a+")"),1===b.length&&1===d.nodeType?o.find.matchesSelector(d,a)?[d]:[]:o.find.matches(a,o.grep(b,function(a){return 1===a.nodeType}))},o.fn.extend({find:function(a){var b,c=this.length,d=[],e=this;if("string"!=typeof a)return this.pushStack(o(a).filter(function(){for(b=0;c>b;b++)if(o.contains(e[b],this))return!0}));for(b=0;c>b;b++)o.find(a,e[b],d);return d=this.pushStack(c>1?o.unique(d):d),d.selector=this.selector?this.selector+" "+a:a,d},filter:function(a){return this.pushStack(x(this,a||[],!1))},not:function(a){return this.pushStack(x(this,a||[],!0))},is:function(a){return!!x(this,"string"==typeof a&&u.test(a)?o(a):a||[],!1).length}});var y,z=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,A=o.fn.init=function(a,b){var c,d;if(!a)return this;if("string"==typeof a){if(c="<"===a[0]&&">"===a[a.length-1]&&a.length>=3?[null,a,null]:z.exec(a),!c||!c[1]&&b)return!b||b.jquery?(b||y).find(a):this.constructor(b).find(a);if(c[1]){if(b=b instanceof o?b[0]:b,o.merge(this,o.parseHTML(c[1],b&&b.nodeType?b.ownerDocument||b:m,!0)),v.test(c[1])&&o.isPlainObject(b))for(c in b)o.isFunction(this[c])?this[c](b[c]):this.attr(c,b[c]);return this}return d=m.getElementById(c[2]),d&&d.parentNode&&(this.length=1,this[0]=d),this.context=m,this.selector=a,this}return a.nodeType?(this.context=this[0]=a,this.length=1,this):o.isFunction(a)?"undefined"!=typeof y.ready?y.ready(a):a(o):(void 0!==a.selector&&(this.selector=a.selector,this.context=a.context),o.makeArray(a,this))};A.prototype=o.fn,y=o(m);var B=/^(?:parents|prev(?:Until|All))/,C={children:!0,contents:!0,next:!0,prev:!0};o.extend({dir:function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&o(a).is(c))break;d.push(a)}return d},sibling:function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c}}),o.fn.extend({has:function(a){var b=o(a,this),c=b.length;return this.filter(function(){for(var a=0;c>a;a++)if(o.contains(this,b[a]))return!0})},closest:function(a,b){for(var c,d=0,e=this.length,f=[],g=u.test(a)||"string"!=typeof a?o(a,b||this.context):0;e>d;d++)for(c=this[d];c&&c!==b;c=c.parentNode)if(c.nodeType<11&&(g?g.index(c)>-1:1===c.nodeType&&o.find.matchesSelector(c,a))){f.push(c);break}return this.pushStack(f.length>1?o.unique(f):f)},index:function(a){return a?"string"==typeof a?g.call(o(a),this[0]):g.call(this,a.jquery?a[0]:a):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(o.unique(o.merge(this.get(),o(a,b))))},addBack:function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}});function D(a,b){while((a=a[b])&&1!==a.nodeType);return a}o.each({parent:function(a){var b=a.parentNode;return b&&11!==b.nodeType?b:null},parents:function(a){return o.dir(a,"parentNode")},parentsUntil:function(a,b,c){return o.dir(a,"parentNode",c)},next:function(a){return D(a,"nextSibling")},prev:function(a){return D(a,"previousSibling")},nextAll:function(a){return o.dir(a,"nextSibling")},prevAll:function(a){return o.dir(a,"previousSibling")},nextUntil:function(a,b,c){return o.dir(a,"nextSibling",c)},prevUntil:function(a,b,c){return o.dir(a,"previousSibling",c)},siblings:function(a){return o.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return o.sibling(a.firstChild)},contents:function(a){return a.contentDocument||o.merge([],a.childNodes)}},function(a,b){o.fn[a]=function(c,d){var e=o.map(this,b,c);return"Until"!==a.slice(-5)&&(d=c),d&&"string"==typeof d&&(e=o.filter(d,e)),this.length>1&&(C[a]||o.unique(e),B.test(a)&&e.reverse()),this.pushStack(e)}});var E=/\S+/g,F={};function G(a){var b=F[a]={};return o.each(a.match(E)||[],function(a,c){b[c]=!0}),b}o.Callbacks=function(a){a="string"==typeof a?F[a]||G(a):o.extend({},a);var b,c,d,e,f,g,h=[],i=!a.once&&[],j=function(l){for(b=a.memory&&l,c=!0,g=e||0,e=0,f=h.length,d=!0;h&&f>g;g++)if(h[g].apply(l[0],l[1])===!1&&a.stopOnFalse){b=!1;break}d=!1,h&&(i?i.length&&j(i.shift()):b?h=[]:k.disable())},k={add:function(){if(h){var c=h.length;!function g(b){o.each(b,function(b,c){var d=o.type(c);"function"===d?a.unique&&k.has(c)||h.push(c):c&&c.length&&"string"!==d&&g(c)})}(arguments),d?f=h.length:b&&(e=c,j(b))}return this},remove:function(){return h&&o.each(arguments,function(a,b){var c;while((c=o.inArray(b,h,c))>-1)h.splice(c,1),d&&(f>=c&&f--,g>=c&&g--)}),this},has:function(a){return a?o.inArray(a,h)>-1:!(!h||!h.length)},empty:function(){return h=[],f=0,this},disable:function(){return h=i=b=void 0,this},disabled:function(){return!h},lock:function(){return i=void 0,b||k.disable(),this},locked:function(){return!i},fireWith:function(a,b){return!h||c&&!i||(b=b||[],b=[a,b.slice?b.slice():b],d?i.push(b):j(b)),this},fire:function(){return k.fireWith(this,arguments),this},fired:function(){return!!c}};return k},o.extend({Deferred:function(a){var b=[["resolve","done",o.Callbacks("once memory"),"resolved"],["reject","fail",o.Callbacks("once memory"),"rejected"],["notify","progress",o.Callbacks("memory")]],c="pending",d={state:function(){return c},always:function(){return e.done(arguments).fail(arguments),this},then:function(){var a=arguments;return o.Deferred(function(c){o.each(b,function(b,f){var g=o.isFunction(a[b])&&a[b];e[f[1]](function(){var a=g&&g.apply(this,arguments);a&&o.isFunction(a.promise)?a.promise().done(c.resolve).fail(c.reject).progress(c.notify):c[f[0]+"With"](this===d?c.promise():this,g?[a]:arguments)})}),a=null}).promise()},promise:function(a){return null!=a?o.extend(a,d):d}},e={};return d.pipe=d.then,o.each(b,function(a,f){var g=f[2],h=f[3];d[f[1]]=g.add,h&&g.add(function(){c=h},b[1^a][2].disable,b[2][2].lock),e[f[0]]=function(){return e[f[0]+"With"](this===e?d:this,arguments),this},e[f[0]+"With"]=g.fireWith}),d.promise(e),a&&a.call(e,e),e},when:function(a){var b=0,c=d.call(arguments),e=c.length,f=1!==e||a&&o.isFunction(a.promise)?e:0,g=1===f?a:o.Deferred(),h=function(a,b,c){return function(e){b[a]=this,c[a]=arguments.length>1?d.call(arguments):e,c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c)}},i,j,k;if(e>1)for(i=new Array(e),j=new Array(e),k=new Array(e);e>b;b++)c[b]&&o.isFunction(c[b].promise)?c[b].promise().done(h(b,k,c)).fail(g.reject).progress(h(b,j,i)):--f;return f||g.resolveWith(k,c),g.promise()}});var H;o.fn.ready=function(a){return o.ready.promise().done(a),this},o.extend({isReady:!1,readyWait:1,holdReady:function(a){a?o.readyWait++:o.ready(!0)},ready:function(a){(a===!0?--o.readyWait:o.isReady)||(o.isReady=!0,a!==!0&&--o.readyWait>0||(H.resolveWith(m,[o]),o.fn.trigger&&o(m).trigger("ready").off("ready")))}});function I(){m.removeEventListener("DOMContentLoaded",I,!1),a.removeEventListener("load",I,!1),o.ready()}o.ready.promise=function(b){return H||(H=o.Deferred(),"complete"===m.readyState?setTimeout(o.ready):(m.addEventListener("DOMContentLoaded",I,!1),a.addEventListener("load",I,!1))),H.promise(b)},o.ready.promise();var J=o.access=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if("object"===o.type(c)){e=!0;for(h in c)o.access(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,o.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(o(a),c)})),b))for(;i>h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f};o.acceptData=function(a){return 1===a.nodeType||9===a.nodeType||!+a.nodeType};function K(){Object.defineProperty(this.cache={},0,{get:function(){return{}}}),this.expando=o.expando+Math.random()}K.uid=1,K.accepts=o.acceptData,K.prototype={key:function(a){if(!K.accepts(a))return 0;var b={},c=a[this.expando];if(!c){c=K.uid++;try{b[this.expando]={value:c},Object.defineProperties(a,b)}catch(d){b[this.expando]=c,o.extend(a,b)}}return this.cache[c]||(this.cache[c]={}),c},set:function(a,b,c){var d,e=this.key(a),f=this.cache[e];if("string"==typeof b)f[b]=c;else if(o.isEmptyObject(f))o.extend(this.cache[e],b);else for(d in b)f[d]=b[d];return f},get:function(a,b){var c=this.cache[this.key(a)];return void 0===b?c:c[b]},access:function(a,b,c){var d;return void 0===b||b&&"string"==typeof b&&void 0===c?(d=this.get(a,b),void 0!==d?d:this.get(a,o.camelCase(b))):(this.set(a,b,c),void 0!==c?c:b)},remove:function(a,b){var c,d,e,f=this.key(a),g=this.cache[f];if(void 0===b)this.cache[f]={};else{o.isArray(b)?d=b.concat(b.map(o.camelCase)):(e=o.camelCase(b),b in g?d=[b,e]:(d=e,d=d in g?[d]:d.match(E)||[])),c=d.length;while(c--)delete g[d[c]]}},hasData:function(a){return!o.isEmptyObject(this.cache[a[this.expando]]||{})},discard:function(a){a[this.expando]&&delete this.cache[a[this.expando]]}};var L=new K,M=new K,N=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,O=/([A-Z])/g;function P(a,b,c){var d;if(void 0===c&&1===a.nodeType)if(d="data-"+b.replace(O,"-$1").toLowerCase(),c=a.getAttribute(d),"string"==typeof c){try{c="true"===c?!0:"false"===c?!1:"null"===c?null:+c+""===c?+c:N.test(c)?o.parseJSON(c):c}catch(e){}M.set(a,b,c)}else c=void 0;return c}o.extend({hasData:function(a){return M.hasData(a)||L.hasData(a)},data:function(a,b,c){return M.access(a,b,c)},removeData:function(a,b){M.remove(a,b)},_data:function(a,b,c){return L.access(a,b,c)},_removeData:function(a,b){L.remove(a,b)}}),o.fn.extend({data:function(a,b){var c,d,e,f=this[0],g=f&&f.attributes;if(void 0===a){if(this.length&&(e=M.get(f),1===f.nodeType&&!L.get(f,"hasDataAttrs"))){c=g.length;
while(c--)d=g[c].name,0===d.indexOf("data-")&&(d=o.camelCase(d.slice(5)),P(f,d,e[d]));L.set(f,"hasDataAttrs",!0)}return e}return"object"==typeof a?this.each(function(){M.set(this,a)}):J(this,function(b){var c,d=o.camelCase(a);if(f&&void 0===b){if(c=M.get(f,a),void 0!==c)return c;if(c=M.get(f,d),void 0!==c)return c;if(c=P(f,d,void 0),void 0!==c)return c}else this.each(function(){var c=M.get(this,d);M.set(this,d,b),-1!==a.indexOf("-")&&void 0!==c&&M.set(this,a,b)})},null,b,arguments.length>1,null,!0)},removeData:function(a){return this.each(function(){M.remove(this,a)})}}),o.extend({queue:function(a,b,c){var d;return a?(b=(b||"fx")+"queue",d=L.get(a,b),c&&(!d||o.isArray(c)?d=L.access(a,b,o.makeArray(c)):d.push(c)),d||[]):void 0},dequeue:function(a,b){b=b||"fx";var c=o.queue(a,b),d=c.length,e=c.shift(),f=o._queueHooks(a,b),g=function(){o.dequeue(a,b)};"inprogress"===e&&(e=c.shift(),d--),e&&("fx"===b&&c.unshift("inprogress"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+"queueHooks";return L.get(a,c)||L.access(a,c,{empty:o.Callbacks("once memory").add(function(){L.remove(a,[b+"queue",c])})})}}),o.fn.extend({queue:function(a,b){var c=2;return"string"!=typeof a&&(b=a,a="fx",c--),arguments.length<c?o.queue(this[0],a):void 0===b?this:this.each(function(){var c=o.queue(this,a,b);o._queueHooks(this,a),"fx"===a&&"inprogress"!==c[0]&&o.dequeue(this,a)})},dequeue:function(a){return this.each(function(){o.dequeue(this,a)})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,b){var c,d=1,e=o.Deferred(),f=this,g=this.length,h=function(){--d||e.resolveWith(f,[f])};"string"!=typeof a&&(b=a,a=void 0),a=a||"fx";while(g--)c=L.get(f[g],a+"queueHooks"),c&&c.empty&&(d++,c.empty.add(h));return h(),e.promise(b)}});var Q=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,R=["Top","Right","Bottom","Left"],S=function(a,b){return a=b||a,"none"===o.css(a,"display")||!o.contains(a.ownerDocument,a)},T=/^(?:checkbox|radio)$/i;!function(){var a=m.createDocumentFragment(),b=a.appendChild(m.createElement("div"));b.innerHTML="<input type='radio' checked='checked' name='t'/>",l.checkClone=b.cloneNode(!0).cloneNode(!0).lastChild.checked,b.innerHTML="<textarea>x</textarea>",l.noCloneChecked=!!b.cloneNode(!0).lastChild.defaultValue}();var U="undefined";l.focusinBubbles="onfocusin"in a;var V=/^key/,W=/^(?:mouse|contextmenu)|click/,X=/^(?:focusinfocus|focusoutblur)$/,Y=/^([^.]*)(?:\.(.+)|)$/;function Z(){return!0}function $(){return!1}function _(){try{return m.activeElement}catch(a){}}o.event={global:{},add:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,n,p,q,r=L.get(a);if(r){c.handler&&(f=c,c=f.handler,e=f.selector),c.guid||(c.guid=o.guid++),(i=r.events)||(i=r.events={}),(g=r.handle)||(g=r.handle=function(b){return typeof o!==U&&o.event.triggered!==b.type?o.event.dispatch.apply(a,arguments):void 0}),b=(b||"").match(E)||[""],j=b.length;while(j--)h=Y.exec(b[j])||[],n=q=h[1],p=(h[2]||"").split(".").sort(),n&&(l=o.event.special[n]||{},n=(e?l.delegateType:l.bindType)||n,l=o.event.special[n]||{},k=o.extend({type:n,origType:q,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&&o.expr.match.needsContext.test(e),namespace:p.join(".")},f),(m=i[n])||(m=i[n]=[],m.delegateCount=0,l.setup&&l.setup.call(a,d,p,g)!==!1||a.addEventListener&&a.addEventListener(n,g,!1)),l.add&&(l.add.call(a,k),k.handler.guid||(k.handler.guid=c.guid)),e?m.splice(m.delegateCount++,0,k):m.push(k),o.event.global[n]=!0)}},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,n,p,q,r=L.hasData(a)&&L.get(a);if(r&&(i=r.events)){b=(b||"").match(E)||[""],j=b.length;while(j--)if(h=Y.exec(b[j])||[],n=q=h[1],p=(h[2]||"").split(".").sort(),n){l=o.event.special[n]||{},n=(d?l.delegateType:l.bindType)||n,m=i[n]||[],h=h[2]&&new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"),g=f=m.length;while(f--)k=m[f],!e&&q!==k.origType||c&&c.guid!==k.guid||h&&!h.test(k.namespace)||d&&d!==k.selector&&("**"!==d||!k.selector)||(m.splice(f,1),k.selector&&m.delegateCount--,l.remove&&l.remove.call(a,k));g&&!m.length&&(l.teardown&&l.teardown.call(a,p,r.handle)!==!1||o.removeEvent(a,n,r.handle),delete i[n])}else for(n in i)o.event.remove(a,n+b[j],c,d,!0);o.isEmptyObject(i)&&(delete r.handle,L.remove(a,"events"))}},trigger:function(b,c,d,e){var f,g,h,i,k,l,n,p=[d||m],q=j.call(b,"type")?b.type:b,r=j.call(b,"namespace")?b.namespace.split("."):[];if(g=h=d=d||m,3!==d.nodeType&&8!==d.nodeType&&!X.test(q+o.event.triggered)&&(q.indexOf(".")>=0&&(r=q.split("."),q=r.shift(),r.sort()),k=q.indexOf(":")<0&&"on"+q,b=b[o.expando]?b:new o.Event(q,"object"==typeof b&&b),b.isTrigger=e?2:3,b.namespace=r.join("."),b.namespace_re=b.namespace?new RegExp("(^|\\.)"+r.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,b.result=void 0,b.target||(b.target=d),c=null==c?[b]:o.makeArray(c,[b]),n=o.event.special[q]||{},e||!n.trigger||n.trigger.apply(d,c)!==!1)){if(!e&&!n.noBubble&&!o.isWindow(d)){for(i=n.delegateType||q,X.test(i+q)||(g=g.parentNode);g;g=g.parentNode)p.push(g),h=g;h===(d.ownerDocument||m)&&p.push(h.defaultView||h.parentWindow||a)}f=0;while((g=p[f++])&&!b.isPropagationStopped())b.type=f>1?i:n.bindType||q,l=(L.get(g,"events")||{})[b.type]&&L.get(g,"handle"),l&&l.apply(g,c),l=k&&g[k],l&&l.apply&&o.acceptData(g)&&(b.result=l.apply(g,c),b.result===!1&&b.preventDefault());return b.type=q,e||b.isDefaultPrevented()||n._default&&n._default.apply(p.pop(),c)!==!1||!o.acceptData(d)||k&&o.isFunction(d[q])&&!o.isWindow(d)&&(h=d[k],h&&(d[k]=null),o.event.triggered=q,d[q](),o.event.triggered=void 0,h&&(d[k]=h)),b.result}},dispatch:function(a){a=o.event.fix(a);var b,c,e,f,g,h=[],i=d.call(arguments),j=(L.get(this,"events")||{})[a.type]||[],k=o.event.special[a.type]||{};if(i[0]=a,a.delegateTarget=this,!k.preDispatch||k.preDispatch.call(this,a)!==!1){h=o.event.handlers.call(this,a,j),b=0;while((f=h[b++])&&!a.isPropagationStopped()){a.currentTarget=f.elem,c=0;while((g=f.handlers[c++])&&!a.isImmediatePropagationStopped())(!a.namespace_re||a.namespace_re.test(g.namespace))&&(a.handleObj=g,a.data=g.data,e=((o.event.special[g.origType]||{}).handle||g.handler).apply(f.elem,i),void 0!==e&&(a.result=e)===!1&&(a.preventDefault(),a.stopPropagation()))}return k.postDispatch&&k.postDispatch.call(this,a),a.result}},handlers:function(a,b){var c,d,e,f,g=[],h=b.delegateCount,i=a.target;if(h&&i.nodeType&&(!a.button||"click"!==a.type))for(;i!==this;i=i.parentNode||this)if(i.disabled!==!0||"click"!==a.type){for(d=[],c=0;h>c;c++)f=b[c],e=f.selector+" ",void 0===d[e]&&(d[e]=f.needsContext?o(e,this).index(i)>=0:o.find(e,this,null,[i]).length),d[e]&&d.push(f);d.length&&g.push({elem:i,handlers:d})}return h<b.length&&g.push({elem:this,handlers:b.slice(h)}),g},props:"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(a,b){return null==a.which&&(a.which=null!=b.charCode?b.charCode:b.keyCode),a}},mouseHooks:{props:"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(a,b){var c,d,e,f=b.button;return null==a.pageX&&null!=b.clientX&&(c=a.target.ownerDocument||m,d=c.documentElement,e=c.body,a.pageX=b.clientX+(d&&d.scrollLeft||e&&e.scrollLeft||0)-(d&&d.clientLeft||e&&e.clientLeft||0),a.pageY=b.clientY+(d&&d.scrollTop||e&&e.scrollTop||0)-(d&&d.clientTop||e&&e.clientTop||0)),a.which||void 0===f||(a.which=1&f?1:2&f?3:4&f?2:0),a}},fix:function(a){if(a[o.expando])return a;var b,c,d,e=a.type,f=a,g=this.fixHooks[e];g||(this.fixHooks[e]=g=W.test(e)?this.mouseHooks:V.test(e)?this.keyHooks:{}),d=g.props?this.props.concat(g.props):this.props,a=new o.Event(f),b=d.length;while(b--)c=d[b],a[c]=f[c];return a.target||(a.target=m),3===a.target.nodeType&&(a.target=a.target.parentNode),g.filter?g.filter(a,f):a},special:{load:{noBubble:!0},focus:{trigger:function(){return this!==_()&&this.focus?(this.focus(),!1):void 0},delegateType:"focusin"},blur:{trigger:function(){return this===_()&&this.blur?(this.blur(),!1):void 0},delegateType:"focusout"},click:{trigger:function(){return"checkbox"===this.type&&this.click&&o.nodeName(this,"input")?(this.click(),!1):void 0},_default:function(a){return o.nodeName(a.target,"a")}},beforeunload:{postDispatch:function(a){void 0!==a.result&&(a.originalEvent.returnValue=a.result)}}},simulate:function(a,b,c,d){var e=o.extend(new o.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?o.event.trigger(e,null,b):o.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefault()}},o.removeEvent=function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)},o.Event=function(a,b){return this instanceof o.Event?(a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||void 0===a.defaultPrevented&&a.getPreventDefault&&a.getPreventDefault()?Z:$):this.type=a,b&&o.extend(this,b),this.timeStamp=a&&a.timeStamp||o.now(),void(this[o.expando]=!0)):new o.Event(a,b)},o.Event.prototype={isDefaultPrevented:$,isPropagationStopped:$,isImmediatePropagationStopped:$,preventDefault:function(){var a=this.originalEvent;this.isDefaultPrevented=Z,a&&a.preventDefault&&a.preventDefault()},stopPropagation:function(){var a=this.originalEvent;this.isPropagationStopped=Z,a&&a.stopPropagation&&a.stopPropagation()},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=Z,this.stopPropagation()}},o.each({mouseenter:"mouseover",mouseleave:"mouseout"},function(a,b){o.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj;return(!e||e!==d&&!o.contains(d,e))&&(a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b),c}}}),l.focusinBubbles||o.each({focus:"focusin",blur:"focusout"},function(a,b){var c=function(a){o.event.simulate(b,a.target,o.event.fix(a),!0)};o.event.special[b]={setup:function(){var d=this.ownerDocument||this,e=L.access(d,b);e||d.addEventListener(a,c,!0),L.access(d,b,(e||0)+1)},teardown:function(){var d=this.ownerDocument||this,e=L.access(d,b)-1;e?L.access(d,b,e):(d.removeEventListener(a,c,!0),L.remove(d,b))}}}),o.fn.extend({on:function(a,b,c,d,e){var f,g;if("object"==typeof a){"string"!=typeof b&&(c=c||b,b=void 0);for(g in a)this.on(g,b,c,a[g],e);return this}if(null==c&&null==d?(d=b,c=b=void 0):null==d&&("string"==typeof b?(d=c,c=void 0):(d=c,c=b,b=void 0)),d===!1)d=$;else if(!d)return this;return 1===e&&(f=d,d=function(a){return o().off(a),f.apply(this,arguments)},d.guid=f.guid||(f.guid=o.guid++)),this.each(function(){o.event.add(this,a,d,c,b)})},one:function(a,b,c,d){return this.on(a,b,c,d,1)},off:function(a,b,c){var d,e;if(a&&a.preventDefault&&a.handleObj)return d=a.handleObj,o(a.delegateTarget).off(d.namespace?d.origType+"."+d.namespace:d.origType,d.selector,d.handler),this;if("object"==typeof a){for(e in a)this.off(e,b,a[e]);return this}return(b===!1||"function"==typeof b)&&(c=b,b=void 0),c===!1&&(c=$),this.each(function(){o.event.remove(this,a,c,b)})},trigger:function(a,b){return this.each(function(){o.event.trigger(a,b,this)})},triggerHandler:function(a,b){var c=this[0];return c?o.event.trigger(a,b,c,!0):void 0}});var ab=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,bb=/<([\w:]+)/,cb=/<|&#?\w+;/,db=/<(?:script|style|link)/i,eb=/checked\s*(?:[^=]|=\s*.checked.)/i,fb=/^$|\/(?:java|ecma)script/i,gb=/^true\/(.*)/,hb=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,ib={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};ib.optgroup=ib.option,ib.tbody=ib.tfoot=ib.colgroup=ib.caption=ib.thead,ib.th=ib.td;function jb(a,b){return o.nodeName(a,"table")&&o.nodeName(11!==b.nodeType?b:b.firstChild,"tr")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function kb(a){return a.type=(null!==a.getAttribute("type"))+"/"+a.type,a}function lb(a){var b=gb.exec(a.type);return b?a.type=b[1]:a.removeAttribute("type"),a}function mb(a,b){for(var c=0,d=a.length;d>c;c++)L.set(a[c],"globalEval",!b||L.get(b[c],"globalEval"))}function nb(a,b){var c,d,e,f,g,h,i,j;if(1===b.nodeType){if(L.hasData(a)&&(f=L.access(a),g=L.set(b,f),j=f.events)){delete g.handle,g.events={};for(e in j)for(c=0,d=j[e].length;d>c;c++)o.event.add(b,e,j[e][c])}M.hasData(a)&&(h=M.access(a),i=o.extend({},h),M.set(b,i))}}function ob(a,b){var c=a.getElementsByTagName?a.getElementsByTagName(b||"*"):a.querySelectorAll?a.querySelectorAll(b||"*"):[];return void 0===b||b&&o.nodeName(a,b)?o.merge([a],c):c}function pb(a,b){var c=b.nodeName.toLowerCase();"input"===c&&T.test(a.type)?b.checked=a.checked:("input"===c||"textarea"===c)&&(b.defaultValue=a.defaultValue)}o.extend({clone:function(a,b,c){var d,e,f,g,h=a.cloneNode(!0),i=o.contains(a.ownerDocument,a);if(!(l.noCloneChecked||1!==a.nodeType&&11!==a.nodeType||o.isXMLDoc(a)))for(g=ob(h),f=ob(a),d=0,e=f.length;e>d;d++)pb(f[d],g[d]);if(b)if(c)for(f=f||ob(a),g=g||ob(h),d=0,e=f.length;e>d;d++)nb(f[d],g[d]);else nb(a,h);return g=ob(h,"script"),g.length>0&&mb(g,!i&&ob(a,"script")),h},buildFragment:function(a,b,c,d){for(var e,f,g,h,i,j,k=b.createDocumentFragment(),l=[],m=0,n=a.length;n>m;m++)if(e=a[m],e||0===e)if("object"===o.type(e))o.merge(l,e.nodeType?[e]:e);else if(cb.test(e)){f=f||k.appendChild(b.createElement("div")),g=(bb.exec(e)||["",""])[1].toLowerCase(),h=ib[g]||ib._default,f.innerHTML=h[1]+e.replace(ab,"<$1></$2>")+h[2],j=h[0];while(j--)f=f.lastChild;o.merge(l,f.childNodes),f=k.firstChild,f.textContent=""}else l.push(b.createTextNode(e));k.textContent="",m=0;while(e=l[m++])if((!d||-1===o.inArray(e,d))&&(i=o.contains(e.ownerDocument,e),f=ob(k.appendChild(e),"script"),i&&mb(f),c)){j=0;while(e=f[j++])fb.test(e.type||"")&&c.push(e)}return k},cleanData:function(a){for(var b,c,d,e,f,g,h=o.event.special,i=0;void 0!==(c=a[i]);i++){if(o.acceptData(c)&&(f=c[L.expando],f&&(b=L.cache[f]))){if(d=Object.keys(b.events||{}),d.length)for(g=0;void 0!==(e=d[g]);g++)h[e]?o.event.remove(c,e):o.removeEvent(c,e,b.handle);L.cache[f]&&delete L.cache[f]}delete M.cache[c[M.expando]]}}}),o.fn.extend({text:function(a){return J(this,function(a){return void 0===a?o.text(this):this.empty().each(function(){(1===this.nodeType||11===this.nodeType||9===this.nodeType)&&(this.textContent=a)})},null,a,arguments.length)},append:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=jb(this,a);b.appendChild(a)}})},prepend:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=jb(this,a);b.insertBefore(a,b.firstChild)}})},before:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this)})},after:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this.nextSibling)})},remove:function(a,b){for(var c,d=a?o.filter(a,this):this,e=0;null!=(c=d[e]);e++)b||1!==c.nodeType||o.cleanData(ob(c)),c.parentNode&&(b&&o.contains(c.ownerDocument,c)&&mb(ob(c,"script")),c.parentNode.removeChild(c));return this},empty:function(){for(var a,b=0;null!=(a=this[b]);b++)1===a.nodeType&&(o.cleanData(ob(a,!1)),a.textContent="");return this},clone:function(a,b){return a=null==a?!1:a,b=null==b?a:b,this.map(function(){return o.clone(this,a,b)})},html:function(a){return J(this,function(a){var b=this[0]||{},c=0,d=this.length;if(void 0===a&&1===b.nodeType)return b.innerHTML;if("string"==typeof a&&!db.test(a)&&!ib[(bb.exec(a)||["",""])[1].toLowerCase()]){a=a.replace(ab,"<$1></$2>");try{for(;d>c;c++)b=this[c]||{},1===b.nodeType&&(o.cleanData(ob(b,!1)),b.innerHTML=a);b=0}catch(e){}}b&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(){var a=arguments[0];return this.domManip(arguments,function(b){a=this.parentNode,o.cleanData(ob(this)),a&&a.replaceChild(b,this)}),a&&(a.length||a.nodeType)?this:this.remove()},detach:function(a){return this.remove(a,!0)},domManip:function(a,b){a=e.apply([],a);var c,d,f,g,h,i,j=0,k=this.length,m=this,n=k-1,p=a[0],q=o.isFunction(p);if(q||k>1&&"string"==typeof p&&!l.checkClone&&eb.test(p))return this.each(function(c){var d=m.eq(c);q&&(a[0]=p.call(this,c,d.html())),d.domManip(a,b)});if(k&&(c=o.buildFragment(a,this[0].ownerDocument,!1,this),d=c.firstChild,1===c.childNodes.length&&(c=d),d)){for(f=o.map(ob(c,"script"),kb),g=f.length;k>j;j++)h=c,j!==n&&(h=o.clone(h,!0,!0),g&&o.merge(f,ob(h,"script"))),b.call(this[j],h,j);if(g)for(i=f[f.length-1].ownerDocument,o.map(f,lb),j=0;g>j;j++)h=f[j],fb.test(h.type||"")&&!L.access(h,"globalEval")&&o.contains(i,h)&&(h.src?o._evalUrl&&o._evalUrl(h.src):o.globalEval(h.textContent.replace(hb,"")))}return this}}),o.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){o.fn[a]=function(a){for(var c,d=[],e=o(a),g=e.length-1,h=0;g>=h;h++)c=h===g?this:this.clone(!0),o(e[h])[b](c),f.apply(d,c.get());return this.pushStack(d)}});var qb,rb={};function sb(b,c){var d=o(c.createElement(b)).appendTo(c.body),e=a.getDefaultComputedStyle?a.getDefaultComputedStyle(d[0]).display:o.css(d[0],"display");return d.detach(),e}function tb(a){var b=m,c=rb[a];return c||(c=sb(a,b),"none"!==c&&c||(qb=(qb||o("<iframe frameborder='0' width='0' height='0'/>")).appendTo(b.documentElement),b=qb[0].contentDocument,b.write(),b.close(),c=sb(a,b),qb.detach()),rb[a]=c),c}var ub=/^margin/,vb=new RegExp("^("+Q+")(?!px)[a-z%]+$","i"),wb=function(a){return a.ownerDocument.defaultView.getComputedStyle(a,null)};function xb(a,b,c){var d,e,f,g,h=a.style;return c=c||wb(a),c&&(g=c.getPropertyValue(b)||c[b]),c&&(""!==g||o.contains(a.ownerDocument,a)||(g=o.style(a,b)),vb.test(g)&&ub.test(b)&&(d=h.width,e=h.minWidth,f=h.maxWidth,h.minWidth=h.maxWidth=h.width=g,g=c.width,h.width=d,h.minWidth=e,h.maxWidth=f)),void 0!==g?g+"":g}function yb(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}!function(){var b,c,d="padding:0;margin:0;border:0;display:block;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box",e=m.documentElement,f=m.createElement("div"),g=m.createElement("div");g.style.backgroundClip="content-box",g.cloneNode(!0).style.backgroundClip="",l.clearCloneStyle="content-box"===g.style.backgroundClip,f.style.cssText="border:0;width:0;height:0;position:absolute;top:0;left:-9999px;margin-top:1px",f.appendChild(g);function h(){g.style.cssText="-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%",e.appendChild(f);var d=a.getComputedStyle(g,null);b="1%"!==d.top,c="4px"===d.width,e.removeChild(f)}a.getComputedStyle&&o.extend(l,{pixelPosition:function(){return h(),b},boxSizingReliable:function(){return null==c&&h(),c},reliableMarginRight:function(){var b,c=g.appendChild(m.createElement("div"));return c.style.cssText=g.style.cssText=d,c.style.marginRight=c.style.width="0",g.style.width="1px",e.appendChild(f),b=!parseFloat(a.getComputedStyle(c,null).marginRight),e.removeChild(f),g.innerHTML="",b}})}(),o.swap=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e};var zb=/^(none|table(?!-c[ea]).+)/,Ab=new RegExp("^("+Q+")(.*)$","i"),Bb=new RegExp("^([+-])=("+Q+")","i"),Cb={position:"absolute",visibility:"hidden",display:"block"},Db={letterSpacing:0,fontWeight:400},Eb=["Webkit","O","Moz","ms"];function Fb(a,b){if(b in a)return b;var c=b[0].toUpperCase()+b.slice(1),d=b,e=Eb.length;while(e--)if(b=Eb[e]+c,b in a)return b;return d}function Gb(a,b,c){var d=Ab.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||"px"):b}function Hb(a,b,c,d,e){for(var f=c===(d?"border":"content")?4:"width"===b?1:0,g=0;4>f;f+=2)"margin"===c&&(g+=o.css(a,c+R[f],!0,e)),d?("content"===c&&(g-=o.css(a,"padding"+R[f],!0,e)),"margin"!==c&&(g-=o.css(a,"border"+R[f]+"Width",!0,e))):(g+=o.css(a,"padding"+R[f],!0,e),"padding"!==c&&(g+=o.css(a,"border"+R[f]+"Width",!0,e)));return g}function Ib(a,b,c){var d=!0,e="width"===b?a.offsetWidth:a.offsetHeight,f=wb(a),g="border-box"===o.css(a,"boxSizing",!1,f);if(0>=e||null==e){if(e=xb(a,b,f),(0>e||null==e)&&(e=a.style[b]),vb.test(e))return e;d=g&&(l.boxSizingReliable()||e===a.style[b]),e=parseFloat(e)||0}return e+Hb(a,b,c||(g?"border":"content"),d,f)+"px"}function Jb(a,b){for(var c,d,e,f=[],g=0,h=a.length;h>g;g++)d=a[g],d.style&&(f[g]=L.get(d,"olddisplay"),c=d.style.display,b?(f[g]||"none"!==c||(d.style.display=""),""===d.style.display&&S(d)&&(f[g]=L.access(d,"olddisplay",tb(d.nodeName)))):f[g]||(e=S(d),(c&&"none"!==c||!e)&&L.set(d,"olddisplay",e?c:o.css(d,"display"))));for(g=0;h>g;g++)d=a[g],d.style&&(b&&"none"!==d.style.display&&""!==d.style.display||(d.style.display=b?f[g]||"":"none"));return a}o.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=xb(a,"opacity");return""===c?"1":c}}}},cssNumber:{columnCount:!0,fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":"cssFloat"},style:function(a,b,c,d){if(a&&3!==a.nodeType&&8!==a.nodeType&&a.style){var e,f,g,h=o.camelCase(b),i=a.style;return b=o.cssProps[h]||(o.cssProps[h]=Fb(i,h)),g=o.cssHooks[b]||o.cssHooks[h],void 0===c?g&&"get"in g&&void 0!==(e=g.get(a,!1,d))?e:i[b]:(f=typeof c,"string"===f&&(e=Bb.exec(c))&&(c=(e[1]+1)*e[2]+parseFloat(o.css(a,b)),f="number"),null!=c&&c===c&&("number"!==f||o.cssNumber[h]||(c+="px"),l.clearCloneStyle||""!==c||0!==b.indexOf("background")||(i[b]="inherit"),g&&"set"in g&&void 0===(c=g.set(a,c,d))||(i[b]="",i[b]=c)),void 0)}},css:function(a,b,c,d){var e,f,g,h=o.camelCase(b);return b=o.cssProps[h]||(o.cssProps[h]=Fb(a.style,h)),g=o.cssHooks[b]||o.cssHooks[h],g&&"get"in g&&(e=g.get(a,!0,c)),void 0===e&&(e=xb(a,b,d)),"normal"===e&&b in Db&&(e=Db[b]),""===c||c?(f=parseFloat(e),c===!0||o.isNumeric(f)?f||0:e):e}}),o.each(["height","width"],function(a,b){o.cssHooks[b]={get:function(a,c,d){return c?0===a.offsetWidth&&zb.test(o.css(a,"display"))?o.swap(a,Cb,function(){return Ib(a,b,d)}):Ib(a,b,d):void 0},set:function(a,c,d){var e=d&&wb(a);return Gb(a,c,d?Hb(a,b,d,"border-box"===o.css(a,"boxSizing",!1,e),e):0)}}}),o.cssHooks.marginRight=yb(l.reliableMarginRight,function(a,b){return b?o.swap(a,{display:"inline-block"},xb,[a,"marginRight"]):void 0}),o.each({margin:"",padding:"",border:"Width"},function(a,b){o.cssHooks[a+b]={expand:function(c){for(var d=0,e={},f="string"==typeof c?c.split(" "):[c];4>d;d++)e[a+R[d]+b]=f[d]||f[d-2]||f[0];return e}},ub.test(a)||(o.cssHooks[a+b].set=Gb)}),o.fn.extend({css:function(a,b){return J(this,function(a,b,c){var d,e,f={},g=0;if(o.isArray(b)){for(d=wb(a),e=b.length;e>g;g++)f[b[g]]=o.css(a,b[g],!1,d);return f}return void 0!==c?o.style(a,b,c):o.css(a,b)},a,b,arguments.length>1)},show:function(){return Jb(this,!0)},hide:function(){return Jb(this)},toggle:function(a){return"boolean"==typeof a?a?this.show():this.hide():this.each(function(){S(this)?o(this).show():o(this).hide()})}});function Kb(a,b,c,d,e){return new Kb.prototype.init(a,b,c,d,e)}o.Tween=Kb,Kb.prototype={constructor:Kb,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||"swing",this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(o.cssNumber[c]?"":"px")},cur:function(){var a=Kb.propHooks[this.prop];return a&&a.get?a.get(this):Kb.propHooks._default.get(this)},run:function(a){var b,c=Kb.propHooks[this.prop];return this.pos=b=this.options.duration?o.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):Kb.propHooks._default.set(this),this}},Kb.prototype.init.prototype=Kb.prototype,Kb.propHooks={_default:{get:function(a){var b;return null==a.elem[a.prop]||a.elem.style&&null!=a.elem.style[a.prop]?(b=o.css(a.elem,a.prop,""),b&&"auto"!==b?b:0):a.elem[a.prop]},set:function(a){o.fx.step[a.prop]?o.fx.step[a.prop](a):a.elem.style&&(null!=a.elem.style[o.cssProps[a.prop]]||o.cssHooks[a.prop])?o.style(a.elem,a.prop,a.now+a.unit):a.elem[a.prop]=a.now}}},Kb.propHooks.scrollTop=Kb.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},o.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2}},o.fx=Kb.prototype.init,o.fx.step={};var Lb,Mb,Nb=/^(?:toggle|show|hide)$/,Ob=new RegExp("^(?:([+-])=|)("+Q+")([a-z%]*)$","i"),Pb=/queueHooks$/,Qb=[Vb],Rb={"*":[function(a,b){var c=this.createTween(a,b),d=c.cur(),e=Ob.exec(b),f=e&&e[3]||(o.cssNumber[a]?"":"px"),g=(o.cssNumber[a]||"px"!==f&&+d)&&Ob.exec(o.css(c.elem,a)),h=1,i=20;if(g&&g[3]!==f){f=f||g[3],e=e||[],g=+d||1;do h=h||".5",g/=h,o.style(c.elem,a,g+f);while(h!==(h=c.cur()/d)&&1!==h&&--i)}return e&&(g=c.start=+g||+d||0,c.unit=f,c.end=e[1]?g+(e[1]+1)*e[2]:+e[2]),c}]};function Sb(){return setTimeout(function(){Lb=void 0}),Lb=o.now()}function Tb(a,b){var c,d=0,e={height:a};for(b=b?1:0;4>d;d+=2-b)c=R[d],e["margin"+c]=e["padding"+c]=a;return b&&(e.opacity=e.width=a),e}function Ub(a,b,c){for(var d,e=(Rb[b]||[]).concat(Rb["*"]),f=0,g=e.length;g>f;f++)if(d=e[f].call(c,b,a))return d}function Vb(a,b,c){var d,e,f,g,h,i,j,k=this,l={},m=a.style,n=a.nodeType&&S(a),p=L.get(a,"fxshow");c.queue||(h=o._queueHooks(a,"fx"),null==h.unqueued&&(h.unqueued=0,i=h.empty.fire,h.empty.fire=function(){h.unqueued||i()}),h.unqueued++,k.always(function(){k.always(function(){h.unqueued--,o.queue(a,"fx").length||h.empty.fire()})})),1===a.nodeType&&("height"in b||"width"in b)&&(c.overflow=[m.overflow,m.overflowX,m.overflowY],j=o.css(a,"display"),"none"===j&&(j=tb(a.nodeName)),"inline"===j&&"none"===o.css(a,"float")&&(m.display="inline-block")),c.overflow&&(m.overflow="hidden",k.always(function(){m.overflow=c.overflow[0],m.overflowX=c.overflow[1],m.overflowY=c.overflow[2]}));for(d in b)if(e=b[d],Nb.exec(e)){if(delete b[d],f=f||"toggle"===e,e===(n?"hide":"show")){if("show"!==e||!p||void 0===p[d])continue;n=!0}l[d]=p&&p[d]||o.style(a,d)}if(!o.isEmptyObject(l)){p?"hidden"in p&&(n=p.hidden):p=L.access(a,"fxshow",{}),f&&(p.hidden=!n),n?o(a).show():k.done(function(){o(a).hide()}),k.done(function(){var b;L.remove(a,"fxshow");for(b in l)o.style(a,b,l[b])});for(d in l)g=Ub(n?p[d]:0,d,k),d in p||(p[d]=g.start,n&&(g.end=g.start,g.start="width"===d||"height"===d?1:0))}}function Wb(a,b){var c,d,e,f,g;for(c in a)if(d=o.camelCase(c),e=b[d],f=a[c],o.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=o.cssHooks[d],g&&"expand"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}function Xb(a,b,c){var d,e,f=0,g=Qb.length,h=o.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=Lb||Sb(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i>g;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),1>f&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:o.extend({},b),opts:o.extend(!0,{specialEasing:{}},c),originalProperties:b,originalOptions:c,startTime:Lb||Sb(),duration:c.duration,tweens:[],createTween:function(b,c){var d=o.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;d>c;c++)j.tweens[c].run(1);return b?h.resolveWith(a,[j,b]):h.rejectWith(a,[j,b]),this}}),k=j.props;for(Wb(k,j.opts.specialEasing);g>f;f++)if(d=Qb[f].call(j,a,k,j.opts))return d;return o.map(k,Ub,j),o.isFunction(j.opts.start)&&j.opts.start.call(a,j),o.fx.timer(o.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}o.Animation=o.extend(Xb,{tweener:function(a,b){o.isFunction(a)?(b=a,a=["*"]):a=a.split(" ");for(var c,d=0,e=a.length;e>d;d++)c=a[d],Rb[c]=Rb[c]||[],Rb[c].unshift(b)},prefilter:function(a,b){b?Qb.unshift(a):Qb.push(a)}}),o.speed=function(a,b,c){var d=a&&"object"==typeof a?o.extend({},a):{complete:c||!c&&b||o.isFunction(a)&&a,duration:a,easing:c&&b||b&&!o.isFunction(b)&&b};return d.duration=o.fx.off?0:"number"==typeof d.duration?d.duration:d.duration in o.fx.speeds?o.fx.speeds[d.duration]:o.fx.speeds._default,(null==d.queue||d.queue===!0)&&(d.queue="fx"),d.old=d.complete,d.complete=function(){o.isFunction(d.old)&&d.old.call(this),d.queue&&o.dequeue(this,d.queue)},d},o.fn.extend({fadeTo:function(a,b,c,d){return this.filter(S).css("opacity",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=o.isEmptyObject(a),f=o.speed(b,c,d),g=function(){var b=Xb(this,o.extend({},a),f);(e||L.get(this,"finish"))&&b.stop(!0)};return g.finish=g,e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,b,c){var d=function(a){var b=a.stop;delete a.stop,b(c)};return"string"!=typeof a&&(c=b,b=a,a=void 0),b&&a!==!1&&this.queue(a||"fx",[]),this.each(function(){var b=!0,e=null!=a&&a+"queueHooks",f=o.timers,g=L.get(this);if(e)g[e]&&g[e].stop&&d(g[e]);else for(e in g)g[e]&&g[e].stop&&Pb.test(e)&&d(g[e]);for(e=f.length;e--;)f[e].elem!==this||null!=a&&f[e].queue!==a||(f[e].anim.stop(c),b=!1,f.splice(e,1));(b||!c)&&o.dequeue(this,a)})},finish:function(a){return a!==!1&&(a=a||"fx"),this.each(function(){var b,c=L.get(this),d=c[a+"queue"],e=c[a+"queueHooks"],f=o.timers,g=d?d.length:0;for(c.finish=!0,o.queue(this,a,[]),e&&e.stop&&e.stop.call(this,!0),b=f.length;b--;)f[b].elem===this&&f[b].queue===a&&(f[b].anim.stop(!0),f.splice(b,1));for(b=0;g>b;b++)d[b]&&d[b].finish&&d[b].finish.call(this);delete c.finish})}}),o.each(["toggle","show","hide"],function(a,b){var c=o.fn[b];o.fn[b]=function(a,d,e){return null==a||"boolean"==typeof a?c.apply(this,arguments):this.animate(Tb(b,!0),a,d,e)}}),o.each({slideDown:Tb("show"),slideUp:Tb("hide"),slideToggle:Tb("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){o.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),o.timers=[],o.fx.tick=function(){var a,b=0,c=o.timers;for(Lb=o.now();b<c.length;b++)a=c[b],a()||c[b]!==a||c.splice(b--,1);c.length||o.fx.stop(),Lb=void 0},o.fx.timer=function(a){o.timers.push(a),a()?o.fx.start():o.timers.pop()},o.fx.interval=13,o.fx.start=function(){Mb||(Mb=setInterval(o.fx.tick,o.fx.interval))},o.fx.stop=function(){clearInterval(Mb),Mb=null},o.fx.speeds={slow:600,fast:200,_default:400},o.fn.delay=function(a,b){return a=o.fx?o.fx.speeds[a]||a:a,b=b||"fx",this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},function(){var a=m.createElement("input"),b=m.createElement("select"),c=b.appendChild(m.createElement("option"));a.type="checkbox",l.checkOn=""!==a.value,l.optSelected=c.selected,b.disabled=!0,l.optDisabled=!c.disabled,a=m.createElement("input"),a.value="t",a.type="radio",l.radioValue="t"===a.value}();var Yb,Zb,$b=o.expr.attrHandle;o.fn.extend({attr:function(a,b){return J(this,o.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){o.removeAttr(this,a)})}}),o.extend({attr:function(a,b,c){var d,e,f=a.nodeType;if(a&&3!==f&&8!==f&&2!==f)return typeof a.getAttribute===U?o.prop(a,b,c):(1===f&&o.isXMLDoc(a)||(b=b.toLowerCase(),d=o.attrHooks[b]||(o.expr.match.bool.test(b)?Zb:Yb)),void 0===c?d&&"get"in d&&null!==(e=d.get(a,b))?e:(e=o.find.attr(a,b),null==e?void 0:e):null!==c?d&&"set"in d&&void 0!==(e=d.set(a,c,b))?e:(a.setAttribute(b,c+""),c):void o.removeAttr(a,b))},removeAttr:function(a,b){var c,d,e=0,f=b&&b.match(E);if(f&&1===a.nodeType)while(c=f[e++])d=o.propFix[c]||c,o.expr.match.bool.test(c)&&(a[d]=!1),a.removeAttribute(c)},attrHooks:{type:{set:function(a,b){if(!l.radioValue&&"radio"===b&&o.nodeName(a,"input")){var c=a.value;return a.setAttribute("type",b),c&&(a.value=c),b}}}}}),Zb={set:function(a,b,c){return b===!1?o.removeAttr(a,c):a.setAttribute(c,c),c}},o.each(o.expr.match.bool.source.match(/\w+/g),function(a,b){var c=$b[b]||o.find.attr;$b[b]=function(a,b,d){var e,f;
return d||(f=$b[b],$b[b]=e,e=null!=c(a,b,d)?b.toLowerCase():null,$b[b]=f),e}});var _b=/^(?:input|select|textarea|button)$/i;o.fn.extend({prop:function(a,b){return J(this,o.prop,a,b,arguments.length>1)},removeProp:function(a){return this.each(function(){delete this[o.propFix[a]||a]})}}),o.extend({propFix:{"for":"htmlFor","class":"className"},prop:function(a,b,c){var d,e,f,g=a.nodeType;if(a&&3!==g&&8!==g&&2!==g)return f=1!==g||!o.isXMLDoc(a),f&&(b=o.propFix[b]||b,e=o.propHooks[b]),void 0!==c?e&&"set"in e&&void 0!==(d=e.set(a,c,b))?d:a[b]=c:e&&"get"in e&&null!==(d=e.get(a,b))?d:a[b]},propHooks:{tabIndex:{get:function(a){return a.hasAttribute("tabindex")||_b.test(a.nodeName)||a.href?a.tabIndex:-1}}}}),l.optSelected||(o.propHooks.selected={get:function(a){var b=a.parentNode;return b&&b.parentNode&&b.parentNode.selectedIndex,null}}),o.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){o.propFix[this.toLowerCase()]=this});var ac=/[\t\r\n\f]/g;o.fn.extend({addClass:function(a){var b,c,d,e,f,g,h="string"==typeof a&&a,i=0,j=this.length;if(o.isFunction(a))return this.each(function(b){o(this).addClass(a.call(this,b,this.className))});if(h)for(b=(a||"").match(E)||[];j>i;i++)if(c=this[i],d=1===c.nodeType&&(c.className?(" "+c.className+" ").replace(ac," "):" ")){f=0;while(e=b[f++])d.indexOf(" "+e+" ")<0&&(d+=e+" ");g=o.trim(d),c.className!==g&&(c.className=g)}return this},removeClass:function(a){var b,c,d,e,f,g,h=0===arguments.length||"string"==typeof a&&a,i=0,j=this.length;if(o.isFunction(a))return this.each(function(b){o(this).removeClass(a.call(this,b,this.className))});if(h)for(b=(a||"").match(E)||[];j>i;i++)if(c=this[i],d=1===c.nodeType&&(c.className?(" "+c.className+" ").replace(ac," "):"")){f=0;while(e=b[f++])while(d.indexOf(" "+e+" ")>=0)d=d.replace(" "+e+" "," ");g=a?o.trim(d):"",c.className!==g&&(c.className=g)}return this},toggleClass:function(a,b){var c=typeof a;return"boolean"==typeof b&&"string"===c?b?this.addClass(a):this.removeClass(a):this.each(o.isFunction(a)?function(c){o(this).toggleClass(a.call(this,c,this.className,b),b)}:function(){if("string"===c){var b,d=0,e=o(this),f=a.match(E)||[];while(b=f[d++])e.hasClass(b)?e.removeClass(b):e.addClass(b)}else(c===U||"boolean"===c)&&(this.className&&L.set(this,"__className__",this.className),this.className=this.className||a===!1?"":L.get(this,"__className__")||"")})},hasClass:function(a){for(var b=" "+a+" ",c=0,d=this.length;d>c;c++)if(1===this[c].nodeType&&(" "+this[c].className+" ").replace(ac," ").indexOf(b)>=0)return!0;return!1}});var bc=/\r/g;o.fn.extend({val:function(a){var b,c,d,e=this[0];{if(arguments.length)return d=o.isFunction(a),this.each(function(c){var e;1===this.nodeType&&(e=d?a.call(this,c,o(this).val()):a,null==e?e="":"number"==typeof e?e+="":o.isArray(e)&&(e=o.map(e,function(a){return null==a?"":a+""})),b=o.valHooks[this.type]||o.valHooks[this.nodeName.toLowerCase()],b&&"set"in b&&void 0!==b.set(this,e,"value")||(this.value=e))});if(e)return b=o.valHooks[e.type]||o.valHooks[e.nodeName.toLowerCase()],b&&"get"in b&&void 0!==(c=b.get(e,"value"))?c:(c=e.value,"string"==typeof c?c.replace(bc,""):null==c?"":c)}}}),o.extend({valHooks:{select:{get:function(a){for(var b,c,d=a.options,e=a.selectedIndex,f="select-one"===a.type||0>e,g=f?null:[],h=f?e+1:d.length,i=0>e?h:f?e:0;h>i;i++)if(c=d[i],!(!c.selected&&i!==e||(l.optDisabled?c.disabled:null!==c.getAttribute("disabled"))||c.parentNode.disabled&&o.nodeName(c.parentNode,"optgroup"))){if(b=o(c).val(),f)return b;g.push(b)}return g},set:function(a,b){var c,d,e=a.options,f=o.makeArray(b),g=e.length;while(g--)d=e[g],(d.selected=o.inArray(o(d).val(),f)>=0)&&(c=!0);return c||(a.selectedIndex=-1),f}}}}),o.each(["radio","checkbox"],function(){o.valHooks[this]={set:function(a,b){return o.isArray(b)?a.checked=o.inArray(o(a).val(),b)>=0:void 0}},l.checkOn||(o.valHooks[this].get=function(a){return null===a.getAttribute("value")?"on":a.value})}),o.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(a,b){o.fn[b]=function(a,c){return arguments.length>0?this.on(b,null,a,c):this.trigger(b)}}),o.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return 1===arguments.length?this.off(a,"**"):this.off(b,a||"**",c)}});var cc=o.now(),dc=/\?/;o.parseJSON=function(a){return JSON.parse(a+"")},o.parseXML=function(a){var b,c;if(!a||"string"!=typeof a)return null;try{c=new DOMParser,b=c.parseFromString(a,"text/xml")}catch(d){b=void 0}return(!b||b.getElementsByTagName("parsererror").length)&&o.error("Invalid XML: "+a),b};var ec,fc,gc=/#.*$/,hc=/([?&])_=[^&]*/,ic=/^(.*?):[ \t]*([^\r\n]*)$/gm,jc=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,kc=/^(?:GET|HEAD)$/,lc=/^\/\//,mc=/^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,nc={},oc={},pc="*/".concat("*");try{fc=location.href}catch(qc){fc=m.createElement("a"),fc.href="",fc=fc.href}ec=mc.exec(fc.toLowerCase())||[];function rc(a){return function(b,c){"string"!=typeof b&&(c=b,b="*");var d,e=0,f=b.toLowerCase().match(E)||[];if(o.isFunction(c))while(d=f[e++])"+"===d[0]?(d=d.slice(1)||"*",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}function sc(a,b,c,d){var e={},f=a===oc;function g(h){var i;return e[h]=!0,o.each(a[h]||[],function(a,h){var j=h(b,c,d);return"string"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e["*"]&&g("*")}function tc(a,b){var c,d,e=o.ajaxSettings.flatOptions||{};for(c in b)void 0!==b[c]&&((e[c]?a:d||(d={}))[c]=b[c]);return d&&o.extend(!0,a,d),a}function uc(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while("*"===i[0])i.shift(),void 0===d&&(d=a.mimeType||b.getResponseHeader("Content-Type"));if(d)for(e in h)if(h[e]&&h[e].test(d)){i.unshift(e);break}if(i[0]in c)f=i[0];else{for(e in c){if(!i[0]||a.converters[e+" "+i[0]]){f=e;break}g||(g=e)}f=f||g}return f?(f!==i[0]&&i.unshift(f),c[f]):void 0}function vc(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if("*"===f)f=i;else if("*"!==i&&i!==f){if(g=j[i+" "+f]||j["* "+f],!g)for(e in j)if(h=e.split(" "),h[1]===f&&(g=j[i+" "+h[0]]||j["* "+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a["throws"])b=g(b);else try{b=g(b)}catch(l){return{state:"parsererror",error:g?l:"No conversion from "+i+" to "+f}}}return{state:"success",data:b}}o.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:fc,type:"GET",isLocal:jc.test(ec[1]),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":pc,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":o.parseJSON,"text xml":o.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b){return b?tc(tc(a,o.ajaxSettings),b):tc(o.ajaxSettings,a)},ajaxPrefilter:rc(nc),ajaxTransport:rc(oc),ajax:function(a,b){"object"==typeof a&&(b=a,a=void 0),b=b||{};var c,d,e,f,g,h,i,j,k=o.ajaxSetup({},b),l=k.context||k,m=k.context&&(l.nodeType||l.jquery)?o(l):o.event,n=o.Deferred(),p=o.Callbacks("once memory"),q=k.statusCode||{},r={},s={},t=0,u="canceled",v={readyState:0,getResponseHeader:function(a){var b;if(2===t){if(!f){f={};while(b=ic.exec(e))f[b[1].toLowerCase()]=b[2]}b=f[a.toLowerCase()]}return null==b?null:b},getAllResponseHeaders:function(){return 2===t?e:null},setRequestHeader:function(a,b){var c=a.toLowerCase();return t||(a=s[c]=s[c]||a,r[a]=b),this},overrideMimeType:function(a){return t||(k.mimeType=a),this},statusCode:function(a){var b;if(a)if(2>t)for(b in a)q[b]=[q[b],a[b]];else v.always(a[v.status]);return this},abort:function(a){var b=a||u;return c&&c.abort(b),x(0,b),this}};if(n.promise(v).complete=p.add,v.success=v.done,v.error=v.fail,k.url=((a||k.url||fc)+"").replace(gc,"").replace(lc,ec[1]+"//"),k.type=b.method||b.type||k.method||k.type,k.dataTypes=o.trim(k.dataType||"*").toLowerCase().match(E)||[""],null==k.crossDomain&&(h=mc.exec(k.url.toLowerCase()),k.crossDomain=!(!h||h[1]===ec[1]&&h[2]===ec[2]&&(h[3]||("http:"===h[1]?"80":"443"))===(ec[3]||("http:"===ec[1]?"80":"443")))),k.data&&k.processData&&"string"!=typeof k.data&&(k.data=o.param(k.data,k.traditional)),sc(nc,k,b,v),2===t)return v;i=k.global,i&&0===o.active++&&o.event.trigger("ajaxStart"),k.type=k.type.toUpperCase(),k.hasContent=!kc.test(k.type),d=k.url,k.hasContent||(k.data&&(d=k.url+=(dc.test(d)?"&":"?")+k.data,delete k.data),k.cache===!1&&(k.url=hc.test(d)?d.replace(hc,"$1_="+cc++):d+(dc.test(d)?"&":"?")+"_="+cc++)),k.ifModified&&(o.lastModified[d]&&v.setRequestHeader("If-Modified-Since",o.lastModified[d]),o.etag[d]&&v.setRequestHeader("If-None-Match",o.etag[d])),(k.data&&k.hasContent&&k.contentType!==!1||b.contentType)&&v.setRequestHeader("Content-Type",k.contentType),v.setRequestHeader("Accept",k.dataTypes[0]&&k.accepts[k.dataTypes[0]]?k.accepts[k.dataTypes[0]]+("*"!==k.dataTypes[0]?", "+pc+"; q=0.01":""):k.accepts["*"]);for(j in k.headers)v.setRequestHeader(j,k.headers[j]);if(k.beforeSend&&(k.beforeSend.call(l,v,k)===!1||2===t))return v.abort();u="abort";for(j in{success:1,error:1,complete:1})v[j](k[j]);if(c=sc(oc,k,b,v)){v.readyState=1,i&&m.trigger("ajaxSend",[v,k]),k.async&&k.timeout>0&&(g=setTimeout(function(){v.abort("timeout")},k.timeout));try{t=1,c.send(r,x)}catch(w){if(!(2>t))throw w;x(-1,w)}}else x(-1,"No Transport");function x(a,b,f,h){var j,r,s,u,w,x=b;2!==t&&(t=2,g&&clearTimeout(g),c=void 0,e=h||"",v.readyState=a>0?4:0,j=a>=200&&300>a||304===a,f&&(u=uc(k,v,f)),u=vc(k,u,v,j),j?(k.ifModified&&(w=v.getResponseHeader("Last-Modified"),w&&(o.lastModified[d]=w),w=v.getResponseHeader("etag"),w&&(o.etag[d]=w)),204===a||"HEAD"===k.type?x="nocontent":304===a?x="notmodified":(x=u.state,r=u.data,s=u.error,j=!s)):(s=x,(a||!x)&&(x="error",0>a&&(a=0))),v.status=a,v.statusText=(b||x)+"",j?n.resolveWith(l,[r,x,v]):n.rejectWith(l,[v,x,s]),v.statusCode(q),q=void 0,i&&m.trigger(j?"ajaxSuccess":"ajaxError",[v,k,j?r:s]),p.fireWith(l,[v,x]),i&&(m.trigger("ajaxComplete",[v,k]),--o.active||o.event.trigger("ajaxStop")))}return v},getJSON:function(a,b,c){return o.get(a,b,c,"json")},getScript:function(a,b){return o.get(a,void 0,b,"script")}}),o.each(["get","post"],function(a,b){o[b]=function(a,c,d,e){return o.isFunction(c)&&(e=e||d,d=c,c=void 0),o.ajax({url:a,type:b,dataType:e,data:c,success:d})}}),o.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(a,b){o.fn[b]=function(a){return this.on(b,a)}}),o._evalUrl=function(a){return o.ajax({url:a,type:"GET",dataType:"script",async:!1,global:!1,"throws":!0})},o.fn.extend({wrapAll:function(a){var b;return o.isFunction(a)?this.each(function(b){o(this).wrapAll(a.call(this,b))}):(this[0]&&(b=o(a,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstElementChild)a=a.firstElementChild;return a}).append(this)),this)},wrapInner:function(a){return this.each(o.isFunction(a)?function(b){o(this).wrapInner(a.call(this,b))}:function(){var b=o(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=o.isFunction(a);return this.each(function(c){o(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){o.nodeName(this,"body")||o(this).replaceWith(this.childNodes)}).end()}}),o.expr.filters.hidden=function(a){return a.offsetWidth<=0&&a.offsetHeight<=0},o.expr.filters.visible=function(a){return!o.expr.filters.hidden(a)};var wc=/%20/g,xc=/\[\]$/,yc=/\r?\n/g,zc=/^(?:submit|button|image|reset|file)$/i,Ac=/^(?:input|select|textarea|keygen)/i;function Bc(a,b,c,d){var e;if(o.isArray(b))o.each(b,function(b,e){c||xc.test(a)?d(a,e):Bc(a+"["+("object"==typeof e?b:"")+"]",e,c,d)});else if(c||"object"!==o.type(b))d(a,b);else for(e in b)Bc(a+"["+e+"]",b[e],c,d)}o.param=function(a,b){var c,d=[],e=function(a,b){b=o.isFunction(b)?b():null==b?"":b,d[d.length]=encodeURIComponent(a)+"="+encodeURIComponent(b)};if(void 0===b&&(b=o.ajaxSettings&&o.ajaxSettings.traditional),o.isArray(a)||a.jquery&&!o.isPlainObject(a))o.each(a,function(){e(this.name,this.value)});else for(c in a)Bc(c,a[c],b,e);return d.join("&").replace(wc,"+")},o.fn.extend({serialize:function(){return o.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=o.prop(this,"elements");return a?o.makeArray(a):this}).filter(function(){var a=this.type;return this.name&&!o(this).is(":disabled")&&Ac.test(this.nodeName)&&!zc.test(a)&&(this.checked||!T.test(a))}).map(function(a,b){var c=o(this).val();return null==c?null:o.isArray(c)?o.map(c,function(a){return{name:b.name,value:a.replace(yc,"\r\n")}}):{name:b.name,value:c.replace(yc,"\r\n")}}).get()}}),o.ajaxSettings.xhr=function(){try{return new XMLHttpRequest}catch(a){}};var Cc=0,Dc={},Ec={0:200,1223:204},Fc=o.ajaxSettings.xhr();a.ActiveXObject&&o(a).on("unload",function(){for(var a in Dc)Dc[a]()}),l.cors=!!Fc&&"withCredentials"in Fc,l.ajax=Fc=!!Fc,o.ajaxTransport(function(a){var b;return l.cors||Fc&&!a.crossDomain?{send:function(c,d){var e,f=a.xhr(),g=++Cc;if(f.open(a.type,a.url,a.async,a.username,a.password),a.xhrFields)for(e in a.xhrFields)f[e]=a.xhrFields[e];a.mimeType&&f.overrideMimeType&&f.overrideMimeType(a.mimeType),a.crossDomain||c["X-Requested-With"]||(c["X-Requested-With"]="XMLHttpRequest");for(e in c)f.setRequestHeader(e,c[e]);b=function(a){return function(){b&&(delete Dc[g],b=f.onload=f.onerror=null,"abort"===a?f.abort():"error"===a?d(f.status,f.statusText):d(Ec[f.status]||f.status,f.statusText,"string"==typeof f.responseText?{text:f.responseText}:void 0,f.getAllResponseHeaders()))}},f.onload=b(),f.onerror=b("error"),b=Dc[g]=b("abort"),f.send(a.hasContent&&a.data||null)},abort:function(){b&&b()}}:void 0}),o.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/(?:java|ecma)script/},converters:{"text script":function(a){return o.globalEval(a),a}}}),o.ajaxPrefilter("script",function(a){void 0===a.cache&&(a.cache=!1),a.crossDomain&&(a.type="GET")}),o.ajaxTransport("script",function(a){if(a.crossDomain){var b,c;return{send:function(d,e){b=o("<script>").prop({async:!0,charset:a.scriptCharset,src:a.url}).on("load error",c=function(a){b.remove(),c=null,a&&e("error"===a.type?404:200,a.type)}),m.head.appendChild(b[0])},abort:function(){c&&c()}}}});var Gc=[],Hc=/(=)\?(?=&|$)|\?\?/;o.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var a=Gc.pop()||o.expando+"_"+cc++;return this[a]=!0,a}}),o.ajaxPrefilter("json jsonp",function(b,c,d){var e,f,g,h=b.jsonp!==!1&&(Hc.test(b.url)?"url":"string"==typeof b.data&&!(b.contentType||"").indexOf("application/x-www-form-urlencoded")&&Hc.test(b.data)&&"data");return h||"jsonp"===b.dataTypes[0]?(e=b.jsonpCallback=o.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,h?b[h]=b[h].replace(Hc,"$1"+e):b.jsonp!==!1&&(b.url+=(dc.test(b.url)?"&":"?")+b.jsonp+"="+e),b.converters["script json"]=function(){return g||o.error(e+" was not called"),g[0]},b.dataTypes[0]="json",f=a[e],a[e]=function(){g=arguments},d.always(function(){a[e]=f,b[e]&&(b.jsonpCallback=c.jsonpCallback,Gc.push(e)),g&&o.isFunction(f)&&f(g[0]),g=f=void 0}),"script"):void 0}),o.parseHTML=function(a,b,c){if(!a||"string"!=typeof a)return null;"boolean"==typeof b&&(c=b,b=!1),b=b||m;var d=v.exec(a),e=!c&&[];return d?[b.createElement(d[1])]:(d=o.buildFragment([a],b,e),e&&e.length&&o(e).remove(),o.merge([],d.childNodes))};var Ic=o.fn.load;o.fn.load=function(a,b,c){if("string"!=typeof a&&Ic)return Ic.apply(this,arguments);var d,e,f,g=this,h=a.indexOf(" ");return h>=0&&(d=a.slice(h),a=a.slice(0,h)),o.isFunction(b)?(c=b,b=void 0):b&&"object"==typeof b&&(e="POST"),g.length>0&&o.ajax({url:a,type:e,dataType:"html",data:b}).done(function(a){f=arguments,g.html(d?o("<div>").append(o.parseHTML(a)).find(d):a)}).complete(c&&function(a,b){g.each(c,f||[a.responseText,b,a])}),this},o.expr.filters.animated=function(a){return o.grep(o.timers,function(b){return a===b.elem}).length};var Jc=a.document.documentElement;function Kc(a){return o.isWindow(a)?a:9===a.nodeType&&a.defaultView}o.offset={setOffset:function(a,b,c){var d,e,f,g,h,i,j,k=o.css(a,"position"),l=o(a),m={};"static"===k&&(a.style.position="relative"),h=l.offset(),f=o.css(a,"top"),i=o.css(a,"left"),j=("absolute"===k||"fixed"===k)&&(f+i).indexOf("auto")>-1,j?(d=l.position(),g=d.top,e=d.left):(g=parseFloat(f)||0,e=parseFloat(i)||0),o.isFunction(b)&&(b=b.call(a,c,h)),null!=b.top&&(m.top=b.top-h.top+g),null!=b.left&&(m.left=b.left-h.left+e),"using"in b?b.using.call(a,m):l.css(m)}},o.fn.extend({offset:function(a){if(arguments.length)return void 0===a?this:this.each(function(b){o.offset.setOffset(this,a,b)});var b,c,d=this[0],e={top:0,left:0},f=d&&d.ownerDocument;if(f)return b=f.documentElement,o.contains(b,d)?(typeof d.getBoundingClientRect!==U&&(e=d.getBoundingClientRect()),c=Kc(f),{top:e.top+c.pageYOffset-b.clientTop,left:e.left+c.pageXOffset-b.clientLeft}):e},position:function(){if(this[0]){var a,b,c=this[0],d={top:0,left:0};return"fixed"===o.css(c,"position")?b=c.getBoundingClientRect():(a=this.offsetParent(),b=this.offset(),o.nodeName(a[0],"html")||(d=a.offset()),d.top+=o.css(a[0],"borderTopWidth",!0),d.left+=o.css(a[0],"borderLeftWidth",!0)),{top:b.top-d.top-o.css(c,"marginTop",!0),left:b.left-d.left-o.css(c,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||Jc;while(a&&!o.nodeName(a,"html")&&"static"===o.css(a,"position"))a=a.offsetParent;return a||Jc})}}),o.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(b,c){var d="pageYOffset"===c;o.fn[b]=function(e){return J(this,function(b,e,f){var g=Kc(b);return void 0===f?g?g[c]:b[e]:void(g?g.scrollTo(d?a.pageXOffset:f,d?f:a.pageYOffset):b[e]=f)},b,e,arguments.length,null)}}),o.each(["top","left"],function(a,b){o.cssHooks[b]=yb(l.pixelPosition,function(a,c){return c?(c=xb(a,b),vb.test(c)?o(a).position()[b]+"px":c):void 0})}),o.each({Height:"height",Width:"width"},function(a,b){o.each({padding:"inner"+a,content:b,"":"outer"+a},function(c,d){o.fn[d]=function(d,e){var f=arguments.length&&(c||"boolean"!=typeof d),g=c||(d===!0||e===!0?"margin":"border");return J(this,function(b,c,d){var e;return o.isWindow(b)?b.document.documentElement["client"+a]:9===b.nodeType?(e=b.documentElement,Math.max(b.body["scroll"+a],e["scroll"+a],b.body["offset"+a],e["offset"+a],e["client"+a])):void 0===d?o.css(b,c,g):o.style(b,c,d,g)},b,f?d:void 0,f,null)}})}),o.fn.size=function(){return this.length},o.fn.andSelf=o.fn.addBack,"function"==typeof define&&define.amd&&define("jquery",[],function(){return o});var Lc=a.jQuery,Mc=a.$;return o.noConflict=function(b){return a.$===o&&(a.$=Mc),b&&a.jQuery===o&&(a.jQuery=Lc),o},typeof b===U&&(a.jQuery=a.$=o),o});

/* jQuery Tiny Pub/Sub - v0.7 - 10/27/2011
 * http://benalman.com/
 * https://github.com/cowboy/jquery-tiny-pubsub
 * Copyright (c) 2011 "Cowboy" Ben Alman; Licensed MIT, GPL */
define('pubsub',['jquery'],function($){(function(a){var b=a({});a.subscribe=function(){b.on.apply(b,arguments)},a.unsubscribe=function(){b.off.apply(b,arguments)},a.publish=function(){b.trigger.apply(b,arguments)}})(jQuery);});
define('modules/Cursor/src/CursorModel',[
	'jquery',
	'pubsub',
], function($, pubsub) {

	/**
	 * Cursor consists of a pos array that contains index start and index end of position
	 * @param {Int|Array|Object} listElements allows to get size of a list, must be an int, or an array, or an object, if it's an object then getTotal function will be called to get list length
	 * @param {Array} optCursor gets a cursor as an array of two positions [start,end]
	 */
	function CursorModel(listElements, optCursor, isEditable) {
		this.listElements = listElements;
		optCursor = optCursor || [0, 0];
		if (!(optCursor instanceof Array)) optCursor = [optCursor, optCursor];

		this.sideSelected = 1;
		this.isEditable = (typeof isEditable !== "undefined") ? isEditable : true;
		this.setPos(optCursor);
		// this.color = color || "#0099FF";
	}


	CursorModel.prototype.getPos = function() {
		return this.pos;
	};

	/**
	 * @param {Array} gives the position of the note of the cursor pos can be an array [start,end]
	 * or a single value that will be converted to an array [value, value]
	 */
	CursorModel.prototype.setPos = function(pos) {
		if (!(pos instanceof Array)) pos = [pos, pos];
		pos = this._checkPosition(pos);
		this.pos = pos;
		//$.publish('CursorModel-setPos', this.pos); //not used
	};

	CursorModel.prototype.getStart = function() {
		return this.pos[0];
	};

	CursorModel.prototype.getEnd = function() {
		return this.pos[1];
	};

	/**
	 * Set only one element of the position eg setIndexPos(0, 3), setIndexPos(1, 4)
	 * @param {int} index must be 0 or 1, 0 mean you want to change start, 1 mean you want to change end
	 * @param {int} pos   cursor position
	 */
	CursorModel.prototype.setIndexPos = function(index, pos) {
		if ((index !== 0 && index !== 1) || isNaN(pos)) {
			throw 'CursorModel - setIndexPos, arguments not well defined ' + 'index:' + index + ' - pos:' + pos;
		}
		pos = this._checkPosition(pos)[0];
		this.pos[index] = pos;
	};

	/**
	 * This function checks that a position is valid, it means that it's between 0 and listLength
	 * @param  {Int|Array} position can be a int or an array of two Int
	 * @return {Array}     A new position array clamped
	 */
	CursorModel.prototype._checkPosition = function(position) {
		function isFloat(n) {
			return n === Number(n) && n % 1 !== 0;
		}
		if (!(position instanceof Array)) position = [position, position];
		var numElems = this.getListLength();
		for (var i = 0; i < position.length; i++) {
			if (position[i] < 0) position[i] = 0;
			if (position[i] >= numElems) {
				position[i] = isFloat(numElems) ? numElems - 0.01 : numElems - 1;
			}
		}
		return position;
	};

	/**
	 * normally after deleting, if cursor points to an unexisting note, it moves to the last one existing
	 */
	CursorModel.prototype.revisePos = function() {
		for (var i in this.pos) {
			if (this.pos[i] >= this.getListLength()) this.setIndexPos(i, this.getListLength() - 1);
		}
	};

	/**
	 * expands (= moves just one side of the cursor)
	 * @param  {int} inc      -1 or 1, expand to left or right
	 */
	CursorModel.prototype.expand = function(inc) {
		if (this.pos[1] === this.pos[0]) {
			this.sideSelected = (inc > 0) ? 1 : 0;
		}
		var newPos = this.pos[this.sideSelected] + inc;
		if (newPos < 0) {
			newPos = 0;
		}
		if (newPos >= this.getListLength()) {
			newPos = this.getListLength() - 1;
		}
		this.setIndexPos(this.sideSelected, newPos);
	};

	/*	CursorModel.prototype.getRelativeCursor = function(index) {
			var newSelected = [this.pos[0] - index, this.pos[1] - index];
			return new CursorModel(newSelected);
		};*/

	CursorModel.prototype.reset = function() {
		this.setPos([0, 0]);
	};

	CursorModel.prototype.increment = function(inc) {
		inc = inc || 1;
		this.setIndexPos(0, this.pos[0] += inc);
		this.setIndexPos(1, this.pos[1] += inc);
	};

	CursorModel.prototype.getListLength = function() {
		if (typeof this.listElements === 'object') {
			return this.listElements.getTotal();
		}
		if (this.listElements.constructor === Array) {
			return this.listElements.length;
		}
		if (this.listElements.constructor === Number) {
			return this.listElements;
		}
	};

	CursorModel.prototype.setEditable = function(isEditable) {
		this.isEditable = !!isEditable;
	};

	CursorModel.prototype.getEditable = function() {
		return this.isEditable;
	};

	return CursorModel;
});
define('utils/UserLog',['jquery'], function($) {
	var UserLog = {};

	/**
	 * Call log function to send a message to user, message will automatically fadeOut quickly
	 * @param  {string} type         Define the type of message you are sending: 'info', 'success', 'warn' or 'error' (by default it's set to info)
	 * @param  {string} title        Title is the text that will be displayed to the user, it can contain variables
	 * @param  {HTMLElement} element HTMLElement where the span message will be inserted (it's inserted before this element) (by default it's on body)
	 */
	UserLog.logAutoFade = function(type, title, element, speed) {
		if (typeof type === "undefined") {
			type = 'info';
		}
		if (typeof title === "undefined") {
			title = 'Untitled';
		}
		if (typeof element === "undefined") {
			element = $('body')[0];
		}
		if (typeof speed === "undefined") {
			speed = 5000;
		}
		var className = '';
		switch (type) {
			case 'info':
				className = 'alert alert-info';
				break;
			case 'success':
				className = 'alert alert-success';
				break;
			case 'warn':
				className = 'alert alert-warning';
				break;
			case 'error':
				className = 'alert alert-error';
				break;
			default:
				className = 'alert alert-info';
		}
		var saveMsg = "<span class='" + className + "' style='position:fixed; z-index:9999; left:30%'>" + title + "</span>";
		$(saveMsg).insertBefore(element).fadeOut(speed, function() {
			$(this).remove();
		});
	};

	/**
	 * Call log function to send a message to user, message will not be hidden unless you call remove
	 * @param  {string} type         Define the type of message you are sending: 'info', 'success', 'warn' or 'error' (by default it's set to info)
	 * @param  {string} title        Title is the text that will be displayed to the user, it can contain variables
	 * @param  {HTMLElement} element HTMLElement where the span message will be inserted (it's inserted before this element) (by default it's on body)
	 * @return {string} Return the logList id of the newly created dom element
	 */
	UserLog.log = function(type, title, element) {
		if (typeof type === "undefined") {
			type = 'info';
		}
		if (typeof title === "undefined") {
			title = 'Untitled';
		}
		if (typeof element === "undefined") {
			element = $('body')[0];
		}
		var className = '';
		switch (type) {
			case 'info':
				className = 'alert alert-info';
				break;
			case 'success':
				className = 'alert alert-success';
				break;
			case 'warn':
				className = 'alert alert-warning';
				break;
			case 'error':
				className = 'alert alert-error';
				break;
			default:
				className = 'alert alert-info';
		}
		var id = Math.round((Math.random() * 1000)) + '-' + Date.now();
		var saveMsg = "<span class='" + className + "' id='logId-" + id + "' style='position:fixed; z-index:9999; left:30%'>" + title + "</span>";
		$(saveMsg).insertBefore(element);
		return id;
	};

	UserLog.removeLog = function(id) {
		if (typeof id === "undefined") {
			console.warn('UserLog - remove - id undefined ' + id);
		}
		$('#logId-' + id).remove();
	};

	return UserLog;
});
define('modules/ChordEdition/src/ChordEditionController',[
	'mustache',
	'modules/core/src/SongModel',
	'modules/Cursor/src/CursorModel',
	'utils/UserLog',
	'jquery',
	'pubsub',
], function(Mustache, CursorModel, SongModel, UserLog, $, pubsub) {

	function ChordEditionController(songModel, cursor, view) {
		this.songModel = songModel || new SongModel();
		this.cursor = cursor || new CursorModel();
		this.view = view;
		this.initSubscribe();
	}

	/**
	 * Subscribe to view events
	 */
	ChordEditionController.prototype.initSubscribe = function() {
		var self = this;
		/*$.subscribe('ChordEditionView-toggleChordVisibility', function(el) {
			self.toggleChordVisibility();
		});
		$.subscribe('ChordEditionView-deleteChord', function(el) {
			self.deleteChord();
		});
		$.subscribe('ChordEditionView-addChord', function(el) {
			self.addChord();
		});
		$.subscribe('ChordEditionView-toggleEditChord', function(el) {
			self.toggleEditChord();
		});*/
		$.subscribe('ChordEditionView-copyChords', function(el) {
			self.copyChords();
		});
		$.subscribe('ChordEditionView-pasteChords', function(el) {
			self.pasteChords();
		});
		/*$.subscribe('ChordEditionView-chordTabEvent', function(el, way) {
			self.chordTabEvent(way);
		});*/
		$.subscribe('ChordEditionView-activeView', function(el) {
			self.changeEditMode(true);
			// NOT WORKING: COMMENTED BECAUSE IT CREATES AN INFINITE LOOP OF PUBLISH - SUBSCRIBE
			//$.publish('ToViewer-draw', self.songModel);
		});
		$.subscribe('ChordEditionView-unactiveView', function(el) {
			self.changeEditMode(false);
		});
	};

	/*ChordEditionController.prototype.toggleChordVisibility = function() {
		console.log('toggleChordVisibility');
		// editor.toggleChordVisibility();
	};
	ChordEditionController.prototype.deleteChord = function() {
		console.log('deleteChord');
		// editor.deleteChord();
	};
	ChordEditionController.prototype.addChord = function() {
		console.log('addChord');
		// editor.addChord();
	};
	ChordEditionController.prototype.toggleEditChord = function() {
		console.log('toggleEditChord');
	};*/
	ChordEditionController.prototype.copyChords = function() {
		console.log('copyChords');
		// self.run("copyChords");
	};
	ChordEditionController.prototype.pasteChords = function() {
		console.log('pasteChords');
		// self.run("pasteChords",'', true);
	};
	/*ChordEditionController.prototype.chordTabEvent = function(way) {
		console.log('chordTabEvent', way);
	};*/

	ChordEditionController.prototype.getSelectedChords = function() {
		var chordManager = this.songModel.getComponent('chords');
		var selectedChords = chordManager.getChords(this.cursor.getStart(), this.cursor.getEnd() + 1);
		return selectedChords;
	};

	ChordEditionController.prototype.changeEditMode = function(isEditable) {
		this.cursor.setEditable(isEditable);
	};

	return ChordEditionController;
});
/**
 * @license RequireJS text 2.0.14 Copyright (c) 2010-2014, The Dojo Foundation All Rights Reserved.
 * Available via the MIT or new BSD license.
 * see: http://github.com/requirejs/text for details
 */
/*jslint regexp: true */
/*global require, XMLHttpRequest, ActiveXObject,
  define, window, process, Packages,
  java, location, Components, FileUtils */

define('text',['module'], function (module) {
    

    var text, fs, Cc, Ci, xpcIsWindows,
        progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'],
        xmlRegExp = /^\s*<\?xml(\s)+version=[\'\"](\d)*.(\d)*[\'\"](\s)*\?>/im,
        bodyRegExp = /<body[^>]*>\s*([\s\S]+)\s*<\/body>/im,
        hasLocation = typeof location !== 'undefined' && location.href,
        defaultProtocol = hasLocation && location.protocol && location.protocol.replace(/\:/, ''),
        defaultHostName = hasLocation && location.hostname,
        defaultPort = hasLocation && (location.port || undefined),
        buildMap = {},
        masterConfig = (module.config && module.config()) || {};

    text = {
        version: '2.0.14',

        strip: function (content) {
            //Strips <?xml ...?> declarations so that external SVG and XML
            //documents can be added to a document without worry. Also, if the string
            //is an HTML document, only the part inside the body tag is returned.
            if (content) {
                content = content.replace(xmlRegExp, "");
                var matches = content.match(bodyRegExp);
                if (matches) {
                    content = matches[1];
                }
            } else {
                content = "";
            }
            return content;
        },

        jsEscape: function (content) {
            return content.replace(/(['\\])/g, '\\$1')
                .replace(/[\f]/g, "\\f")
                .replace(/[\b]/g, "\\b")
                .replace(/[\n]/g, "\\n")
                .replace(/[\t]/g, "\\t")
                .replace(/[\r]/g, "\\r")
                .replace(/[\u2028]/g, "\\u2028")
                .replace(/[\u2029]/g, "\\u2029");
        },

        createXhr: masterConfig.createXhr || function () {
            //Would love to dump the ActiveX crap in here. Need IE 6 to die first.
            var xhr, i, progId;
            if (typeof XMLHttpRequest !== "undefined") {
                return new XMLHttpRequest();
            } else if (typeof ActiveXObject !== "undefined") {
                for (i = 0; i < 3; i += 1) {
                    progId = progIds[i];
                    try {
                        xhr = new ActiveXObject(progId);
                    } catch (e) {}

                    if (xhr) {
                        progIds = [progId];  // so faster next time
                        break;
                    }
                }
            }

            return xhr;
        },

        /**
         * Parses a resource name into its component parts. Resource names
         * look like: module/name.ext!strip, where the !strip part is
         * optional.
         * @param {String} name the resource name
         * @returns {Object} with properties "moduleName", "ext" and "strip"
         * where strip is a boolean.
         */
        parseName: function (name) {
            var modName, ext, temp,
                strip = false,
                index = name.lastIndexOf("."),
                isRelative = name.indexOf('./') === 0 ||
                             name.indexOf('../') === 0;

            if (index !== -1 && (!isRelative || index > 1)) {
                modName = name.substring(0, index);
                ext = name.substring(index + 1);
            } else {
                modName = name;
            }

            temp = ext || modName;
            index = temp.indexOf("!");
            if (index !== -1) {
                //Pull off the strip arg.
                strip = temp.substring(index + 1) === "strip";
                temp = temp.substring(0, index);
                if (ext) {
                    ext = temp;
                } else {
                    modName = temp;
                }
            }

            return {
                moduleName: modName,
                ext: ext,
                strip: strip
            };
        },

        xdRegExp: /^((\w+)\:)?\/\/([^\/\\]+)/,

        /**
         * Is an URL on another domain. Only works for browser use, returns
         * false in non-browser environments. Only used to know if an
         * optimized .js version of a text resource should be loaded
         * instead.
         * @param {String} url
         * @returns Boolean
         */
        useXhr: function (url, protocol, hostname, port) {
            var uProtocol, uHostName, uPort,
                match = text.xdRegExp.exec(url);
            if (!match) {
                return true;
            }
            uProtocol = match[2];
            uHostName = match[3];

            uHostName = uHostName.split(':');
            uPort = uHostName[1];
            uHostName = uHostName[0];

            return (!uProtocol || uProtocol === protocol) &&
                   (!uHostName || uHostName.toLowerCase() === hostname.toLowerCase()) &&
                   ((!uPort && !uHostName) || uPort === port);
        },

        finishLoad: function (name, strip, content, onLoad) {
            content = strip ? text.strip(content) : content;
            if (masterConfig.isBuild) {
                buildMap[name] = content;
            }
            onLoad(content);
        },

        load: function (name, req, onLoad, config) {
            //Name has format: some.module.filext!strip
            //The strip part is optional.
            //if strip is present, then that means only get the string contents
            //inside a body tag in an HTML string. For XML/SVG content it means
            //removing the <?xml ...?> declarations so the content can be inserted
            //into the current doc without problems.

            // Do not bother with the work if a build and text will
            // not be inlined.
            if (config && config.isBuild && !config.inlineText) {
                onLoad();
                return;
            }

            masterConfig.isBuild = config && config.isBuild;

            var parsed = text.parseName(name),
                nonStripName = parsed.moduleName +
                    (parsed.ext ? '.' + parsed.ext : ''),
                url = req.toUrl(nonStripName),
                useXhr = (masterConfig.useXhr) ||
                         text.useXhr;

            // Do not load if it is an empty: url
            if (url.indexOf('empty:') === 0) {
                onLoad();
                return;
            }

            //Load the text. Use XHR if possible and in a browser.
            if (!hasLocation || useXhr(url, defaultProtocol, defaultHostName, defaultPort)) {
                text.get(url, function (content) {
                    text.finishLoad(name, parsed.strip, content, onLoad);
                }, function (err) {
                    if (onLoad.error) {
                        onLoad.error(err);
                    }
                });
            } else {
                //Need to fetch the resource across domains. Assume
                //the resource has been optimized into a JS module. Fetch
                //by the module name + extension, but do not include the
                //!strip part to avoid file system issues.
                req([nonStripName], function (content) {
                    text.finishLoad(parsed.moduleName + '.' + parsed.ext,
                                    parsed.strip, content, onLoad);
                });
            }
        },

        write: function (pluginName, moduleName, write, config) {
            if (buildMap.hasOwnProperty(moduleName)) {
                var content = text.jsEscape(buildMap[moduleName]);
                write.asModule(pluginName + "!" + moduleName,
                               "define(function () { return '" +
                                   content +
                               "';});\n");
            }
        },

        writeFile: function (pluginName, moduleName, req, write, config) {
            var parsed = text.parseName(moduleName),
                extPart = parsed.ext ? '.' + parsed.ext : '',
                nonStripName = parsed.moduleName + extPart,
                //Use a '.js' file name so that it indicates it is a
                //script that can be loaded across domains.
                fileName = req.toUrl(parsed.moduleName + extPart) + '.js';

            //Leverage own load() method to load plugin value, but only
            //write out values that do not have the strip argument,
            //to avoid any potential issues with ! in file names.
            text.load(nonStripName, req, function (value) {
                //Use own write() method to construct full module value.
                //But need to create shell that translates writeFile's
                //write() to the right interface.
                var textWrite = function (contents) {
                    return write(fileName, contents);
                };
                textWrite.asModule = function (moduleName, contents) {
                    return write.asModule(moduleName, fileName, contents);
                };

                text.write(pluginName, nonStripName, textWrite, config);
            }, config);
        }
    };

    if (masterConfig.env === 'node' || (!masterConfig.env &&
            typeof process !== "undefined" &&
            process.versions &&
            !!process.versions.node &&
            !process.versions['node-webkit'] &&
            !process.versions['atom-shell'])) {
        //Using special require.nodeRequire, something added by r.js.
        fs = require.nodeRequire('fs');

        text.get = function (url, callback, errback) {
            try {
                var file = fs.readFileSync(url, 'utf8');
                //Remove BOM (Byte Mark Order) from utf8 files if it is there.
                if (file[0] === '\uFEFF') {
                    file = file.substring(1);
                }
                callback(file);
            } catch (e) {
                if (errback) {
                    errback(e);
                }
            }
        };
    } else if (masterConfig.env === 'xhr' || (!masterConfig.env &&
            text.createXhr())) {
        text.get = function (url, callback, errback, headers) {
            var xhr = text.createXhr(), header;
            xhr.open('GET', url, true);

            //Allow plugins direct access to xhr headers
            if (headers) {
                for (header in headers) {
                    if (headers.hasOwnProperty(header)) {
                        xhr.setRequestHeader(header.toLowerCase(), headers[header]);
                    }
                }
            }

            //Allow overrides specified in config
            if (masterConfig.onXhr) {
                masterConfig.onXhr(xhr, url);
            }

            xhr.onreadystatechange = function (evt) {
                var status, err;
                //Do not explicitly handle errors, those should be
                //visible via console output in the browser.
                if (xhr.readyState === 4) {
                    status = xhr.status || 0;
                    if (status > 399 && status < 600) {
                        //An http 4xx or 5xx error. Signal an error.
                        err = new Error(url + ' HTTP status: ' + status);
                        err.xhr = xhr;
                        if (errback) {
                            errback(err);
                        }
                    } else {
                        callback(xhr.responseText);
                    }

                    if (masterConfig.onXhrComplete) {
                        masterConfig.onXhrComplete(xhr, url);
                    }
                }
            };
            xhr.send(null);
        };
    } else if (masterConfig.env === 'rhino' || (!masterConfig.env &&
            typeof Packages !== 'undefined' && typeof java !== 'undefined')) {
        //Why Java, why is this so awkward?
        text.get = function (url, callback) {
            var stringBuffer, line,
                encoding = "utf-8",
                file = new java.io.File(url),
                lineSeparator = java.lang.System.getProperty("line.separator"),
                input = new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(file), encoding)),
                content = '';
            try {
                stringBuffer = new java.lang.StringBuffer();
                line = input.readLine();

                // Byte Order Mark (BOM) - The Unicode Standard, version 3.0, page 324
                // http://www.unicode.org/faq/utf_bom.html

                // Note that when we use utf-8, the BOM should appear as "EF BB BF", but it doesn't due to this bug in the JDK:
                // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4508058
                if (line && line.length() && line.charAt(0) === 0xfeff) {
                    // Eat the BOM, since we've already found the encoding on this file,
                    // and we plan to concatenating this buffer with others; the BOM should
                    // only appear at the top of a file.
                    line = line.substring(1);
                }

                if (line !== null) {
                    stringBuffer.append(line);
                }

                while ((line = input.readLine()) !== null) {
                    stringBuffer.append(lineSeparator);
                    stringBuffer.append(line);
                }
                //Make sure we return a JavaScript string and not a Java string.
                content = String(stringBuffer.toString()); //String
            } finally {
                input.close();
            }
            callback(content);
        };
    } else if (masterConfig.env === 'xpconnect' || (!masterConfig.env &&
            typeof Components !== 'undefined' && Components.classes &&
            Components.interfaces)) {
        //Avert your gaze!
        Cc = Components.classes;
        Ci = Components.interfaces;
        Components.utils['import']('resource://gre/modules/FileUtils.jsm');
        xpcIsWindows = ('@mozilla.org/windows-registry-key;1' in Cc);

        text.get = function (url, callback) {
            var inStream, convertStream, fileObj,
                readData = {};

            if (xpcIsWindows) {
                url = url.replace(/\//g, '\\');
            }

            fileObj = new FileUtils.File(url);

            //XPCOM, you so crazy
            try {
                inStream = Cc['@mozilla.org/network/file-input-stream;1']
                           .createInstance(Ci.nsIFileInputStream);
                inStream.init(fileObj, 1, 0, false);

                convertStream = Cc['@mozilla.org/intl/converter-input-stream;1']
                                .createInstance(Ci.nsIConverterInputStream);
                convertStream.init(inStream, "utf-8", inStream.available(),
                Ci.nsIConverterInputStream.DEFAULT_REPLACEMENT_CHARACTER);

                convertStream.readString(inStream.available(), readData);
                convertStream.close();
                inStream.close();
                callback(readData.value);
            } catch (e) {
                throw new Error((fileObj && fileObj.path || '') + ': ' + e);
            }
        };
    }
    return text;
});


define('text!modules/ChordEdition/src/ChordEditionTemplate.html',[],function () { return '<div id="edit_chords_second_level">\r\n\t<!--\r\n\t<div id="edit_chords_container">\r\n\t\t<div id="edit_each_chords_container">\r\n\t\t\t<div class="current_button" title="Show (V)" id="chord-visibility">\r\n\t\t\t\t<img src="/modules/ChordEdition/img/show.png" id="show_chord" alt="show" />\r\n\t\t\t\t<img src="/modules/ChordEdition/img/hide.png" id="hide_chord" alt="hide" />\r\n\t\t\t</div>\r\n\t\t\t<div class="current_button" title="Remove chord (Del)" id="delete_chord"><img src="/modules/ChordEdition/img/remove.png" alt="delete" /></div>\r\n\t\t\t<div class="current_button" title="Add chord (Space)" id="add_chord"><img src="/modules/ChordEdition/img/add.png" alt="add" /></div>\r\n\t\t</div>\r\n\t\t<div class="button_text">\r\n\t\t\tChords\r\n\t\t</div>\r\n\t</div>\r\n\t-->\r\n\r\n\t<div id="selection_container">\r\n\t\t<div id="edit_each_selection_container">\r\n\t\t\t<div class="current_button" title="Copy (Ctrl+C)" id="copy_chord"><img src="{{imgPath}}/copy.png" alt="copy" /></div>\r\n\t\t\t<div class="current_button" title="Paste (Ctrl+V)" id="paste_chord"><img src="{{imgPath}}/paste.png" alt="paste" /></div>\r\n\t\t</div>\r\n\t\t<div class="button_text">\r\n\t\t\tSelection\r\n\t\t</div>\r\n\t</div>\r\n\t<!--<div id="chord_helper_container"> <div id="chord_helper_container_chordName">No chord selected</div> <canvas height="100" width="180" id="chordTypeCanvas"></canvas></div>-->\r\n</div>';});

define('modules/ChordEdition/src/ChordEditionView',[
	'jquery',
	'mustache',
	'modules/core/src/SongModel',
	'utils/UserLog',
	'pubsub',
	'text!modules/ChordEdition/src/ChordEditionTemplate.html',
], function($, Mustache, SongModel, UserLog, pubsub, ChordEditionTemplate) {

	function ChordEditionView(parentHTML, cursor, imgPath) {
		this.cursor = cursor;
		this.el = undefined;
		this.imgPath = imgPath;
		this.initKeyboard();
	}

	ChordEditionView.prototype.render = function(parentHTML, callback) {
		var rendered = Mustache.render(ChordEditionTemplate, {
			'imgPath': this.imgPath
		});
		if (typeof parentHTML !== "undefined") {
			parentHTML.innerHTML = rendered;
		}
		this.el = rendered;
		//	$.publish('ChordEditionView-render');
		if (typeof callback === "function") {
			callback();
		}
		return;
	};

	/**
	 * Function called by MainMenuView
	 */
	ChordEditionView.prototype.initController = function() {
		// Chords
		/*$('#chord-visibility').click(function() {
			$.publish('ChordEditionView-toggleChordVisibility');
		});
		$('#delete_chord').click(function() {
			$.publish('ChordEditionView-deleteChord');
		});
		$('#add_chord').click(function() {
			$.publish('ChordEditionView-addChord');
		});

		// Selection
		$('#edit_chord').click(function() {
			$.publish('ChordEditionView-toggleEditChord');
		});*/
		$('#copy_chord').click(function() {
			fn = 'copyChords';
			$.publish('ChordEditionView', fn);
		});
		$('#paste_chord').click(function() {
			fn = 'pasteChords';
			$.publish('ChordEditionView', fn);
		});
	};

	ChordEditionView.prototype.initKeyboard = function() {
		$.subscribe('enter-key', function(el) {
			fn = 'toggleEditChord';
			$.publish('ChordEditionView', fn);
		});
		$.subscribe('ctrl-c-key', function(el) {
			fn = 'copyChords';
			$.publish('ChordEditionView', fn);
		});
		$.subscribe('ctrl-v-key', function(el) {
			fn = 'pasteChords';
			$.publish('ChordEditionView', fn);
		});
	};

	ChordEditionView.prototype.isEditMode = function(mode) {
		if (this.editMode === mode) {
			return true;
		}
		return false;
	};

	ChordEditionView.prototype.unactiveView = function(idElement) {
		this.editMode = '';
		$.publish('ChordEditionView-unactiveView');
	};

	ChordEditionView.prototype.activeView = function(idElement) {
		this.editMode = 'chords';
		$.publish('ChordEditionView-activeView', 'chords');
	};

	return ChordEditionView;
});
define('utils/ChordTypesCollection',[], function() {
	var ChordTypesCollection = {
		'allChordNotes': {
			"": "C4, E4, G4",
			"M7": "C4,E4,G4,B4",
			"m7": "C4,Eb4,G4,Bb4",
			"m": "C4,Eb4,G4",
			"mM7": "C4,Eb4,G4,B4",
			"7": "C4, E4, G4, Bb4",
			"6": "C4,E4,G4,A4",
			"9": "C4,E4,G4,Bb4,D5",
			"69": "C4,E4,G4,A4,D5",
			"11": "C4,E4,G4,Bb4,D5,F5",
			"13": "C4,E4,G4,Bb4,D5,F#5,A5",
			"halfdim7": "C4,Eb4,Gb4,Bb4",
			"dim": "C4,Eb4,Gb4",
			"dim7": "C4,Eb4,Gb4,A4",
			"7b9": "C4, E4, G4, Bb4, Db5",
			"7#9": "C4,E4,G4,Bb4,D#5",
			"7#9b5": "C4,E4,Gb4,Bb4,D#5",
			"7sus": "C4,F4,G4,Bb4",
			"7b9sus": "C4,F4,G4,Bb4,Db5",
			"7b13": "C4,E4,G4,Bb4,D5,F#5,Ab5",
			"7#11": "C4,E4,G4,Bb4,D5,F#5",
			"7#5": "C4,E4,G#4,Bb4",
			"m6": "C4, Eb4, G4, A4",
			"m9": "C4,Eb4,G4,Bb4,D5",
			"9#5": "C4,E4,G#4,Bb4,D5",
			"9sus": "C4, F4, G4, Bb4, D5",
			"4sus": "C4,F4,G4",
			"+": "C4,E4,G#4",
			"aug": "C4,E4,G#4",
			"M7#5": "C4, E4, G#4, B4",
			"M7#11": "C4,E4,G4,B4,D5,F#5",
			"add9": "C4,E4,G4,D5",
			"alt": "C4,E4,G#4,Bb4,D#5",
			"9#11": "C4,E4,G4,Bb4,D5,F#5",
			"m11": "C4,Eb4,G4,Bb4,D5,F5",
			"2": "C4,D4,E4,G4",
			"7#5b5": "C4,E4,Gb4,G#4,Bb4",
			"7#4#5": "C4,E4,F#4,G#4,Bb4",
			"7#5#11": "C4,F4,G#4,Bb4,D5,F#5",
			"7b5": "C4,E4,Gb4,Bb4",
			"13b9": "C4,E4,G4,Bb4,Db5,F#5,A5",
			"13#11": "C4,E4,G4,Bb4,D5,F#5,A5",
			"7b9#5": "C4,E4,G#4,Bb4,Db5",
			"11b9": "C4,E4,G4,Bb4,Db5,F5",
			"M9": "C4,E4,G4,B4,D5",
			"m69": "C4,Eb4,G4,A4,D5",
			"9b5": "C4,E4,Gb4,Bb4,D5",
			"7b9b5": "C4,E4,Gb4,Bb4,Db5",
			"7b9#11": "C4,F4,G4,Bb4,Db5,F#5",
			"7alt": "C4,E4,G#4,Bb4,D#5",
			"7#9#5": "C4,E4,G#4,Bb4,D#5",
			"+7": "C4,E4,G#4,Bb4",
			"6#11": "C4,E4,G4,A4,F#5",
			"Phrygian": "C4,F4,G4,Bb4,Db5",
			"Lydian": "C4,E4,G4,B4,D5,F#5",
			"Aeolian": "C4, Eb4, G4, Bb4, D5, F5",
			"m7sus4": "C4,F4,G4,Bb4",
			"7b13#11": "C4,E4,G4,Bb4,D5,F#5,Ab5",
			"dimM7": "C4,Eb4,Gb4,B4",
			"m7#5": "C4,Eb4,G#4,Bb4",
			"M9#11": "C4,E4,G4,B4,D5,F#5",
			"13sus": "C4, F4, G4, Bb4, D5, A5",
			"7b9#9": "C4,E4,G4,Bb4,Db5,D#5",
			"7#9#11": "C4,E4,G4,Bb4,D#5,F#5",
			"7b9b13": "C4,E4,G4,Bb4,Db5,F#5,Ab5",
			"mb6": "C4,Eb4,G4,Ab4",
			"7susadd3": "C4,E4,F4,Bb4",
			"7b13sus": "C4,F4,G4,Bb4,D5,Ab5",
			"7b9b13sus": "C4,F4,G4,Bb4,Db5,Ab5",
			"Dorian": "C4, Eb4, G4, Bb4, D5, F5",
			"m13": "C4,Eb4,G4,Bb4,D5,F5,A5",
			"M7#9b9": "C4,E4,G4,Bb4,Db5,D#5",
			"M7b9": "C4,E4,G4,B4,Db5",
			"+7#9": "C4,E4,G#4,Bb4,D#5",
			"m#5": "C4,Eb4,G#4",
			"+7b9": "C4,E4,G#4,Bb4,Db5",
			"M7#5#11": "C4,E4,G#4,Bb4,D5,F#5",
			"mb5b13": "C4,Eb4,Gb4,Bb4,D5,Ab5",
			"6#9": "C4,E4,G4,A4,D#5",
			"M7b5": "C4,E4,Gb4,B4",
			"m9#11": "C4,Eb4,G4,Bb4,D5,F#5",
			"m13#11": "C4,Eb4,G4,Bb4,D5,F#5,A5",
			"m7#11": "C4,Eb4,G4,Bb4,F#5",
			"M7#9#11": "C4,E4,G4,Bb4,D#5,F#5",
			"sus2": "C4, D4, G4",
			"13#9": "C4,E4,G4,Bb4,D#5,A5",
			"7#5b9": "C4,E4,G#4,Bb4,Db5",
			"69#11": "C4,E4,G4,A4,D5,F#5",
			"sus4": "C4,F4,G4",
			"aug#4": "C4,E4,F#4,G#4",
			"m7add4": "C4,Eb4,F4,G4,Bb4",
			"7#5#9": "C4,E4,G#4,Bb4,D#5",
			"m9M7": "C4,Eb4,G4,B4,D5",
			"pedal": "C4",
			"+add9": "C4,E4,G#4,D5",
			"7b5#9": "C4,E4,Gb4,Bb4,D#5",
			"7#4": "C4,E4,F#4,G4,Bb4",
			"M7#4": "C4,E4,F#4,G4,B4",
			"m(add9)": "C4,Eb4,G4,D5",
			"m7b5#5": "C4,Eb4,Gb4,G#4,Bb4",
			"13b9sus": "C4,E4,G4,Bb4,Db5,A5",
			"m9b5": "C4,Eb4,Gb4,Bb4,D5",
			"(#11)": "C4,E4,G4,F#5",
			"M7(\u266e4)": "C4,E4,F4,G4,B4",
			"m7(b5b2)": "C4,Db4,Eb4,Gb4,Bb4",
			"+(add9)": "C4,E4,G#4,D5",
			"M13": "C4,E4,G4,B4,D5,F#5,A5",
			"m7b5b13": "C4,Eb4,Gb4,Bb4,D5,Ab5",
			"5": "C4,G4",
			"(no3rd)": "C4,G4",
			"(b5)": "C4,E4,Gb4",
			"m(M9)": "C4,Eb4,G4,D5",
			"(add9)": "C4,E4,G4,D5",
			"(9, #11)": "C4,E4,G4,Bb4,D5,F#5",
			"m(m7M7)": "C4,Eb4,G4,B4",
			"(b9b13)": "C4,E4,G4,Bb4,Db5,Ab5",
			"13(b9#11)": "C4,E4,G4,Bb4,Db5,F#5",
			"13(b9b5)": "C4,E4,Gb4,Bb4,Db5,F#5,A5",
			"m(omit5)": "C4,Eb4",
			"m7(omit5)": "C4,Eb4,Bb4",
			"+(b9)": "C4,E4,G#4,Db5",
			"6sus4": "C4,F4,G4,A4",
			"m11b5": "C4,Eb4,Gb4,Bb4,D5,F5",
			"7b6": "C4,E4,G4,Ab4,Bb4",
			"7susomit5": "C4,F4,Bb4",
			"13b9#11": "C4,E4,G4,Bb4,Db5,F#5,Ab5",
			"#11": "C4,E4,G4,Bb4,D5,F#5",
			"M9#5": "C4,E4,G#4,B4,D5",
			"halfdim7add11": "C4,Eb4,G4,Bb4,F5",
			"sus4add9": "C4,F4,G4,D5",
			"add9addb13": "C4,E4,G4,D5,Ab5",
			"madd9": "C4,Eb4,G4,D5",
			"13b5": "C4,E4,Gb4,Bb4,D5,A5",
			"dim7M7": "C4,Eb4,Gb4,B4",
			"M7add13": "C4,E4,G4,B4,D5,A5",
			"m7add11add13": "C4,Eb4,G4,Bb4,F5,A5",
			"add9b5": "C4,E4,Gb4,D5",
			"mM7#11": "C4,Eb4,G4,B4,D5,F#5",
			"m9add13": "C4,Eb4,G4,Bb4,D5,A5",
			"5add9": "C4,E4,G4,D5",
			"M9b5": "C4,E4,Gb4,D5",
			"mM7b13": "C4,Eb4,G4,Bb4,D5,Ab5",
			"madd9add11": "C4,Eb4,G4,D5,F5",
			"13b9b5": "C4,E4,Gb4,Bb4,Db5,F#5,Ab5",
			"sus": "C4,F4,G4",
			"add#11": "C4,E4,G4,F#5",
			"m7addM7": "C4,Eb4,G4,Bb4,B4",
			"halfdim7b9": "C4,Eb4,Gb4,Bb4,Db5",
			"M13#11": "C4,E4,G4,Bb4,D5,F#5,A5",
			"7omit5": "C4,E4,Bb4",
			"M7#9": "C4,E4,G4,Bb4,D#5",
			"13(add11)": "C4,E4,G4,Bb4,D5,F5,A5",
			"M7(add6)": "C4,E4,G4,A4,B4",
			"sus24": "C4,D4,F4",
			"m6M7": "C4,Eb4,G4,A4,B4",
			"m(M13)": "C4,Eb4,G4,Bb4,D5,A5",
			"m(add4)": "C4,Eb4,F4,G4",
			"m7b9": "C4,Eb4,G4,Bb4,Db5",
			"(add2)": "C4,D4,E4,G4",
			"mM7#5": "C4, Eb4, G#4, B4",
			"halfdim7sus4": "C4, F4, Gb4, Bb4",
			"m9sus4": "C4, F4, G4, Bb4, D5",
			"mM7b5": "C4, Eb4, Gb4, B4",
			"m6add11": "C4, Eb4, G4, A4, F5",
			"7#9b13": "C4, E4, G4, Bb4, Db5, F5",
			"M7#9b5": "C4, E4, Gb4, B4, D#5",
			"13#9b5": "C4, E4, Gb4, Bb4, D#5, F#5, A5",
			"m9#5": "C4, Eb4, G#4, Bb4, D5",
			"m9M7b5": "C4, Eb4, Gb4, B4, D5",
			"m7M7": "C4, Eb4, G4, Bb4, B4",
			"7#9sus4": "C4, F4, G4, Bb4, D#5",
			"M7b6": "C4, E4, G4, Ab4, B4",
			"m2": "C4, D4, Eb4, G4",
			"6b5": "C4, E4, Gb4, A4",
			"msus4": "C4, Eb4, F4, G4",
			"69(omit3)": "C4, G4, A4, D5",
			"m(b9)": "C4, Eb4, G4, Db5",
			"M7#5b5": "C4, E4, Gb4, G#4, B4",
			"7b9#9b5": "C4, E4, Gb4, Bb4, Db5, D#5",
			"7b9b5#5": "C4, E4, Gb4, G#4, Bb4, Db5",
			"Lydian(#6)": "C4, E4, G4, A#4, D5, F#5",
			"9b13": "C4, E4, G4, Bb4, D5, Ab5",
			"7(13)": "C4, E4, G4, Bb4, A5",
			"#9#11": "C4, E4, G4, D#5, F#5",
			"m69(11)": "C4, Eb4, G4, A4, D5, F5",
			"m11M7": "C4, Eb4, G4, B4, D5, F5",
			"13#9#11": "C4, E4, G4, Bb4, D#5, F#5, A5",
			"M7(omit3)": "C4, G4, B4",
			"7#9(omit5)": "C4, E4, Bb4, D#5",
			"M7(omit5)": "C4, E4, B4",
			"m11omit5": "C4, Eb4, Bb4, D5, F5",
			"13#9#5": "C4, E4, G#4, Bb4, D#5, F#5, A5",
			"add9omit3": "C4, G4, D5",
			"7b9#5#11": "C4, E4, G#4, Bb4, Db5, F#5",
			"M7sus": "C4, F4, G4, B4",
			"addb13": "C4, E4, G4, Ab4",
			"m7add13": "C4, Eb4, G4, Bb4, Ab5",
			"m7addb13": "C4, Eb4, G4, Bb4, Ab5",
			"sus(addb9)": "C4, F4, G4, Db5",
			"add11": "C4, E4, G4, F5",
			"add9sus": "C4, F4, G4, D5",
			"Phrygian(add3)": "C4, E4, F4, G4, Bb4, Db5",
			"m9M7#11": "C4, Eb4, G4, B4, D5, F#5",
			"madd11": "C4, Eb4, G4, F5",
			"(add#9)": "C4, D#4, E4, G4",
			"9omit5": "C4, E4, Bb4, D5",
			"M7add11": "C4, E4, G4, B4, F5",
			"m7add9": "C4, Eb4, G4, Bb4, D5",
			"m7b5": "C4, Eb4, Gb4, Bb4",
			"dim(b13)": "C4, D#4, F#4, Ab4",
			"m7(add11)": "C4, E4, G4, Bb4",
			"M7(add#11)": "C4, E4, G4, Bb4",
			"M7(add9)": "C4, E4, G4, Bb4",
			"sus4b9": "C4, E4, G4, Bb4",
			"sus4(9,13)": "C4, E4, G4, Bb4",
			"_#5add#9": "C4, E4, G#4, D#5",
			"m69addM7": "C4, Eb4, G4, A4, B4, D5",
			"m69(#11)": "C4, Eb4, G4, A4, D5, F#5",
			"m11M7b5": "C4, Eb4, Gb4, B4, F5",
			"mM7(add9)": "C4, Eb4, G4, B4",
			"m6(add9)": "C4, Eb4, G4, A4, D5",
			"7b5b9": "C4, E4, Gb4, Bb4, Db5",
			"dim(9)": "C4, Eb4, Gb4, Bbb4, D5",
			"m7(add11omit5)": "C4, Eb4, Bb4, F5",
			"_#9": "C4, E4, G4, D#5",
			"mM7add11": "C4, Eb4, G4, B4, F5",
			"m#11": "C4, Eb4, G4, Bb4, D5, F#5",
			"M9sus": "C4, F4, G4, B4, D5",
			"M9add13": "C4, E4, G4, B4, D5, A5",
			"M7addb13": "C4, E4, G4, B4, Ab5",
			"halfdim7add13": "C4, Eb4, Gb4, Bb4, A5",
			"omit5": "C4, E4",
			"m9add#5": "C4, Eb4, G4, G#4, Bb4, D5",
			"7add11": "C4, E4, G4, Bb4, F5",
			"69omit5": "C4, E4, A4, D5",
			"4(addb9)": "C4, F4, G4, Db5",
			"dim7add9": "C4, Eb4, Gb4, A4, D5",
			"13b9add#5": "C4, E4, G4, Bb4, Db5, G#5, A5",
			"5#11": "C4, G4, F#5",
			"addb9": "C4, E4, G4, Db5",
			"6#9#11": "C4, E4, G4, A4, D#5, F#5",
			"dim7b13": "C4, E4, G4, Bb4",
			"sus4add13": "C4, E4, G4, Bb4",
			"halfdim7add9": "C4, E4, G4, Bb4",
			"7b9b11": "C4, E4, G4, Bb4",
			"omit3": "C4, E4, G4, Bb4",
			"9omit3": "C4, E4, G4, Bb4",
			"7omit3": "C4, E4, G4, Bb4",
			"7b9omit3": "C4, E4, G4, Bb4",
			"m11#5": "C4, Eb4, Ab4, Bb4, D5, F5",
			"_#9b13": "C4, E4, G4, Eb5, Ab5",
			"11b9#5": "C4, E4, G#4, Bb4, Db5, F5",
			"mM9": "C4, E4, G4, Bb4",
			"M7(6)": "C4, E4, G4, Bb4",
			"m7(6)": "C4, E4, G4, Bb4",
			"m7b13": "C4, E4, G4, Bb4",
			"(#5)": "C4, E4, G4, Bb4",
			"7susadd13": "C4, F4, G4, Bb4, A5",
			"m11b6": "C4, Eb4, G4, Ab4, Bb4, D5, F5",
			"M7#11(omit3)": "C4, G4, B4, F#5",
			"mb5": "C4, Eb4, Gb4",
			"m7b6": "C4, Eb4, G4, Ab4, Bb4",
			"sus4omit5": "C4, E4, G4, Bb4",
			"m(omit3)": "C4, E4, G4, Bb4",
			"m(addb9)": "C4, E4, G4, Bb4",
			"m6(omit5)": "C4, E4, G4, Bb4",
			"_b9": "C4, E4, G4, Db5",
			"M7(69)": "C4, E4, G4, Bb4",
			"dimadd11": "C4, Eb4, Gb4, F5",
			"_b9#11": "C4, E4, G4, Db5, F#5",
			"9b5b13": "C4, E4, Gb4, D5, Ab5",
			"4(add9)": "C4, F4, G4, D5",
			"M9#11(6)": "C4, E4, G4, A4, B4, D5, F#5",
			"m6(add11)": "C4, Eb4, G4, A4, F5",
			"(b9)": "C4, E4, G4, Db5",
			"m6(M7)": "C4, Eb4, G4, A4, B4",
			"(b5)sus4": "C4, F4, Gb4",
			"7#9add4": "C4, E4, G4, Bb4, D#5, F5",
			"13omit3": "C4, G4, Bb4, D5, F#5, A5",
			"dim7add11": "C4, Eb4, Gb4, A4, F5",
			"m9b13": "C4, Eb4, G4, Bb4, D5, Ab5",
			"mb6(add9)": "C4, Eb4, G4, Ab4, D5",
			"9#5#11": "C4, E4, G#4, Bb4, D5, F#5",
			"#11add9": "C4, E4, G4, D5, F#5",
			"_#11add9": "C4, E4, G4, D5, F#5",
			"6omit3": "C4, G4, A4",
			"9b5omit3": "C4, Gb4, Bb4, D5",
			"9add13": "C4, E4, G4, Bb4, D5, A5",
			"dim11": "C4, Eb4, Gb4, A4, D5, F5",
			"m11b9": "C4, Eb4, G4, Bb4, Db5, F5",
			"m7#5add4": "C4, Eb4, G#4, Bb4, F5",
			"_b9sus": "C4, F4, G4, Db5",
			"9#11omit3": "C4, G4, Bb4, D5, F#5",
			"_b9#5sus": "C4, F4, G#4, Bb4, Db5",
			"7b9#5sus": "C4, F4, G#4, Bb4, Db5",
			"M9b5add13": "C4, E4, Gb4, B4, D5, A5",
			"mb9add11": "C4, Eb4, G4, Db5, F5"
		}
	};
	return ChordTypesCollection;
});
define('utils/ChordUtils',['jquery', 'utils/NoteUtils', 'utils/ChordTypesCollection'], function($, NoteUtils, ChordTypesCollection) {
	var ChordUtils = {};


	// TODO put in API
	/**
	 * Retrieve an list of object containing chordtypes and notes
	 * @return {function} call callback with an Sring containing notes transposed like ["Cm" = "C4, Eb4, G4",...]
	 * Warning, you probably will need to convert the string to array
	 */
	ChordUtils.getAllChordTypeFromDB = function(callback) {
		$.ajax({
			url: 'api/chordsTypesInfo.php',
			dataType: 'jsonp',
			type: 'POST',
			data: {
				action: 'getAllChordNotes'
			},
			success: function(data) {
				if (typeof callback !== "undefined") {
					if (typeof data !== "undefined" && data.allChordNotes) {
						callback(data);
					} else {
						callback('error ' + data);
					}
				}
			}
		});
	};


	ChordUtils.getAllChordTypes = function() {
		// case we already now allchords
		if (typeof ChordUtils.allChords !== "undefined") {
			return ChordUtils.chordTypeToNote;
		}
		// case a cache is available
		else if (typeof ChordTypesCollection !== "undefined") {
			ChordUtils.chordTypeToNote = [];
			// tool function, building an associative array between chordnames and chordnotes (C root)
			// Usage : chordTypeToNote['7b5'] will return ["C4", "E4", "Gb4", "Bb4"]
			for (var chord in ChordTypesCollection.allChordNotes) {
				ChordUtils.chordTypeToNote[chord] = NoteUtils.transformStringNote2ArrayNote(ChordTypesCollection.allChordNotes[chord]);
			}
			return ChordUtils.chordTypeToNote;
		}
		// case we request database
		else {
			// tool function, building an associative array between chordnames and chordnotes (C root)
			// Usage : chordTypeToNote['7b5'] will return ["C4", "E4", "Gb4", "Bb4"]
			ChordUtils.chordTypeToNote = [];
			ChordUtils.getAllChordTypeFromDB(function(data) {
				for (var chord in data.allChordNotes) {
					ChordUtils.chordTypeToNote[chord] = NoteUtils.transformStringNote2ArrayNote(data.allChordNotes[chord]);
				}
			});
			return ChordUtils.chordTypeToNote;
		}
	};

	ChordUtils.getAllChords = function() {
		var chordTypes = this.getAllChordTypes();
		var pitchClasses = ["C", "C#", "Cb", "D", "D#", "Db", "E", "E#", "Eb", "F", "F#", "Fb", "G", "G#", "Gb", "A", "A#", "Ab", "B", "B#", "Bb", "%", "%%", "NC"];
		var chords = [];
		for (var pClass in pitchClasses) {
			if (pitchClasses[pClass].indexOf("%") != -1 || pitchClasses[pClass] == 'NC') {
				chords.push(pitchClasses[pClass]);
				continue;
			}

			for (var chordType in chordTypes) {
				if (chordType.substring(0, 1) == "#" || chordType.substring(0, 1) == "b") chordType = "_" + chordType;
				chords.push(pitchClasses[pClass] + chordType);
			}

		}
		ChordUtils.allChords = chords;
		return chords;
	};


	return ChordUtils;
});
/**
*  Ajax Autocomplete for jQuery, version 1.2.16
*  (c) 2014 Tomas Kirda
*
*  Ajax Autocomplete for jQuery is freely distributable under the terms of an MIT-style license.
*  For details, see the web site: https://github.com/devbridge/jQuery-Autocomplete
*  https://www.devbridge.com/sourcery/components/jquery-autocomplete/
*/
!function(a){"function"==typeof define&&define.amd?define('jquery_autocomplete',["jquery"],a):a("object"==typeof exports&&"function"==typeof require?require("jquery"):jQuery)}(function(a){function b(c,d){var e=function(){},f=this,g={ajaxSettings:{},autoSelectFirst:!1,appendTo:document.body,serviceUrl:null,lookup:null,onSelect:null,width:"auto",minChars:1,maxHeight:300,deferRequestBy:0,params:{},formatResult:b.formatResult,delimiter:null,zIndex:9999,type:"GET",noCache:!1,onSearchStart:e,onSearchComplete:e,onSearchError:e,preserveInput:!1,containerClass:"autocomplete-suggestions",tabDisabled:!1,dataType:"text",currentRequest:null,triggerSelectOnValidInput:!0,preventBadQueries:!0,lookupFilter:function(a,b,c){return-1!==a.value.toLowerCase().indexOf(c)},paramName:"query",transformResult:function(b){return"string"==typeof b?a.parseJSON(b):b},showNoSuggestionNotice:!1,noSuggestionNotice:"No results",orientation:"bottom",forceFixPosition:!1};f.element=c,f.el=a(c),f.suggestions=[],f.badQueries=[],f.selectedIndex=-1,f.currentValue=f.element.value,f.intervalId=0,f.cachedResponse={},f.onChangeInterval=null,f.onChange=null,f.isLocal=!1,f.suggestionsContainer=null,f.noSuggestionsContainer=null,f.options=a.extend({},g,d),f.classes={selected:"autocomplete-selected",suggestion:"autocomplete-suggestion"},f.hint=null,f.hintValue="",f.selection=null,f.initialize(),f.setOptions(d)}var c=function(){return{escapeRegExChars:function(a){return a.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&")},createNode:function(a){var b=document.createElement("div");return b.className=a,b.style.position="absolute",b.style.display="none",b}}}(),d={ESC:27,TAB:9,RETURN:13,LEFT:37,UP:38,RIGHT:39,DOWN:40};b.utils=c,a.Autocomplete=b,b.formatResult=function(a,b){var d="("+c.escapeRegExChars(b)+")";return a.value.replace(new RegExp(d,"gi"),"<strong>$1</strong>")},b.prototype={killerFn:null,initialize:function(){var c,d=this,e="."+d.classes.suggestion,f=d.classes.selected,g=d.options;d.element.setAttribute("autocomplete","off"),d.killerFn=function(b){0===a(b.target).closest("."+d.options.containerClass).length&&(d.killSuggestions(),d.disableKillerFn())},d.noSuggestionsContainer=a('<div class="autocomplete-no-suggestion"></div>').html(this.options.noSuggestionNotice).get(0),d.suggestionsContainer=b.utils.createNode(g.containerClass),c=a(d.suggestionsContainer),c.appendTo(g.appendTo),"auto"!==g.width&&c.width(g.width),c.on("mouseover.autocomplete",e,function(){d.activate(a(this).data("index"))}),c.on("mouseout.autocomplete",function(){d.selectedIndex=-1,c.children("."+f).removeClass(f)}),c.on("click.autocomplete",e,function(){d.select(a(this).data("index"))}),d.fixPositionCapture=function(){d.visible&&d.fixPosition()},a(window).on("resize.autocomplete",d.fixPositionCapture),d.el.on("keydown.autocomplete",function(a){d.onKeyPress(a)}),d.el.on("keyup.autocomplete",function(a){d.onKeyUp(a)}),d.el.on("blur.autocomplete",function(){d.onBlur()}),d.el.on("focus.autocomplete",function(){d.onFocus()}),d.el.on("change.autocomplete",function(a){d.onKeyUp(a)}),d.el.on("input.autocomplete",function(a){d.onKeyUp(a)})},onFocus:function(){var a=this;a.fixPosition(),a.options.minChars<=a.el.val().length&&a.onValueChange()},onBlur:function(){this.enableKillerFn()},setOptions:function(b){var c=this,d=c.options;a.extend(d,b),c.isLocal=a.isArray(d.lookup),c.isLocal&&(d.lookup=c.verifySuggestionsFormat(d.lookup)),d.orientation=c.validateOrientation(d.orientation,"bottom"),a(c.suggestionsContainer).css({"max-height":d.maxHeight+"px",width:d.width+"px","z-index":d.zIndex})},clearCache:function(){this.cachedResponse={},this.badQueries=[]},clear:function(){this.clearCache(),this.currentValue="",this.suggestions=[]},disable:function(){var a=this;a.disabled=!0,clearInterval(a.onChangeInterval),a.currentRequest&&a.currentRequest.abort()},enable:function(){this.disabled=!1},fixPosition:function(){var b=this,c=a(b.suggestionsContainer),d=c.parent().get(0);if(d===document.body||b.options.forceFixPosition){var e=b.options.orientation,f=c.outerHeight(),g=b.el.outerHeight(),h=b.el.offset(),i={top:h.top,left:h.left};if("auto"===e){var j=a(window).height(),k=a(window).scrollTop(),l=-k+h.top-f,m=k+j-(h.top+g+f);e=Math.max(l,m)===l?"top":"bottom"}if(i.top+="top"===e?-f:g,d!==document.body){var n,o=c.css("opacity");b.visible||c.css("opacity",0).show(),n=c.offsetParent().offset(),i.top-=n.top,i.left-=n.left,b.visible||c.css("opacity",o).hide()}"auto"===b.options.width&&(i.width=b.el.outerWidth()-2+"px"),c.css(i)}},enableKillerFn:function(){var b=this;a(document).on("click.autocomplete",b.killerFn)},disableKillerFn:function(){var b=this;a(document).off("click.autocomplete",b.killerFn)},killSuggestions:function(){var a=this;a.stopKillSuggestions(),a.intervalId=window.setInterval(function(){a.hide(),a.stopKillSuggestions()},50)},stopKillSuggestions:function(){window.clearInterval(this.intervalId)},isCursorAtEnd:function(){var a,b=this,c=b.el.val().length,d=b.element.selectionStart;return"number"==typeof d?d===c:document.selection?(a=document.selection.createRange(),a.moveStart("character",-c),c===a.text.length):!0},onKeyPress:function(a){var b=this;if(!b.disabled&&!b.visible&&a.which===d.DOWN&&b.currentValue)return void b.suggest();if(!b.disabled&&b.visible){switch(a.which){case d.ESC:b.el.val(b.currentValue),b.hide();break;case d.RIGHT:if(b.hint&&b.options.onHint&&b.isCursorAtEnd()){b.selectHint();break}return;case d.TAB:if(b.hint&&b.options.onHint)return void b.selectHint();if(-1===b.selectedIndex)return void b.hide();if(b.select(b.selectedIndex),b.options.tabDisabled===!1)return;break;case d.RETURN:if(-1===b.selectedIndex)return void b.hide();b.select(b.selectedIndex);break;case d.UP:b.moveUp();break;case d.DOWN:b.moveDown();break;default:return}a.stopImmediatePropagation(),a.preventDefault()}},onKeyUp:function(a){var b=this;if(!b.disabled){switch(a.which){case d.UP:case d.DOWN:return}clearInterval(b.onChangeInterval),b.currentValue!==b.el.val()&&(b.findBestHint(),b.options.deferRequestBy>0?b.onChangeInterval=setInterval(function(){b.onValueChange()},b.options.deferRequestBy):b.onValueChange())}},onValueChange:function(){var b,c=this,d=c.options,e=c.el.val(),f=c.getQuery(e);return c.selection&&c.currentValue!==f&&(c.selection=null,(d.onInvalidateSelection||a.noop).call(c.element)),clearInterval(c.onChangeInterval),c.currentValue=e,c.selectedIndex=-1,d.triggerSelectOnValidInput&&(b=c.findSuggestionIndex(f),-1!==b)?void c.select(b):void(f.length<d.minChars?c.hide():c.getSuggestions(f))},findSuggestionIndex:function(b){var c=this,d=-1,e=b.toLowerCase();return a.each(c.suggestions,function(a,b){return b.value.toLowerCase()===e?(d=a,!1):void 0}),d},getQuery:function(b){var c,d=this.options.delimiter;return d?(c=b.split(d),a.trim(c[c.length-1])):b},getSuggestionsLocal:function(b){var c,d=this,e=d.options,f=b.toLowerCase(),g=e.lookupFilter,h=parseInt(e.lookupLimit,10);return c={suggestions:a.grep(e.lookup,function(a){return g(a,b,f)})},h&&c.suggestions.length>h&&(c.suggestions=c.suggestions.slice(0,h)),c},getSuggestions:function(b){var c,d,e,f,g=this,h=g.options,i=h.serviceUrl;if(h.params[h.paramName]=b,d=h.ignoreParams?null:h.params,h.onSearchStart.call(g.element,h.params)!==!1){if(a.isFunction(h.lookup))return void h.lookup(b,function(a){g.suggestions=a.suggestions,g.suggest(),h.onSearchComplete.call(g.element,b,a.suggestions)});g.isLocal?c=g.getSuggestionsLocal(b):(a.isFunction(i)&&(i=i.call(g.element,b)),e=i+"?"+a.param(d||{}),c=g.cachedResponse[e]),c&&a.isArray(c.suggestions)?(g.suggestions=c.suggestions,g.suggest(),h.onSearchComplete.call(g.element,b,c.suggestions)):g.isBadQuery(b)?h.onSearchComplete.call(g.element,b,[]):(g.currentRequest&&g.currentRequest.abort(),f={url:i,data:d,type:h.type,dataType:h.dataType},a.extend(f,h.ajaxSettings),g.currentRequest=a.ajax(f).done(function(a){var c;g.currentRequest=null,c=h.transformResult(a),g.processResponse(c,b,e),h.onSearchComplete.call(g.element,b,c.suggestions)}).fail(function(a,c,d){h.onSearchError.call(g.element,b,a,c,d)}))}},isBadQuery:function(a){if(!this.options.preventBadQueries)return!1;for(var b=this.badQueries,c=b.length;c--;)if(0===a.indexOf(b[c]))return!0;return!1},hide:function(){var b=this;b.visible=!1,b.selectedIndex=-1,clearInterval(b.onChangeInterval),a(b.suggestionsContainer).hide(),b.signalHint(null)},suggest:function(){if(0===this.suggestions.length)return void(this.options.showNoSuggestionNotice?this.noSuggestions():this.hide());var b,c,d=this,e=d.options,f=e.groupBy,g=e.formatResult,h=d.getQuery(d.currentValue),i=d.classes.suggestion,j=d.classes.selected,k=a(d.suggestionsContainer),l=a(d.noSuggestionsContainer),m=e.beforeRender,n="",o=function(a){var c=a.data[f];return b===c?"":(b=c,'<div class="autocomplete-group"><strong>'+b+"</strong></div>")};return e.triggerSelectOnValidInput&&(c=d.findSuggestionIndex(h),-1!==c)?void d.select(c):(a.each(d.suggestions,function(a,b){f&&(n+=o(b,h,a)),n+='<div class="'+i+'" data-index="'+a+'">'+g(b,h)+"</div>"}),this.adjustContainerWidth(),l.detach(),k.html(n),a.isFunction(m)&&m.call(d.element,k),d.fixPosition(),k.show(),e.autoSelectFirst&&(d.selectedIndex=0,k.scrollTop(0),k.children().first().addClass(j)),d.visible=!0,void d.findBestHint())},noSuggestions:function(){var b=this,c=a(b.suggestionsContainer),d=a(b.noSuggestionsContainer);this.adjustContainerWidth(),d.detach(),c.empty(),c.append(d),b.fixPosition(),c.show(),b.visible=!0},adjustContainerWidth:function(){var b,c=this,d=c.options,e=a(c.suggestionsContainer);"auto"===d.width&&(b=c.el.outerWidth()-2,e.width(b>0?b:300))},findBestHint:function(){var b=this,c=b.el.val().toLowerCase(),d=null;c&&(a.each(b.suggestions,function(a,b){var e=0===b.value.toLowerCase().indexOf(c);return e&&(d=b),!e}),b.signalHint(d))},signalHint:function(b){var c="",d=this;b&&(c=d.currentValue+b.value.substr(d.currentValue.length)),d.hintValue!==c&&(d.hintValue=c,d.hint=b,(this.options.onHint||a.noop)(c))},verifySuggestionsFormat:function(b){return b.length&&"string"==typeof b[0]?a.map(b,function(a){return{value:a,data:null}}):b},validateOrientation:function(b,c){return b=a.trim(b||"").toLowerCase(),-1===a.inArray(b,["auto","bottom","top"])&&(b=c),b},processResponse:function(a,b,c){var d=this,e=d.options;a.suggestions=d.verifySuggestionsFormat(a.suggestions),e.noCache||(d.cachedResponse[c]=a,e.preventBadQueries&&0===a.suggestions.length&&d.badQueries.push(b)),b===d.getQuery(d.currentValue)&&(d.suggestions=a.suggestions,d.suggest())},activate:function(b){var c,d=this,e=d.classes.selected,f=a(d.suggestionsContainer),g=f.find("."+d.classes.suggestion);return f.find("."+e).removeClass(e),d.selectedIndex=b,-1!==d.selectedIndex&&g.length>d.selectedIndex?(c=g.get(d.selectedIndex),a(c).addClass(e),c):null},selectHint:function(){var b=this,c=a.inArray(b.hint,b.suggestions);b.select(c)},select:function(a){var b=this;b.hide(),b.onSelect(a)},moveUp:function(){var b=this;if(-1!==b.selectedIndex)return 0===b.selectedIndex?(a(b.suggestionsContainer).children().first().removeClass(b.classes.selected),b.selectedIndex=-1,b.el.val(b.currentValue),void b.findBestHint()):void b.adjustScroll(b.selectedIndex-1)},moveDown:function(){var a=this;a.selectedIndex!==a.suggestions.length-1&&a.adjustScroll(a.selectedIndex+1)},adjustScroll:function(b){var c=this,d=c.activate(b);if(d){var e,f,g,h=a(d).outerHeight();e=d.offsetTop,f=a(c.suggestionsContainer).scrollTop(),g=f+c.options.maxHeight-h,f>e?a(c.suggestionsContainer).scrollTop(e):e>g&&a(c.suggestionsContainer).scrollTop(e-c.options.maxHeight+h),c.options.preserveInput||c.el.val(c.getValue(c.suggestions[b].value)),c.signalHint(null)}},onSelect:function(b){var c=this,d=c.options.onSelect,e=c.suggestions[b];c.currentValue=c.getValue(e.value),c.currentValue===c.el.val()||c.options.preserveInput||c.el.val(c.currentValue),c.signalHint(null),c.suggestions=[],c.selection=e,a.isFunction(d)&&d.call(c.element,e)},getValue:function(a){var b,c,d=this,e=d.options.delimiter;return e?(b=d.currentValue,c=b.split(e),1===c.length?a:b.substr(0,b.length-c[c.length-1].length)+a):a},dispose:function(){var b=this;b.el.off(".autocomplete").removeData("autocomplete"),b.disableKillerFn(),a(window).off("resize.autocomplete",b.fixPositionCapture),a(b.suggestionsContainer).remove()}},a.fn.autocomplete=a.fn.devbridgeAutocomplete=function(c,d){var e="autocomplete";return 0===arguments.length?this.first().data(e):this.each(function(){var f=a(this),g=f.data(e);"string"==typeof c?g&&"function"==typeof g[c]&&g[c](d):(g&&g.dispose&&g.dispose(),g=new b(this,c),f.data(e,g))})}});
define('modules/Edition/src/ElementView',[],function() {
	var ElementView = {};


	/**
	 * @param  {Object}  area    area can be in two forms :
	 *                           {x: 10, y: 10, xe: 20, ye: 20} / xe and ye are absolute positions (not relative to x and y)
	 *                           {x: 10, y:10}
	 * @param  {Object}  position {x: 2, y: 20}
	 * @param  {Scaler}  scaler
	 * @return {Boolean}
	 */
	ElementView.isInPath = function(area, position, scaler) {
		area.xe = area.xe || area.x;
		area.ye = area.ye || area.y; //in case xe and ye are not defined, they take the same value a x and y respectively
		var pos = scaler.getScaledObj(position),
			posXe = pos.x + pos.w,
			posYe = pos.y + pos.h;
		return (area.x < posXe && area.xe > pos.x) && (area.y < posYe && area.ye > pos.y);
	};

	return ElementView;
});
define('modules/ChordEdition/src/ChordSpaceView',[
	'utils/ChordUtils',
	'utils/UserLog',
	'jquery',
	'pubsub',
	'jquery_autocomplete',
	'modules/Edition/src/ElementView'
], function(ChordUtils, UserLog, $, pubsub, jquery_autocomplete, ElementView) {

	function ChordSpaceView(viewer, position, barNumber, beatNumber, viewerScaler) {
		this.viewer = viewer;
		this.position = position;
		this.barNumber = barNumber;
		this.beatNumber = beatNumber;
		this.scaler = viewerScaler;
	}

	/**
	 * @interface
	 */
	ChordSpaceView.prototype.isInPath = function(coords) {
		return ElementView.isInPath(coords, this.position, this.scaler);
	};
	/**
	 * @interface
	 */
	ChordSpaceView.prototype.getArea = function() {
		return this.position;
	};
	/**
	 * @interface
	 *
	 * @param  {CanvasContext} ctx
	 * @param  {Number} marginTop   [description]
	 * @param  {Number} marginRight [description]
	 */
	ChordSpaceView.prototype.draw = function(ctx, marginTop, marginRight) {

		var style = ctx.fillStyle;
		ctx.fillStyle = "#0099FF";
		ctx.globalAlpha = 0.2;
		ctx.fillRect(
			this.position.x,
			this.position.y - marginTop,
			this.position.w - marginRight,
			this.position.h + marginTop
		);
		ctx.fillStyle = style;
		ctx.globalAlpha = 1;
	};


	ChordSpaceView.prototype.onChange = function(chord, value) {
		var chordInfos = {
			'chordString': value,
			'chordModel': chord,
			'chordSpace': this,
		};
		$.publish('ChordSpaceView-updateChord', chordInfos);
	};


	ChordSpaceView.prototype.drawEditableChord = function(songModel, selected, marginTop, marginRight) {
		if (!!selected) {
			var self = this;

			// Get chord value
			var inputVal = '';
			if (typeof songModel !== "undefined") {
				var chord = songModel.getComponent('chords').searchChordByBarAndBeat(this.barNumber, this.beatNumber);
				if (typeof chord !== "undefined") {
					inputVal = chord.toString('', false);
				}
			}

			// // Then we create input
			var offset = $("#canvas_container canvas").offset();
			if (typeof offset === "undefined" || isNaN(offset.top) || isNaN(offset.left)) {
				offset = {
					top: 0,
					left: 0
				};
			}
			var pos = this.viewer.scaler.getScaledObj(this.position);
			var top = pos.y - marginTop - 1;
			var left = pos.x + offset.left + window.pageXOffset - 1;
			var width = pos.w - marginRight;
			var height = pos.h + marginTop;
			var input = $('<input/>').attr({
				type: 'text',
				style: "position:absolute; z-index: 11000;left:" + left + "px;top:" + top + "px; width:" + width + "px; height:" + height + "px",
				'class': 'chordSpaceInput',
			}).prependTo('#canvas_container');

			// We create auto complete input
			var chordTypeList = [];
			if (typeof ChordUtils.allChords !== "undefined") {
				chordTypeList = ChordUtils.allChords;
			} else {
				chordTypeList = ChordUtils.getAllChords();
			}
			// input.select();
			input.devbridgeAutocomplete({
				'lookup': chordTypeList,
				'maxHeight': 200,
				'width': 140,
				'triggerSelectOnValidInput': false,
				'showNoSuggestionNotice': true,
				'autoSelectFirst': true,
				// You may need to modify that if at first it appears incorrectly, it's probably because ur element is not absolute position
				// 'appendTo': myAbsolutedPositionElement, // dom or jquery (see devbridgeAutocomplete doc)
				'noSuggestionNotice': 'No Chord match',
				lookupFilter: function(suggestion, originalQuery, queryLowerCase) {
					return suggestion.value.indexOf(originalQuery) !== -1;
				},
				onSelect: function(suggestion) {
					// console.log('select');
					//$(input).val(suggestion.value);
					input.devbridgeAutocomplete('dispose');
					self.onChange(chord, suggestion.value);
				}
			});
			input.focus(); // this focus allow setting cursor on end carac
			input.val(inputVal);
			input.focus(); // this focus launch autocomplete directly when value is not empty
			/*// on blur event we change the value, blur is launched when we enter and click somewhere else
			// We don't use blur because it prevent onclick element to be launched
			input.on('blur', function() {
				console.log('blur');
				self.onChange(chord, $(this).val());
				input.devbridgeAutocomplete('dispose');
			});*/
			$('#autocomplete-suggestion').on('click', function() {
				// console.log('click');
				self.onChange(chord, $(input).val());
				input.devbridgeAutocomplete('dispose');
			});
			// on tab call (tab doesn't trigger blur event)
			input.keydown(function(e) {
				var code = e.keyCode || e.which;
				if (code == '9') {
					// console.log('tab');
					self.onChange(chord, $(this).val());
					input.devbridgeAutocomplete('dispose');
				}
				if (code == '13') {
					// console.log('enter');
					self.onChange(chord, $(this).val());
					input.devbridgeAutocomplete('dispose');
				}
			});
			// We use a filter function to make it easier for user to enter chords
			input.on('input propertychange paste', function() {
				$(this).val(self.filterFunction($(this).val()));
			});
		}
	};
	/**
	 * Set to upper case first notes, add a lot of replacement for french or not keyboard
	 * @param  {String} s input string
	 * @return {String}   output string
	 */
	ChordSpaceView.prototype.filterFunction = function(s) {
		function indexesOf(source, find) {
			var result = [];
			for (i = 0; i < source.length; ++i) {
				if (source.substring(i, i + find.length) == find) {
					result.push(i);
				}
			}
			return result;
		}
		s = s.replace(/^[a-z]/, function(m) {
			return m.toUpperCase();
		});
		s = s.replace(/\/[a-z]/, function(m) {
			return m.toUpperCase();
		});
		s = s.replace("-", "m");
		s = s.replace("è", "7");
		s = s.replace("ç", "9");
		s = s.replace("0", "halfdim7");
		s = s.replace("<", "|");
		s = s.replace(".", "dim7");
		s = s.replace("*", "M7");
		s = s.replace("mm", "mM");
		if (s.substring(0, 1) == "5") {
			s = s.replace("5", "%");
		}

		// replace 3 by # always except if it comes after 1 (e.g. A13) or after t (e.g. AM7(omit3) )
		var indexes = indexesOf(s, "3");
		for (var i in indexes) {
			if (s.charAt(indexes[i] - 1) != 1 && s.charAt(indexes[i] - 1) != "t") {
				s = s.substr(0, indexes[i]) + "#" + s.substr(indexes[i] + 1);
			}
		}

		s = s.replace(/^(.+)(p|²)$/, "($1)"); // parenthesis and ² 
		return s;
	};
	return ChordSpaceView;
});
define('modules/Edition/src/ElementManager',[],function() {
	/**
	 * Abstraction class, used by NoteSpaceManager and ChordSpaceManager (by composition rather than heritage)
	 */
	function ElementManager() {}
		/**
		 *
		 * @param  {Array} elems  array of elements; e.g. 'NoteSpaceView'
		 * @param  {[type]} coords
		 * @return {Array}  of two positions [min, max], or booelan false if nothing found
		 */
	ElementManager.prototype.getElemsInPath = function(elems, coords) {
		var note,
			min = null,
			max = null;
		for (var i in elems) {
			if (elems[i].isInPath(coords)) {
				if (min == null) {
					min = Number(i);
				}
				if (max == null || max < i) {
					max = Number(i);
				}
			}
		}
		return (min === null && max === null) ? false : [min, max];
	};
	/**
	 * function to determine how high elements are situated
	 * @param  {Array} elems  array of elements; e.g. 'NoteSpaceView'
	 * @param  {Object} coords
	 */
	ElementManager.prototype.getYs = function(elems, coords) {
		var cursor = this.getElemsInPath(elems, coords);
		if (cursor) {
			return {
				topY: elems[cursor[0]].getArea().y,
				bottomY: elems[cursor[1]].getArea().y
			};
		} else {
			return false;
		}
	};
	/**
	 * @param  {Array} elems      [description]
	 * @param  {[Integer, Integer]} cursor     [description]
	 * @param  {Object} cursorDims
	 * @return {Array of Objects}    Object in this form: {area.x, area.y, area.xe, area.ye}
	 */
	ElementManager.prototype.getElementsAreaFromCursor = function(elems, cursor, cursorDims) {

		var areas = [],
			area,
			cInit = cursor[0],
			cEnd = cursor[1];

		if (!cursorDims) {
			cursorDims = {
				right: 0,
				left: 0,
				top: 0,
				height: 0
			};
		}

		if (typeof elems[cInit] === "undefined") {
			return areas;
		}
		var x, y, xe, currElem, currElemY, nextElemY,
			firstElemLine, lastElemLine;

		firstElemLine = elems[cInit];
		while (cInit <= cEnd) {
			currElem = elems[cInit];
			if (typeof currElem.getArea !== 'function') {
				throw "ElementManager - Error: element passed has no getArea() function";
			}
			currElemY = currElem.getArea().y;

			if (typeof elems[cInit + 1] !== "undefined") {
				nextElemY = elems[cInit + 1].getArea().y;
			}
			if (currElemY != nextElemY || cInit == cEnd) {
				lastElemLine = currElem.getArea();
				x = firstElemLine.getArea().x - cursorDims.left;
				xe = lastElemLine.x - x + lastElemLine.w + cursorDims.right;
				area = {
					x: x,
					y: currElemY + cursorDims.top,
					w: xe,
					h: cursorDims.height || currElem.getArea().h
				};
				areas.push(area);
				if (cInit != cEnd) {
					firstElemLine = elems[cInit + 1];
				}
			}
			cInit++;
		}
		return areas;
	};
	return ElementManager;
});
define('modules/ChordEdition/src/ChordSpaceManager',[
	'modules/core/src/SongModel',
	'modules/core/src/ChordModel',
	'modules/ChordEdition/src/ChordSpaceView',
	'modules/Cursor/src/CursorModel',
	'utils/UserLog',
	'modules/Edition/src/ElementManager',
	'jquery',
	'pubsub'
], function(SongModel, ChordModel, ChordSpaceView, CursorModel, UserLog, ElementManager, $, pubsub) {

	function ChordSpaceManager(songModel, cursor, viewer) {
		if (!songModel || !cursor) {
			throw "ChordSpaceManager missing params";
		}
		this.songModel = songModel;
		this.cursor = cursor;
		this.chordSpace = [];
		this.name = 'chordCursor';
		this.elemMng = new ElementManager();
		this.initSubscribe();
		this.viewer = viewer;
		this.enabled = false;
		this.MARGIN_TOP = 5;
		this.MARGIN_RIGHT = 5;
	}

	/**
	 * Subscribe to view events
	 */
	ChordSpaceManager.prototype.initSubscribe = function() {
		var self = this;
		$.subscribe('LSViewer-drawEnd', function(el, viewer) {
			self.viewer.canvasLayer.addElement(self);
			self.chordSpace = self.createChordSpace(viewer);
			self.viewer.canvasLayer.refresh();
					
		});

		$.subscribe('ChordSpaceView-updateChord', function(el, update) {
			self.updateChord(update.chordString, update.chordModel, update.chordSpace);
			$.publish('ToViewer-draw', self.songModel);
		});

		$.subscribe('CanvasLayer-mousemove', function(el, position) {
			if (!self.cursor.getEditable()) return;
			var inPath = !!self.getChordsInPath({
				x: position.x,
				y: position.y
			});
			if (inPath) {
				self.viewer.el.style.cursor = 'pointer';
			} else {
				self.viewer.el.style.cursor = 'default';
			}
		});
		// cursor view subscribe
		$.subscribe('Cursor-moveCursorByElement-chords', function(el, inc) {
			self.moveCursorByBar(inc);
		});
	};
	/**
	 * Function return several areas to indicate which notes are selected, usefull for cursor or selection
	 * @param  {[Integer, Integer] } Array with initial position and end position
	 * @return {Array of Objects}, Object in this form: {area.x, area.y, area.xe, area.ye}
	 */
	ChordSpaceManager.prototype.createChordSpace = function(viewer) {
		var chordSpace = [];
		if (typeof viewer.vxfBars === "undefined") {
			return;
		}
		var xi, yi, xe, ye;
		var beatInBar;
		var decalX;
		var widthBeat;
		var area;
		for (var i = 0, c = viewer.vxfBars.length; i < c; i++) {
			beatInBar = viewer.vxfBars[i].timeSignature.getBeats();
			widthBeat = viewer.vxfBars[i].barDimensions.width / beatInBar;
			for (var j = 0; j < beatInBar; j++) {
				area = {
					x: (viewer.vxfBars[i].barDimensions.left + widthBeat * j),
					y: (viewer.vxfBars[i].barDimensions.top - 17),
					w: widthBeat,
					h: 20
				};
				chordSpace.push(new ChordSpaceView(viewer, area, i, j + 1, viewer.scaler));
			}
		}
		return chordSpace;
	};
	/**
	 * @interface
	 *
	 * @param  {Object} coords [description]
	 */
	ChordSpaceManager.prototype.getYs = function(coords) {
		return this.elemMng.getYs(this.chordSpace, coords);
	};

	/**
	 * @interface
	 *
	 * @param  {Object} coords
	 * @param  {Booelan} mouseUp
	 */
	ChordSpaceManager.prototype.updateCursor = function(coords, mouseUp) {

		this.undrawEditableChord();

		var posCursor = this.getChordsInPath(coords);

		if (posCursor[0] !== null) {
			this.cursor.setPos(posCursor);
		}
		// if event was mouseUp and we just selected one chord, we draw the pull down
		if (posCursor[0] == posCursor[1] && mouseUp) {
			this.drawEditableChord();
		}
	};

	/**
	 * @interface
	 *
	 * @param  {CanvasContext} ctx
	 */
	ChordSpaceManager.prototype.draw = function(ctx) {
		var self = this;

		function drawChordSpaceBorders(ctx) {
			for (var j = 0; j < self.chordSpace.length; j++) {
				var position = self.chordSpace[j].getArea();

				ctx.strokeStyle = "#999999";
				ctx.strokeRect(
					position.x,
					position.y - self.MARGIN_TOP,
					position.w - self.MARGIN_RIGHT,
					position.h + self.MARGIN_TOP
				);
			}
		}
		var pos = this.cursor.getPos();
		if (pos[0] !== false) {
			for (var i = pos[0]; i <= pos[1]; i++) {
				this.chordSpace[i].draw(ctx, self.MARGIN_TOP, self.MARGIN_RIGHT);
			}
		}
		drawChordSpaceBorders(ctx);
	};
	/**
	 * @interface
	 *
	 * @return {Boolean}
	 */
	ChordSpaceManager.prototype.isEnabled = function() {
		return this.enabled;
	};

	/**
	 * @interface
	 */
	ChordSpaceManager.prototype.enable = function() {
		this.enabled = true;
	};

	/**
	 * @interface
	 */
	ChordSpaceManager.prototype.disable = function() {
		this.undrawEditableChord();
		this.enabled = false;
	};

	ChordSpaceManager.prototype.updateChord = function(chordString, chordModel, chordSpace) {
		if (typeof chordModel === "undefined" && typeof chordSpace !== "undefined") {
			chordModel = new ChordModel({
				'beat': chordSpace.beatNumber,
				'barNumber': chordSpace.barNumber,
			});
			this.songModel.getComponent('chords').addChord(chordModel);
		}
		chordModel.setChordFromString(chordString);
	};

	ChordSpaceManager.prototype.getChordsInPath = function(coords) {
		return this.elemMng.getElemsInPath(this.chordSpace, coords);
	};

	ChordSpaceManager.prototype.moveCursorByBar = function(inc) {
		var barNum = this.chordSpace[this.cursor.getPos()[0]].barNumber;
		var startBeat = this.songModel.getStartBeatFromBarNumber(barNum + inc) - 1;

		if (barNum === 0 && inc === -1) {
			this.cursor.setPos(0);
		} else {
			this.cursor.setPos(startBeat);
			this.drawEditableChord();
		}
	};



	ChordSpaceManager.prototype.undrawEditableChord = function() {
		$('#canvas_container .chordSpaceInput').devbridgeAutocomplete('dispose').remove();
	};
	/**
	 * draws the pulldown or the inpus in chords
	 */
	ChordSpaceManager.prototype.drawEditableChord = function() {
		var position = this.cursor.getPos(),
			selected;

		this.undrawEditableChord();
		for (var i = 0, c = this.chordSpace.length; i < c; i++) {
			selected = (position[0] <= i && i <= position[1]);
			this.chordSpace[i].drawEditableChord(this.songModel, selected, this.MARGIN_TOP, this.MARGIN_RIGHT);
		}
	};

	return ChordSpaceManager;
});
define('modules/ChordEdition/src/ChordEdition',[
	"modules/ChordEdition/src/ChordEditionController",
	"modules/ChordEdition/src/ChordEditionView",
	"modules/ChordEdition/src/ChordSpaceManager"
], function(ChordEditionController, ChordEditionView, ChordSpaceManager) {

	function ChordEdition(songModel, cursorModel, viewer, imgPath) {
		new ChordSpaceManager(songModel, cursorModel, viewer);
		this.view = new ChordEditionView(undefined, cursorModel, imgPath);
		new ChordEditionController(songModel, cursorModel, this.view);

	}
	return ChordEdition;
});
define('modules/core/src/SectionModel',[],function() {
	function SectionModel(params) {
		params = params || {};

		this.setName(params.name);
		this.setRepeatTimes(params.repeatTimes);
		this.setNumberOfBars(params.numberOfBars);
		this.setStyle(params.style);
		this.setTimeSignature(params.timeSignature);
	}

	/////////////////////////
	// Basic getters setters //
	/////////////////////////

	SectionModel.prototype.setName = function(name) {
		/*using 'name !== undefined' instead of 'typeof "undefined"', because in this case (ternary if) everything is in same line, 
		and it is more readable like this*/
		this.name = (name !== undefined) ? name : '';
	};

	SectionModel.prototype.getName = function() {
		return this.name;
	};

	// Carefull, if a section is played 2 times, repeatTimes = 1
	SectionModel.prototype.setRepeatTimes = function(repeatTimes) {
		if (repeatTimes === undefined) {
			repeatTimes = 0;
		}
		if (repeatTimes < 0) {
			throw "repeatTimes cannot be negative";
		}
		this.repeatTimes = parseInt(repeatTimes, 10);
	};

	SectionModel.prototype.getRepeatTimes = function() {
		return this.repeatTimes;
	};

	SectionModel.prototype.setNumberOfBars = function(numberOfBars) {
		this.numberOfBars = (numberOfBars !== undefined) ? numberOfBars : 0;
	};

	SectionModel.prototype.getNumberOfBars = function() {
		return this.numberOfBars;
	};

	SectionModel.prototype.setStyle = function(style) {
		this.style = (style !== undefined) ? style : '';
	};

	SectionModel.prototype.getStyle = function() {
		return this.style;
	};

	SectionModel.prototype.setTimeSignature = function(timeSignature) {
		this.timeSignature = (timeSignature !== undefined) ? timeSignature : undefined;
		// empty timeSignature means it doesn't change from previous 
	};

	SectionModel.prototype.getTimeSignature = function() {
		return this.timeSignature;
	};
	/**
	 * returns the unfolded section
	 * @param  {Number} numBars the number of bars of the unfolded section. This can be calculated by SongModel.getUnfoldedSongSection.
	 * @return {SectionModel}
	 */
	SectionModel.prototype.cloneUnfolded = function(numBars) {
		if (!numBars) throw "SectionModel - cloneUnfolded: numBars not valid :" + numBars;
		return new SectionModel({
			name: this.name,
			numberOfBars: numBars,
			style: this.style,
			timeSignature: this.timeSignature
		});
	};

	return SectionModel;
});
define('modules/chordSequence/src/SongView_chordSequence',['jquery', 'modules/core/src/SongModel', 'modules/core/src/SectionModel', 'modules/core/src/BarManager', 'modules/core/src/BarModel', 'modules/core/src/ChordManager', 'modules/core/src/ChordModel'],
	function($, SongModel, SectionModel, BarManager, BarModel, ChordManager, ChordModel) {
		function SongView_chordSequence(parentHTML, songModel, option) {
			option = option || {};
			this.el = parentHTML;
			// songModel
			this.songModel = (typeof songModel !== "undefined" && songModel instanceof SongModel) ? songModel : undefined;

			// display general option
			this.displayTitle = (typeof option.displayTitle !== "undefined") ? option.displayTitle : true;
			this.classTitle = (typeof option.classTitle !== "undefined") ? option.classTitle : 'song_view-title';
			this.displayComposer = (typeof option.displayComposer !== "undefined") ? option.displayComposer : true;
			this.displayBar = (typeof option.displayBar !== "undefined") ? option.displayBar : true;
			this.delimiterBar = (typeof option.delimiterBar !== "undefined") ? option.delimiterBar : "|";
			this.delimiterNewLine = (typeof option.delimiterNewLine !== "undefined") ? option.delimiterNewLine : "<br />";
			this.delimiterBeat = (typeof option.delimiterBeat !== "undefined") ? option.delimiterBeat : "";
			this.displaySection = (typeof option.displaySection !== "undefined") ? option.displaySection : true;
			this.fillEmptyBar = (typeof option.fillEmptyBar !== "undefined") ? option.fillEmptyBar : true;
			this.fillEmptyBarCharacter = (typeof option.fillEmptyBarCharacter !== "undefined") ? option.fillEmptyBarCharacter : "%";
			this._initSubscribe();
		}

		SongView_chordSequence.prototype._initSubscribe = function() {
			var self = this;
			$.subscribe('ToViewer-draw', function(el, songModel) {
				self.draw();
			});
		};

		SongView_chordSequence.prototype.draw = function() {
			var txt = '';
			if (typeof this.songModel !== "undefined") {
				if (this.displayTitle === true) {
					txt += '<span class="song_view-title">' + this.songModel.getTitle() + '</span> ';
				}
				if (this.displayComposer === true) {
					txt += '(' + this.songModel.getComposer() + ')';
				}
				if (this.displayTitle === true || this.displayComposer === true) {
					txt += this.delimiterNewLine;
				}
				var bm = this.songModel.getComponent("bars");
				var sectionsLength = this.songModel.getSections().length;
				for (var i = 0; i < sectionsLength; i++) {
					txt += this.delimiterNewLine;
					txt += this.getSectionView(i);
					if (this.displayBar === true) {
						var currentBar;
						var chordDuration;
						var cm;
						for (var currentBarNumber = 0, c = bm.getBars().length; currentBarNumber < c; currentBarNumber++) {
							currentBar = bm.getBar(currentBarNumber);
							if (currentBarNumber !== 0) {
								txt += this.delimiterBar;
							}
							if (typeof currentBar.ending !== "undefined" && (currentBar.ending === 'BEGIN' || currentBar.ending === 'BEGIN_END')) {
								txt += ':';
							}
							if (currentBarNumber !== 0) {
								txt += ' ';
							}
							var chordsInCurrentBar = this.songModel.getComponentsAtBarNumber(currentBarNumber, 'chords');
							if (chordsInCurrentBar.length === 0 && this.fillEmptyBar === true) {
								txt += this.fillEmptyBarCharacter + ' ';
							} else {
								for (var k = 0, v = chordsInCurrentBar.length; k < v; k++) {
									if (typeof chordsInCurrentBar[k + 1] !== "undefined" && (chordsInCurrentBar[k].getBeat() === chordsInCurrentBar[k + 1].getBeat())) {
										txt += chordsInCurrentBar[k].toString('') + '_';
									} else {
										txt += chordsInCurrentBar[k].toString('') + ' ';
									}
									if (this.delimiterBeat !== "") {
										cm = this.songModel.getComponent('chords');
										chordDuration = cm.getChordDuration(this.songModel, cm.getChordIndex(chordsInCurrentBar[k]));
										chordDuration = Math.floor(chordDuration);
										for (var l = 0; l < chordDuration - 1; l++) {
											txt += this.delimiterBeat + ' ';
										}
									}
								}
							}
							if (typeof currentBar.ending !== "undefined" && (currentBar.ending === 'END' || currentBar.ending === 'BEGIN_END')) {
								txt += ':';
							}
						}
					}
					txt += this.delimiterNewLine;
				}
			}
			this.el.innerHTML = txt;
		};



		SongView_chordSequence.prototype.getSectionView = function(sectionNumber) {
			var txt = '';
			if (this.displaySection === true) {
				if (typeof this.songModel.getSection(sectionNumber) !== "undefined") {
					var section = this.songModel.getSection(sectionNumber);
					txt += /*'section: ' + */ section.getName();
					if (section.getRepeatTimes() > 0) {
						var playedTimes = parseInt(section.getRepeatTimes(), 10) + 1;
						txt += ' (' + playedTimes + ')';
					}
					// txt += this.delimiterNewLine;
					txt += ': ';
				}
			}
			return txt;
		};


		return SongView_chordSequence;
	});
define('utils/AjaxUtils',['jquery'], function($) {
	var AjaxUtils = {};

	/**
	 * Use this function whenever you need to do an ajax request, ajax request allow you to ask a server language from javascript executed by client
	 * @param  {Object}   request                 Request object contain url, type, data, dataType, withCredentialsBool
		 * @param  {text}   url                   Distant url you want to reach, it can be relative or absolute
		 * @param  {text}   type                  Server Request (GET, POST ...)
		 * @param  {Object}   data                Contain a JS object that you want to send to the server
		 * @param  {bool}   withCredentialsBool   Allow outrepassing CORS restriction, see jQuery documentation
	 * @param  {Function} callback            Function call when the request is complete, always launch whenever there is an error or not
	 */
	AjaxUtils.request = function(request, callback) {
		if (typeof request === "undefined") {
			throw 'AjaxUtils - ajaxRequest - request argument is undefined ' + request;
		}
		if (typeof request.url === "undefined") {
			throw 'AjaxUtils - ajaxRequest - url argument is undefined ' + url;
		}
		if (typeof request.type === "undefined") {
			request.type = 'GET';
		}
		if (typeof request.data === "undefined") {
			request.data = {};
		}
		if (typeof request.dataType === "undefined") {
			request.dataType = 'jsonp';
		}
		if (typeof request.withCredentialsBool === "undefined") {
			request.withCredentialsBool = false;
		}
		$.ajax({
			url: request.url,
			dataType: request.dataType,
			type: request.type,
			data: request.data,
			xhrFields: {
				withCredentials: request.withCredentialsBool
			},
			success: function(data) {
				if (typeof callback !== "undefined") {
					callback(data);
				}
			},
			error: function(query, errorType, error) {
				console.warn('AjaxUtils - Ajax Request fail ' + errorType + ' : ' + error.message);
				if (typeof callback !== "undefined") {
					callback(error);
				}
			}
		});
	};

	/**
	 * Direct link to the servlet ajax request with predefined ajax options
	 * @param  {string}   servletRoot Servlet context root, eg. 'rechord', 'jsonsong', 'flow'
	 * @param  {string}   servletName Servlet name eg. 'composer', 'harmonize', 'radiofeed'
	 * @param  {Object}   data        Contain a JS object that you want to send to the server
	 * @param  {Function} callback    Function call when the request is complete, always launch whenever there is an error or not
	 */
	AjaxUtils.servletRequest = function(servletRoot, servletName, data, callback) {
		if (typeof servletRoot === "undefined") {
			throw 'AjaxUtils - servletRequest - servletRoot argument is undefined ' + servletRoot;
		}
		if (typeof servletName === "undefined") {
			throw 'AjaxUtils - servletRequest - servletName argument is undefined ' + servletName;
		}
		var request = {
			url: 'http://apijava.flow-machines.com:8080/' + servletRoot + '/' + servletName,
			type: 'POST',
			data: data,
			dataType: 'json',
			withCredentialsBool: true
		};
		AjaxUtils.request(request, callback);
	};


	return AjaxUtils;
});
define('modules/Constraint/src/ConstraintAPI',[
    'utils/AjaxUtils',
], function(AjaxUtils) {

    function ConstraintAPI() {}

    /*
     * This function call the server to generate chords with markov constrain
     * @arg songset (string) is an id of a songset in the database
     * @arg numberOfChords (int) represent the desired number of elements to be returned
     * @arg constraints (array of object) represent the constraints in a specific format {position(int), type(eq|diff), values(array of int)}
     */
    ConstraintAPI.prototype.constraintAPI = function(request, callback) {
        if (typeof globalVariables !== "undefined" && globalVariables.username == "roy") {
            $.ajax({
                url: 'http://localhost:8080/flow/ct',
                dataType: 'json',
                type: 'POST',
                data: request,
                xhrFields: {
                    withCredentials: true
                },
                success: function(data) {
                    if (typeof data !== "undefined") {
                        if (typeof callback !== "undefined") {
                            callback(data);
                        }
                    }
                }
            });
        } else {
            AjaxUtils.servletRequest('flow', 'ct', request, callback);
        }
    };

    return ConstraintAPI;
});
define('modules/Tag/src/TagSpaceView',[], function() {

	function TagSpaceView(position, name) {
		this.position = position;
		this.name = name;
	}

	TagSpaceView.prototype.isInPath = function(x, y) {
		if (typeof x !== "undefined" && !isNaN(x) && typeof y !== "undefined" && !isNaN(y)) {
			if (this.position.x <= x && x <= (this.position.x + this.position.xe) && this.position.y <= y && y <= (this.position.y + this.position.ye)) {
				return true;
			}
		}
		return false;
	};

	return TagSpaceView;
});
define('modules/Tag/src/TagManager',[
	'modules/Tag/src/TagSpaceView',
	'jquery',
	'pubsub',
], function(TagSpaceView, $, pubsub) {

	/**
	 * Create and display tags
	 * @param {Object} songModel
	 * @param {Array} tags      Array of object that contain at least a startBeat, a endBeat, can also contain a name
	 * @param {Array} colors    Array of colors in rgba or hexadecimal or html color
	 */
	function TagManager(songModel, tags, colors, isActive) {
		this.songModel = songModel;
		this.tags = (typeof tags !== "undefined") ? tags : [];
		this.colors = (typeof colors !== "undefined") ? colors : ["#559", "#995", "#599", "#595"];
		this.tagSpace = [];
		this.isActive = (typeof isActive !== "undefined") ? isActive : true;
		this.initSubscribe();
		this.CURSOR_HEIGHT = 80;
		this.CURSOR_MARGIN_TOP = 20;
		this.CURSOR_MARGIN_LEFT = 6;
		this.CURSOR_MARGIN_RIGHT = 9;
	}

	TagManager.prototype.getTags = function() {
		return this.tags;
	};

	TagManager.prototype.setTags = function(tags) {
		if (typeof tags === "undefined") {
			throw 'TagManager - setTags tags must be an array ' + tags;
		}
		this.tags = tags;
		$.publish('TagManager-setTags', this);
		$.publish('ToViewer-draw', this.songModel);
	};

	TagManager.prototype.getColors = function() {
		return this.colors;
	};

	TagManager.prototype.setColors = function(colors) {
		if (typeof colors === "undefined") {
			throw 'TagManager - setColors colors must be an array ' + colors;
		}
		this.colors = colors;
		$.publish('TagManager-setColors', this);
		$.publish('ToViewer-draw', this.songModel);
	};

	TagManager.prototype.setActive = function(active) {
		this.isActive = !!active;
		$.publish('ToViewer-draw', this.songModel);
	};

	TagManager.prototype.getActive = function() {
		return this.isActive;
	};


	/**
	 * Subscribe to view events
	 */
	TagManager.prototype.initSubscribe = function() {
		var self = this;
		$.subscribe('LSViewer-drawEnd', function(el, viewer) {
			self.draw(viewer);
		});
		/*$.subscribe('CanvasLayer-mouseup', function(el, position) {
			var inPath = self.isInPath(position.x, position.y);
			console.log(inPath);
			if (inPath !== false) {
				$.publish('ToViewer-draw', self.songModel);
			}
		});*/
	};

	TagManager.prototype.isInPath = function(x, y) {
		for (var i = 0, c = this.tagSpace.length; i < c; i++) {
			if (typeof this.tagSpace[i] !== "undefined") {
				if (this.tagSpace[i].isInPath(x, y)) {
					return i;
				}
			}
		}
		return false;
	};

	/**
	 * Function takes tags and transform them into TagSpace View that can be displayed on leadsheet,
	 * it basically transform beat position to x, y positions
	 * @param  {Object} viewer LSViewer
	 * @return {Array} array of TagSpaceView
	 */
	TagManager.prototype.getTagsAreas = function(viewer) {
		var areas = [];
		var area = {};
		var startEnd, fromIndex, toIndex, xi, yi, xe;
		var currentNote, currentNoteStaveY, nextNoteStaveY;
		var firstNoteLine, lastNoteLine;
		var nm = this.songModel.getComponent('notes');
		var tagName = '';
		for (var i = 0, c = this.tags.length; i < c; i++) {
			startEnd = nm.getIndexesStartingBetweenBeatInterval(this.tags[i].startBeat, this.tags[i].endBeat - 1);
			fromIndex = startEnd[0];
			toIndex = startEnd[1];
			if (typeof viewer.vxfNotes[fromIndex] === "undefined" || typeof viewer.vxfNotes[toIndex] === "undefined") {
				return areas;
			}
			firstNoteLine = viewer.vxfNotes[fromIndex];
			while (fromIndex <= toIndex) {
				currentNote = viewer.vxfNotes[fromIndex];
				currentNoteStaveY = currentNote.stave.y;
				if (typeof viewer.vxfNotes[fromIndex + 1] !== "undefined") {
					nextNoteStaveY = viewer.vxfNotes[fromIndex + 1].stave.y;
				}
				if (currentNoteStaveY != nextNoteStaveY || fromIndex == toIndex) {
					lastNoteLine = currentNote.getBoundingBox();
					xi = firstNoteLine.getBoundingBox().x - this.CURSOR_MARGIN_LEFT;
					xe = lastNoteLine.x - xi + lastNoteLine.w + this.CURSOR_MARGIN_RIGHT;
					area = {
						x: xi,
						y: currentNoteStaveY + this.CURSOR_MARGIN_TOP,
						xe: xe,
						ye: this.CURSOR_HEIGHT
					};
					tagName = '';
					if (typeof this.tags[i].name !== "undefined") {
						tagName = this.tags[i].name;
					}
					areas.push(new TagSpaceView(area, tagName));
					if (fromIndex != toIndex) {
						firstNoteLine = viewer.vxfNotes[fromIndex + 1];
					}
				}

				fromIndex++;
			}
		}
		return areas;
	};


	TagManager.prototype.draw = function(viewer) {
		if (this.isActive !== true) {
			return;
		}
		if (this.tags.length <= 0) {
			return;
		}

		var saveFillColor = viewer.ctx.fillStyle;
		viewer.ctx.font = "15px Arial";
		this.tagSpace = this.getTagsAreas(viewer);
		var yDecalToggle = 3;
		var numberOfColors = this.colors.length;
		for (var i = 0, c = this.tagSpace.length; i < c; i++) {
			viewer.ctx.globalAlpha = 0.4;
			viewer.ctx.fillStyle = this.colors[i % numberOfColors]; // permute colors each time
			if (i % 2) {
				this.tagSpace[i].position.y += yDecalToggle;
				this.tagSpace[i].position.ye += yDecalToggle;
			} else {
				this.tagSpace[i].position.y -= yDecalToggle;
				this.tagSpace[i].position.ye -= yDecalToggle;
			}
			viewer.ctx.fillRect(
				this.tagSpace[i].position.x,
				this.tagSpace[i].position.y,
				this.tagSpace[i].position.xe,
				this.tagSpace[i].position.ye
			);
			viewer.ctx.globalAlpha = 1;
			viewer.ctx.fillStyle = "black";
			viewer.ctx.fillText(this.tagSpace[i].name, this.tagSpace[i].position.x, this.tagSpace[i].position.y + this.tagSpace[i].position.ye + 12);
		}
		viewer.ctx.fillStyle = saveFillColor;
		viewer.ctx.globalAlpha = 1;
	};

	return TagManager;
});
define('modules/converters/MusicCSLJson/src/SectionModel_CSLJson',['modules/core/src/SectionModel'], function(SectionModel) {
	var SectionModel_CSLJson = {};

	/////////////////////////
	//  Advanced function  //
	/////////////////////////

	SectionModel_CSLJson.importFromMusicCSLJSON = function(JSONSection, sectionModel) {
		if (typeof JSONSection === "undefined" || typeof sectionModel === "undefined" || !(sectionModel instanceof SectionModel)) {
			throw 'SectionModel_CSLJson - importFromMusicCSLJSON - bad arguments type';
		}
		sectionModel.setName(JSONSection.name);
		sectionModel.setNumberOfBars(JSONSection.bars ? parseInt(JSONSection.bars.length) : 0);
		sectionModel.setTimeSignature(JSONSection.timeSig);
		sectionModel.setRepeatTimes(JSONSection.repeat ? parseInt(JSONSection.repeat) : 0);
		sectionModel.setStyle(JSONSection.style);
	};

	SectionModel_CSLJson.exportToMusicCSLJSON = function(sectionModel) {
		var sectionMusicCSLJSON = {};
		sectionMusicCSLJSON.name = sectionModel.getName();

		if (sectionModel.getTimeSignature())
			sectionMusicCSLJSON.timeSig = sectionModel.getTimeSignature().toString();

		if (sectionModel.getRepeatTimes())
			sectionMusicCSLJSON.repeat = sectionModel.getRepeatTimes();

		if (sectionModel.getStyle())
			sectionMusicCSLJSON.style = sectionModel.getStyle();

		return sectionMusicCSLJSON;
	};


	return SectionModel_CSLJson;
});
define('modules/converters/MusicCSLJson/src/BarModel_CSLJson',['modules/core/src/BarModel'], function(BarModel) {
	var BarModel_CSLJson = {};
	
	/////////////////////////
	//  Advanced function  //
	/////////////////////////

	BarModel_CSLJson.importFromMusicCSLJSON = function(JSONBar) {
		var bar = new BarModel();
		var labels = ["segno", "segno2", "fine", "coda", "coda2", "on cue"];
		labels.forEach(function(label) {
			if (JSONBar.hasOwnProperty(label)) {
				bar.setLabel(label);
			}
		});
		//so far now we allow only one label per bar in the DB, but this code is prepared to allow more than one, as an array
		if (JSONBar.hasOwnProperty('ending')) bar.setEnding(JSONBar.ending);
		if (JSONBar.hasOwnProperty('sublabel')) bar.setSublabel(JSONBar.sublabel);
		if (JSONBar.hasOwnProperty('timeSignature')) bar.setTimeSignature(JSONBar.timeSignature);
		return bar;
	};

	BarModel_CSLJson.exportToMusicCSLJSON = function(barModel) {
		var bar = {};

		if (barModel.getLabel())
			bar[barModel.getLabel()] = 1;

		if (barModel.getEnding())
			bar.ending = barModel.getEnding();

		if (barModel.getSublabel())
			bar.sublabel = barModel.getSublabel();

		if (barModel.getTimeSignature())
			bar.timeSignature = barModel.getTimeSignature();

		return bar;
	};
	return BarModel_CSLJson;
});
	
define('modules/converters/MusicCSLJson/src/ChordManager_CSLJson',['modules/core/src/ChordModel'], function(ChordModel) {
	var ChordManager_CSLJson = {};

	ChordManager_CSLJson.importFromMusicCSLJSON = function(MusicCSLJSON) {
		if (typeof MusicCSLJSON !== "undefined") {
			var chordsSection = [];
			var chordModel;
			var barNumber = 0;
			for (var i = 0, c = MusicCSLJSON.sections.length; i < c; i++) {
				for (var j = 0, v = chordsSection.length; j < v; j++) {
					for (var k = 0, b = chordsSection[j].length; k < b; k++) {
						chordModel = new ChordModel();
						chordModel.importFromMusicCSLJSON(chordsSection[j][k]);
						chordModel.setBarNumber(barNumber);
						this.addChord(chordModel);
					}
					barNumber++;
				}
			}
		}
		return this;
	};

	ChordManager_CSLJson.exportToMusicCSLJSON = function(chordModel) {
		var chords = [];
		if (typeof chordModel.chords !== "undefined" && chordModel.chords.length) {
			var currentChord, currentBn;
			for (var i = 0, c = chordModel.chords.length; i < c; i++) {
				currentChord = chordModel.getChord(i);
				currentBn = currentChord.getBarNumber();
				if (typeof chords[currentBn] === "undefined") {
					chords[currentBn] = [];
				}

				var jsonChord = {
					"beat": currentChord.getBeat(),
					"p": currentChord.getNote(),
					"ch": currentChord.getChordType(),
				};
				if (!currentChord.isEmptyBase()) {
					jsonChord.bp = currentChord.getBase().getNote();
					jsonChord.bch = currentChord.getBase().getChordType();
				}
				if (currentChord.getParenthesis()) {
					jsonChord.parenthesis = currentChord.getParenthesis();
				}
				chords[currentBn].push(jsonChord);
			}
		}
		return chords;
	};

	return ChordManager_CSLJson;
});
define('modules/converters/MusicCSLJson/src/ChordModel_CSLJson',['modules/core/src/ChordModel'], function(ChordModel) {
	var ChordModel_CSLJson = {};

	ChordModel_CSLJson.importFromMusicCSLJSON = function(JSONChord, chordModel) {
		chordModel.setNote(JSONChord.p);
		chordModel.setChordType(JSONChord.ch);
		chordModel.setParenthesis(JSONChord.parenthesis);
		chordModel.setBeat(JSONChord.beat);
		if (JSONChord.hasOwnProperty('bp') && JSONChord.bp.length != 0) {
			chordModelBase = new ChordModel();
			chordModelBase.setNote(JSONChord.bp);
			chordModelBase.setChordType(JSONChord.bch);
			chordModel.setBase(chordModelBase);
		}
		if (JSONChord.barNumber != null)
			chordModel.barNumber = JSONChord.barNumber;
	};


	ChordModel_CSLJson.exportToMusicCSLJSON = function(chordModel, withNumMeasure) {
		if (withNumMeasure === undefined) withNumMeasure = false;
		var chord = {};
		if (typeof chordModel !== "undefined" && chordModel instanceof ChordModel) {
			chord.p = chordModel.getNote();
			chord.ch = chordModel.getChordType();
			if (chordModel.getParenthesis())
				chord.parenthesis = chordModel.getParenthesis();

			chord.beat = chordModel.getBeat();
			if (!chordModel.isEmptyBase()) {
				chordBase = chordModel.getBase();
				chord.bp = chordBase.getNote();
				chord.bch = chordBase.getChordType();
			}
			if (withNumMeasure) chord.barNumber = chordModel.barNumber;
		}
		return chord;
	};

	return ChordModel_CSLJson;
});
define('modules/converters/MusicCSLJson/src/NoteManager_CSLJson',['modules/core/src/NoteModel'], function(NoteModel) {
	var NoteManager_CSLJson = {};

	NoteManager_CSLJson.importFromMusicCSLJSON = function(notes, song) {
		if (typeof notes !== "undefined") {
			for (var i in notes) {
				this.addNote(new NoteModel(notes[i]));
			}
		}
		this.setNotesBarNum(song);
		return this;
	};
	/*  TODO: test does not exist */
	NoteManager_CSLJson.exportToMusicCSLJSON = function(noteManager, from, to) {
		var notes = [];
		noteManager.getNotes(from, to + 1).forEach(function(note) {
			notes.push(note.exportToMusicCSLJSON(songModel));
		});
		return notes;
	};
	return NoteManager_CSLJson;
});

define('modules/converters/MusicCSLJson/src/NoteModel_CSLJson',['modules/core/src/NoteModel', 'utils/NoteUtils'], function(NoteModel, NoteUtils) {
	var NoteModel_CSLJson = {};

	NoteModel_CSLJson.importFromMusicCSLJSON = function(noteStruct, noteModel) {

		var duration = noteStruct.duration;
		if ((duration.indexOf("r") != -1)) {
			noteModel.duration = duration.substring(0, duration.length - 1);
			noteModel.isRest = true;
		} else {
			noteModel.duration = duration;
			noteModel.isRest = false;
		}

		if (noteStruct.keys.length > 1) {
			noteStruct.keys = NoteUtils.sortPitches(noteStruct.keys);
		}

		var parsedNote;
		for (var i = 0, c = noteStruct.keys.length; i < c; i++) {
			parsedNote = string2Obj(noteStruct.keys[i]);

			noteModel.pitchClass[i] = parsedNote.pitchClass;
			noteModel.accidental[i] = parsedNote.accidental;
			noteModel.octave[i] = parsedNote.octave;
		}

		noteModel.setDot(noteStruct.dot);
		noteModel.setTie(noteStruct.tie);
		noteModel.setTuplet(noteStruct.tuplet, noteStruct.time_modification);

		function string2Obj(strPitch) {
			var re = /[a-g|A-G](#{1,2}|b{1,2}|n)?\/\d/;
			if (!strPitch.match(re)) throw "Error creating pitch " + strPitch + ". Should be in the form [pitch][acc]/[octave]. e.g. Ab/4";

			var parts = strPitch.split("/");

			var pitchClass = parts[0].substr(0, 1).toUpperCase();
			var accidental = parts[0].substr(1, parts[0].length);
			var octave = parts[1];

			return {
				pitchClass: pitchClass,
				accidental: accidental,
				octave: octave
			};
		}
	};

	NoteModel_CSLJson.exportToMusicCSLJSON = function(note, complete, withNumMeasure) {
		if (!note){
			throw "note sent is not correct";
		}
		if (complete === undefined) complete = true;
		if (withNumMeasure === undefined) withNumMeasure = false;

		var noteObj = {};
		noteObj.keys = [];
		for (var i = 0, c = note.getNumPitches(); i < c; i++) {
			noteObj.keys.push(note.getPitch(i));
		}
		noteObj.duration = note.duration;
		//important only set property if not null, 
		if (note.dot != null) noteObj.dot = note.dot;
		if (note.tie != null && complete) noteObj.tie = note.tie;
		if (note.tuplet != null && complete) noteObj.tuplet = note.tuplet;
		if (note.time_modification != null && complete) noteObj.time_modification = note.time_modification;
		if (note.isRest) noteObj.duration += "r";

		if (note.measure != null && withNumMeasure) noteObj.num_measure = note.measure;
		return noteObj;
	};

	return NoteModel_CSLJson;
});
define('modules/converters/MusicCSLJson/src/SongModel_CSLJson',['require','modules/core/src/SongModel','modules/core/src/SectionModel','modules/core/src/BarManager','modules/core/src/BarModel','modules/core/src/ChordManager','modules/core/src/ChordModel','modules/core/src/NoteManager','modules/core/src/NoteModel','modules/converters/MusicCSLJson/src/SectionModel_CSLJson','modules/converters/MusicCSLJson/src/BarModel_CSLJson','modules/converters/MusicCSLJson/src/ChordManager_CSLJson','modules/converters/MusicCSLJson/src/ChordModel_CSLJson','modules/converters/MusicCSLJson/src/NoteManager_CSLJson','modules/converters/MusicCSLJson/src/NoteModel_CSLJson'],function(require) {

	var SongModel = require('modules/core/src/SongModel');
	var SectionModel = require('modules/core/src/SectionModel');
	var BarManager = require('modules/core/src/BarManager');
	var BarModel = require('modules/core/src/BarModel');
	var ChordManager = require('modules/core/src/ChordManager');
	var ChordModel = require('modules/core/src/ChordModel');
	var NoteManager = require('modules/core/src/NoteManager');
	var NoteModel = require('modules/core/src/NoteModel');
	var SectionModel_CSLJson = require('modules/converters/MusicCSLJson/src/SectionModel_CSLJson');
	var BarModel_CSLJson = require('modules/converters/MusicCSLJson/src/BarModel_CSLJson');
	var ChordManager_CSLJson = require('modules/converters/MusicCSLJson/src/ChordManager_CSLJson');
	var ChordModel_CSLJson = require('modules/converters/MusicCSLJson/src/ChordModel_CSLJson');
	var NoteManager_CSLJson = require('modules/converters/MusicCSLJson/src/NoteManager_CSLJson');
	var NoteModel_CSLJson = require('modules/converters/MusicCSLJson/src/NoteModel_CSLJson');

	var SongModel_CSLJson = {};

	SongModel_CSLJson.importFromMusicCSLJSON = function(MusicCSLJSON, songModel, id) {
		if (!songModel || !songModel instanceof SongModel) {
			songModel = new SongModel();
		} else {
			songModel.clear();
		}
		var chordManager = new ChordManager();
		var noteManager = new NoteManager();
		var barManager = new BarManager();

		//if (!MusicCSLJSON._id && !id)	throw "SongModel: importing from MusicCSL no id specified";

		if (!MusicCSLJSON) {
			throw "SongModel_CSLJson-importFromMusicCSLJSON: You can't import an empty song " + MusicCSLJSON;
		}

		//there are 4 cases: id by param, _id is 'MongoId' from php, _id is 'MongoId' from javascript or _id is string
		if (typeof MusicCSLJSON._id !== "undefined") {
			if (typeof MusicCSLJSON._id['$oid'] !== "undefined") {
				MusicCSLJSON._id['$id'] = MusicCSLJSON._id['$oid'];
			}
		}
		songModel._id = (MusicCSLJSON._id) ? MusicCSLJSON._id['$id'] : id;
		if (!songModel._id)
			songModel._id = MusicCSLJSON._id;

		if (typeof MusicCSLJSON !== "undefined") {

			songModel.setTitle(MusicCSLJSON.title);
			songModel.setTimeSignature(MusicCSLJSON.time);
			songModel.setTonality(MusicCSLJSON.keySignature);
			songModel.addComposer(MusicCSLJSON.composer);
			songModel.setStyle(MusicCSLJSON.style);
			songModel.setSource(MusicCSLJSON.source);
			songModel.setTempo(MusicCSLJSON.tempo);

			var section, chord, note, bar;
			var existsMelody = false;
			var barNumber = 0;
			if (MusicCSLJSON.changes != null) {
				MusicCSLJSON.changes.forEach(function(JSONSection) {
					section = new SectionModel();
					SectionModel_CSLJson.importFromMusicCSLJSON(JSONSection, section);
					songModel.addSection(section);

					if (JSONSection.bars != null) {
						JSONSection.bars.forEach(function(JSONBar) {
							bar = BarModel_CSLJson.importFromMusicCSLJSON(JSONBar, new BarModel());
							barManager.addBar(bar);
							if (JSONBar.chords != null) {
								JSONBar.chords.forEach(function(JSONChord) {
									chord = new ChordModel();
									ChordModel_CSLJson.importFromMusicCSLJSON(JSONChord, chord);
									chord.setBarNumber(barNumber);
									chordManager.addChord(chord);
								});
							}
							if (JSONBar.melody != null) {
								existsMelody = true;
								JSONBar.melody.forEach(function(JSONNote) {
									note = new NoteModel();
									NoteModel_CSLJson.importFromMusicCSLJSON(JSONNote, note);
									noteManager.addNote(note);
								});
							}
							barNumber++;
						});
					} else {
						console.log(JSONSection.bars);
					}
				});
				songModel.addComponent('bars', barManager);
				//noteManager.setNotesBarNum(songModel);
				songModel.addComponent('chords', chordManager);
				songModel.addComponent('notes', noteManager);
			}
		}
		//songModel.getUnfoldedSongStructure();
		return songModel;
	};

	SongModel_CSLJson.exportToMusicCSLJSON = function(songModel) {
		if (!songModel instanceof SongModel) {
			throw 'SongModel_CSLJson - exportToMusicCSLJSON - songModel parameters must be an instanceof SongModel';
		}

		var MusicCSLJSON = {};
		if (typeof songModel._id !== "undefined") {
			MusicCSLJSON._id = songModel._id;
		}
		var composer = songModel.getComposer();
		if (typeof composer !== "undefined") {
			composer = composer.toString();
		}
		MusicCSLJSON.composer = composer;
		MusicCSLJSON.title = songModel.getTitle();

		MusicCSLJSON.time = songModel.getTimeSignature().toString();

		MusicCSLJSON.keySignature = songModel.getTonality();
		MusicCSLJSON.tempo = songModel.getTempo();


		MusicCSLJSON.style = songModel.getStyle();
		MusicCSLJSON.source = songModel.getSource();

		// Sections
		var bm = songModel.getComponent("bars");
		var JSONSection = {};
		var startbarNumber, lastBarSection, barChords, barNotes;
		MusicCSLJSON.changes = [];
		for (var i = 0, c = songModel.getSections().length; i < c; i++) {
			// section information
			JSONSection = SectionModel_CSLJson.exportToMusicCSLJSON(songModel.getSection(i));
			// bar information
			startbarNumber = songModel.getStartBarNumberFromSectionNumber(i);
			lastBarSection = startbarNumber + songModel.getSection(i).getNumberOfBars() - 1;

			var bars = [];
			var bar, chords, melody;
			var JSONBar, JSONChord, JSONNote;

			for (var j = startbarNumber; j <= lastBarSection; j++) {
				JSONBar = BarModel_CSLJson.exportToMusicCSLJSON(bm.getBar(j));
				//bar = bm.getBar(j).exportToMusicCSLJSON(songModel);

				chords = [];
				barChords = songModel.getComponentsAtBarNumber(j, 'chords');
				//jsLint complains but nevermind
				barChords.forEach(function(chord) {
					JSONChord = ChordModel_CSLJson.exportToMusicCSLJSON(chord);
					chords.push(JSONChord);
				});

				if (chords.length != 0) JSONBar.chords = chords;

				barNotes = songModel.getComponentsAtBarNumber(j, 'notes');

				melody = [];
				barNotes.forEach(function(note) {
					JSONNote = NoteModel_CSLJson.exportToMusicCSLJSON(note);
					melody.push(JSONNote);
				});

				if (melody.length !== 0) JSONBar.melody = melody;

				bars.push(JSONBar);
			}

			JSONSection.bars = bars;
			MusicCSLJSON.changes[i] = JSONSection;
		}
		return MusicCSLJSON;
	};


	return SongModel_CSLJson;
});
define('modules/Constraint/src/ConstraintController',[
	'mustache',
	'modules/core/src/SongModel',
	'modules/Tag/src/TagManager',
	'modules/converters/MusicCSLJson/src/SongModel_CSLJson',
	'modules/Constraint/src/ConstraintAPI',
	'utils/UserLog',
	'pubsub',
], function(Mustache, SongModel, TagManager, SongModel_CSLJson, ConstraintAPI, UserLog, pubsub) {

	function ConstraintController(songModel) {
		this.songModel = songModel || new SongModel();
		this.initSubscribe();
	}

	/**
	 * Subscribe to view events
	 */
	ConstraintController.prototype.initSubscribe = function() {
		var self = this;
		$.subscribe('ConstraintView-compute', function(el, opts) {
			self.computeConstraint(opts.songset, opts.composer, opts.timeSignature, opts.source, opts.numberOfBars);
		});
	};

	ConstraintController.prototype.constraint2API = function(songset, composer, timeSignatureFilter, source, numberOfBars, constraint, controller) {
		var self = this;
		var tempo = 120;
		var timeSignature = "4/4";
		var leadsheet = {};
		leadsheet = SongModel_CSLJson.exportToMusicCSLJSON(this.songModel);
		timeSignatureFilter = "all";
		var request = {
			'incompleteLeadsheet': JSON.stringify(leadsheet),
			'timesigFilter': timeSignatureFilter,
		};
		var comp = {};
		if (songset !== "" && songset !== null) {
			comp = {
				'songSet': songset,
			};
			$.extend(true, request, comp);
		}
		if (composer !== "" && composer !== null) {
			comp = {
				'composer': composer,
			};
			$.extend(true, request, comp);
		}
		if (source !== "" && source !== null) {
			comp = {
				'source': source,
			};
			$.extend(true, request, comp);
		}
		return request;
	};

	ConstraintController.prototype.computeConstraint = function(songset, composer, timeSignature, source, numberOfBars) {
		var self = this;
		var capi = new ConstraintAPI();
		var request = {};
		request = this.constraint2API(songset, composer, timeSignature, source, numberOfBars);
		var logId = UserLog.log('info', 'Computing ...');
		capi.constraintAPI(request, function(data) {
			UserLog.removeLog(logId);
			if (data.success === true) {
				self._compareObj(request.leadsheet, data.result);
				SongModel_CSLJson.importFromMusicCSLJSON(data.result, self.songModel);
				$.publish('ToHistory-add', {
					'item': data.result,
					'title': 'Constraint'
				});

				if (typeof data.tags !== "undefined") {
					var tags = new TagManager(self.songModel, data.tags);
				}
				$.publish('ToViewer-draw', self.songModel);
				UserLog.logAutoFade('success', 'Constraint is finished');
			} else {
				var message = 'Unknown error';
				if (typeof data.error !== "undefined") {
					message = data.error;
				} else if (typeof data.message !== "undefined") {
					message = data.message;
				}
				UserLog.logAutoFade('error', message);
			}
		});

	};

	/**
	 * Function compares two leadsheets and add a color "colorDiff" to item that change
	 * @param  {[type]} obj1 [description]
	 * @param  {[type]} obj2 [description]
	 * @return {[type]}      [description]
	 */
	ConstraintController.prototype._compareObj = function(obj1, obj2) {
		var same = true;
		var sameChord = true;
		var sameNote = true;
		var section = false;
		var bars = false;
		var existMelody = false;
		var existChords = false;

		var colorDiff = "blue";
		/*console.log(obj1);
		console.log(obj2);*/
		if (typeof obj2 !== "undefined") {
			if (typeof obj1 === "undefined") {
				//console.log('object undefined');
				same = false;
			} else {
				same = true;
			}
			if (typeof obj2.changes !== "undefined") {
				if (same === true) {
					if (typeof obj1.changes === "undefined") {
						//console.log('no changes ');
						same = false;
					} else {
						same = true;
					}
				}
				for (var i in obj2.changes) {
					var JSONSection = obj2.changes[i];
					if (section === true) {
						same = true;
						section = false;
					}
					if (same === true) {
						if (typeof obj1.changes[i] === "undefined") {
							//console.log('no section ' + i);
							section = true;
							same = false;
						} else {
							same = true;
						}
					}
					// console.log(JSONSection);
					if (typeof JSONSection.bars !== "undefined") {
						if (same === true) {
							if (typeof obj1.changes[i].bars === "undefined") {
								//console.log('no bars in section ' + i);
								same = false;
							} else {
								same = true;
							}
						}
						for (var j in JSONSection.bars) {
							if (bars === true) {
								same = true;
								bars = false;
							}
							var JSONBar = JSONSection.bars[j];
							if (same === true) {
								if (typeof obj1.changes[i].bars[j] === "undefined") {
									//console.log('no bar ' + j);
									same = false;
									bars = true;
								} else {
									same = true;
								}
							}
							// console.log(j, JSONBar);
							if (typeof JSONBar.chords !== "undefined") {
								if (existChords === true) {
									same = true;
									existChords = false;
								}
								if (same === true) {
									if (typeof obj1.changes[i].bars[j].chords === "undefined") {
										//console.log('enter at bar chords ' + j);
										same = false;
										existChords = true;
									} else {
										same = true;
									}
								}
								for (var k in JSONBar.chords) {
									var JSONChord = JSONBar.chords[k];
									if (same === true) {
										sameChord = true;
										if (typeof obj1.changes[i].bars[j].chords[k] === "undefined" ||
											obj1.changes[i].bars[j].chords[k]['p'] != JSONChord['p'] ||
											obj1.changes[i].bars[j].chords[k]['ch'] != JSONChord['ch'] ||
											obj1.changes[i].bars[j].chords[k]['beat'] != JSONChord['beat']) {
											//console.log('if chords');
											sameChord = false;
										}
									}
									if (same === false || sameChord === false) {
										JSONChord['color'] = colorDiff;
										sameChord = true;
									}
								}
							}
							if (typeof JSONBar.melody !== "undefined") {
								if (existMelody === true) {
									same = true;
									existMelody = false;
								}
								if (same === true) {
									if (typeof obj1.changes[i].bars[j].melody === "undefined") {
										//console.log('enter at bar melody ' + j);
										same = false;
										existMelody = true;
									} else {
										same = true;
									}
								}
								for (var k in JSONBar.melody) {
									var JSONNote = JSONBar.melody[k];
									if (same === true) {
										sameNote = true;
										if (typeof obj1.changes[i].bars[j].melody[k] === "undefined" ||
											obj1.changes[i].bars[j].melody[k]['duration'] != JSONNote['duration'] ||
											obj1.changes[i].bars[j].melody[k]['keys'][0] != JSONNote['keys'][0]) {
											//console.log('if notes');
											sameNote = false;
										}
									}
									if (same === false || sameNote === false) {
										JSONNote['color'] = colorDiff;
										sameNote = true;
									}
								}
							}
						}
					}
				}
			}
		}
		return obj2;
	};
	return ConstraintController;
});
define('modules/Constraint/src/ConstraintModel',[
	'mustache',
	'modules/core/src/SongModel',
	'utils/UserLog',
	'pubsub',
], function(Mustache, SongModel, UserLog, pubsub) {
	/**
	 * ConstraintModel is an array of constraints, it allow a high level management of constraints
	 * @param {object} options
	 */
	var ConstraintModel = function(options) {
		this.init();
	};

	ConstraintModel.prototype.init = function() {
		this.constraints = [];
	};

	ConstraintModel.prototype.addMusicCSLJSON = function(request) {
		if (typeof editor === "undefined") {
			return request;
		}
		var leadsheet = editor.getSong().exportToMusicCSLJSON();
		var ls = {
			'incompleteLeadsheet': JSON.stringify(leadsheet),
		};
		$.extend(true, request, ls);
		return request;
	};

	
	return ConstraintModel;
});

define('text!modules/Constraint/src/ConstraintTemplate.html',[],function () { return '<div id="constraint_second_level" class="hidden">\r\n\t<div id="constraint_compute_button_container">\r\n\t\t <div id="constraint_compute_button"> <input type="button" id="constraint_compute" name="constraint_compute" value="Compute" /></div>\r\n\t</div>\r\n\t<div id="constraint_songsets_container">\r\n\t\t<div id="constraint_songsets">\r\n\t\t\t<select id="constraint_select_songsets">\r\n\t\t\t\t<option value="none">None</option>\r\n\t\t\t\t<option value="545a6c8a3004f53efa0382f5" selected="selected">John Coltrane</option>\r\n\t\t\t\t<option value="545a6c8a3004f53efa038305">Latin</option>\r\n\t\t\t\t<option value="54f81c2458e338505c7b23c6">Melody</option>\r\n\t\t\t\t<option value="545a6c8a3004f53efa0382f8">Miles Davis</option>\r\n\t\t\t\t<option value="52459b6ddf546095a6cc0a43">Songset Test </option>\r\n\t\t\t</select>\r\n\t\t</div>\r\n\t\t<div class="button_text">\r\n\t\t\tSongset (inspiration)\r\n\t\t</div>\r\n\t</div>\r\n\t<div id="constraint_composer_container">\r\n\t\t<div id="constraint_composer">\r\n\t\t\t<input type="text" name="constraint_select_composer" id="constraint_select_composer" placeholder="None" />\r\n\t\t</div>\r\n\t\t<div class="button_text">\r\n\t\t\tComposer\r\n\t\t</div>\r\n\t</div>\r\n\t<div id="constraint_source_container">\r\n\t\t<div id="constraint_source">\r\n\t\t\t<select id="constraint_select_source">\r\n\t\t\t\t<option value="none">None</option>\r\n\t\t\t</select>\r\n\t\t</div>\r\n\t\t<div class="button_text">\r\n\t\t\tSource\r\n\t\t</div>\r\n\t</div>\r\n\t<div id="constraint_timeSignature_container">\r\n\t\t<div id="constraint_timeSignature">\r\n\t\t\t<select id="constraint_select_timeSignature">\r\n\t\t\t\t<option value="all">All</option>\r\n\t\t\t\t<!-- <option value="12/8">12/8 (24)</option>\r\n\t\t\t\t<option value="2/2">2/2 (688)</option>\r\n\t\t\t\t<option value="2/4">2/4 (748)</option>\r\n\t\t\t\t<option value="3/4">3/4 (475)</option>\r\n\t\t\t\t<option value="3/8">3/8 (1)</option>\r\n\t\t\t\t<option value="4/4">4/4 (6124)</option>\r\n\t\t\t\t<option value="5/4">5/4 (21)</option>\r\n\t\t\t\t<option value="6/4">6/4 (25)</option>\r\n\t\t\t\t<option value="6/8">6/8 (52)</option>\r\n\t\t\t\t<option value="7/4">7/4 (8)</option>\r\n\t\t\t\t<option value="9/4">9/4 (1)</option> -->\r\n\t\t\t</select>\r\n\t\t</div>\r\n\t\t<div class="button_text">\r\n\t\t\tTime signature filter\r\n\t\t</div>\r\n\t</div>\r\n</div>';});

define('modules/Constraint/src/ConstraintView',[
	'mustache',
	'text!modules/Constraint/src/ConstraintTemplate.html',
	'modules/core/src/SongModel',
	'utils/UserLog',
	'pubsub',
], function(Mustache, ConstraintTemplate, SongModel, UserLog, pubsub) {

	function ConstraintView() {
		this.el = undefined;
	}

	ConstraintView.prototype.render = function(parentHTML, callback) {
		// case el has never been rendered
		//if (typeof this.el === "undefined" || (typeof this.el !== "undefined" && force === true)) {
		var rendered = Mustache.render(ConstraintTemplate);
		if (typeof parentHTML !== "undefined") {
			parentHTML.innerHTML = rendered;
		}
		this.el = rendered;
		this.initController();
		//$.publish('ConstraintView-render');
		if (typeof callback === "function") {
			callback();
		}
		return;
	};

	
/*
	ConstraintView.prototype.buildSongsetSelectInterface = function(idSelect, username) {
		getSongsetsByAuthor(username, function(data) {
			var txt = '';
			if (typeof data !== "undefined") {
				for (var index in data) {
					txt += '<option value="' + data[index]._id.$id + '">' + data[index].name + '</option>';
				}
			}
			$('#' + idSelect).html(txt);
		});
	};

	ConstraintView.prototype.buildComposerInterface = function(idSelect, username) {
		var data = getComposerListFromNameOrderBySongs('', 10000, function(data) {
			var composers = [];
			for (var composer in data.result) {
				composers.push(data.result[composer]._id);
			}
			var myconf = {
				autocompleteParams: {
					data: composers,
					autoFill: false,
					maxItemsToShow: 20,
					sortResults: false,
					filterResults: true,
					matchCase: false,
					minChars: 0,
					matchInside: true,
					delay: 50,
				}
			};
			$("#constraint_select_composer").autocomplete(myconf.autocompleteParams);
			$("#constraint_select_composer").contextmenu();
		});
	};

	ConstraintView.prototype.buildSourceInterface = function() {
		getSourcesList(function(data) {
			var options = $("#constraint_select_source");
			for (var elem in data) {
				options.append($("<option />").val(elem).text(data[elem].name + ' (' + data[elem].songs + ')'));
			}
		});
	};


	ConstraintView.prototype.buildTimeSignatureInterface = function() {
		getTimeSignatureList(function(data) {
			var options = $("#constraint_select_timeSignature");
			for (var elem in data.result) {
				options.append($("<option />").val(data.result[elem]._id).text(data.result[elem]._id + ' (' + data.result[elem].songs + ')'));
			}
		});
	};
*/
	ConstraintView.prototype.initController = function() {
		var self = this;
		$('#constraint_compute').click(function() {
			var songset = $('#constraint_select_songsets').val();
			if (songset == "none") {
				songset = null;
			}
			var composer = $('#constraint_select_composer').val();
			if (composer === "") {
				composer = null;
			}
			var source = $('#constraint_select_source').val();
			if (source == "none") {
				source = null;
			}
			var timeSignature = $('#constraint_select_timeSignature').val();
			var numberOfBars = $('#constraint_nbBars').val();
			if (isNaN(numberOfBars)) {
				numberOfBars = 8;
			}
			var computeOptions = {
				'songset': songset,
				'composer': composer,
				'timeSignature': timeSignature,
				'source': source,
				'numberOfBars': numberOfBars
			};
			$.publish('ConstraintView-compute', computeOptions);
			return false;
		});


		// TODO use songsets
		// this.buildSongsetSelectInterface('constraint_select_songsets', globalVariables.username);
		/*
		this.buildComposerInterface();
		this.buildSourceInterface();
		this.buildTimeSignatureInterface();
		*/
	};

	ConstraintView.prototype.unactiveView = function(idElement) {
		$.publish('toHistoryView-unactiveView');
	};

	ConstraintView.prototype.activeView = function(idElement) {
		$.publish('toHistoryView-activeView');
	};

	return ConstraintView;
});
define('modules/Constraint/src/Constraint',[
		"modules/Constraint/src/ConstraintAPI",
		"modules/Constraint/src/ConstraintController",
		"modules/Constraint/src/ConstraintModel",
		"modules/Constraint/src/ConstraintView"
	],function(ConstraintAPI, ConstraintController, ConstraintModel, ConstraintView){

	function Constraint(songModel){
		new ConstraintModel();
		new ConstraintController(songModel);
		this.view = new ConstraintView();
	}
	return Constraint;
});
define('modules/converters/MusicCSLJson/src/main',[
		"modules/converters/MusicCSLJson/src/BarModel_CSLJson",
		"modules/converters/MusicCSLJson/src/ChordManager_CSLJson",
		"modules/converters/MusicCSLJson/src/ChordModel_CSLJson",
		"modules/converters/MusicCSLJson/src/NoteManager_CSLJson",
		"modules/converters/MusicCSLJson/src/NoteModel_CSLJson",
		"modules/converters/MusicCSLJson/src/SectionModel_CSLJson",
		"modules/converters/MusicCSLJson/src/SongModel_CSLJson",
	],
	function(BarModel_CSLJson, ChordManager_CSLJson, ChordModel_CSLJson, NoteManager_CSLJson, NoteModel_CSLJson, SectionModel_CSLJson, SongModel_CSLJson) {
		return {
			"BarModel_CSLJson": BarModel_CSLJson,
			"ChordManager_CSLJson": ChordManager_CSLJson,
			"ChordModel_CSLJson": ChordModel_CSLJson,
			"NoteManager_CSLJson": NoteManager_CSLJson,
			"NoteModel_CSLJson": NoteModel_CSLJson,
			"SectionModel_CSLJson": SectionModel_CSLJson,
			"SongModel_CSLJson": SongModel_CSLJson
		};
	}
);
define('modules/converters/MusicXML/src/BarModel_MusicXML',['modules/core/src/BarModel'], function(BarModel) {
	var BarModel_MusicXML = {};

	BarModel_MusicXML.importFromMusicXML = function(MusicXMLBar) {
		var bar = new BarModel();
		if (MusicXMLBar.hasOwnProperty('key')) bar.setTonality(MusicXMLBar.key);
		var clef = "treble";
		if (MusicXMLBar.hasOwnProperty('stave') && typeof MusicXMLBar.stave[0] !== "undefined" && typeof MusicXMLBar.stave[0].clef !== "undefined") {
			clef = MusicXMLBar.stave[0].clef;
		} else if (MusicXMLBar.hasOwnProperty('clef')) {
			clef = MusicXMLBar.clef;
		}
		bar.setClef(clef);
		if (MusicXMLBar.hasOwnProperty('time')) {
			bar.setTimeSignature(MusicXMLBar.time.num_beats + '/' + MusicXMLBar.time.beat_value);
		} else {
			bar.setTimeSignature('4/4');
		}
		return bar;
	};

	return BarModel_MusicXML;
});
define('modules/converters/MusicXML/src/ChordModel_MusicXML',['modules/core/src/ChordModel'], function(ChordModel) {
	var ChordModel_MusicXML = {};

	ChordModel_MusicXML.importFromMusicXML = function(MusicXMLChord) {
		var chord = new ChordModel();
		
		if (MusicXMLChord.hasOwnProperty('chordPitch')){
			chord.setNote(MusicXMLChord.chordPitch);
		}
		if (MusicXMLChord.hasOwnProperty('chordType')){
			chord.setChordType(MusicXMLChord.chordType);
		}

		return chord;
	};

	return ChordModel_MusicXML;
});
define('modules/converters/MusicXML/src/NoteModel_MusicXML',['modules/core/src/NoteModel'], function(NoteModel) {
	var NoteModel_MusicXML = {};

	NoteModel_MusicXML.importFromMusicXML = function(MusicXMLNote, note) {
		if(typeof note === "undefine" || !(note instanceof NoteModel)) {
			note = new NoteModel();
		}

		if (MusicXMLNote.hasOwnProperty('rest')) {
			note.isRest = MusicXMLNote.rest;
		}
		if (MusicXMLNote.hasOwnProperty('dot')) {
			note.setDot(1);
		}

		var duration = MusicXMLNote.duration;
		if ((duration.indexOf("r") != -1)) {
			note.setDuration(duration.substring(0, duration.length - 1));
			note.isRest = true;
		} else {
			note.setDuration(duration);
			note.isRest = false;
		}

		if (MusicXMLNote.keys.length > 1) {
			MusicXMLNote.keys = NoteUtils.sortPitches(MusicXMLNote.keys);
		}

		var parsedNote;
		for (var i = 0, c = MusicXMLNote.keys.length; i < c; i++) {
			parsedNote = string2Obj(MusicXMLNote.keys[i]);
			note.pitchClass[i] = parsedNote.pitchClass;
			note.accidental[i] = parsedNote.accidental;
			note.octave[i] = parsedNote.octave;
		}

		note.setDot(MusicXMLNote.dot);
		note.setTie(MusicXMLNote.tie);
		if (typeof MusicXMLNote.tuplet === "object" && MusicXMLNote.tuplet !== null) {
			note.setTuplet(MusicXMLNote.tuplet.typeTuplet, MusicXMLNote.tuplet.num_notes + '/' + MusicXMLNote.tuplet.beats_occupied);
		}
		return note;

		function string2Obj(strPitch) {
			var re = /[a-g|A-G](#{1,2}|b{1,2}|n)?\/\d/;
			if (!strPitch.match(re)) throw "Error creating pitch " + strPitch + ". Should be in the form [pitch][acc]/[octave]. e.g. Ab/4";

			var parts = strPitch.split("/");

			var pitchClass = parts[0].substr(0, 1).toUpperCase();
			var accidental = parts[0].substr(1, parts[0].length);
			var octave = parts[1];

			return {
				pitchClass: pitchClass,
				accidental: accidental,
				octave: octave
			};
		}
	};

	return NoteModel_MusicXML;
});
define('modules/converters/MusicXML/utils/musicXMLParser',['require'],function(require) {

	/**
	 * VexFlow MusicXML - DOM-based MusicXML backend for VexFlow Documents.
	 * @author Daniel Ringwalt (ringw)
	 * https://github.com/ringw/vexflow/blob/musicxml/tests/document_tests.js
	 */


	var MusicXMLParser = {};

	/** @constructor */
	MusicXMLParser = function() {
		this.partList = [];
		this.partName = [];
		this.staveConnectors = [];
		// Create timewise array of arrays
		// Measures (zero-indexed) -> array of <measure> elements for each part
		this.measures = [];
		// Actual measure number for each measure
		// (Usually starts at 1, or 0 for pickup measure and numbers consecutively)
		this.measureNumbers = [];
		// Store number of staves for each part (zero-indexed)
		this.numStaves = [];
		// Track every child of any <attributes> element in array
		// (except <staves> which is stored in numStaves)
		// Measures -> parts ->
		//  object where keys are names of child elements ->
		//    data representing the attribute
		this.attributes = [];
	};

	MusicXMLParser.appearsValid = function(data) {
		if (typeof data == "string") {
			return data.search(/<score-partwise/i) != -1;
		}
		return (data instanceof Document) &&
			(data.documentElement.nodeName == 'score-partwise');
	};

	MusicXMLParser.prototype.parse = function(data) {
		if (typeof data == "string") {
			// Parse XML string
			if (window.DOMParser && typeof XMLDocument != "undefined") {
				var parser = new window.DOMParser();
				this.document = parser.parseFromString(data, "text/xml");
			} else if (window.ActiveXObject && new window.ActiveXObject("Microsoft.XMLDOM")) {
				this.document = new window.ActiveXObject("Microsoft.XMLDOM");
				this.document.async = "false";
				this.document.loadXML(data);
			} else throw new Vex.RERR("UnsupportedBrowserError", "No XML parser found");
		} else if (data instanceof Document) this.document = data;
		else {
			this.valid = false;
			throw new Vex.RERR("ArgumentError",
				"MusicXML requires XML string or DOM Document object");
		}
		this.documentElement = this.document.documentElement;
		if (this.documentElement.nodeName != 'score-partwise')
			throw new Vex.RERR("ArgumentError",
				"VexFlow only supports partwise scores");

		// Go through each part, pushing the measures on the correct sub-array
		var partNum = 0;
		Array.prototype.forEach.call(this.documentElement.childNodes, function(node) {
			if (node.nodeName == "part-list") this.parsePartList(node);
			else if (node.nodeName == "part") {
				var measureNum = 0;
				for (var j = 0; j < node.childNodes.length; j++) {
					var measure = node.childNodes[j];
					if (measure.nodeName != "measure") continue;
					if (!(measureNum in this.measures))
						this.measures[measureNum] = [];
					if (this.measures[measureNum].length != partNum) {
						// Some part is missing a measure
						Vex.LogFatal("Part missing measure");
						this.valid = false;
						return;
					}
					if (!(measureNum in this.measureNumbers)) {
						var num = parseInt(measure.getAttribute("number"));
						if (!isNaN(num)) this.measureNumbers[measureNum] = num;
					}
					this.measures[measureNum][partNum] = measure;
					var attributes = measure.getElementsByTagName("attributes")[0];
					if (attributes) this.parseAttributes(measureNum, partNum, attributes);
					measureNum++;
				}
				// numStaves defaults to 1 for this part
				if (!(partNum in this.numStaves))
					this.numStaves[partNum] = 1;
				partNum++;
			}
		}, this);

		// Create a brace for each part with multiple staves
		var partNum = 0;
		this.numStaves.forEach(function(staves) {
			if (staves > 1) this.staveConnectors.push({
				type: "brace",
				parts: [partNum],
				system_start: true
			});
			partNum++;
		}, this);

		this.valid = true;
	};

	MusicXMLParser.prototype.parsePartList = function(partListElem) {
		// We only care about stave connectors in part groups
		var partNum = 0;
		var partGroup = null;
		var staveConnectors = null; // array of stave connectors for part group
		Array.prototype.forEach.call(partListElem.childNodes, function(elem) {
			switch (elem.nodeName) {
				case "part-group":
					if (elem.getAttribute("type") == "start") {
						partGroup = [];
						staveConnectors = [];
						Array.prototype.forEach.call(elem.childNodes, function(groupElem) {
							switch (groupElem.nodeName) {
								case "group-symbol":
									if (groupElem.textContent == "bracket" || groupElem.textContent == "brace")
									// Supported connectors
										staveConnectors.push({
										type: groupElem.textContent,
										system_start: true
									});
								case "group-barline":
									if (groupElem.textContent == "yes")
										staveConnectors.push({
											type: "single",
											measure_start: true,
											system_end: true
										});
							}
						});
					} else if (elem.getAttribute("type") == "stop") {
						staveConnectors.forEach(function(connect) {
							connect.parts = partGroup;
							this.staveConnectors.push(connect);
						}, this);
						partGroup = staveConnectors = null;
					}
					break;
				case "score-part":
					if (partGroup) partGroup.push(partNum);
					var self = this;
					Array.prototype.forEach.call(elem.childNodes, function(groupElem) {
						if(groupElem.nodeName === "part-name") {
							self.partName[partNum] = groupElem.textContent;
						}
					});
					this.partList.push(partNum);
					partNum++;
					break;
			}
		}, this);
	}

	MusicXMLParser.prototype.isValid = function() {
		return this.valid;
	};

	MusicXMLParser.prototype.getNumberOfMeasures = function() {
		return this.measures.length;
	};

	MusicXMLParser.prototype.getMeasureNumber = function(m) {
		var num = this.measureNumbers[m];
		return isNaN(num) ? null : num;
	};

	MusicXMLParser.prototype.getMeasure = function(m) {
		var measure_attrs = this.getAttributes(m, 0);
		var time = measure_attrs.time;
		var measureInfos = {
			'time': time,
		};
		var measure = {
			part: [],
		};
		var numParts = this.measures[m].length;
		for (var p = 0; p < numParts; p++) {
			measure.part[p] = {};
			var attrs = this.getAttributes(m, p);
			if (typeof attrs.clef == "string") measureInfos.clef = attrs.clef;
			if (typeof attrs.key == "string") measureInfos.key = attrs.key;

			measureInfos.numberOfStaves = this.numStaves[p];
			measureInfos.stave = [];
			if (attrs.clef instanceof Array)
				for (var s = 0; s < this.numStaves[p]; s++){
					measureInfos.stave[s] = {
						clef: attrs.clef[s]
					};
				}
			measure.part[p].measureInfos = measureInfos;
			measure.part[p].notes = [];
			var noteElems = this.measures[m][p].getElementsByTagName("note");
			for (var i = 0; i < noteElems.length; i++) {
				var noteObj = this.parseNote(noteElems[i], attrs);
				measure.part[p].notes.push(noteObj);
				if (noteObj.grace) continue; // grace note requires VexFlow support
			}
			
			measure.part[p].chords = [];
			var chordElems = this.measures[m][p].getElementsByTagName("harmony");
			for (var i = 0, c = chordElems.length; i < c; i++) {
				var chordObj = this.parseChord(chordElems[i], attrs);
				measure.part[p].chords.push(chordObj);
			}
		}
		return measure;
	};

	MusicXMLParser.prototype.getStaveConnectors = function() {
		return this.staveConnectors;
	};

	MusicXMLParser.prototype.parseAttributes = function(measureNum, partNum, attributes) {
		var attrs = attributes.childNodes;
		for (var i = 0; i < attrs.length; i++) {
			var attrObject = null;
			var attr = attrs[i];
			switch (attr.nodeName) {
				case "staves":
					// If this is the first measure, we use <staves>
					if (measureNum == 0)
						this.numStaves[partNum] = parseInt(attr.textContent);
					break;
				case "key":
					attrObject = this.getKeySignature(parseInt(attr.getElementsByTagName(
						"fifths")[0].textContent));
					break;
				case "time":
					attrObject = (attr.getElementsByTagName("senza-misura").length > 0) ? {
						num_beats: 4,
						beat_value: 4,
						soft: true
					} : {
						num_beats: parseInt(attr.getElementsByTagName("beats")[0]
							.textContent),
						beat_value: parseInt(attr.getElementsByTagName(
							"beat-type")[0].textContent),
						soft: true // XXX: Should we always have soft voices?
					};
					break;
				case "clef":
					var number = parseInt(attr.getAttribute("number"));
					var sign = attr.getElementsByTagName("sign")[0].textContent;
					var line = parseInt(attr.getElementsByTagName("line")[0].textContent);
					var clef = (sign == "G" && line == "2") ? "treble" : (sign == "C" && line == "3") ? "alto" : (sign == "C" && line == "4") ? "tenor" : (sign == "F" && line == "4") ? "bass" : null;
					if (number > 0) {
						if (measureNum in this.attributes && partNum in this.attributes[measureNum] && this.attributes[measureNum][partNum].clef instanceof Array)
							attrObject = this.attributes[measureNum][partNum].clef;
						else attrObject = new Array(this.numStaves[partNum]);
						attrObject[number - 1] = clef;
					} else attrObject = clef;
					break;
				case "divisions":
					attrObject = parseInt(attr.textContent);
					break;
				default:
					continue; // Don't use attribute if we don't know what it is
			}
			if (!(measureNum in this.attributes))
				this.attributes[measureNum] = [];
			if (!(partNum in this.attributes[measureNum]))
				this.attributes[measureNum][partNum] = {};
			this.attributes[measureNum][partNum][attr.nodeName] = attrObject;
		}
		return attrObject;
	};

	MusicXMLParser.prototype.parseNote = function(noteElem, attrs) {
		var noteObj = {
			rest: false,
			chord: false
		};
		noteObj.tickMultiplier = 1;
		noteObj.tuplet = null;
		Array.prototype.forEach.call(noteElem.childNodes, function(elem) {
			switch (elem.nodeName) {
				case "pitch":
					var step = elem.getElementsByTagName("step")[0].textContent;
					var octave = parseInt(elem.getElementsByTagName("octave")[0]
						.textContent);
					var alter = elem.getElementsByTagName("alter")[0];
					if (alter)
						switch (parseInt(alter.textContent)) {
							case 1:
								step += "#";
								break;
							case 2:
								step += "##";
								break;
							case -1:
								step += "b";
								break;
							case -2:
								step += "bb";
								break;
						}
					noteObj.keys = [step + "/" + octave.toString()];
					break;
				case "type":
					var type = elem.textContent;
					// Look up type
					noteObj.duration = {
						/*"whole": "1",
						"half": "2",
						"quarter": "4",
						"eighth": "8",
						"16th": "16",
						"32nd": "32",
						"64th": "64",
						"128th": "128",
						"256th": "256"*/
						"whole": "w",
						"half": "h",
						"quarter": "q",
						"eighth": "8",
						"16th": "16",
						"32nd": "32",
						"64th": "64",
						"128th": "128",
						"256th": "256"
					}[type];
					if (noteObj.rest) noteObj.duration += "r";
					break;
				case "dot": // Always follow type; noteObj.duration exists
					/*var duration = noteObj.duration,
						rest = duration.indexOf("r");
					if (noteObj.rest) duration = duration.substring(0, rest) + "dr";
					else duration += "d";
					noteObj.duration = duration;*/
					noteObj.dot = true;
					break;
				case "duration":
					var intrinsicTicks = {
						'numerator': 1/(4 * parseInt(elem.textContent,10)),
						'denominator': attrs.divisions,
					};
					if (isNaN(intrinsicTicks.numerator) || isNaN(intrinsicTicks.denominator))
						throw "InvalidMusicXML - Error parsing MusicXML duration";
					if (intrinsicTicks.denominator == 1)
						intrinsicTicks = intrinsicTicks.numerator;
					noteObj.intrinsicTicks = intrinsicTicks;
					// TODO: come up with duration string if we don't have a type
					if (!noteObj.duration) noteObj.duration = "4";
					break;
				case "time-modification":
					var num_notes = elem.getElementsByTagName("actual-notes")[0];
					var beats_occupied = elem.getElementsByTagName("normal-notes")[0];
					if (num_notes && beats_occupied) {
						num_notes = parseInt(num_notes.textContent);
						beats_occupied = parseInt(beats_occupied.textContent);
						if (!(num_notes > 0 && beats_occupied > 0)) break;
						noteObj.tickMultiplier = {
							'beats_occupied':beats_occupied,
							'num_notes': num_notes
						};
						noteObj.tuplet = {
							typeTuplet: "middle",
							num_notes: num_notes,
							beats_occupied: beats_occupied
						};
					}
					break;
				case "rest":
					noteObj.rest = true;
					var step = elem.getElementsByTagName("display-step")[0];
					var octave = elem.getElementsByTagName("display-octave")[0];
					if (step && octave)
						noteObj.keys = [step.textContent + "/" + octave.textContent];
					// FIXME: default length for rest only if length is full measure
					if (!noteObj.duration) noteObj.duration = "1r";
					break;
				case "grace":
					noteObj.grace = true;
					break;
				case "chord":
					noteObj.chord = true;
					break;
				case "voice":
					var voice = parseInt(elem.textContent);
					if (!isNaN(voice)) noteObj.voice = voice;
					break;
				case "staff":
					var stave = parseInt(elem.textContent);
					if (!isNaN(stave) && stave > 0) noteObj.stave = stave - 1;
					break;
				case "stem":
					if (elem.textContent == "up") noteObj.stem_direction = 1;
					else if (elem.textContent == "down") noteObj.stem_direction = -1;
					break;
				case "beam":
					var beam = elem.textContent;
					if (beam != "begin" && beam != "continue" && beam != "end") break;
					// "continue" overrides begin or end when there are multiple beams
					// TODO: support backward hook/forward hook,
					//       partial beam between groups of notes where needed
					if (noteObj.beam != "continue") noteObj.beam = beam;
					break;
				case "lyric":
					var text = elem.getElementsByTagName("text")[0];
					if (text) text = text.textContent;
					if (text) noteObj.lyric = {
						text: text
					};
					break;
				case "notations":
					Array.prototype.forEach.call(elem.childNodes, function(notationElem) {
						/*console.log('--------');
						console.log(notationElem);
						console.log(notationElem.nodeName);*/
						switch (notationElem.nodeName) {
							case "tied": // start-start/stop-stop vs begin-continue-end
								var tie = notationElem.getAttribute("type");
								switch (tie) {
									case "start":
										noteObj.tie = (noteObj.tie == "stop") ? "stop_start" : "start";
										break;
									case "stop":
										noteObj.tie = (noteObj.tie == "start") ? "stop_start" : "stop";
										break;
									default:
										throw "BadMusicXML - Bad tie: " + tie.toString();
								}
								//console.log(noteObj.tie);
								break;
							case "tuplet": // start-start/stop-stop vs begin-continue-end
								var tuplet = notationElem.getAttribute("type");
								switch (tuplet) {
									case "start":
										noteObj.tuplet.typeTuplet = (noteObj.tuplet.typeTuplet == "stop") ? "stop_start" : "start";
										break;
									case "stop":
										noteObj.tuplet.typeTuplet = (noteObj.tuplet.typeTuplet == "start") ? "stop_start" : "stop";
										break;
									default:
										throw "BadMusicXML - Bad tuplet: " + tuplet.toString();
								}
								//console.log(noteObj.tuplet.typeTuplet);
								break;
								// TODO: tuplet
						}
						//console.log('---');
					});
					break;
			}
		});
		// Set default rest position now that we know the stave
		if (noteObj.rest && !noteObj.keys) {
			var clef = attrs.clef;
			if (clef instanceof Array) clef = clef[noteObj.stave];
			switch (clef) {
				case "bass":
					noteObj.keys = ["D/3"];
					break;
				case "tenor":
					noteObj.keys = ["A/3"];
					break;
				case "alto":
					noteObj.keys = ["C/4"];
					break;
				case "treble":
				default:
					noteObj.keys = ["B/4"];
					break;
			}
		}
		return noteObj;
	};

	MusicXMLParser.prototype.parseChord = function(chordElems, attrs) {
		var chordObj = {};
		Array.prototype.forEach.call(chordElems.childNodes, function(elem) {
			switch (elem.nodeName) {
				case "root":
					chordObj.chordPitch = elem.getElementsByTagName("root-step")[0].textContent;
					break;
				case "kind":
					chordObj.chordType = elem.textContent;
					break;
			}
		});
		return chordObj;
	};

	/**
	 * Returns complete attributes object for measure m, part p (zero-indexed)
	 */
	MusicXMLParser.prototype.getAttributes = function(m, p) {
		var attrs = {};
		// Merge with every previous attributes object in order
		// If value is an array, merge non-null indices only
		for (var i = 0; i <= m; i++) {
			if (!(i in this.attributes)) continue;
			if (!(p in this.attributes[i])) continue;
			var measureAttrs = this.attributes[i][p];
			for (var key in measureAttrs) {
				var val = measureAttrs[key];
				if (val instanceof Array) {
					if (!(attrs[key] && attrs[key] instanceof Array))
						attrs[key] = [];
					for (var ind = 0; ind < val.length; ind++)
						if (typeof attrs[key][ind] == "undefined" || (typeof val[ind] != "undefined" && val[ind] != null))
							attrs[key][ind] = val[ind];
				} else attrs[key] = val;
			}
		}

		// Default attributes
		if (!attrs.time) attrs.time = {
			num_beats: 4,
			beat_value: 4,
			soft: true
		};

		return attrs;
	};

	/**
	 * Converts keys as fifths (e.g. -2 for Bb) to the equivalent major key ("Bb").
	 * @param {Number} number of fifths from -7 to 7
	 * @return {String} string representation of key
	 */
	MusicXMLParser.prototype.getKeySignature = function(fifths) {
		var keys = {
			"-7": "Cb",
			"-6": "Gb",
			"-5": "Db",
			"-4": "Ab",
			"-3": "Eb",
			"-2": "Bb",
			"-1": "F",
			"0": "C",
			"1": "G",
			"2": "D",
			"3": "A",
			"4": "E",
			"5": "B",
			"6": "F#",
			"7": "C#"
		};
		var key = keys[fifths];
		return key;
	};



	MusicXMLParser.prototype.fetch = function(uri) {
		var req = new XMLHttpRequest();
		req.open('GET', uri, false);
		req.send(null);
		if (req.readyState != 4) return undefined;
		return req.responseText;
	};


	return MusicXMLParser;
});
define('modules/converters/MusicXML/src/SongModel_MusicXML',['require','modules/core/src/SongModel','modules/core/src/SectionModel','modules/core/src/BarManager','modules/core/src/BarModel','modules/core/src/ChordManager','modules/core/src/ChordModel','modules/core/src/NoteManager','modules/core/src/NoteModel','modules/converters/MusicXML/utils/musicXMLParser','modules/converters/MusicXML/src/BarModel_MusicXML','modules/converters/MusicXML/src/ChordModel_MusicXML','modules/converters/MusicXML/src/NoteModel_MusicXML'],function(require) {
	var SongModel = require('modules/core/src/SongModel');
	var SectionModel = require('modules/core/src/SectionModel');
	var BarManager = require('modules/core/src/BarManager');
	var BarModel = require('modules/core/src/BarModel');
	var ChordManager = require('modules/core/src/ChordManager');
	var ChordModel = require('modules/core/src/ChordModel');
	var NoteManager = require('modules/core/src/NoteManager');
	var NoteModel = require('modules/core/src/NoteModel');

	var MusicXMLParser = require('modules/converters/MusicXML/utils/musicXMLParser');
	//var SectionModel_MusicXML = require('modules/converters/MusicXML/src/SectionModel_MusicXML');
	var BarModel_MusicXML = require('modules/converters/MusicXML/src/BarModel_MusicXML');
	var ChordModel_MusicXML = require('modules/converters/MusicXML/src/ChordModel_MusicXML');
	var NoteModel_MusicXML = require('modules/converters/MusicXML/src/NoteModel_MusicXML');

	var SongModel_MusicXML = {};

	SongModel_MusicXML.importFromMusicXML = function(docString, songModel) {
		if (typeof songModel === "undefined" || !(songModel instanceof SongModel)) {
			songModel = new SongModel();
		} else {
			songModel.clear();
		}
		var chordManager = new ChordManager();
		var noteManager = new NoteManager();
		var barManager = new BarManager();

		var mxlParse = new MusicXMLParser();
		//var docString = '<?xml version="1.0" encoding="UTF-8" standalone="no"?><!DOCTYPE score-partwise PUBLIC "-//Recordare//DTD MusicXML 3.0 Partwise//EN" "http://www.musicxml.org/dtds/partwise.dtd"><score-partwise version="3.0"><part-list><score-part id="P1"><part-name>Music</part-name></score-part></part-list><part id="P1"><measure number="1"><attributes><divisions>1</divisions><key><fifths>0</fifths></key><time><beats>4</beats><beat-type>4</beat-type></time><clef><sign>G</sign><line>2</line></clef></attributes><note><pitch><step>C</step><octave>4</octave></pitch><duration>4</duration><type>whole</type></note></measure></part></score-partwise>';

		//docString = mxlParse.fetch(filepath);
		mxlParse.parse(docString);
		//console.log(mxlParse.measures);
		//console.log(mxlParse.attributes);

		if (typeof mxlParse !== "undefined") {
			Array.prototype.forEach.call(mxlParse.documentElement.getElementsByTagName("credit"), function(node) {
				if (node.hasAttribute("page") && node.attributes["page"].value === "1") {
					var title = node.getElementsByTagName("credit-words")[0].textContent;
					songModel.setTitle(title);
				}
			});
			if (typeof mxlParse.attributes !== "undefined") {
				if (typeof mxlParse.attributes[0] !== "undefined" && typeof mxlParse.attributes[0][0] !== "undefined") {
					if (typeof mxlParse.attributes[0][0].key !== "undefined") {
						songModel.setTonality(mxlParse.attributes[0][0].key);
					}
					if (typeof mxlParse.attributes[0][0].time !== "undefined") {
						songModel.setTimeSignature(mxlParse.attributes[0][0].time.num_beats + '/' + mxlParse.attributes[0][0].time.beat_value);
					} else {
						songModel.setTimeSignature('4/4');
					}
				}
			}
			var section, measure, bar, chord, note, noteElems;
			var chordBeat = [
				[1],
				[1, 3],
				[1, 3, 4],
				[1, 2, 3, 4],
			];
			for (var i = 0, c = mxlParse.partList.length; i < c; i++) {
				section = new SectionModel();
				/*console.log('---Section----');
				console.log(mxlParse);
				console.log(mxlParse.partList[i], mxlParse.staveConnectors[i]);*/
				//SectionModel_MusicXML.importFromMusicXML(mxlParse.partList[i], mxlParse.staveConnectors[i], section);
				if (typeof mxlParse.partName[i] !== "undefined") {
					section.setName(mxlParse.partName[i]);
				}
				songModel.addSection(section);
				section.setNumberOfBars(mxlParse.measures.length);
				for (var barNumber = 0, v = mxlParse.measures.length; barNumber < v; barNumber++) {
					measure = mxlParse.measures[barNumber][0];
					measure = mxlParse.getMeasure(barNumber);
					measure = measure.part[0];

					bar = BarModel_MusicXML.importFromMusicXML(measure.measureInfos);
					barManager.addBar(bar);
					if (typeof measure.chords !== "undefined") {
						for (var k = 0, b = measure.chords.length; k < b; k++) {
							chord = ChordModel_MusicXML.importFromMusicXML(measure.chords[k]);
							chord.setBarNumber(barNumber);
							chord.setBeat(chordBeat[b][k]);
							chordManager.addChord(chord);
						}
					}

					if (typeof measure.notes !== "undefined") {
						for (var k = 0, b = measure.notes.length; k < b; k++) {
							if (measure.notes[k].chord === false) {
								// case it's polyphonic (we keep same rhythm)
								note = NoteModel_MusicXML.importFromMusicXML(measure.notes[k]);
								noteManager.addNote(note);
							} else {
								// case it's not monophonic
								// we reuse last note
								NoteModel_MusicXML.importFromMusicXML(measure.notes[k], note);
							}
						}
					}
				}
			}
			songModel.addComponent('bars', barManager);
			songModel.addComponent('chords', chordManager);
			songModel.addComponent('notes', noteManager);
		}
		return songModel;
	};
	return SongModel_MusicXML;
});
define('modules/converters/MusicXML/src/main',[
		"modules/converters/MusicXML/src/BarModel_MusicXML",
		"modules/converters/MusicXML/src/ChordModel_MusicXML",
		"modules/converters/MusicXML/src/NoteModel_MusicXML",
		"modules/converters/MusicXML/src/SongModel_MusicXML"
	],
	function(BarModel_MusicXML, ChordModel_MusicXML, NoteModel_MusicXML, SongModel_MusicXML) {
		return {
			"BarModel_MusicXML": BarModel_MusicXML,
			"ChordModel_MusicXML": ChordModel_MusicXML,
			"NoteModel_MusicXML": NoteModel_MusicXML,
			"SongModel_MusicXML": SongModel_MusicXML
		};
	}
);
define('modules/core/src/SectionBarsIterator',[],function() {
	function SectionBarsIterator (section) {
		this.section = section;
		this.index = 0;
	}
	SectionBarsIterator.prototype = {
		hasNext: function(){
			return this.index < this.section.getNumberOfBars();
		},
		getBarIndex: function(){
			return this.index;
		},
		getSection: function(){
			return this.section;
		},
		next: function(){
			this.index++;
		},
		isLastBar: function(){
			return this.index == this.section.getNumberOfBars()-1;
		}
	};

	return SectionBarsIterator;
});
define('modules/core/src/SongBarsIterator',[],function() {
	function SongBarsIterator (song) {
		this.song = song;
		this.index = 0;
		this.bm = this.song.getComponent('bars');

		this.prevTimeSig = null;
		this.prevKeySig = null;
		this.endingState = null;
	}
	SongBarsIterator.prototype = {
		hasNext: function(){
			return this.index < this.bm.getTotal();
		},
		next: function(){
			var bar = this.bm.getBar(this.index);
			this.prevKeySig = this.getBarKeySignature();
			this.prevTimeSig = this.getBarTimeSignature();
			this.index++;
		},
		getBarIndex: function(){
			return this.index;
		},
		getBar: function(){
			return this.bm.getBar(this.index);
		},
		getFollowingBar: function(){
			return this.bm.getBar(this.index+1);
		},
		getBarKeySignature: function(){
			var keySig = this.getBar().getTonality();
			if (keySig) {
				return keySig;
			}
			else {
				return (this.index === 0) ? this.song.getTonality() : this.prevKeySig;
			}
		},
		getBarTimeSignature: function(){
			var timeSig = this.getBar().getTimeSignature();
			if (timeSig) {
				return timeSig;
			}
			else {
				return (this.index === 0) ? this.song.getTimeSignature() : this.prevTimeSig;
			}
			//return this.getBar().getTimeSignature() || (this.index == 0) ? this.song.getTimeSignature() : this.prevTimeSig;
		},
		getEndingState: function(){
			return this.endingState;
		},
		setEndingState: function(endingState){
			this.endingState = endingState;
		}

	};
	return SongBarsIterator;
});
define('modules/core/src/main',[
		"modules/core/src/SongModel",
		"modules/core/src/SectionModel",
		"modules/core/src/SectionBarsIterator",
		"modules/core/src/BarModel",
		"modules/core/src/BarManager",
		"modules/core/src/NoteManager",
		"modules/core/src/NoteModel",
		"modules/core/src/ChordManager",
		"modules/core/src/ChordModel",
		"modules/core/src/TimeSignatureModel",
		"modules/core/src/SongBarsIterator",
	],
	function(SongModel, SectionModel, SectionBarsIterator, BarModel, BarManager, NoteManager, NoteModel, ChordManager, ChordModel, TimeSignatureModel, SongBarsIterator ) {
		return {
			"SongModel": SongModel,
			"SectionModel": SectionModel,
			"SectionBarsIterator": SectionBarsIterator,
			"BarModel": BarModel,
			"BarManager": BarManager,
			"NoteManager": NoteManager,
			"NoteModel": NoteModel,
			"ChordManager": ChordManager,
			"ChordModel": ChordModel,
			"TimeSignatureModel": TimeSignatureModel,
			"SongBarsIterator": SongBarsIterator
		};
	}
);
define('modules/Cursor/src/CursorController',[
	"jquery",
	'pubsub',
], function($, pubsub) {

	function CursorController(model, view) {
		this.model = model || new CursorModel();
		this.view = view;
		this.initSubscribe();
	}

	/**
	 * Subscribe to view events
	 */
	CursorController.prototype.initSubscribe = function() {
		var self = this;
		$.subscribe('Cursor-' + this.view.id, function(el, fn, param) {
			if (self.model.getEditable()) {
				self[fn].call(self, param);
				$.publish('CanvasLayer-refresh');
			}
		});
	};

	/**
	 * set cursor by index
	 * @param {integer} index
	 * @param {string} editMode "notes" or "chords"
	 */
	CursorController.prototype.setCursor = function(index) {
		if (typeof index === "undefined" || isNaN(index)) {
			throw 'CursorController - setCursor - index is not correct ' + index;
		}
		this.model.setPos(index);
	};

	CursorController.prototype.expandSelected = function(inc) {
		if (typeof inc === "undefined" || isNaN(inc)) {
			throw 'CursorController - expandSelected - inc is not correct ' + inc;
		}
		this.model.expand(inc);
	};

	CursorController.prototype.moveCursor = function(inc) {
		this.setCursor(this.model.getEnd() + inc);
	};

	CursorController.prototype.setEditable = function(isEditable) {
		this.model.setEditable(isEditable);
	};

	return CursorController;
});
define('modules/Cursor/src/CursorListener',[
	'jquery',
	'pubsub',
], function($, pubsub) {

	function CursorListener(id, keyToNext) {
		if (!id) {
			throw "CursorListener needs id";
		}
		this.id = id;
		this.keyToNext = (typeof keyToNext !== "undefined") ? keyToNext : 'arrow'; // way to go to previous next, 'arrow' or 'tab', by default it's arrow
		this.initSubscribe();
	}

	CursorListener.prototype.initSubscribe = function() {
		var fn;
		var cursorId = 'Cursor-' + this.id;
		var self = this;
		if (self.keyToNext === 'tab') {
			$.subscribe('tab-key', function(el, inc) {
				//ChordsEdition is subscribed to this one, because we need SongModel 
				$.publish('Cursor-moveCursorByElement-' + self.id, inc);
			});
		} else { //arrow
			$.subscribe('ctrl-leftright-arrows', function(el, inc) {
				//NoteEdition is subscribed to this one, because we need SongModel 
				$.publish('Cursor-moveCursorByElement-' + self.id, inc);
			});
		}
		$.subscribe('shift-leftright-arrows', function(el, inc) {
			fn = 'expandSelected';
			$.publish(cursorId, [fn, inc]);
		});
		$.subscribe('leftright-arrows', function(el, inc) {
			fn = 'moveCursor';
			$.publish(cursorId, [fn, inc]);
		});
		$.subscribe('shift-begin', function(el, inc) {
			fn = 'expandSelected';
			$.publish(cursorId, [fn, -10000]);
		});
		$.subscribe('begin', function(el, inc) {
			fn = 'setCursor';
			$.publish(cursorId, [fn, 0]);
		});
		$.subscribe('shift-end', function(el, inc) {
			fn = 'expandSelected';
			$.publish(cursorId, [fn, 10000]);
		});
		$.subscribe('end', function(el, inc) {
			fn = 'setCursor';
			$.publish(cursorId, [fn, 10000]);
		});

	};

	return CursorListener;
});
define('modules/Cursor/src/Cursor',[
	"modules/Cursor/src/CursorController",
	"modules/Cursor/src/CursorModel",
	"modules/Cursor/src/CursorListener"
], function(CursorController, CursorModel, CursorListener) {

	function Cursor(listElement, id, keyType) {
		var cM = new CursorModel(listElement);
		var cV = new CursorListener(id, keyType);
		this.controller = new CursorController(cM, cV);
	}
	return Cursor;
});
//TODO: we should add jquery and pubsub, but it's working anyway??? no clear what's going on 
define('modules/Edition/src/KeyboardManager',['utils/NoteUtils',
	'jquery',
	'pubsub'
], function(NoteUtils, $, pubsub) {
	function KeyboardManager(test) {

		function stopEvent(evt) {
			evt.preventDefault();
			evt.stopPropagation();
			return false;
		}

		function preventBackspace(evt, d) {
			var doPrevent = false;
			if (d.tagName.toUpperCase() === 'TEXTAREA' || (d.tagName.toUpperCase() === 'INPUT' && (d.type.toUpperCase() === 'TEXT' || d.type.toUpperCase() === 'PASSWORD' || d.type.toUpperCase() === 'FILE'))) {
				doPrevent = d.readOnly || d.disabled;
			} else {
				doPrevent = true;
			}
			if (doPrevent) {
				stopEvent(evt);
			}
		}

		function isInHtmlInput(d) {
			return (
				d.tagName.toUpperCase() === 'TEXTAREA' || (d.tagName.toUpperCase() === 'INPUT' && (d.type.toUpperCase() === 'TEXT' || d.type.toUpperCase() === 'PASSWORD' || d.type.toUpperCase() === 'FILE'))
			);
		}

		function publish(eventName, evt, param) {
			if (test) {
				console.log("keyboard " + eventName);
			}
			$.publish(eventName, param);
			stopEvent(evt);
		}
		$(document).keydown(function(evt) {
			var keyCode = (evt === null) ? event.keyCode : evt.keyCode;
			var key = String.fromCharCode(keyCode).toLowerCase();
			var metaKey = !!evt.metaKey;
			var d = evt.srcElement || evt.target;
			var ACC_KEYS = {
				"s": "#",
				"v": "b",
				"n": "n"
			};
			var inc;
			if (keyCode === 8) {
				preventBackspace(evt, d);
			}
			if (isInHtmlInput(d) && keyCode != 9) { //if it's tab, we do run the event, even if it's in html, as this helps in chord edition
				//do not do anything
				return;
			}
			if (keyCode == 38 || keyCode == 40) { // up & down arrows
				inc = (keyCode == 38) ? 1 : -1;
				publish('updown-arrows', evt, inc);
			} else if (NoteUtils.getValidPitch(key) != -1 && (!evt.ctrlKey)) {
				publish('pitch-letter-key', evt, key.toUpperCase());
			} else if (ACC_KEYS.hasOwnProperty(key) && (!evt.ctrlKey)) {
				var acc = ACC_KEYS[key];
				// console.log(acc);
				if (evt.shiftKey) {
					publish('shift-accidental-key', evt, acc);
				} else {
					publish('accidental-key', evt, acc);
				}
			} else if (parseInt(key, null) >= 1 && parseInt(key, null) <= 9) {
				publish('number-key', evt, key);
			} else if (keyCode == 190) {
				publish('dot-key', evt, evt.shiftKey);
				stopEvent(evt);
			} else if (keyCode == 84) { // T be carefull, set key to t will be call on F5 also
				if (evt.shiftKey) {
					publish('shift-t-key', evt);
				} else {
					publish('t-key', evt);
				}
			} else if (keyCode == 82) { // R
				publish('R-key', evt);
			} else if (keyCode == 46) { //supr
				publish('supr-key', evt); // in our editor we want to replace note by silence and not delete note
			} else if (keyCode == 13) { //enter
				publish('enter-key', evt);
			} else if ((keyCode == 67 && evt.ctrlKey) || (keyCode == 67 && metaKey)) { // Ctrl + c or Command + c (mac or windows specific key)
				publish('ctrl-c-key', evt);
			} else if ((keyCode == 86 && evt.ctrlKey) || (keyCode == 86 && metaKey)) { // Ctrl + v or Command + v (mac or windows specific key)
				publish('ctrl-v-key', evt);
			} else if (keyCode == 9) {
				inc = (evt.shiftKey) ? -1 : 1;
				publish('tab-key', evt, inc);
			} else if (keyCode == 37 || keyCode == 39) {
				// left-right arrows
				inc = (keyCode == 39) ? 1 : -1;
				if (evt.shiftKey) {
					publish('shift-leftright-arrows', evt, inc);
				} else if (evt.ctrlKey) {
					publish('ctrl-leftright-arrows', evt, inc);
				} else {
					publish('leftright-arrows', evt, inc);
				}
			} else if (keyCode == 36) { //begin
				if (evt.shiftKey) {
					publish('shift-begin', evt);
				} else {
					publish('begin', evt);
				}
			} else if (keyCode == 35) { //end
				if (evt.shiftKey) {
					publish('shift-end', evt);
				} else {
					publish('end', evt);
				}
			}


		});
	}
	return KeyboardManager;
});
define('modules/Edition/src/main',[
		"modules/Edition/src/ElementManager",
		"modules/Edition/src/ElementView",
		"modules/Edition/src/KeyboardManager"
	],
	function(ElementManager, ElementView, KeyboardManager) {
		return {
			"ElementManager": ElementManager,
			"ElementView": ElementView,
			"KeyboardManager": KeyboardManager
		};
	}
);

define('text!modules/FileEdition/src/FileEditionTemplate.html',[],function () { return '<div id="editor_menu_second_level" class="hidden">\r\n\t<div id="import_container">\r\n\t\t<div id="editor_menu_each_import_container">\r\n\t\t\t<div class="current_button" title="Import leadsheet as MusicCSL JSON or MusicXML">\r\n\t\t\t\t<input type="file" id="importFile" accept="text/json, text/xml, .json, .xml" />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class="button_text">\r\n\t\t\tImport\r\n\t\t</div>\r\n\t</div>\r\n\t<div id="sound_export_container">\r\n\t\t<div id="editor_menu_each_sound_export_container">\r\n\t\t\t<div class="current_button" id="export_mp3" title="Export leadsheet as mp3">MP3</div>\r\n\t\t\t<div class="current_button" id="export_wav" title="Export leadsheet as wav">WAV</div>\r\n\t\t\t<div class="current_button" id="export_midi" title="Export leadsheet as midi">MIDI</div>\r\n\t\t\t<div class="sound_export_options">\r\n\t\t\t\t<label for="export_sound_chords">Chords: <input id="export_sound_chords" type="checkbox" name="export_sound_chords" checked />\t\t\t\t\t\t</label>\r\n\t\t\t\t<label for="export_sound_tick">Tick: <input id="export_sound_tick" type="checkbox" name="export_sound_tick" /></label>\r\n\t\t\t</div>\r\n\t\t\t<select id="sound_export_style">\r\n\t\t\t\t<option value="none">Standard</option>\r\n\t\t\t</select>\r\n\t\t</div>\r\n\t\t<div class="button_text">\r\n\t\t\tSound Export\r\n\t\t</div>\r\n\t</div>\r\n\t<div id="export_container">\r\n\t\t<div id="editor_menu_each_export_container">\r\n\t\t\t<div class="current_button" id="export_png" title="Export leadsheet as png">PNG</div>\r\n\t\t\t<div class="current_button" id="export_pdf" title="Export leadsheet as pdf">PDF</div>\r\n\t\t\t<div class="current_button" id="export_musicCslJson" title="Export leadsheet as MusicCSL JSON">MusicCSL JSON</div>\r\n\t\t</div>\r\n\t\t<div class="button_text">\r\n\t\t\tLeadsheet Export\r\n\t\t</div>\r\n\t</div>\r\n</div>';});

define('modules/FileEdition/src/FileEditionView',[
	'jquery',
	'mustache',
	'modules/core/src/SongModel',
	'utils/UserLog',
	'pubsub',
	'text!modules/FileEdition/src/FileEditionTemplate.html',
], function($, Mustache, SongModel, UserLog, pubsub, FileEditionTemplate) {

	function FileEditionView(parentHTML) {
		this.el = undefined;
		this.initSubscribe();
		this.initKeyboard();
	}

	FileEditionView.prototype.render = function(parentHTML, callback) {
		var rendered = Mustache.render(FileEditionTemplate);
		if (typeof parentHTML !== "undefined") {
			parentHTML.innerHTML = rendered;
		}
		this.el = rendered;
		this.initController();
	//	$.publish('FileEditionView-render');
		if (typeof callback === "function") {
			callback();
		}
		return;	
	};
	/**
	 * Publish event after receiving dom events
	 */
	FileEditionView.prototype.initController = function() {
		$('#add-bar').click(function() {
			$.publish('FileEditionView-addBar');
		});
		var self = this;
		// Leadsheet parameters
		/*$('#leadsheet_save').click(function() {

		});

		$('#leadsheet_edit_chord_sequence').click(function() {

		});

		$('#leadsheet_key_title').click(function() {

		});*/
		$('#importFile').change(function(e) {
			var file = e.target.files[0];
			var allowedTypes = ['json', 'xml', 'mxml'];
			var extension = file.name.split('.');
			extension = extension[extension.length - 1];
			var type = allowedTypes.indexOf(extension);
			if (!file || type === -1) {
				return;
			}
			var reader = new FileReader();
			reader.onload = function(e) {
				if (type === 0) {
					$.publish('FileEditionView-importMusicCSLJSON', JSON.parse(e.target.result));
				} else {
					$.publish('FileEditionView-importMusicXML', e.target.result);
				}
			};
			reader.readAsText(file);
			return false;
		});

		// export sound
		$('#export_mp3').click(function() {
			var chord = $('#export_sound_chords').prop("checked");
			var tick = $('#export_sound_tick').prop("checked");
			var style = $('#sound_export_style').val();
			$.publish('FileEditionView-sound_export', {
				'exportType': 'mp3',
				'chord': chord,
				'tick': tick,
				'style': style
			});
		});

		$('#export_wav').click(function() {
			var chord = $('#export_sound_chords').prop("checked");
			var tick = $('#export_sound_tick').prop("checked");
			var style = $('#sound_export_style').val();
			$.publish('FileEditionView-sound_export', {
				'exportType': 'wav',
				'chord': chord,
				'tick': tick,
				'style': style
			});
		});

		$('#export_midi').click(function() {
			var chord = $('#export_sound_chords').prop("checked");
			var tick = $('#export_sound_tick').prop("checked");
			$.publish('FileEditionView-sound_export', {
				'exportType': 'mid',
				'chord': chord,
				'tick': tick
			});
		});

		// leadsheet export
		$('#export_png').click(function() {
			$.publish('FileEditionView-exportPNG');
		});

		$('#export_pdf').click(function() {
			$.publish('FileEditionView-exportPDF');

		});

		$('#export_musicCslJson').click(function() {
			$.publish('FileEditionView-exportMusicCSLJSON');
		});
	};

	FileEditionView.prototype.initKeyboard = function(evt) {};

	/**
	 * Subscribe to model events
	 */
	FileEditionView.prototype.initSubscribe = function() {};


	return FileEditionView;
});
define('modules/WaveManager/src/WaveAudio',[],function() {
	function WaveAudio() {
		this.audioCtx = new(window.AudioContext || window.webkitAudioContext)();
		this.source = this.audioCtx.createBufferSource();
	}

	WaveAudio.prototype._createSource = function() {

		this._disconnectSource();
		this.source = this.audioCtx.createBufferSource();
		this.source.buffer = this.buffer;
		this.source.connect(this.audioCtx.destination);

	};
	WaveAudio.prototype._disconnectSource = function() {
		if (this.source) {
			this.source.disconnect();
		}
	};

	WaveAudio.prototype.play = function() {
		this._createSource();
		this.source.start(0);
	};

	WaveAudio.prototype.pause = function() {
		this._disconnectSource();
		this.source.stop(0);
	};

	WaveAudio.prototype.load = function(audioData, waveMng, callback) {
		var self = this;
		this.audioCtx.decodeAudioData(audioData, function(buffer) {
				self.buffer = buffer;
				self.beatDuration = self.buffer.duration / waveMng.song.getSongTotalBeats();

				self.source.buffer = self.buffer;
				//source.playbackRate.value = playbackControl.value;
				self.source.connect(self.audioCtx.destination);
				
				if (typeof callback !== "undefined") {
					callback();
				}
				//source.start(0)
			},
			function(e) {
				throw "Error with decoding audio data" + e.err;
			}
		);
	};
	WaveAudio.prototype.getDuration = function() {
		return this.buffer.duration;
	};
	WaveAudio.prototype.getPeaks = function(length, startPoint, endPoint) {

		startPoint = startPoint || 0;
		endPoint = endPoint || 1;

		var sampleStart = ~~(startPoint * this.buffer.length);
		var sampleEnd = ~~(endPoint * this.buffer.length);
		var sampleSize = (sampleEnd - sampleStart) / length;
		// var sampleSize = this.buffer.length / length;
		var sampleStep = ~~(sampleSize / 10) || 1;
		var channels = this.buffer.numberOfChannels;
		var splitPeaks = [];
		var mergedPeaks = [];

		for (var c = 0; c < channels; c++) {
			var peaks = splitPeaks[c] = [];
			var chan = this.buffer.getChannelData(c);

			for (var i = 0; i < length; i++) {
				var start = ~~((i * sampleSize) + sampleStart);
				var end = ~~(start + sampleSize);
				var max = 0;
				for (var j = start; j < end; j += sampleStep) {
					var value = chan[j];
					if (value > max) {
						max = value;
						// faster than Math.abs
					} else if (-value > max) {
						max = -value;
					}
				}
				peaks[i] = max;

				if (c == 0 || max > mergedPeaks[i]) {
					mergedPeaks[i] = max;
				}
			}
		}
		return mergedPeaks;

	};
	return WaveAudio;
});
define('modules/WaveManager/src/WaveBarView',['modules/Edition/src/ElementView'],function(ElementView){
	function WaveBarView (position,viewerScaler) {
		this.position = position;
		this.scaler = viewerScaler;
	}
	WaveBarView.prototype.isInPath = function(coords) {
		return ElementView.isInPath(coords,this.position,this.scaler);
	};
	WaveBarView.prototype.getArea = function() {
		return  this.position;
	};
	return WaveBarView;
});
define('modules/WaveManager/src/WaveDrawer',[
    'jquery',
    'modules/core/src/SongBarsIterator',
    'modules/Cursor/src/CursorModel',
    'modules/Edition/src/ElementManager',
    'modules/WaveManager/src/WaveBarView',
    'pubsub'
], function($, SongBarsIterator, CursorModel, ElementManager, WaveBarView, pubsub) {
    function WaveDrawer(viewer, params, waveMng) {
            params = params || {};
            if (!params.pixelRatio) {
                throw "WaveDrawer - pixelRatio not defined";
            }
            this.name = 'audioCursor';
            this.pixelRatio = params.pixelRatio;
            this.showHalfWave = params.showHalfWave;
            this.marginCursor = params.marginCursor || 0;
            this.drawMargins = params.drawMargins; //for debugging
            this.topAudio = params.topAudio || 80;
            this.heightAudio = params.heightAudio || 100;
            this.color = ["#55F", "#99F"];
            this.waveBarDimensions = [];
            this.enabled = true;
            this.viewer = viewer;
            this.waveMng = waveMng;
            this.elemMng = new ElementManager();
            this._adaptViewer();
        }
        /**
         * update viewer dimensions if needed (space between lines and margin top)
         */
    WaveDrawer.prototype._adaptViewer = function() {
        if (this.topAudio > 0) {
            this.viewer.setLineMarginTop(this.topAudio);
        } else {
            distance = this.viewer.LINE_HEIGHT + this.topAudio + this.heightAudio;
            if (distance < 0) {
                this.viewer.setLineMarginTop(distance, true);
            }
        }
    };

    /**
     * @param  {Float} time      in seconds (e.g. 4.54)
     * @param  {Integer} barIndex number of bar in which the cursor is (should be previously calculated)
     * @return {Object}          e.g. { x: 12, y: 23, w:5, h:5}
     */
    WaveDrawer.prototype._getAudioPosFromTime = function(time, barIndex) {
        var timeBoundaries = this.waveMng.barTimesMng.getTimeLimits(barIndex);
        var timeDist = timeBoundaries.end - timeBoundaries.start;
        var dim = this.waveBarDimensions[barIndex].getArea();
        var percent = (time - timeBoundaries.start) / (timeBoundaries.end - timeBoundaries.start);
        var newDim = {};
        newDim.y = dim.y + this.marginCursor;
        newDim.h = dim.h - this.marginCursor * 2;
        newDim.x = dim.x + percent * dim.w;
        newDim.w = dim.w;
        return newDim;
    };
    /**
     * @param  {Integer} x        coordinate x
     * @param  {Integer} barIndex number of bar in which the cursor is (should be previously calculated)
     * @return {Float}  time in seconds (e.g. 3.94)
     */
    WaveDrawer.prototype._getAudioTimeFromPos = function(x, barIndex) {
        var timeBoundaries = this.waveMng.barTimesMng.getTimeLimits(barIndex);
        var timeDist = timeBoundaries.end - timeBoundaries.start;

        var barDim = this.viewer.scaler.getScaledObj(this.waveBarDimensions[barIndex].getArea());
        var percentPos = (x - barDim.x) / barDim.w;

        return percentPos * timeDist + timeBoundaries.start;
    };
    /**
     *
     * @param  {Float} time     in seconds (e.g. 1.23)
     * @param  {Integer} barIndex number of bar in which the cursor is (should be previously calculated)
     *                            if not specfied, it will take current bar number from barTimesMng (this is used for example, when playing)
     * @return {Object}          e.g. { x: 12, y: 23, w:5, h:5}
     */
    WaveDrawer.prototype._getCursorDims = function(time, barIndex) {
        barIndex = barIndex || this.waveMng.barTimesMng.index;
        return this._getAudioPosFromTime(time,barIndex);
        
    };
        /**
     * @interface
     * @param  {Object} coords 
     */
    WaveDrawer.prototype.updateCursor = function(coords) {
        var self = this;

        var cursorBars = this.elemMng.getElemsInPath(this.waveBarDimensions,coords);

        if (cursorBars[0] != null && cursorBars[1] != null) {
            var pos1 = this._getAudioTimeFromPos(coords.x, cursorBars[0]);
            var pos2 = this._getAudioTimeFromPos(coords.xe, cursorBars[1]);
            this.cursor.setPos([pos1, pos2]);
        }

    };
    /**
     * @interface
     */
    WaveDrawer.prototype.getYs = function(coords) {
        return this.elemMng.getYs(this.waveBarDimensions,coords);
    };

    /**
     * @interface
     */
    WaveDrawer.prototype.isEnabled = function() {
        return this.enabled;
    };

    /**
     * @interface
     */
    WaveDrawer.prototype.enable = function() {
        this.enabled = true;
    };

    /**
     * @interface
     */
    WaveDrawer.prototype.disable = function() {
        this.enabled = false;
    };

    WaveDrawer.prototype.drawCursor = function(ctx) {
        ctx.beginPath();
        ctx.moveTo(this.cursorPos.x, this.cursorPos.y);
        ctx.lineTo(this.cursorPos.x, this.cursorPos.y + this.cursorPos.h);
        ctx.stroke();
    };
    /**
     * @interface
     * @param  {CanvasContext} ctx 
     */
    WaveDrawer.prototype.draw = function(ctx) {
       var saveFillColor = ctx.fillStyle;
        ctx.fillStyle = "#9900FF";
        ctx.globalAlpha = 0.2;
        var areas = this.getAreasFromCursor();
        for (i = 0, c = areas.length; i < c; i++) {
            ctx.fillRect(
                areas[i].x,
                areas[i].y,
                areas[i].w,
                areas[i].h
            );
        }
        ctx.fillStyle = saveFillColor;
        ctx.globalAlpha = 1;
    
    };
    WaveDrawer.prototype.updateCursorPlaying = function(time) {
        this.cursorPos = this._getCursorDims(time);
    };

    WaveDrawer.prototype.getAreasFromCursor = function() {
        var barTimesMng = this.waveMng.barTimesMng,
            startTime = this.cursor.getStart(),
            endTime = this.cursor.getEnd();
        var startBar = barTimesMng.getIndexByTime(startTime);
        var endBar = barTimesMng.getIndexByTime(endTime);
        var areas = this.elemMng.getElementsAreaFromCursor(this.waveBarDimensions, [startBar, endBar]);
        var cursor1 = this._getCursorDims(startTime, startBar);
        var cursor2 = this._getCursorDims(endTime, endBar);
        if (cursor1.x != cursor2.x) {
            if (cursor1.x > areas[0].x && cursor1.x < areas[0].x + areas[0].w) {
                var space = cursor1.x - areas[0].x;
                areas[0].x = cursor1.x;
                areas[0].w -= space;
            }
            var lastArea = areas[areas.length - 1];

            if (cursor2.x > lastArea.x && cursor2.x < lastArea.x + lastArea.w) {
                lastArea.w = cursor2.x - lastArea.x;
            }
        } else {
            areas = [];
        }
        return areas;
    };


    WaveDrawer.prototype.newCursor = function(audio) {
        this.cursor = new CursorModel(audio.getDuration());
    };
    WaveDrawer.prototype.drawAudio = function(barTimesMng) {
        this.waveBarDimensions = [];
        var numBars = barTimesMng.getLength();
        var area, dim, bar, barTime = 0,
            sliceSong = 1 / numBars,
            start = 0,
            peaks,
            toggleColor = 0;
        for (var i = 0; i < barTimesMng.getLength(); i++) {
            dim = this.viewer.barWidthMng.getDimensions(i);
            waveBarView = new WaveBarView({
                x: dim.left,
                y: dim.top - this.viewer.CHORDS_DISTANCE_STAVE - this.topAudio,
                w: dim.width,
                h: this.heightAudio
            },this.viewer.scaler);

            this.waveBarDimensions.push(waveBarView);
            area = waveBarView.getArea();
            peaks = this.waveMng.audio.getPeaks(area.w, start, start + sliceSong);
            this.drawPeaks(peaks, area, this.color[toggleColor], this.viewer);
            toggleColor = (toggleColor + 1) % 2;
            start += sliceSong;
        }
        this.viewer.canvasLayer.addElement(this);
        this.updateCursorPlaying(0);
        this.viewer.canvasLayer.refresh();
    };
 

    WaveDrawer.prototype._drawMargins = function(area, ctx) {
        ctx.beginPath();
        ctx.moveTo(area.x, area.y);
        ctx.lineTo(area.x + area.w, area.y);
        ctx.stroke();

        ctx.moveTo(area.x, area.y + area.h);
        ctx.lineTo(area.x + area.w, area.y + area.h);
        ctx.stroke();
        ctx.closePath();
    };
    WaveDrawer.prototype.drawPeaks = function(peaks, area, color, viewer) {
        var ctx = viewer.ctx;
        var self = this;

        viewer.drawElem(function() {
            // A half-pixel offset makes lines crisp
            var $ = 0.5 / self.pixelRatio;
            var width = area.w;
            var height = area.h;
            var offsetY = area.y;
            var halfH = height / 2;
            var length = peaks.length;
            var scale = 1;
            var i, h, maxH;
            // if (self.params.fillParent && width != length) {
            //     scale = width / length;
            // }
            scale = width / length;
            ctx.fillStyle = color;
            if (self.drawMargins) {
                self._drawMargins(area, ctx);
            }

            ctx.beginPath();
            ctx.moveTo(area.x + $, halfH + offsetY);
            //Comment these 3 lines if we only want to print the superior half
            if (!self.showHalfWave) {
                for (i = 0; i < length; i++) {
                    h = Math.round(peaks[i] * halfH);
                    ctx.lineTo(area.x + i * scale + $, halfH + h + offsetY);
                }
            }

            ctx.lineTo(area.x + width + $, halfH + offsetY);
            ctx.moveTo(area.x + $, halfH + offsetY);

            for (i = 0; i < length; i++) {
                maxH = self.showHalfWave ? height : halfH;
                h = Math.round(peaks[i] * maxH);
                ctx.lineTo(area.x + i * scale + $, halfH - h + offsetY);
            }

            ctx.lineTo(area.x + width + $, halfH + offsetY);
            ctx.closePath();
            ctx.fill();
            // Always draw a median line
            ctx.fillRect(area.x, halfH + offsetY - $, width, $);
        });

    };

    return WaveDrawer;
});
define('modules/WaveManager/src/BarTimesManager',[],function() {
	/**
	 * We save the time in which each bar finishes
	 */
	function BarTimesManager() {
		this.index = 0;
		this.barTimes = [];
	}

	BarTimesManager.prototype = {
		setBarTimes: function(barTimes){
			this.barTimes = barTimes;
		},
		getLength: function(){
			return this.barTimes.length;
		},
		updateCurrBarByTime: function(time, index){
			while (this.index < this.barTimes.length && this.barTimes[this.index] < time) {
				this.index++;
			}
		},
		/*getCurrentTimeLimits: function(){
			return this.getTimeLimits(this.index);
		},*/
		getTimeLimits: function(index){
			if (typeof index === "undefined") throw "BarTimesManager - error: index not defined";
			return {
				start: (index === 0) ? 0 : this.barTimes[index - 1],
				end: this.barTimes[index]
			};
		},
		getIndexByTime: function(time){
			for (var i = 0; i < this.barTimes.length; i++) {
				if (time < this.barTimes[i]) break;
			}
			return i;
		}
	};

	return BarTimesManager;
});
define('modules/WaveManager/src/WaveManager',['modules/WaveManager/src/WaveAudio',
    'modules/WaveManager/src/WaveDrawer',
    'modules/WaveManager/src/BarTimesManager',
    'modules/core/src/SongBarsIterator'
], function(WaveAudio, WaveDrawer, BarTimesManager, SongBarsIterator) {
    /**
     * @param {SongModel} song
     * @param {cursorNotes} cModel     // notes cursor, it is updated when playing
     * @param {LSViewer} viewer
     * @param {Object} params :
     *   - showHalfWave: show only the half of the waveform like in soundcloud
     *   - drawMargins: show the margin of the are in which the audio is drawn (for debug purposes)
     *   - topAudio: y distance to the actual bar from which audio is drawn, if 0 it will overwrite the current bar
     *   - heightAudio: height of the audio area, if 150 it will completely overwrite the current bar in the score
     */
    function WaveManager(song, cModel, viewer, params) {
        if (!song) {
            throw "WaveManager - song not defined";
        }
        if (!cModel) {
            throw "WaveManager - cModel not defined";
        }
        if (!viewer) {
            throw "WaveManager - viewer not defined";
        }

        params = params || {};

        this.barTimesMng = new BarTimesManager();
        this.song = song;
        this.cursorNotes = cModel;
        this.isLoaded = false;
        
        this.audio = new WaveAudio();

        var paramsDrawer = {
            pixelRatio: window.devicePixelRatio,
            showHalfWave: params.showHalfWave,
            drawMargins: params.drawMargins,
            topAudio: params.topAudio,
            heightAudio: params.heightAudio,
            marginCursor: params.marginCursor
        };
        this.drawer = new WaveDrawer(viewer, paramsDrawer, this);
    }

    WaveManager.prototype.isReady = function() {
        return this.isLoaded;
    };


    WaveManager.prototype._getBarTime = function(songIt, barTime) {
        return barTime + songIt.getBarTimeSignature().getBeats() * this.audio.beatDuration;
    };

    WaveManager.prototype.calculateBarTimes = function() {
        var numBars = this.song.getComponent("bars").getTotal(),
            songIt = new SongBarsIterator(this.song),
            barTime = 0,
            barTimes = [];

        while (songIt.hasNext()) {
            barTime = this._getBarTime(songIt, barTime);
            barTimes.push(barTime);
            songIt.next();
        }
        return barTimes;
    };

    WaveManager.prototype.load = function(url, tempo) {
        if (isNaN(tempo) || tempo <= 0) {
            tempo = 120;
        }
        // TODO Use tempo to compute length
        var self = this;
        var xhr = new XMLHttpRequest();
        xhr.open("GET", url);
        xhr.responseType = 'arraybuffer';
        xhr.withCredentials = false;

        xhr.onload = function() {
            var audioData = xhr.response;
            self.audio.load(audioData, self, function() {
                self.isLoaded = true;
                self.barTimesMng.setBarTimes(self.calculateBarTimes());
                self.drawer.newCursor(self.audio);
                self.drawer.drawAudio(self.barTimesMng);
            });
        };
        xhr.send();
    };

    WaveManager.prototype.restartAnimationLoop = function() {
        var self = this;
        var noteMng = this.song.getComponent('notes');
        var iNote = 0,
            prevINote = 0,
            time;
        var minBeatStep = this.audio.beatDuration / 32; //we don't want to update notes cursor as often as we update audio cursor, to optimize we only update note cursor every 1/32 beats
        var requestFrame = window.requestAnimationFrame ||
            window.webkitRequestAnimationFrame;
        this.startTime = this.audio.audioCtx.currentTime;
        var timeStep = 0;
        var frame = function() {
            if (!self.isPause) {
                if (self.getPlayedTime() >= timeStep + minBeatStep) {
                    iNote = noteMng.getPrevIndexNoteByBeat(self.getPlayedTime() / self.audio.beatDuration + 1);
                    if (iNote != prevINote) {
                        self.cursorNotes.setPos(iNote);
                        prevINote = iNote;
                    }
                    timeStep += minBeatStep;
                }
                time = self.getPlayedTime();
                self.barTimesMng.updateCurrBarByTime(time);
                self.drawer.updateCursorPlaying(time);
                self.drawer.viewer.canvasLayer.refresh();
                requestFrame(frame);
            }
        };
        frame();
    };

    WaveManager.prototype.play = function() {
        if (this.isReady()) {
            this.isPause = false;
            this.restartAnimationLoop();
            this.audio.play();
        }
    };

    WaveManager.prototype.pause = function() {
        if (this.isReady()) {
            this.isPause = true;
            this.audio.pause();
            this.currBar = 0;
        }
    };

    WaveManager.prototype.getPlayedTime = function() {
        //var dur = this.buffer.duration;
        return this.audio.audioCtx.currentTime - this.startTime;
    };

    return WaveManager;
});
/**
 * VexFlow 1.2.26 built on 2014-12-10.
 * Copyright (c) 2010 Mohit Muthanna Cheppudira <mohit@muthanna.com>
 *
 * http://www.vexflow.com  http://github.com/0xfe/vexflow
 */

function sanitizeDuration(a){var b=Vex.Flow.durationAliases[a];if(void 0!==b&&(a=b),void 0===Vex.Flow.durationToTicks.durations[a])throw new Vex.RERR("BadArguments","The provided duration is not valid");return a}if("undefined"==typeof Vex&&(Vex=function(){}),Vex.L=function(a,b){if(b){var c=Array.prototype.slice.call(b).join(" ");window.console.log(a+": "+c)}},Vex.RuntimeError=function(a,b){this.code=a,this.message=b},Vex.RuntimeError.prototype.toString=function(){return"RuntimeError: "+this.message},Vex.RERR=Vex.RuntimeError,Vex.Merge=function(a,b){for(var c in b)a[c]=b[c];return a},Vex.Min=function(a,b){return a>b?b:a},Vex.Max=function(a,b){return a>b?a:b},Vex.RoundN=function(a,b){return a%b>=b/2?parseInt(a/b,10)*b+b:parseInt(a/b,10)*b},Vex.MidLine=function(a,b){var c=b+(a-b)/2;return c%2>0&&(c=Vex.RoundN(10*c,5)/10),c},Vex.SortAndUnique=function(a,b,c){if(a.length>1){var d,e=[];a.sort(b);for(var f=0;f<a.length;++f)0!==f&&c(a[f],d)||e.push(a[f]),d=a[f];return e}return a},Vex.Contains=function(a,b){for(var c=a.length;c--;)if(a[c]===b)return!0;return!1},Vex.getCanvasContext=function(a){if(!a)throw new Vex.RERR("BadArgument","Invalid canvas selector: "+a);var b=document.getElementById(a);if(!b||!b.getContext)throw new Vex.RERR("UnsupportedBrowserError","This browser does not support HTML5 Canvas");return b.getContext("2d")},Vex.drawDot=function(a,b,c,d){var e=d||"#f55";a.save(),a.fillStyle=e,a.beginPath(),a.arc(b,c,3,0,2*Math.PI,!0),a.closePath(),a.fill(),a.restore()},Vex.BM=function(a,b){var c=(new Date).getTime();b();var d=(new Date).getTime()-c;Vex.L(a+d+"ms")},Vex.Inherit=function(){var a=function(){};return function(b,c,d){return a.prototype=c.prototype,b.prototype=new a,b.superclass=c.prototype,b.prototype.constructor=b,Vex.Merge(b.prototype,d),b}}(),"function"==typeof require)try{module.exports=Vex}catch(e){}else"function"==typeof define&&define.amd?define("Vex",[],function(){return Vex}):(this||window).Vex=Vex;"undefined"==typeof Vex.Flow&&(Vex.Flow={RESOLUTION:16384,IsKerned:!0}),Vex.Flow.Fraction=function(){function a(a,b){this.set(a,b)}return a.GCD=function(a,b){if("number"!=typeof a||"number"!=typeof b)throw new Vex.RERR("BadArgument","Invalid numbers: "+a+", "+b);for(var c;0!==b;)c=b,b=a%b,a=c;return a},a.LCM=function(b,c){return b*c/a.GCD(b,c)},a.LCMM=function(b){if(0===b.length)return 0;if(1==b.length)return b[0];if(2==b.length)return Vex.Flow.Fraction.LCM(b[0],b[1]);var c=b[0];return b.shift(),a.LCM(c,Vex.Flow.Fraction.LCMM(b))},a.prototype={set:function(a,b){return this.numerator=void 0===a?1:a,this.denominator=void 0===b?1:b,this},value:function(){return this.numerator/this.denominator},simplify:function(){var a=this.numerator,b=this.denominator,c=Vex.Flow.Fraction.GCD(a,b);return a/=c,b/=c,0>b&&(b=-b,a=-a),this.set(a,b)},add:function(a,b){var c,d;a instanceof Vex.Flow.Fraction?(c=a.numerator,d=a.denominator):(c=void 0!==a?a:0,d=void 0!==b?b:1);var e=Vex.Flow.Fraction.LCM(this.denominator,d),f=e/this.denominator,g=e/d,h=this.numerator*f+c*g;return this.set(h,e)},subtract:function(a,b){var c,d;a instanceof Vex.Flow.Fraction?(c=a.numerator,d=a.denominator):(c=void 0!==a?a:0,d=void 0!==b?b:1);var e=Vex.Flow.Fraction.LCM(this.denominator,d),f=e/this.denominator,g=e/d,h=this.numerator*f-c*g;return this.set(h,e)},multiply:function(a,b){var c,d;return a instanceof Vex.Flow.Fraction?(c=a.numerator,d=a.denominator):(c=void 0!==a?a:1,d=void 0!==b?b:1),this.set(this.numerator*c,this.denominator*d)},divide:function(a,b){var c,d;return a instanceof Vex.Flow.Fraction?(c=a.numerator,d=a.denominator):(c=void 0!==a?a:1,d=void 0!==b?b:1),this.set(this.numerator*d,this.denominator*c)},equals:function(a){var b=Vex.Flow.Fraction.__compareA.copy(a).simplify(),c=Vex.Flow.Fraction.__compareB.copy(this).simplify();return b.numerator===c.numerator&&b.denominator===c.denominator},greaterThan:function(a){var b=Vex.Flow.Fraction.__compareB.copy(this);return b.subtract(a),b.numerator>0},greaterThanEquals:function(a){var b=Vex.Flow.Fraction.__compareB.copy(this);return b.subtract(a),b.numerator>=0},lessThan:function(a){return!this.greaterThanEquals(a)},lessThanEquals:function(a){return!this.greaterThan(a)},clone:function(){return new Vex.Flow.Fraction(this.numerator,this.denominator)},copy:function(a){return this.set(a.numerator,a.denominator)},quotient:function(){return Math.floor(this.numerator/this.denominator)},fraction:function(){return this.numerator%this.denominator},abs:function(){return this.denominator=Math.abs(this.denominator),this.numerator=Math.abs(this.numerator),this},toString:function(){return this.numerator+"/"+this.denominator},toSimplifiedString:function(){return Vex.Flow.Fraction.__tmp.copy(this).simplify().toString()},toMixedString:function(){var a="",b=this.quotient(),c=Vex.Flow.Fraction.__tmp.copy(this);return 0>b?c.abs().fraction():c.fraction(),0!==b?(a+=b,0!==c.numerator&&(a+=" "+c.toSimplifiedString())):a=0===c.numerator?"0":c.toSimplifiedString(),a},parse:function(a){var b=a.split("/"),c=parseInt(b[0],10),d=b[1]?parseInt(b[1],10):1;return this.set(c,d)}},a.__compareA=new a,a.__compareB=new a,a.__tmp=new a,a}(),Vex.Flow.STEM_WIDTH=1.5,Vex.Flow.STEM_HEIGHT=32,Vex.Flow.STAVE_LINE_THICKNESS=2,Vex.Flow.clefProperties=function(a){if(!a)throw new Vex.RERR("BadArgument","Invalid clef: "+a);var b=Vex.Flow.clefProperties.values[a];if(!b)throw new Vex.RERR("BadArgument","Invalid clef: "+a);return b},Vex.Flow.clefProperties.values={treble:{line_shift:0},bass:{line_shift:6},tenor:{line_shift:4},alto:{line_shift:3},soprano:{line_shift:1},percussion:{line_shift:0},"mezzo-soprano":{line_shift:2},"baritone-c":{line_shift:5},"baritone-f":{line_shift:5},subbass:{line_shift:7},french:{line_shift:-1}},Vex.Flow.keyProperties=function(a,b,c){void 0===b&&(b="treble");var d={octave_shift:0};"object"==typeof c&&Vex.Merge(d,c);var e=a.split("/");if(e.length<2)throw new Vex.RERR("BadArguments","Key must have note + octave and an optional glyph: "+a);var f=e[0].toUpperCase(),g=Vex.Flow.keyProperties.note_values[f];if(!g)throw new Vex.RERR("BadArguments","Invalid key name: "+f);g.octave&&(e[1]=g.octave);var h=parseInt(e[1]);h+=-1*d.octave_shift;var i=7*h-28,j=(i+g.index)/2;j+=Vex.Flow.clefProperties(b).line_shift;var k=0;0>=j&&2*j%2===0&&(k=1),j>=6&&2*j%2===0&&(k=-1);var l="undefined"!=typeof g.int_val?12*h+g.int_val:null,m=g.code,n=g.shift_right;if(e.length>2&&e[2]){var o=e[2].toUpperCase(),p=Vex.Flow.keyProperties.note_glyph[o];p&&(m=p.code,n=p.shift_right)}return{key:f,octave:h,line:j,int_value:l,accidental:g.accidental,code:m,stroke:k,shift_right:n,displaced:!1}},Vex.Flow.keyProperties.note_values={C:{index:0,int_val:0,accidental:null},CN:{index:0,int_val:0,accidental:"n"},"C#":{index:0,int_val:1,accidental:"#"},"C##":{index:0,int_val:2,accidental:"##"},CB:{index:0,int_val:-1,accidental:"b"},CBB:{index:0,int_val:-2,accidental:"bb"},D:{index:1,int_val:2,accidental:null},DN:{index:1,int_val:2,accidental:"n"},"D#":{index:1,int_val:3,accidental:"#"},"D##":{index:1,int_val:4,accidental:"##"},DB:{index:1,int_val:1,accidental:"b"},DBB:{index:1,int_val:0,accidental:"bb"},E:{index:2,int_val:4,accidental:null},EN:{index:2,int_val:4,accidental:"n"},"E#":{index:2,int_val:5,accidental:"#"},"E##":{index:2,int_val:6,accidental:"##"},EB:{index:2,int_val:3,accidental:"b"},EBB:{index:2,int_val:2,accidental:"bb"},F:{index:3,int_val:5,accidental:null},FN:{index:3,int_val:5,accidental:"n"},"F#":{index:3,int_val:6,accidental:"#"},"F##":{index:3,int_val:7,accidental:"##"},FB:{index:3,int_val:4,accidental:"b"},FBB:{index:3,int_val:3,accidental:"bb"},G:{index:4,int_val:7,accidental:null},GN:{index:4,int_val:7,accidental:"n"},"G#":{index:4,int_val:8,accidental:"#"},"G##":{index:4,int_val:9,accidental:"##"},GB:{index:4,int_val:6,accidental:"b"},GBB:{index:4,int_val:5,accidental:"bb"},A:{index:5,int_val:9,accidental:null},AN:{index:5,int_val:9,accidental:"n"},"A#":{index:5,int_val:10,accidental:"#"},"A##":{index:5,int_val:11,accidental:"##"},AB:{index:5,int_val:8,accidental:"b"},ABB:{index:5,int_val:7,accidental:"bb"},B:{index:6,int_val:11,accidental:null},BN:{index:6,int_val:11,accidental:"n"},"B#":{index:6,int_val:12,accidental:"#"},"B##":{index:6,int_val:13,accidental:"##"},BB:{index:6,int_val:10,accidental:"b"},BBB:{index:6,int_val:9,accidental:"bb"},R:{index:6,int_val:9,rest:!0},X:{index:6,accidental:"",octave:4,code:"v3e",shift_right:5.5}},Vex.Flow.keyProperties.note_glyph={D0:{code:"v27",shift_right:-.5},D1:{code:"v2d",shift_right:-.5},D2:{code:"v22",shift_right:-.5},D3:{code:"v70",shift_right:-.5},T0:{code:"v49",shift_right:-2},T1:{code:"v93",shift_right:.5},T2:{code:"v40",shift_right:.5},T3:{code:"v7d",shift_right:.5},X0:{code:"v92",shift_right:-2},X1:{code:"v95",shift_right:-.5},X2:{code:"v7f",shift_right:.5},X3:{code:"v3b",shift_right:-2}},Vex.Flow.integerToNote=function(a){if("undefined"==typeof a)throw new Vex.RERR("BadArguments","Undefined integer for integerToNote");if(-2>a)throw new Vex.RERR("BadArguments","integerToNote requires integer > -2: "+a);var b=Vex.Flow.integerToNote.table[a];if(!b)throw new Vex.RERR("BadArguments","Unknown note value for integer: "+a);return b},Vex.Flow.integerToNote.table={0:"C",1:"C#",2:"D",3:"D#",4:"E",5:"F",6:"F#",7:"G",8:"G#",9:"A",10:"A#",11:"B"},Vex.Flow.tabToGlyph=function(a){var b=null,c=0,d=0;return"X"==a.toString().toUpperCase()?(b="v7f",c=7,d=-4.5):c=Vex.Flow.textWidth(a.toString()),{text:a,code:b,width:c,shift_y:d}},Vex.Flow.textWidth=function(a){return 6*a.toString().length},Vex.Flow.articulationCodes=function(a){return Vex.Flow.articulationCodes.articulations[a]},Vex.Flow.articulationCodes.articulations={"a.":{code:"v23",width:4,shift_right:-2,shift_up:8,shift_down:0,between_lines:!0},av:{code:"v28",width:4,shift_right:0,shift_up:11,shift_down:5,between_lines:!0},"a>":{code:"v42",width:10,shift_right:5,shift_up:8,shift_down:1,between_lines:!0},"a-":{code:"v25",width:9,shift_right:-4,shift_up:17,shift_down:10,between_lines:!0},"a^":{code:"va",width:8,shift_right:0,shift_up:-4,shift_down:-2,between_lines:!1},"a+":{code:"v8b",width:9,shift_right:-4,shift_up:12,shift_down:12,between_lines:!1},ao:{code:"v94",width:8,shift_right:0,shift_up:-4,shift_down:6,between_lines:!1},ah:{code:"vb9",width:7,shift_right:0,shift_up:-4,shift_down:4,between_lines:!1},"a@a":{code:"v43",width:25,shift_right:0,shift_up:8,shift_down:10,between_lines:!1},"a@u":{code:"v5b",width:25,shift_right:0,shift_up:0,shift_down:-4,between_lines:!1},"a|":{code:"v75",width:8,shift_right:0,shift_up:8,shift_down:10,between_lines:!1},am:{code:"v97",width:13,shift_right:0,shift_up:10,shift_down:12,between_lines:!1},"a,":{code:"vb3",width:6,shift_right:8,shift_up:-4,shift_down:4,between_lines:!1}},Vex.Flow.accidentalCodes=function(a){return Vex.Flow.accidentalCodes.accidentals[a]},Vex.Flow.accidentalCodes.accidentals={"#":{code:"v18",width:10,gracenote_width:4.5,shift_right:0,shift_down:0},"##":{code:"v7f",width:13,gracenote_width:6,shift_right:-1,shift_down:0},b:{code:"v44",width:8,gracenote_width:4.5,shift_right:0,shift_down:0},bb:{code:"v26",width:14,gracenote_width:8,shift_right:-3,shift_down:0},n:{code:"v4e",width:8,gracenote_width:4.5,shift_right:0,shift_down:0},"{":{code:"v9c",width:5,shift_right:2,shift_down:0},"}":{code:"v84",width:5,shift_right:0,shift_down:0},db:{code:"v9e",width:16,shift_right:0,shift_down:0},d:{code:"vab",width:10,shift_right:0,shift_down:0},bbs:{code:"v90",width:13,shift_right:0,shift_down:0},"++":{code:"v51",width:13,shift_right:0,shift_down:0},"+":{code:"v78",width:8,shift_right:0,shift_down:0}},Vex.Flow.accidentalColumnsTable={1:{a:[1],b:[1]},2:{a:[1,2]},3:{a:[1,3,2],b:[1,2,1],second_on_bottom:[1,2,3]},4:{a:[1,3,4,2],b:[1,2,3,1],spaced_out_tetrachord:[1,2,1,2]},5:{a:[1,3,5,4,2],b:[1,2,4,3,1],spaced_out_pentachord:[1,2,3,2,1],very_spaced_out_pentachord:[1,2,1,2,1]},6:{a:[1,3,5,6,4,2],b:[1,2,4,5,3,1],spaced_out_hexachord:[1,3,2,1,3,2],very_spaced_out_hexachord:[1,2,1,2,1,2]}},Vex.Flow.ornamentCodes=function(a){return Vex.Flow.ornamentCodes.ornaments[a]},Vex.Flow.ornamentCodes.ornaments={mordent:{code:"v1e",shift_right:1,shift_up:0,shift_down:5,width:14},mordent_inverted:{code:"v45",shift_right:1,shift_up:0,shift_down:5,width:14},turn:{code:"v72",shift_right:1,shift_up:0,shift_down:5,width:20},turn_inverted:{code:"v33",shift_right:1,shift_up:0,shift_down:6,width:20},tr:{code:"v1f",shift_right:0,shift_up:5,shift_down:15,width:10},upprall:{code:"v60",shift_right:1,shift_up:-3,shift_down:6,width:20},downprall:{code:"vb4",shift_right:1,shift_up:-3,shift_down:6,width:20},prallup:{code:"v6d",shift_right:1,shift_up:-3,shift_down:6,width:20},pralldown:{code:"v2c",shift_right:1,shift_up:-3,shift_down:6,width:20},upmordent:{code:"v29",shift_right:1,shift_up:-3,shift_down:6,width:20},downmordent:{code:"v68",shift_right:1,shift_up:-3,shift_down:6,width:20},lineprall:{code:"v20",shift_right:1,shift_up:-3,shift_down:6,width:20},prallprall:{code:"v86",shift_right:1,shift_up:-3,shift_down:6,width:20}},Vex.Flow.keySignature=function(a){var b=Vex.Flow.keySignature.keySpecs[a];if(!b)throw new Vex.RERR("BadKeySignature","Bad key signature spec: '"+a+"'");if(!b.acc)return[];for(var c=Vex.Flow.keySignature.accidentalList(b.acc),d=[],e=0;e<b.num;++e){var f=c[e];d.push({type:b.acc,line:f})}return d},Vex.Flow.keySignature.keySpecs={C:{acc:null,num:0},Am:{acc:null,num:0},F:{acc:"b",num:1},Dm:{acc:"b",num:1},Bb:{acc:"b",num:2},Gm:{acc:"b",num:2},Eb:{acc:"b",num:3},Cm:{acc:"b",num:3},Ab:{acc:"b",num:4},Fm:{acc:"b",num:4},Db:{acc:"b",num:5},Bbm:{acc:"b",num:5},Gb:{acc:"b",num:6},Ebm:{acc:"b",num:6},Cb:{acc:"b",num:7},Abm:{acc:"b",num:7},G:{acc:"#",num:1},Em:{acc:"#",num:1},D:{acc:"#",num:2},Bm:{acc:"#",num:2},A:{acc:"#",num:3},"F#m":{acc:"#",num:3},E:{acc:"#",num:4},"C#m":{acc:"#",num:4},B:{acc:"#",num:5},"G#m":{acc:"#",num:5},"F#":{acc:"#",num:6},"D#m":{acc:"#",num:6},"C#":{acc:"#",num:7},"A#m":{acc:"#",num:7}},Vex.Flow.unicode={sharp:String.fromCharCode(parseInt("266F",16)),flat:String.fromCharCode(parseInt("266D",16)),natural:String.fromCharCode(parseInt("266E",16)),triangle:String.fromCharCode(parseInt("25B3",16)),"o-with-slash":String.fromCharCode(parseInt("00F8",16)),degrees:String.fromCharCode(parseInt("00B0",16)),circle:String.fromCharCode(parseInt("25CB",16))},Vex.Flow.keySignature.accidentalList=function(a){return"b"==a?[2,.5,2.5,1,3,1.5,3.5]:"#"==a?[0,1.5,-.5,1,2.5,.5,2]:void 0},Vex.Flow.parseNoteDurationString=function(a){if("string"!=typeof a)return null;var b=/(\d*\/?\d+|[a-z])(d*)([nrhms]|$)/,c=b.exec(a);if(!c)return null;var d=c[1],e=c[2].length,f=c[3];return 0===f.length&&(f="n"),{duration:d,dots:e,type:f}},Vex.Flow.parseNoteData=function(a){var b=a.duration,c=Vex.Flow.parseNoteDurationString(b);if(!c)return null;var d=Vex.Flow.durationToTicks(c.duration);if(null==d)return null;var e=a.type;if(e){if("n"!==e&&"r"!==e&&"h"!==e&&"m"!==e&&"s"!==e)return null}else e=c.type,e||(e="n");var f=0;if(f=a.dots?a.dots:c.dots,"number"!=typeof f)return null;for(var g=d,h=0;f>h;h++){if(1>=g)return null;g/=2,d+=g}return{duration:c.duration,type:e,dots:f,ticks:d}},Vex.Flow.durationToFraction=function(a){return(new Vex.Flow.Fraction).parse(sanitizeDuration(a))},Vex.Flow.durationToNumber=function(a){return Vex.Flow.durationToFraction(a).value()},Vex.Flow.durationToTicks=function(a){a=sanitizeDuration(a);var b=Vex.Flow.durationToTicks.durations[a];return void 0===b?null:b},Vex.Flow.durationToTicks.durations={"1/2":2*Vex.Flow.RESOLUTION,1:Vex.Flow.RESOLUTION/1,2:Vex.Flow.RESOLUTION/2,4:Vex.Flow.RESOLUTION/4,8:Vex.Flow.RESOLUTION/8,16:Vex.Flow.RESOLUTION/16,32:Vex.Flow.RESOLUTION/32,64:Vex.Flow.RESOLUTION/64,128:Vex.Flow.RESOLUTION/128,256:Vex.Flow.RESOLUTION/256},Vex.Flow.durationAliases={w:"1",h:"2",q:"4",b:"256"},Vex.Flow.durationToGlyph=function(a,b){var c=Vex.Flow.durationAliases[a];void 0!==c&&(a=c);var d=Vex.Flow.durationToGlyph.duration_codes[a];if(void 0===d)return null;b||(b="n");var e=d.type[b];return void 0===e?null:Vex.Merge(Vex.Merge({},d.common),e)},Vex.Flow.durationToGlyph.duration_codes={"1/2":{common:{head_width:22,stem:!1,stem_offset:0,flag:!1,stem_up_extension:-Vex.Flow.STEM_HEIGHT,stem_down_extension:-Vex.Flow.STEM_HEIGHT,gracenote_stem_up_extension:-Vex.Flow.STEM_HEIGHT,gracenote_stem_down_extension:-Vex.Flow.STEM_HEIGHT,tabnote_stem_up_extension:-Vex.Flow.STEM_HEIGHT,tabnote_stem_down_extension:-Vex.Flow.STEM_HEIGHT,dot_shiftY:0,line_above:0,line_below:0},type:{n:{code_head:"v53"},h:{code_head:"v59"},m:{code_head:"vf",stem_offset:0},r:{code_head:"v31",head_width:24,rest:!0,position:"B/5",dot_shiftY:.5},s:{head_width:15,position:"B/4"}}},1:{common:{head_width:16,stem:!1,stem_offset:0,flag:!1,stem_up_extension:-Vex.Flow.STEM_HEIGHT,stem_down_extension:-Vex.Flow.STEM_HEIGHT,gracenote_stem_up_extension:-Vex.Flow.STEM_HEIGHT,gracenote_stem_down_extension:-Vex.Flow.STEM_HEIGHT,tabnote_stem_up_extension:-Vex.Flow.STEM_HEIGHT,tabnote_stem_down_extension:-Vex.Flow.STEM_HEIGHT,dot_shiftY:0,line_above:0,line_below:0},type:{n:{code_head:"v1d"},h:{code_head:"v46"},m:{code_head:"v92",stem_offset:-3},r:{code_head:"v5c",head_width:12,rest:!0,position:"D/5",dot_shiftY:.5},s:{head_width:15,position:"B/4"}}},2:{common:{head_width:10,stem:!0,stem_offset:0,flag:!1,stem_up_extension:0,stem_down_extension:0,gracenote_stem_up_extension:-14,gracenote_stem_down_extension:-14,tabnote_stem_up_extension:0,tabnote_stem_down_extension:0,dot_shiftY:0,line_above:0,line_below:0},type:{n:{code_head:"v81"},h:{code_head:"v2d"},m:{code_head:"v95",stem_offset:-3},r:{code_head:"vc",head_width:12,stem:!1,rest:!0,position:"B/4",dot_shiftY:-.5},s:{head_width:15,position:"B/4"}}},4:{common:{head_width:10,stem:!0,stem_offset:0,flag:!1,stem_up_extension:0,stem_down_extension:0,gracenote_stem_up_extension:-14,gracenote_stem_down_extension:-14,tabnote_stem_up_extension:0,tabnote_stem_down_extension:0,dot_shiftY:0,line_above:0,line_below:0},type:{n:{code_head:"vb"},h:{code_head:"v22"},m:{code_head:"v3e",stem_offset:-3},r:{code_head:"v7c",head_width:8,stem:!1,rest:!0,position:"B/4",dot_shiftY:-.5,line_above:1.5,line_below:1.5},s:{head_width:15,position:"B/4"}}},8:{common:{head_width:10,stem:!0,stem_offset:0,flag:!0,beam_count:1,code_flag_upstem:"v54",code_flag_downstem:"v9a",stem_up_extension:0,stem_down_extension:0,gracenote_stem_up_extension:-14,gracenote_stem_down_extension:-14,tabnote_stem_up_extension:0,tabnote_stem_down_extension:0,dot_shiftY:0,line_above:0,line_below:0},type:{n:{code_head:"vb"},h:{code_head:"v22"},m:{code_head:"v3e"},r:{code_head:"va5",stem:!1,flag:!1,rest:!0,position:"B/4",dot_shiftY:-.5,line_above:1,line_below:1},s:{head_width:15,position:"B/4"}}},16:{common:{beam_count:2,head_width:10,stem:!0,stem_offset:0,flag:!0,code_flag_upstem:"v3f",code_flag_downstem:"v8f",stem_up_extension:4,stem_down_extension:0,gracenote_stem_up_extension:-14,gracenote_stem_down_extension:-14,tabnote_stem_up_extension:0,tabnote_stem_down_extension:0,dot_shiftY:0,line_above:0,line_below:0},type:{n:{code_head:"vb"},h:{code_head:"v22"},m:{code_head:"v3e"},r:{code_head:"v3c",head_width:13,stem:!1,flag:!1,rest:!0,position:"B/4",dot_shiftY:-.5,line_above:1,line_below:2},s:{head_width:15,position:"B/4"}}},32:{common:{beam_count:3,head_width:10,stem:!0,stem_offset:0,flag:!0,code_flag_upstem:"v47",code_flag_downstem:"v2a",stem_up_extension:13,stem_down_extension:9,gracenote_stem_up_extension:-12,gracenote_stem_down_extension:-12,tabnote_stem_up_extension:9,tabnote_stem_down_extension:5,dot_shiftY:0,line_above:0,line_below:0},type:{n:{code_head:"vb"},h:{code_head:"v22"},m:{code_head:"v3e"},r:{code_head:"v55",head_width:16,stem:!1,flag:!1,rest:!0,position:"B/4",dot_shiftY:-1.5,line_above:2,line_below:2},s:{head_width:15,position:"B/4"}}},64:{common:{beam_count:4,head_width:10,stem:!0,stem_offset:0,flag:!0,code_flag_upstem:"va9",code_flag_downstem:"v58",stem_up_extension:17,stem_down_extension:13,gracenote_stem_up_extension:-10,gracenote_stem_down_extension:-10,tabnote_stem_up_extension:13,tabnote_stem_down_extension:9,dot_shiftY:0,line_above:0,line_below:0},type:{n:{code_head:"vb"},h:{code_head:"v22"},m:{code_head:"v3e"},r:{code_head:"v38",head_width:18,stem:!1,flag:!1,rest:!0,position:"B/4",dot_shiftY:-1.5,line_above:2,line_below:3},s:{head_width:15,position:"B/4"}}},128:{common:{beam_count:5,head_width:10,stem:!0,stem_offset:0,flag:!0,code_flag_upstem:"v9b",code_flag_downstem:"v30",stem_up_extension:26,stem_down_extension:22,gracenote_stem_up_extension:-8,gracenote_stem_down_extension:-8,tabnote_stem_up_extension:22,tabnote_stem_down_extension:18,dot_shiftY:0,line_above:0,line_below:0},type:{n:{code_head:"vb"},h:{code_head:"v22"},m:{code_head:"v3e"},r:{code_head:"vaa",head_width:20,stem:!1,flag:!1,rest:!0,position:"B/4",dot_shiftY:1.5,line_above:3,line_below:3},s:{head_width:15,position:"B/4"}}}},Vex.Flow.TIME4_4={num_beats:4,beat_value:4,resolution:Vex.Flow.RESOLUTION},Vex.Flow.Font={glyphs:{v0:{x_min:0,x_max:514.5,ha:525,o:"m 236 648 b 246 648 238 648 242 648 b 288 646 261 648 283 648 b 472 513 364 634 428 587 b 514 347 502 464 514 413 b 462 163 514 272 499 217 b 257 44 409 83 333 44 b 50 163 181 44 103 83 b 0 347 14 217 0 272 b 40 513 0 413 12 464 b 236 648 87 591 155 638 m 277 614 b 253 616 273 616 261 616 b 242 616 247 616 243 616 b 170 499 193 609 181 589 b 159 348 163 446 159 398 b 166 222 159 308 161 266 b 201 91 174 138 183 106 b 257 76 215 81 235 76 b 311 91 277 76 299 81 b 347 222 330 106 338 138 b 353 348 352 266 353 308 b 344 499 353 398 351 446 b 277 614 333 587 322 606 m 257 -1 l 258 -1 l 255 -1 l 257 -1 m 257 673 l 258 673 l 255 673 l 257 673 "},v1:{x_min:-1.359375,x_max:344.359375,ha:351,o:"m 126 637 l 129 638 l 198 638 l 266 638 l 269 635 b 274 631 272 634 273 632 l 277 627 l 277 395 b 279 156 277 230 277 161 b 329 88 281 123 295 106 b 344 69 341 81 344 79 b 337 55 344 62 343 59 l 333 54 l 197 54 l 61 54 l 58 55 b 50 69 53 59 50 62 b 65 88 50 79 53 81 b 80 97 72 91 74 93 b 117 156 103 113 112 129 b 117 345 117 161 117 222 l 117 528 l 100 503 l 38 406 b 14 383 24 384 23 383 b -1 398 5 383 -1 390 b 4 415 -1 403 1 409 b 16 437 5 416 10 426 l 72 539 l 100 596 b 121 632 119 631 119 631 b 126 637 122 634 125 635 m 171 -1 l 172 -1 l 170 -1 l 171 -1 m 171 673 l 172 673 l 170 673 l 171 673 "},v2:{x_min:-1.359375,x_max:458.6875,ha:468,o:"m 197 648 b 216 648 201 648 208 648 b 258 646 232 648 253 648 b 419 546 333 637 393 599 b 432 489 428 528 432 509 b 356 342 432 440 405 384 b 235 278 322 313 288 295 b 69 170 166 256 107 217 b 69 169 69 170 69 169 b 69 169 69 169 69 169 b 74 173 69 169 72 170 b 209 222 112 204 163 222 b 310 195 247 222 274 215 b 371 179 332 184 352 179 b 396 181 379 179 387 179 b 428 202 409 184 423 194 b 442 212 431 209 436 212 b 458 197 450 212 458 206 b 441 148 458 190 449 165 b 299 44 409 84 353 44 b 288 45 295 44 292 44 b 250 61 274 45 268 49 b 122 99 212 86 164 99 b 73 91 104 99 88 97 b 28 63 53 84 34 72 b 14 54 25 56 20 54 b 1 62 9 54 4 56 l -1 65 l -1 79 b 0 99 -1 91 0 95 b 2 113 1 102 2 108 b 164 309 20 197 81 272 b 285 470 232 341 277 398 b 287 487 287 476 287 481 b 171 595 287 551 239 595 b 155 595 166 595 160 595 b 142 592 145 594 142 594 b 145 589 142 592 142 591 b 179 527 168 576 179 551 b 132 455 179 496 163 467 b 104 451 122 452 112 451 b 27 530 62 451 27 487 b 29 555 27 538 27 546 b 197 648 44 601 115 639 m 228 -1 l 230 -1 l 227 -1 l 228 -1 m 228 673 l 230 673 l 227 673 l 228 673 "},v3:{x_min:-1.359375,x_max:409.6875,ha:418,o:"m 174 648 b 191 648 176 648 183 648 b 225 648 204 648 220 648 b 402 523 317 638 389 588 b 404 503 404 517 404 510 b 402 484 404 495 404 488 b 264 373 389 437 334 394 b 257 370 259 371 257 371 b 257 370 257 370 257 370 b 264 369 258 370 261 369 b 409 202 359 334 409 267 b 318 72 409 152 381 104 b 200 43 281 52 240 43 b 23 113 134 43 69 68 b 0 169 6 129 0 149 b 77 249 0 210 29 249 l 77 249 b 152 174 125 249 152 212 b 103 102 152 145 137 116 b 103 102 103 102 103 102 b 147 94 103 101 132 95 b 153 94 149 94 151 94 b 265 206 219 94 265 141 b 264 226 265 213 265 219 b 147 355 253 299 204 353 b 126 371 133 356 126 362 b 147 388 126 383 132 388 b 254 474 196 391 238 424 b 259 502 258 484 259 494 b 182 592 259 544 228 582 b 156 595 175 595 166 595 b 115 592 142 595 129 594 l 111 591 l 115 588 b 152 524 141 574 152 549 b 92 449 152 491 130 458 b 76 448 87 448 81 448 b -1 530 32 448 -1 488 b 20 581 -1 548 5 566 b 174 648 55 619 108 641 m 204 -1 l 205 -1 l 202 -1 l 204 -1 m 204 673 l 205 673 l 202 673 l 204 673 "},v4:{x_min:0,x_max:468.21875,ha:478,o:"m 174 637 b 232 638 175 638 189 638 b 277 638 245 638 259 638 l 378 638 l 381 635 b 389 623 386 632 389 627 b 382 609 389 617 386 613 b 366 589 381 606 372 598 l 313 528 l 245 451 l 209 410 l 155 348 l 84 267 b 59 240 72 252 59 240 b 59 240 59 240 59 240 b 151 238 59 238 68 238 l 242 238 l 242 303 b 243 371 242 369 242 370 b 289 426 245 374 254 385 l 303 441 l 317 456 l 338 483 l 360 506 l 371 520 b 386 527 375 526 381 527 b 400 519 392 527 397 524 b 401 440 401 516 401 514 b 401 377 401 423 401 402 l 401 238 l 426 238 b 453 237 449 238 450 238 b 465 217 461 234 465 226 b 460 202 465 212 464 206 b 426 197 454 197 453 197 l 401 197 l 401 180 b 451 88 402 129 412 109 b 468 69 465 81 468 79 b 461 55 468 62 466 59 l 458 54 l 321 54 l 185 54 l 182 55 b 175 69 176 59 175 62 b 191 88 175 79 176 81 b 240 180 230 109 240 129 l 240 197 l 125 197 b 73 195 104 195 87 195 b 8 197 10 195 9 197 b 0 212 2 199 0 205 b 0 212 0 212 0 212 b 20 242 0 219 0 219 b 163 610 104 344 163 492 b 174 637 163 628 166 634 m 234 -1 l 235 -1 l 232 -1 l 234 -1 m 234 673 l 235 673 l 232 673 l 234 673 "},v5:{x_min:0,x_max:409.6875,ha:418,o:"m 47 637 b 53 638 49 638 50 638 b 69 634 55 638 61 637 b 210 610 114 619 161 610 b 363 634 259 610 311 619 b 382 638 372 637 378 638 b 392 634 386 638 389 637 b 397 623 396 630 397 627 b 393 610 397 620 396 616 b 298 505 368 552 338 520 b 212 494 277 498 246 494 b 65 517 163 494 106 502 b 61 517 62 517 61 517 b 61 517 61 517 61 517 b 51 408 61 517 51 412 b 51 408 51 408 51 408 b 51 408 51 408 51 408 b 61 412 53 408 55 409 b 125 434 80 421 103 430 b 185 441 145 440 166 441 b 409 244 310 441 409 353 b 401 191 409 227 406 209 b 197 43 375 105 287 43 b 159 47 183 43 171 44 b 23 123 112 56 61 86 b 0 180 6 140 0 159 b 76 260 0 220 31 260 b 92 259 81 260 87 259 b 152 183 132 251 152 216 b 100 112 152 152 134 122 b 95 111 98 112 95 111 b 95 111 95 111 95 111 b 129 98 95 109 119 101 b 148 97 136 97 141 97 b 264 235 206 97 261 158 b 265 248 265 240 265 244 b 210 398 265 312 243 373 b 179 408 201 406 194 408 b 174 408 178 408 176 408 b 53 369 130 408 88 394 b 34 359 39 359 38 359 b 17 374 24 359 17 365 b 39 628 17 384 38 625 b 47 637 40 631 43 635 m 204 -1 l 205 -1 l 202 -1 l 204 -1 m 204 673 l 205 673 l 202 673 l 204 673 "},v6:{x_min:0,x_max:475.03125,ha:485,o:"m 255 648 b 274 648 259 648 266 648 b 314 646 288 648 307 648 b 450 555 374 637 438 594 b 454 530 453 546 454 538 b 375 451 454 485 416 451 b 328 467 359 451 343 455 b 300 526 310 483 300 503 b 352 598 300 557 319 589 b 356 599 355 598 356 599 b 352 602 356 599 355 601 b 288 616 330 612 308 616 b 210 584 257 616 230 605 b 164 433 189 559 174 508 b 160 374 163 415 160 381 b 160 374 160 374 160 374 b 160 374 160 374 160 374 b 168 377 160 374 164 376 b 258 395 200 390 228 395 b 366 367 294 395 328 387 b 475 223 436 333 475 283 b 472 197 475 215 473 206 b 349 65 462 141 419 95 b 259 43 317 51 288 43 b 167 69 230 43 200 52 b 4 290 80 113 20 195 b 0 349 1 309 0 328 b 20 467 0 391 6 433 b 255 648 58 563 155 637 m 269 363 b 257 363 265 363 261 363 b 210 345 236 363 220 356 b 186 226 196 324 186 272 b 187 198 186 216 186 206 b 213 95 191 151 202 112 b 257 76 221 83 238 76 b 270 77 261 76 266 76 b 321 156 299 81 310 99 b 329 229 326 183 329 206 b 321 301 329 252 326 274 b 269 363 311 342 298 359 m 236 -1 l 238 -1 l 235 -1 l 236 -1 m 236 673 l 238 673 l 235 673 l 236 673 "},v7:{x_min:0,x_max:442.359375,ha:451,o:"m 147 648 b 166 649 153 649 160 649 b 313 598 217 649 273 630 b 340 587 323 588 328 587 l 341 587 b 412 628 367 587 390 601 b 427 638 416 635 421 638 b 439 632 431 638 435 637 b 442 623 441 630 442 628 b 430 569 442 616 439 603 b 352 369 408 492 377 410 b 300 259 325 324 313 298 b 273 84 283 205 273 140 b 265 55 273 65 272 59 l 261 54 l 181 54 l 99 54 l 96 55 b 91 61 95 56 92 59 l 89 63 l 89 77 b 147 263 89 133 111 202 b 261 401 176 313 212 355 b 378 541 315 449 349 489 l 382 548 l 375 544 b 240 495 333 512 285 495 b 129 535 198 495 160 509 b 84 560 108 552 95 560 b 76 559 81 560 78 560 b 31 487 59 555 43 530 b 14 470 27 473 24 470 b 1 477 8 470 4 471 l 0 480 l 0 553 l 0 627 l 1 630 b 16 638 4 635 9 638 b 23 635 17 638 20 637 b 49 626 36 626 39 626 b 96 638 59 626 80 630 b 104 639 99 638 102 639 b 117 644 107 641 112 642 b 147 648 125 645 137 648 m 220 -1 l 221 -1 l 219 -1 l 220 -1 m 220 673 l 221 673 l 219 673 l 220 673 "},v8:{x_min:0,x_max:488.640625,ha:499,o:"m 217 648 b 245 649 225 648 235 649 b 453 516 343 649 430 595 b 458 478 455 503 458 491 b 412 370 458 440 441 398 b 411 369 412 369 411 369 b 415 365 411 367 412 367 b 488 231 462 331 488 281 b 472 165 488 208 483 186 b 243 43 434 86 338 43 b 63 104 178 43 112 62 b 0 233 20 140 0 186 b 73 365 0 283 24 331 l 77 369 l 72 374 b 29 476 42 406 29 441 b 217 648 29 557 103 635 m 258 605 b 242 606 253 605 247 606 b 157 552 198 606 157 580 b 160 541 157 548 159 544 b 319 413 176 503 242 452 l 337 403 l 338 406 b 359 476 352 428 359 452 b 258 605 359 537 318 595 m 138 326 b 130 330 134 328 130 330 b 130 330 130 330 130 330 b 107 305 127 330 112 313 b 84 231 91 281 84 256 b 243 86 84 156 151 86 b 249 87 245 86 246 87 b 347 156 303 88 347 120 b 344 172 347 162 345 167 b 156 319 325 227 257 281 b 138 326 151 322 144 324 m 243 -1 l 245 -1 l 242 -1 l 243 -1 m 243 673 l 245 673 l 242 673 l 243 673 "},v9:{x_min:0,x_max:475.03125,ha:485,o:"m 191 646 b 212 649 198 648 205 649 b 255 644 227 649 243 646 b 458 448 348 616 428 539 b 475 342 469 415 475 378 b 460 244 475 308 469 274 b 193 44 421 124 303 44 b 91 69 157 44 122 51 b 19 161 43 97 19 126 b 21 181 19 167 20 174 b 98 241 32 220 65 241 b 170 186 129 241 160 223 b 172 166 171 179 172 173 b 121 94 172 134 152 102 b 117 93 118 94 117 93 b 121 90 117 93 118 91 b 185 76 142 80 164 76 b 270 119 220 76 251 91 b 308 259 287 145 300 194 b 313 317 310 277 313 310 b 313 317 313 317 313 317 b 313 317 313 317 313 317 b 304 315 313 317 308 316 b 216 295 273 302 245 295 b 145 308 193 295 170 299 b 19 398 88 327 42 360 b 0 469 5 420 0 444 b 24 551 0 496 8 526 b 191 646 54 596 125 637 m 227 614 b 215 616 224 616 220 616 b 202 614 210 616 206 616 b 152 535 174 610 163 592 b 144 463 147 509 144 485 b 152 391 144 440 147 417 b 216 328 163 344 179 328 b 280 391 253 328 269 344 b 288 463 285 417 288 440 b 280 535 288 485 285 509 b 227 614 269 594 258 610 m 236 -1 l 238 -1 l 235 -1 l 236 -1 m 236 673 l 238 673 l 235 673 l 236 673 "},va:{x_min:-149.71875,x_max:148.359375,ha:151,o:"m -8 -1 b -1 0 -5 -1 -4 0 b 16 -11 5 0 13 -4 b 83 -186 17 -12 47 -90 l 148 -358 l 148 -363 b 127 -385 148 -376 138 -385 b 112 -378 122 -385 118 -383 b 54 -226 110 -374 114 -385 b 0 -81 24 -147 0 -81 b -55 -226 -1 -81 -25 -147 b -114 -378 -115 -385 -111 -374 b -129 -385 -119 -383 -123 -385 b -149 -363 -140 -385 -149 -376 l -149 -358 l -84 -186 b -19 -11 -49 -90 -19 -12 b -8 -1 -17 -8 -12 -4 "},vb:{x_min:0,x_max:428.75,ha:438,o:"m 262 186 b 273 186 266 186 272 186 b 274 186 273 186 274 186 b 285 186 274 186 280 186 b 428 48 375 181 428 122 b 386 -68 428 12 416 -29 b 155 -187 329 -145 236 -187 b 12 -111 92 -187 38 -162 b 0 -51 4 -91 0 -72 b 262 186 0 58 122 179 "},vc:{x_min:0,x_max:447.8125,ha:457,o:"m 0 86 l 0 173 l 223 173 l 447 173 l 447 86 l 447 0 l 223 0 l 0 0 l 0 86 "},vf:{x_min:0,x_max:370.21875,ha:378,o:"m 0 0 l 0 277 l 61 277 l 122 277 l 122 0 l 122 -278 l 61 -278 l 0 -278 l 0 0 m 246 -1 l 246 277 l 308 277 l 370 277 l 370 -1 l 370 -278 l 308 -278 l 246 -278 l 246 -1 "},v10:{x_min:0,x_max:559.421875,ha:571,o:"m 5 127 b 14 127 6 127 9 127 b 51 126 25 127 43 127 b 175 98 93 122 138 112 l 186 94 b 279 51 210 86 255 65 b 285 47 280 51 283 48 b 319 27 291 44 311 31 l 326 22 b 359 0 332 19 352 4 l 367 -6 b 371 -9 368 -6 370 -8 l 379 -15 b 387 -22 383 -18 386 -20 l 398 -30 l 411 -40 l 417 -47 l 427 -55 l 434 -61 b 441 -66 436 -62 439 -65 l 446 -72 l 453 -77 l 462 -87 b 558 -188 490 -113 549 -176 b 559 -195 559 -191 559 -194 b 548 -205 559 -201 555 -205 b 541 -204 547 -205 544 -205 b 534 -198 539 -201 536 -199 l 525 -191 b 481 -162 518 -187 490 -167 b 472 -155 477 -159 472 -156 b 468 -152 470 -155 469 -154 b 461 -149 466 -152 464 -151 b 428 -130 454 -145 441 -137 b 371 -99 413 -122 372 -99 b 363 -95 371 -99 367 -98 b 353 -91 357 -94 353 -91 b 348 -90 353 -91 352 -91 b 332 -81 343 -87 341 -86 b 27 -12 230 -37 127 -13 b 0 -5 4 -11 2 -11 b 0 58 0 -2 0 27 b 0 122 0 88 0 120 b 5 127 1 124 4 126 "},v11:{x_min:-155.171875,x_max:153.8125,ha:157,o:"m -137 353 b -130 353 -136 353 -133 353 b -112 349 -125 353 -119 352 b -100 342 -110 347 -104 344 b 0 317 -69 326 -35 317 b 111 349 38 317 76 328 b 129 353 117 352 123 353 b 153 327 142 353 153 344 b 144 302 153 320 153 317 b 27 6 93 226 50 113 b 21 -13 24 -11 24 -11 b 0 -26 17 -22 8 -26 b -24 -12 -9 -26 -19 -22 b -28 5 -24 -9 -27 -2 b -145 302 -53 117 -95 224 b -155 327 -155 317 -155 320 b -137 353 -155 340 -148 349 "},v18:{x_min:0,x_max:323.9375,ha:331,o:"m 217 535 b 225 537 220 537 221 537 b 245 524 235 537 242 533 l 246 521 l 247 390 l 247 258 l 273 265 b 306 270 288 269 299 270 b 322 259 315 270 319 267 b 323 208 323 256 323 233 b 322 158 323 184 323 159 b 288 140 318 148 315 147 b 247 130 254 131 247 130 b 247 65 247 130 247 104 b 247 20 247 51 247 36 l 247 -88 l 273 -81 b 306 -76 289 -77 299 -76 b 318 -81 311 -76 315 -77 b 323 -123 323 -87 323 -86 l 323 -138 l 323 -154 b 318 -195 323 -191 323 -190 b 269 -210 314 -199 315 -199 b 249 -216 259 -213 250 -216 l 247 -216 l 247 -349 l 246 -483 l 245 -487 b 225 -499 242 -495 234 -499 b 206 -487 219 -499 210 -495 l 205 -483 l 205 -355 l 205 -227 l 204 -227 l 181 -233 l 138 -244 b 117 -249 127 -247 117 -249 b 115 -385 115 -249 115 -256 l 115 -523 l 114 -526 b 95 -538 110 -534 102 -538 b 74 -526 87 -538 78 -534 l 73 -523 l 73 -391 b 72 -260 73 -269 73 -260 b 72 -260 72 -260 72 -260 b 19 -273 61 -263 23 -273 b 0 -260 10 -273 4 -267 b 0 -209 0 -256 0 -256 l 0 -162 l 1 -158 b 61 -134 5 -148 5 -148 l 73 -131 l 73 -22 b 72 86 73 79 73 86 b 72 86 72 86 72 86 b 19 74 61 83 23 74 b 0 86 10 74 4 79 b 0 137 0 90 0 90 l 0 184 l 1 188 b 61 212 5 198 5 198 l 73 215 l 73 348 l 73 481 l 74 485 b 95 498 78 492 87 498 b 103 495 98 498 100 496 b 114 485 107 494 111 489 l 115 481 l 115 353 l 115 226 l 121 226 b 159 235 123 227 141 231 l 198 247 l 205 248 l 205 384 l 205 521 l 206 524 b 217 535 209 528 212 533 m 205 9 b 205 119 205 70 205 119 l 205 119 b 182 113 204 119 194 116 l 138 102 b 117 97 127 99 117 97 b 115 -12 115 97 115 91 l 115 -122 l 121 -120 b 159 -111 123 -119 141 -115 l 198 -101 l 205 -98 l 205 9 "},v1b:{x_min:0,x_max:559.421875,ha:571,o:"m 544 204 b 548 204 545 204 547 204 b 559 194 555 204 559 199 b 559 190 559 192 559 191 b 530 156 559 188 556 184 b 462 86 510 134 481 104 b 453 76 458 81 454 77 l 446 70 l 441 65 b 434 59 439 63 436 61 l 427 54 b 409 37 426 51 416 44 b 392 23 398 29 394 26 b 387 19 389 22 387 20 b 379 13 386 19 383 16 l 371 8 l 367 5 l 359 -1 l 337 -16 b 285 -48 319 -29 298 -41 l 279 -52 b 186 -95 255 -66 210 -87 l 175 -99 b 23 -129 127 -117 68 -129 b 17 -129 20 -129 19 -129 b 1 -123 2 -129 2 -129 b 0 -49 0 -122 0 -83 b 0 4 0 -22 0 1 b 27 11 2 9 4 9 b 185 31 78 12 145 20 b 198 34 186 31 193 33 b 314 73 234 44 277 58 b 349 88 328 79 340 84 b 353 90 352 90 353 90 b 363 94 353 90 357 93 b 371 98 367 97 371 98 b 428 129 372 98 413 120 b 461 148 441 136 454 144 b 468 151 464 149 466 151 b 472 154 469 152 470 154 b 481 161 473 155 477 158 b 525 190 490 166 518 186 l 534 197 b 540 201 536 198 539 199 b 544 204 541 202 544 204 "},v1d:{x_min:0,x_max:619.3125,ha:632,o:"m 274 184 b 307 186 285 186 296 186 b 616 22 465 186 597 116 b 619 -1 617 13 619 5 b 308 -187 619 -104 483 -187 b 0 -1 133 -187 0 -102 b 5 36 0 11 1 23 b 274 184 29 115 141 176 m 289 161 b 272 162 284 162 277 162 b 171 41 209 162 171 108 b 205 -73 171 5 182 -34 b 345 -163 243 -133 298 -163 b 436 -98 385 -163 420 -142 b 446 -43 443 -80 446 -62 b 289 161 446 47 377 147 "},v1e:{x_min:-402.890625,x_max:401.53125,ha:410,o:"m -219 173 b -213 174 -217 174 -215 174 b -202 173 -209 174 -205 173 b -114 86 -200 172 -179 151 b -28 0 -66 37 -28 0 b 40 84 -28 0 2 37 b 117 174 111 173 110 172 b 122 174 118 174 119 174 b 132 173 125 174 129 173 b 295 11 134 172 171 134 l 307 -1 l 336 34 b 374 76 366 72 368 74 b 381 77 375 77 378 77 b 401 56 392 77 401 68 b 400 48 401 54 401 51 b 223 -172 397 41 230 -166 b 210 -176 220 -174 215 -176 b 201 -174 206 -176 204 -176 b 112 -87 198 -173 178 -152 b 27 0 65 -38 27 0 b -42 -86 27 0 -4 -38 b -118 -174 -112 -174 -111 -173 b -123 -176 -119 -176 -121 -176 b -133 -174 -126 -176 -130 -174 b -296 -12 -136 -173 -172 -137 l -308 0 l -337 -34 b -375 -77 -367 -73 -370 -76 b -382 -79 -377 -79 -379 -79 b -402 -58 -393 -79 -402 -69 b -401 -49 -402 -55 -402 -52 b -224 172 -398 -43 -228 167 b -219 173 -223 172 -220 173 "},v1f:{x_min:-340.28125,x_max:338.921875,ha:346,o:"m -32 520 b -29 521 -31 520 -31 521 b -23 519 -27 521 -24 520 b -20 513 -21 517 -20 516 b -21 506 -20 512 -20 509 b -31 474 -23 502 -27 488 l -53 402 l -66 352 l -68 349 l -57 349 b -32 351 -51 349 -40 351 b 123 370 19 352 74 359 b 137 371 127 370 133 371 b 170 356 152 371 164 366 b 171 355 170 355 170 355 b 216 366 174 355 183 358 b 280 378 268 377 266 377 b 287 378 283 378 284 378 b 332 349 307 378 322 369 b 338 319 336 341 338 330 b 332 301 338 310 336 302 b 242 280 329 299 246 280 b 242 280 242 280 242 280 b 235 288 236 280 235 283 b 235 292 235 290 235 291 b 236 302 236 297 236 299 b 220 337 236 316 230 330 l 216 340 l 210 335 b 159 276 189 322 172 301 b 118 149 152 265 156 274 b 81 34 84 36 85 36 b -8 13 78 33 -4 13 b -8 13 -8 13 -8 13 b -14 20 -12 15 -14 15 b -8 44 -14 24 -12 31 b -2 66 -5 55 -2 65 b -2 66 -2 66 -2 66 l -2 66 b -43 41 -2 66 -21 55 b -114 4 -98 8 -98 8 b -144 0 -123 0 -134 0 b -242 99 -197 0 -242 43 b -242 109 -242 102 -242 105 b -212 219 -240 122 -242 116 b -185 312 -197 270 -185 312 l -185 312 b -189 312 -185 312 -186 312 b -259 312 -200 312 -227 312 b -321 310 -291 312 -310 310 b -334 312 -330 310 -334 312 b -340 319 -338 313 -340 316 b -336 326 -340 322 -338 324 b -291 337 -334 326 -314 331 l -247 347 l -210 348 b -172 348 -190 348 -172 348 b -168 363 -172 348 -171 355 b -145 442 -151 424 -145 441 b -133 452 -144 444 -140 446 l -77 489 b -32 520 -53 506 -32 520 m 57 334 b 53 335 55 335 54 335 b 44 334 50 335 49 335 b -70 316 8 326 -28 320 b -78 309 -78 316 -78 316 b -108 202 -80 305 -88 274 b -141 81 -136 112 -141 93 b -140 74 -141 79 -141 77 b -117 49 -137 59 -127 49 b -107 52 -114 49 -110 51 b 16 127 -106 54 14 126 b 42 217 16 127 42 215 b 49 241 42 222 44 229 b 73 320 53 251 73 317 b 57 334 73 327 65 333 "},v20:{x_min:-571.671875,x_max:570.3125,ha:582,o:"m -559 351 b -551 352 -556 352 -553 352 b -530 338 -543 352 -533 348 b -529 169 -530 337 -529 291 l -529 1 l -507 27 l -441 112 b -382 174 -394 169 -390 174 b -378 174 -381 174 -379 174 b -281 86 -370 174 -375 179 b -196 0 -234 37 -196 0 b -126 84 -196 0 -164 37 b -50 174 -55 173 -57 172 b -44 174 -49 174 -47 174 b -35 173 -42 174 -38 173 b 53 86 -32 172 -12 151 b 138 0 100 37 138 0 b 208 84 140 0 170 37 b 284 174 279 173 279 172 b 289 174 285 174 288 174 b 300 173 294 174 298 173 b 462 11 303 172 340 134 l 475 -1 l 503 34 b 541 76 534 72 536 74 b 548 77 544 77 545 77 b 570 56 560 77 570 68 b 567 48 570 54 568 51 b 392 -172 564 41 397 -166 b 378 -176 387 -174 382 -176 b 368 -174 375 -176 371 -176 b 280 -87 367 -173 347 -152 b 194 0 234 -38 194 0 b 126 -86 194 0 163 -38 b 49 -174 54 -174 55 -173 b 44 -176 47 -176 46 -176 b 34 -174 40 -176 36 -174 b -54 -87 31 -173 10 -152 b -140 0 -102 -38 -140 0 b -209 -86 -140 0 -171 -38 b -285 -174 -280 -174 -279 -173 b -291 -176 -287 -176 -288 -176 b -300 -174 -294 -176 -298 -174 b -464 -11 -303 -173 -374 -102 l -476 0 l -506 -37 b -539 -76 -528 -65 -537 -74 b -551 -80 -543 -79 -547 -80 b -570 -68 -558 -80 -566 -76 l -571 -65 l -571 136 b -570 340 -571 331 -571 337 b -559 351 -568 344 -564 348 "},v22:{x_min:0,x_max:432.828125,ha:442,o:"m 209 186 b 213 187 210 187 212 187 b 216 187 215 187 216 187 b 224 174 216 186 220 180 b 420 -1 269 105 338 43 b 432 -12 431 -8 432 -9 b 421 -23 432 -15 432 -16 b 228 -180 345 -70 264 -137 b 219 -188 221 -188 221 -188 l 219 -188 b 208 -177 215 -188 215 -188 b 10 1 163 -106 93 -44 b 0 11 0 6 0 8 b 10 22 0 13 0 15 b 202 179 87 69 167 136 b 209 186 206 183 209 186 "},v23:{x_min:0,x_max:133.390625,ha:136,o:"m 54 66 b 65 68 58 68 61 68 b 122 37 88 68 110 56 b 133 -1 130 26 133 12 b 104 -58 133 -23 123 -44 b 66 -69 92 -65 78 -69 b 10 -38 44 -69 23 -58 b 0 -1 2 -27 0 -13 b 54 66 0 30 20 61 "},v25:{x_min:0,x_max:318.5,ha:325,o:"m 20 376 b 167 377 23 377 96 377 b 296 376 231 377 294 377 b 318 347 311 371 318 359 b 296 316 318 333 311 320 b 159 315 294 315 227 315 b 21 316 91 315 24 315 b 0 345 6 320 0 333 b 20 376 0 359 6 371 "},v26:{x_min:-21.78125,x_max:483.1875,ha:493,o:"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 383 20 616 20 616 l 20 148 l 21 151 b 140 199 59 183 102 199 b 206 179 164 199 187 192 l 210 176 l 210 396 l 210 617 l 212 621 b 231 632 216 628 223 632 b 250 620 239 632 247 628 b 251 383 251 616 251 616 l 251 148 l 254 151 b 370 199 291 183 332 199 b 415 191 385 199 400 197 b 483 84 458 176 483 134 b 461 0 483 58 476 29 b 332 -142 439 -40 411 -72 l 255 -215 b 231 -229 240 -229 239 -229 b 216 -223 224 -229 220 -227 b 210 -158 210 -217 210 -223 b 210 -120 210 -148 210 -136 l 210 -29 l 205 -34 b 100 -142 182 -65 159 -88 l 23 -215 b -1 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 201 l -21 616 l -20 620 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 m 341 131 b 328 133 337 133 332 133 b 322 133 326 133 323 133 b 257 87 296 129 273 113 l 251 80 l 251 -37 l 251 -156 l 255 -152 b 375 81 328 -72 375 20 l 375 83 b 341 131 375 113 367 126 "},v27:{x_min:0,x_max:432.828125,ha:442,o:"m 208 184 b 213 187 209 186 212 187 b 224 176 217 187 221 183 b 245 147 225 172 235 159 b 419 -1 288 90 347 38 b 431 -8 424 -4 431 -8 b 432 -12 432 -9 432 -11 b 430 -18 432 -13 432 -16 b 364 -61 424 -20 383 -47 b 225 -183 307 -102 250 -152 b 223 -187 224 -184 223 -187 b 220 -188 221 -188 220 -188 b 208 -176 216 -188 210 -184 b 187 -148 205 -173 197 -159 b 12 0 144 -90 84 -38 b 0 11 4 5 0 8 b 16 24 0 13 4 18 b 183 158 83 69 141 115 b 208 184 194 169 198 173 m 183 105 b 176 113 181 109 176 113 b 172 109 176 113 175 112 b 92 45 149 90 117 62 l 88 41 l 102 31 b 247 -105 160 -6 210 -55 l 254 -115 l 257 -112 l 269 -102 b 340 -45 287 -87 319 -61 l 344 -43 l 330 -33 b 183 105 272 6 221 54 "},v28:{x_min:-73.5,x_max:72.140625,ha:74,o:"m -72 252 l -73 254 l 0 254 l 72 254 l 70 252 b 0 -1 70 248 0 -1 b -72 252 -1 -1 -72 248 "},v29:{x_min:-590.71875,x_max:589.359375,ha:601,o:"m 175 273 b 182 274 178 273 181 274 b 202 262 190 274 198 269 b 204 158 204 259 204 259 l 204 56 l 250 112 b 303 174 296 172 298 172 b 308 174 304 174 307 174 b 318 173 313 174 317 173 b 481 11 322 172 357 134 l 494 -1 l 522 34 b 560 76 553 72 555 74 b 567 77 563 77 564 77 b 589 56 579 77 589 68 b 586 48 589 54 588 51 b 411 -172 583 41 416 -166 b 397 -176 406 -174 401 -176 b 387 -174 393 -176 390 -176 b 299 -87 386 -173 366 -152 b 213 0 253 -38 213 0 b 208 -6 213 0 210 -2 l 204 -12 l 204 -147 b 204 -210 204 -173 204 -194 b 198 -292 204 -297 204 -287 b 183 -299 194 -297 189 -299 b 164 -287 175 -299 167 -295 b 163 -174 163 -284 163 -284 l 161 -63 l 119 -117 b 65 -176 76 -170 73 -176 b 61 -176 63 -176 62 -176 b -35 -87 51 -174 57 -180 b -121 0 -83 -38 -121 0 b -190 -86 -122 0 -152 -38 b -266 -174 -261 -174 -259 -173 b -272 -176 -268 -176 -270 -176 b -281 -174 -276 -176 -280 -174 b -371 -86 -284 -173 -304 -152 b -457 0 -417 -38 -457 0 l -457 0 b -477 -26 -457 0 -470 -16 b -548 -227 -524 -88 -548 -161 b -536 -303 -548 -254 -544 -280 b -533 -317 -534 -309 -533 -313 b -553 -338 -533 -330 -541 -338 b -577 -315 -566 -338 -571 -333 b -590 -227 -586 -287 -590 -258 b -518 -9 -590 -154 -564 -77 b -465 56 -509 2 -504 8 l -402 134 b -363 174 -374 170 -371 174 b -359 174 -362 174 -360 174 b -262 86 -351 174 -356 179 b -176 0 -216 37 -176 0 b -107 84 -176 0 -145 37 b -31 174 -36 173 -38 172 b -25 174 -29 174 -28 174 b -16 173 -23 174 -19 173 b 147 11 -13 172 35 123 l 157 -1 l 160 1 l 163 4 l 163 130 b 164 260 163 256 163 258 b 175 273 166 266 170 270 "},v2a:{x_min:-21.78125,x_max:366.140625,ha:374,o:"m 276 1378 b 284 1379 279 1379 281 1379 b 306 1360 292 1379 298 1374 b 352 1247 326 1326 343 1286 b 366 1139 362 1213 366 1175 b 347 1009 366 1093 359 1049 l 344 1002 l 347 992 b 352 971 348 986 351 977 b 366 863 362 936 366 899 b 347 732 366 818 359 773 l 344 725 l 347 716 b 352 695 348 710 351 700 b 366 588 362 659 366 623 b 223 262 366 464 314 345 b 189 233 212 252 212 252 b 35 76 126 183 73 129 b -1 16 20 56 2 27 b -19 4 -4 9 -12 4 l -21 4 l -21 137 l -21 270 l -17 270 b 186 344 59 281 134 308 b 319 606 270 399 319 499 b 317 650 319 620 319 635 l 315 659 l 314 655 b 223 537 288 607 258 570 b 189 509 212 528 212 528 b 35 352 126 459 73 405 b -1 292 20 333 2 303 b -19 280 -4 285 -12 280 l -21 280 l -21 413 l -21 546 l -17 546 b 186 620 59 557 134 584 b 319 882 270 675 319 775 b 317 925 319 896 319 911 l 315 935 l 314 931 b 223 813 288 884 258 846 b 189 785 212 805 212 805 b 35 628 126 735 73 681 b -1 569 20 609 2 580 b -19 556 -4 562 -12 556 l -21 556 l -21 689 l -21 823 l -17 823 b 202 907 68 835 152 867 b 319 1157 280 968 319 1061 b 270 1338 319 1218 303 1281 b 262 1358 264 1349 262 1353 b 262 1364 262 1360 262 1363 b 276 1378 265 1371 269 1376 "},v2c:{x_min:-597.53125,x_max:596.171875,ha:608,o:"m -413 173 b -408 174 -412 174 -409 174 b -397 173 -404 174 -400 173 b -308 86 -394 172 -374 151 b -223 0 -261 37 -223 0 b -153 84 -223 0 -191 37 b -77 174 -83 173 -84 172 b -72 174 -76 174 -74 174 b -62 173 -68 174 -63 173 b 25 86 -59 172 -39 151 b 112 0 73 37 111 0 b 181 84 112 0 144 37 b 257 174 251 173 251 172 b 262 174 258 174 261 174 b 273 173 266 174 270 173 b 436 9 276 172 347 101 l 447 -1 l 477 36 b 522 79 511 79 513 79 l 522 79 b 552 51 533 79 539 73 b 596 -112 582 6 596 -51 b 567 -262 596 -161 586 -213 b 539 -322 558 -287 544 -316 b 524 -327 534 -326 529 -327 b 504 -315 515 -327 507 -323 b 503 -308 503 -312 503 -309 b 511 -285 503 -302 504 -297 b 555 -113 540 -227 555 -169 b 544 -34 555 -86 551 -59 b 522 19 540 -16 530 8 l 521 22 l 481 -26 l 405 -122 b 353 -176 366 -172 362 -176 b 349 -176 352 -176 351 -176 b 253 -87 341 -176 347 -180 b 167 0 206 -38 167 0 b 99 -86 167 0 136 -38 b 21 -174 27 -174 28 -173 b 17 -176 20 -176 19 -176 b 6 -174 13 -176 9 -174 b -81 -87 4 -173 -14 -152 b -167 0 -129 -38 -167 0 b -236 -86 -167 0 -198 -38 b -313 -174 -307 -174 -306 -173 b -318 -176 -314 -176 -315 -176 b -328 -174 -321 -176 -325 -174 b -491 -12 -330 -173 -367 -137 l -503 0 l -530 -34 b -570 -77 -562 -73 -564 -76 b -577 -79 -571 -79 -574 -79 b -597 -58 -588 -79 -597 -69 b -596 -49 -597 -55 -597 -52 b -417 172 -593 -43 -423 167 b -413 173 -417 172 -415 173 "},v2d:{x_min:0,x_max:438.28125,ha:447,o:"m 212 190 b 219 191 213 191 216 191 b 236 176 225 191 228 190 b 419 18 277 105 341 49 b 436 5 431 13 434 11 b 438 -1 438 4 438 1 b 424 -16 438 -8 432 -13 b 356 -49 409 -20 379 -36 b 234 -180 306 -83 258 -133 b 219 -192 230 -188 224 -192 b 200 -176 213 -192 206 -187 b 9 -15 157 -102 89 -45 b 0 0 2 -12 0 -6 b 16 18 0 9 2 12 b 200 176 93 48 159 104 b 212 190 205 186 208 188 m 239 113 b 236 117 238 116 238 117 b 230 108 235 117 234 115 b 92 -15 196 58 140 8 b 88 -18 91 -16 88 -18 b 92 -20 88 -18 91 -19 b 198 -116 130 -43 166 -74 b 200 -117 200 -117 200 -117 b 201 -117 200 -117 201 -117 b 264 -43 212 -98 242 -62 b 345 15 288 -19 321 4 b 348 18 347 16 348 16 b 344 20 348 18 347 19 b 239 113 307 41 266 79 "},v2f:{x_min:-1.359375,x_max:680.5625,ha:694,o:"m 597 1042 b 604 1042 600 1042 602 1042 b 642 1002 627 1042 642 1022 b 619 966 642 988 635 974 b 439 927 574 942 503 927 l 426 927 l 426 921 b 430 838 428 893 430 866 b 345 480 430 696 398 560 b 179 391 307 423 249 391 b 156 392 171 391 164 392 b 138 394 149 394 142 394 b 103 434 115 396 103 416 b 129 471 103 451 111 466 b 141 474 133 473 137 474 b 172 459 153 474 164 469 b 181 455 175 456 176 455 b 187 456 182 455 185 455 b 253 520 212 460 234 483 b 315 836 294 605 315 714 b 311 928 315 867 314 898 b 302 945 310 943 311 942 b 245 953 283 950 262 953 b 130 891 193 953 149 931 b 84 860 119 870 102 860 b 36 905 61 860 39 877 b 36 910 36 907 36 909 b 80 970 36 931 50 949 b 249 1017 125 1000 187 1017 b 322 1009 273 1017 299 1014 l 341 1003 b 436 991 372 995 406 991 b 577 1031 495 991 545 1004 b 597 1042 583 1038 590 1041 m 416 360 b 424 360 419 360 421 360 b 481 309 454 360 479 338 b 503 145 484 280 495 199 b 585 -185 525 16 555 -106 b 630 -245 596 -213 613 -237 l 634 -247 l 638 -245 b 647 -244 641 -245 645 -244 b 680 -278 666 -244 680 -262 b 664 -308 680 -290 675 -301 b 638 -312 658 -310 650 -312 b 613 -309 631 -312 623 -310 b 477 -201 555 -303 502 -260 b 417 -2 460 -159 434 -72 b 416 5 417 1 416 5 b 416 5 416 5 416 5 b 411 -5 415 5 413 0 b 359 -97 397 -33 377 -70 b 353 -106 355 -102 353 -105 b 359 -112 353 -108 355 -109 b 409 -130 375 -123 390 -129 b 426 -134 420 -130 421 -131 b 431 -147 428 -137 431 -141 b 420 -162 431 -152 427 -159 b 382 -169 409 -166 396 -169 b 323 -155 363 -169 341 -165 l 317 -152 l 314 -155 b 62 -303 240 -240 148 -295 b 36 -305 55 -305 44 -305 b 23 -303 29 -305 24 -305 b -1 -273 6 -299 -1 -287 b 31 -240 -1 -256 10 -240 b 36 -240 32 -240 34 -240 b 42 -241 38 -241 39 -241 b 134 -204 63 -241 99 -226 b 367 288 265 -115 357 81 b 375 330 368 313 370 320 b 416 360 383 347 400 358 m 360 -359 b 379 -359 363 -359 371 -359 b 424 -360 396 -359 416 -359 b 646 -502 536 -373 624 -430 b 649 -527 649 -510 649 -519 b 530 -673 649 -578 604 -635 l 521 -677 l 529 -681 b 653 -811 592 -714 637 -762 b 660 -853 658 -827 660 -839 b 645 -911 660 -873 656 -892 b 426 -1021 608 -981 519 -1021 b 283 -989 377 -1021 328 -1011 b 235 -949 249 -972 239 -964 b 234 -936 234 -946 234 -941 b 234 -928 234 -934 234 -931 l 235 -925 l 234 -927 l 225 -934 b 87 -982 186 -966 138 -982 b 80 -982 85 -982 83 -982 b 55 -981 70 -981 58 -981 b 17 -943 32 -981 17 -964 b 54 -904 17 -921 35 -904 b 78 -914 62 -904 72 -909 l 83 -918 l 88 -918 b 190 -831 122 -918 166 -881 b 269 -506 242 -727 269 -612 b 268 -462 269 -492 269 -477 b 266 -449 266 -458 266 -452 b 265 -444 266 -445 266 -444 b 257 -446 264 -444 261 -445 b 132 -545 196 -470 152 -505 b 88 -573 122 -563 104 -573 b 39 -523 63 -573 39 -553 b 63 -476 39 -505 44 -494 b 360 -359 136 -408 235 -369 m 419 -424 b 393 -423 411 -423 406 -423 l 375 -423 l 377 -426 b 379 -439 377 -427 378 -434 b 383 -510 382 -463 383 -487 b 314 -811 383 -609 360 -710 b 266 -893 296 -850 285 -870 b 264 -898 265 -896 264 -898 l 264 -898 b 264 -898 264 -898 264 -898 b 268 -898 264 -898 266 -898 b 273 -898 270 -898 272 -898 b 300 -909 283 -898 291 -900 b 426 -957 340 -941 385 -957 b 476 -949 443 -957 460 -954 b 547 -853 522 -931 547 -893 b 485 -745 547 -816 526 -775 b 397 -707 460 -727 432 -714 b 366 -675 375 -703 366 -692 b 396 -642 366 -657 377 -645 b 530 -557 455 -637 511 -601 b 536 -527 534 -548 536 -537 b 419 -424 536 -480 490 -437 "},v30:{x_min:-21.78125,x_max:367.5,ha:375,o:"m 276 1900 b 284 1901 279 1900 281 1901 b 306 1883 291 1901 298 1896 b 367 1686 347 1825 367 1757 b 343 1558 367 1643 359 1600 l 338 1549 l 343 1537 b 367 1411 359 1497 367 1454 b 343 1282 367 1367 359 1324 l 338 1272 l 343 1261 b 367 1135 359 1221 367 1178 b 343 1007 367 1090 359 1047 l 338 996 l 343 985 b 367 859 359 945 367 902 b 343 731 367 814 359 771 l 338 720 l 343 709 b 367 582 359 667 367 626 b 289 362 367 503 340 426 b 239 312 276 345 259 330 b 29 77 152 237 76 152 b -1 18 14 54 2 30 b -19 4 -4 11 -12 4 l -21 4 l -21 133 l -20 260 l -13 262 b 98 299 17 269 62 284 b 111 305 103 302 110 305 b 167 334 123 310 156 327 b 319 595 264 391 319 491 b 313 659 319 616 318 638 b 310 667 311 664 311 667 b 307 663 310 667 308 666 b 240 588 289 637 269 614 b 16 331 141 505 62 413 b -1 294 8 316 1 302 b -19 280 -4 287 -12 280 l -21 280 l -21 408 l -20 537 l -13 538 b 98 576 17 545 62 560 b 111 581 103 578 110 581 b 167 610 123 587 156 603 b 319 871 264 667 319 767 b 313 935 319 892 318 913 b 310 942 311 941 311 942 b 307 939 310 942 308 941 b 240 864 289 913 269 889 b 16 607 141 781 62 689 b -1 570 8 592 1 578 b -19 556 -4 563 -12 556 l -21 556 l -21 684 l -20 813 l -13 814 b 98 852 17 821 62 836 b 111 857 103 855 110 857 b 167 886 123 863 156 880 b 319 1147 264 943 319 1043 b 313 1211 319 1168 318 1189 b 310 1218 311 1217 311 1218 b 307 1215 310 1218 308 1217 b 240 1140 289 1188 269 1165 b 16 884 141 1057 62 966 b -1 846 8 868 1 855 b -19 832 -4 839 -12 832 l -21 832 l -21 960 l -20 1089 l -13 1090 b 98 1128 17 1097 62 1111 b 111 1134 103 1131 110 1134 b 167 1163 123 1139 156 1156 b 319 1424 264 1220 319 1320 b 313 1486 319 1444 318 1465 b 310 1494 311 1493 311 1494 b 307 1492 310 1494 308 1493 b 240 1417 289 1464 269 1442 b 16 1160 141 1333 62 1242 b -1 1121 8 1145 1 1131 b -19 1109 -4 1115 -12 1109 l -21 1109 l -21 1236 l -20 1365 l -13 1367 b 98 1404 17 1374 62 1388 b 111 1410 103 1407 110 1410 b 250 1508 172 1437 215 1467 b 319 1701 296 1564 319 1633 b 270 1859 319 1757 303 1814 b 262 1882 265 1868 262 1875 b 276 1900 262 1890 266 1896 "},v31:{x_min:0,x_max:386.5625,ha:394,o:"m 0 173 l 0 347 l 193 347 l 386 347 l 386 173 l 386 0 l 193 0 l 0 0 l 0 173 "},v33:{x_min:-423.3125,x_max:421.9375,ha:431,o:"m -10 276 b -2 277 -8 277 -5 277 b 17 265 5 277 13 273 b 19 163 19 260 19 260 l 19 68 l 39 45 b 277 -95 122 -34 200 -81 b 289 -97 281 -97 285 -97 b 378 0 332 -97 371 -54 b 378 11 378 4 378 6 b 302 83 378 55 345 83 b 242 66 283 83 262 77 b 208 56 231 59 219 56 b 148 120 175 56 148 81 b 200 186 148 151 164 172 b 261 198 220 194 240 198 b 420 45 341 198 411 137 b 421 22 421 37 421 29 b 257 -198 421 -86 347 -188 b 242 -198 251 -198 247 -198 b 20 -105 181 -198 95 -163 l 19 -104 l 19 -183 b 19 -216 19 -195 19 -206 b 12 -273 19 -272 17 -267 b -2 -278 8 -277 2 -278 b -21 -266 -10 -278 -19 -274 b -23 -165 -23 -263 -23 -262 l -23 -69 l -44 -47 b -250 86 -117 23 -183 66 b -295 94 -270 93 -284 94 b -315 91 -302 94 -308 94 b -381 5 -356 81 -381 43 b -355 -56 -381 -16 -372 -40 b -299 -81 -338 -73 -319 -81 b -246 -68 -283 -81 -265 -77 b -212 -58 -234 -61 -223 -58 b -168 -77 -196 -58 -179 -65 b -151 -122 -156 -90 -151 -105 b -179 -174 -151 -141 -160 -162 b -239 -195 -194 -184 -217 -192 b -257 -197 -245 -195 -250 -197 b -423 -5 -349 -197 -423 -113 b -423 0 -423 -4 -423 -1 b -277 194 -420 97 -362 173 b -247 197 -268 197 -258 197 b -24 104 -185 197 -100 162 l -23 102 l -23 181 b -21 265 -23 260 -23 260 b -10 276 -20 269 -14 274 "},v34:{x_min:0,x_max:622.03125,ha:635,o:"m 398 417 b 406 419 401 419 404 419 b 427 398 417 419 427 409 b 427 391 427 395 427 392 b 34 -274 424 385 38 -272 b 20 -280 29 -278 25 -280 b 0 -259 9 -280 0 -270 b 0 -252 0 -256 0 -254 b 393 413 2 -247 389 410 b 398 417 394 415 397 416 m 592 417 b 600 419 594 419 597 419 b 622 398 611 419 622 409 b 620 391 622 395 620 392 b 227 -274 617 385 231 -272 b 213 -280 223 -278 219 -280 b 193 -259 202 -280 193 -270 b 194 -252 193 -256 193 -254 b 586 413 196 -247 582 410 b 592 417 588 415 590 416 "},v36:{x_min:-1.359375,x_max:1064.390625,ha:1086,o:"m 296 692 b 314 694 302 694 307 694 b 386 685 337 694 366 689 b 548 498 480 660 548 580 b 548 481 548 492 548 487 b 455 395 541 426 499 395 b 370 462 420 395 383 417 b 362 496 364 477 362 488 b 377 514 362 509 367 514 b 393 501 386 514 390 510 b 432 474 397 484 413 474 b 470 487 445 474 458 478 b 491 530 484 496 491 510 b 490 544 491 534 491 539 b 333 660 479 606 411 657 l 323 662 l 315 646 b 269 524 285 591 269 556 b 321 431 269 492 287 466 b 349 395 338 413 343 408 b 363 342 359 378 363 362 b 359 312 363 333 362 322 b 285 158 348 266 318 206 b 281 152 283 155 281 152 b 281 152 281 152 281 152 b 287 154 283 152 284 152 b 318 155 298 154 308 155 b 461 98 371 155 419 136 l 464 97 l 483 112 b 503 129 494 120 503 127 b 504 130 503 129 504 129 b 503 138 504 131 503 134 b 500 180 500 152 500 166 b 553 326 500 238 518 288 b 604 366 560 331 592 358 b 649 381 617 376 632 381 b 696 362 665 381 681 374 b 724 302 714 347 724 324 b 695 238 724 278 714 255 b 660 210 691 234 662 212 b 579 148 658 209 582 151 b 579 148 579 148 579 148 b 596 106 579 144 589 119 b 622 77 604 88 609 83 b 657 69 632 72 645 69 b 748 112 688 69 721 84 b 755 123 754 117 755 120 b 755 127 755 124 755 126 b 751 165 752 137 751 151 b 758 219 751 183 754 202 b 894 387 774 290 820 347 b 896 390 896 388 896 388 b 891 398 896 391 895 392 b 622 560 827 477 730 535 b 600 580 605 564 600 569 b 617 596 600 591 607 596 b 628 595 622 596 624 596 b 1057 248 846 552 1020 412 b 1064 191 1061 229 1064 209 b 922 0 1064 94 1005 9 b 902 -1 916 -1 909 -1 b 774 76 847 -1 800 26 b 769 83 770 81 770 83 b 769 81 769 83 769 83 b 627 -1 733 29 677 -1 b 548 27 597 -1 570 8 b 515 88 537 37 525 61 l 513 95 l 510 93 l 453 45 b 390 0 396 0 396 0 b 390 0 390 0 390 0 b 374 15 381 0 377 4 b 268 105 359 69 314 105 b 250 104 262 105 257 105 l 243 102 l 234 90 b 155 1 201 49 159 2 b 147 -1 152 0 149 -1 b 130 15 138 -1 130 6 b 132 20 130 18 132 19 b 136 31 133 22 134 27 b 220 131 149 74 178 109 b 231 137 225 134 230 136 b 302 278 280 202 302 244 b 265 335 302 299 295 309 b 209 442 234 363 213 402 b 209 455 209 446 209 451 b 279 648 209 502 232 564 l 285 659 l 283 659 b 176 627 238 653 210 645 b 57 477 111 594 66 538 b 55 459 55 471 55 464 b 72 409 55 437 61 415 b 93 403 78 405 87 403 b 152 467 123 403 151 431 b 168 488 153 483 157 488 b 185 462 181 488 185 483 l 185 460 b 137 344 183 409 168 369 b 78 322 119 328 98 322 b 13 360 50 322 25 335 b -1 426 4 380 -1 402 b 89 610 -1 488 32 559 b 296 692 147 659 210 685 m 926 348 b 921 353 924 351 922 353 b 914 348 920 353 918 351 b 823 167 857 306 823 237 b 828 124 823 154 826 138 b 890 31 837 79 862 40 b 896 31 892 31 894 31 b 956 104 916 31 940 59 b 970 191 965 129 970 159 b 966 241 970 208 969 224 b 926 348 959 277 945 313 m 627 326 b 619 326 624 326 622 326 b 598 316 611 326 604 323 b 568 215 579 288 568 255 b 568 208 568 213 568 210 b 571 183 570 195 570 184 l 571 183 b 594 201 571 183 582 191 l 634 231 b 660 259 653 247 656 248 b 664 278 662 266 664 272 b 627 326 664 299 649 320 "},v38:{x_min:-1.359375,x_max:651.96875,ha:665,o:"m 389 644 b 405 645 394 645 400 645 b 504 566 450 645 492 613 b 507 541 506 557 507 549 b 480 471 507 514 498 489 l 477 467 l 483 470 b 609 591 539 485 586 531 b 613 601 611 595 613 599 b 631 609 619 607 624 609 b 651 588 641 609 651 602 b 200 -946 651 584 204 -941 b 182 -957 197 -953 190 -957 b 163 -945 174 -957 166 -953 b 161 -939 161 -942 161 -942 b 217 -743 161 -931 170 -904 b 272 -555 247 -639 272 -555 b 272 -555 272 -555 272 -555 b 264 -560 272 -555 268 -557 b 140 -603 227 -589 182 -603 b 36 -567 102 -603 65 -592 b -1 -487 12 -548 -1 -517 b 17 -427 -1 -466 5 -445 b 103 -380 38 -395 70 -380 b 191 -433 137 -380 172 -398 b 205 -484 201 -448 205 -466 b 178 -553 205 -509 196 -535 l 175 -557 l 182 -555 b 307 -435 236 -539 284 -494 b 372 -213 308 -430 372 -215 b 372 -213 372 -213 372 -213 b 364 -219 372 -213 368 -216 b 240 -262 328 -247 283 -262 b 137 -226 202 -262 166 -249 b 99 -145 112 -206 99 -176 b 118 -84 99 -124 106 -104 b 204 -38 138 -54 171 -38 b 292 -91 238 -38 273 -56 b 306 -141 302 -106 306 -124 b 279 -212 306 -167 296 -194 l 276 -215 l 281 -213 b 408 -93 336 -198 385 -151 b 473 129 409 -88 473 127 b 473 129 473 129 473 129 b 465 122 473 129 469 126 b 341 80 428 94 383 80 b 236 115 303 80 266 91 b 200 195 213 136 200 165 b 217 256 200 217 206 238 b 304 303 239 287 272 303 b 393 249 338 303 374 285 b 406 199 402 234 406 217 b 379 129 406 173 397 148 l 377 126 l 382 127 b 509 248 436 142 485 190 b 574 470 510 254 574 469 b 574 470 574 470 574 470 b 566 464 574 470 570 467 b 442 421 529 435 484 421 b 337 458 404 421 367 433 b 300 537 313 478 300 508 b 389 644 300 585 334 635 "},v3b:{x_min:0,x_max:484.5625,ha:494,o:"m 228 245 b 239 247 234 247 239 247 b 243 247 240 247 242 247 b 303 238 257 247 287 242 b 484 -2 417 208 484 104 b 412 -177 484 -65 461 -127 b 243 -248 363 -226 303 -248 b 6 -63 138 -248 36 -180 b 0 -1 1 -41 0 -20 b 228 245 0 127 98 240 m 255 181 b 240 183 247 183 245 183 b 232 181 238 183 235 183 b 142 152 200 180 168 170 l 138 149 l 190 97 l 242 44 l 294 97 l 345 149 l 340 152 b 255 181 315 169 284 180 m 147 -54 l 197 -1 l 147 51 l 95 104 l 91 99 b 62 -1 72 70 62 34 b 66 -43 62 -15 63 -29 b 91 -101 72 -63 80 -84 l 95 -106 l 147 -54 m 393 99 b 389 104 390 102 389 104 b 337 51 389 104 366 80 l 285 -1 l 337 -54 l 389 -106 l 393 -101 b 421 -1 412 -72 421 -36 b 393 99 421 34 412 69 m 294 -98 b 242 -45 265 -69 242 -45 b 190 -98 242 -45 219 -69 l 138 -151 l 142 -154 b 242 -184 172 -174 206 -184 b 340 -154 276 -184 311 -174 l 345 -151 l 294 -98 "},v3c:{x_min:0,x_max:450.53125,ha:460,o:"m 189 302 b 204 303 193 302 198 303 b 303 224 250 303 292 270 b 306 199 304 216 306 208 b 279 129 306 173 296 147 l 276 126 l 281 127 b 408 249 337 142 385 190 b 412 259 409 254 412 258 b 430 267 417 265 423 267 b 450 247 441 267 450 259 b 200 -605 450 242 204 -599 b 182 -616 197 -612 190 -616 b 163 -602 174 -616 166 -610 b 161 -598 161 -601 161 -601 b 217 -402 161 -589 170 -562 b 272 -213 247 -298 272 -213 b 272 -213 272 -213 272 -213 b 264 -219 272 -213 268 -216 b 140 -262 227 -247 182 -262 b 36 -226 102 -262 65 -249 b 0 -145 12 -206 0 -176 b 17 -84 0 -124 5 -104 b 103 -38 38 -54 70 -38 b 191 -91 137 -38 172 -56 b 205 -141 201 -106 205 -124 b 178 -212 205 -167 196 -194 l 175 -215 l 182 -213 b 307 -93 236 -198 284 -151 b 372 129 308 -88 372 127 b 372 129 372 129 372 129 b 364 122 372 129 368 126 b 240 80 328 94 283 80 b 137 115 202 80 166 91 b 99 194 111 136 99 165 b 189 302 99 244 133 292 "},v3e:{x_min:0,x_max:406.96875,ha:415,o:"m 21 183 b 28 183 24 183 25 183 b 42 181 34 183 39 183 b 127 108 47 179 47 179 b 202 41 168 72 202 41 b 279 108 204 41 238 72 b 357 177 321 145 356 176 b 375 183 363 181 370 183 b 406 151 392 183 406 169 b 404 137 406 147 405 141 b 322 62 401 131 398 129 b 251 0 284 27 251 0 b 322 -63 251 -1 284 -29 b 404 -138 398 -130 401 -133 b 406 -152 405 -142 406 -148 b 375 -184 406 -170 392 -184 b 357 -179 370 -184 363 -183 b 279 -109 356 -177 321 -147 b 202 -43 238 -73 204 -43 b 127 -109 202 -43 168 -73 b 49 -179 85 -147 50 -177 b 31 -184 43 -183 36 -184 b 0 -152 13 -184 0 -170 b 2 -138 0 -148 0 -142 b 83 -63 5 -133 8 -130 b 155 0 122 -29 155 -1 b 83 62 155 0 122 27 b 8 129 43 97 10 127 b 0 151 2 136 0 144 b 21 183 0 165 8 177 "},v3f:{x_min:-24.5,x_max:317.140625,ha:324,o:"m -24 -147 l -24 -5 l -20 -5 b -1 -19 -12 -5 -4 -11 b 58 -123 6 -43 31 -86 b 196 -278 93 -173 134 -219 b 317 -570 274 -356 317 -460 b 294 -713 317 -617 308 -666 l 289 -724 l 294 -735 b 317 -873 308 -780 317 -827 b 235 -1132 317 -963 288 -1054 b 209 -1165 228 -1140 224 -1146 b 189 -1177 204 -1172 196 -1177 b 171 -1164 182 -1177 175 -1172 b 168 -1154 170 -1161 168 -1159 b 181 -1132 168 -1149 172 -1142 b 269 -891 238 -1064 269 -975 b 269 -881 269 -886 269 -884 b 262 -814 269 -857 265 -827 b 258 -800 261 -811 259 -806 b 142 -628 240 -731 198 -667 b -8 -589 112 -606 47 -589 b -20 -589 -13 -589 -19 -589 l -24 -589 l -24 -449 l -24 -308 l -20 -308 b -1 -322 -12 -308 -4 -313 b 58 -424 6 -345 31 -388 b 194 -580 93 -476 136 -523 b 259 -660 221 -606 245 -635 b 261 -663 259 -662 261 -663 b 264 -656 262 -663 262 -660 b 269 -587 268 -632 269 -610 b 264 -521 269 -566 268 -544 b 262 -512 264 -517 262 -513 b 258 -498 261 -509 259 -503 b 142 -326 240 -428 198 -365 b -8 -287 112 -303 47 -288 b -20 -287 -13 -287 -19 -287 l -24 -287 l -24 -147 "},v40:{x_min:-1.359375,x_max:436.921875,ha:446,o:"m 213 205 b 217 205 215 205 216 205 b 234 194 224 205 234 199 b 236 187 234 194 235 190 l 245 167 l 261 129 l 270 106 b 355 -61 294 54 329 -13 b 420 -163 381 -105 402 -138 b 436 -188 435 -184 436 -184 b 436 -191 436 -190 436 -190 b 421 -206 436 -201 431 -206 l 421 -206 l 416 -206 l 405 -201 b 217 -158 347 -172 283 -158 b 31 -201 153 -158 88 -172 l 20 -206 l 14 -206 l 14 -206 b 0 -191 5 -206 0 -201 b -1 -188 0 -190 -1 -190 b 14 -163 -1 -186 0 -184 b 95 -34 36 -136 72 -77 b 166 106 119 8 148 68 l 175 129 l 183 148 l 200 188 b 213 205 205 199 208 202 "},v41:{x_min:-1.359375,x_max:556.6875,ha:568,o:"m 294 322 b 318 323 299 322 308 323 b 360 320 334 323 352 322 b 526 217 430 310 490 273 b 543 166 537 202 543 184 b 447 70 543 117 503 70 b 445 70 447 70 446 70 b 359 159 394 72 359 113 b 368 201 359 173 362 187 b 442 245 382 229 412 245 b 455 244 446 245 451 245 b 460 244 458 244 460 244 b 460 244 460 244 460 244 b 454 248 460 244 458 245 b 325 291 417 276 372 291 b 285 287 313 291 299 290 b 144 -2 183 269 144 190 b 281 -290 144 -208 179 -280 b 304 -291 289 -291 298 -291 b 524 -105 412 -291 506 -212 b 541 -84 526 -88 530 -84 b 556 -101 551 -84 556 -90 b 549 -138 556 -111 553 -122 b 334 -322 521 -237 435 -310 b 302 -324 323 -323 313 -324 b 13 -101 172 -324 54 -234 b -1 -1 4 -68 -1 -34 b 294 322 -1 161 121 303 "},v42:{x_min:-348.4375,x_max:24.5,ha:25,o:"m -330 155 b -322 156 -329 156 -326 156 b -315 156 -319 156 -317 156 b -298 147 -311 155 -308 154 b -19 30 -224 98 -122 55 l 2 26 b 24 -1 17 22 24 13 b 2 -27 24 -15 17 -23 l -19 -31 b -298 -148 -122 -56 -224 -99 b -322 -158 -313 -158 -315 -158 b -348 -131 -338 -158 -348 -145 b -344 -117 -348 -127 -347 -122 b -328 -104 -341 -112 -338 -111 b -127 -8 -269 -65 -202 -33 b -106 0 -115 -4 -106 -1 b -127 6 -106 0 -115 2 b -328 102 -202 31 -269 63 b -344 116 -338 109 -341 111 b -348 130 -347 120 -348 124 b -330 155 -348 141 -341 152 "},v43:{x_min:-442.359375,x_max:441,ha:450,o:"m -31 487 b -1 488 -21 488 -10 488 b 434 104 216 488 397 330 b 441 27 438 79 441 47 b 439 12 441 20 439 15 b 419 0 435 4 427 0 b 404 5 413 0 408 1 b 398 30 400 11 398 13 b 0 351 390 213 213 351 b -59 348 -20 351 -39 349 b -400 30 -251 324 -393 191 b -405 5 -400 13 -401 11 b -420 0 -409 1 -415 0 b -441 12 -428 0 -436 4 b -442 27 -441 15 -442 20 b -435 104 -442 47 -439 79 b -31 487 -401 316 -235 474 m -13 131 b -1 133 -9 133 -5 133 b 51 105 19 133 39 123 b 61 70 58 95 61 83 b 51 34 61 58 58 45 b -1 6 39 16 19 6 b -46 27 -17 6 -34 13 b -62 69 -57 38 -62 54 b -13 131 -62 98 -44 124 "},v44:{x_min:-21.78125,x_max:251.8125,ha:257,o:"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 383 20 616 20 616 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b 0 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 201 l -21 616 l -20 620 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 "},v45:{x_min:-402.890625,x_max:401.53125,ha:410,o:"m -10 273 b -4 274 -9 273 -6 274 b 16 262 4 274 12 269 b 17 158 17 259 17 259 l 17 56 l 62 112 b 117 174 110 172 110 172 b 122 174 118 174 119 174 b 132 173 125 174 129 173 b 295 11 134 172 171 134 l 307 -1 l 336 34 b 374 76 366 72 368 74 b 381 77 375 77 378 77 b 401 56 392 77 401 68 b 400 48 401 54 401 51 b 223 -172 397 41 230 -166 b 210 -176 220 -174 215 -176 b 201 -174 206 -176 204 -176 b 112 -87 198 -173 178 -152 b 27 0 65 -38 27 0 b 21 -6 27 0 24 -2 l 17 -12 l 17 -147 b 17 -210 17 -173 17 -194 b 10 -292 17 -297 16 -287 b -2 -299 6 -297 2 -299 b -21 -287 -10 -299 -19 -295 b -24 -174 -23 -284 -23 -284 l -24 -63 l -66 -117 b -121 -176 -110 -170 -114 -176 b -125 -176 -122 -176 -123 -176 b -296 -12 -134 -174 -125 -184 l -308 0 l -337 -34 b -375 -77 -367 -73 -370 -76 b -382 -79 -377 -79 -379 -79 b -402 -58 -393 -79 -402 -69 b -401 -49 -402 -55 -402 -52 b -224 170 -398 -43 -231 165 b -212 174 -221 173 -216 174 b -202 173 -208 174 -205 174 b -39 11 -200 172 -151 122 l -28 -1 l -25 1 l -24 4 l -24 130 b -23 260 -24 256 -24 258 b -10 273 -20 266 -16 270 "},v46:{x_min:0,x_max:627.46875,ha:640,o:"m 306 190 b 314 191 308 191 311 191 b 326 184 318 191 322 190 l 336 173 b 510 52 377 127 442 80 b 515 49 513 51 515 49 b 611 16 537 40 579 24 b 627 0 624 13 627 9 b 607 -18 627 -11 624 -13 b 330 -181 490 -49 389 -109 b 314 -192 323 -190 319 -192 b 306 -191 311 -192 308 -192 b 294 -177 302 -188 302 -188 b 257 -140 287 -170 265 -148 b 19 -18 193 -84 114 -44 b 0 0 2 -13 0 -11 b 16 16 0 9 2 13 b 110 49 47 24 89 40 b 117 52 111 49 114 51 b 145 65 126 56 130 58 b 281 163 200 93 245 124 b 300 186 288 170 291 174 b 306 190 300 187 303 188 m 317 137 b 313 142 315 141 314 142 b 308 137 313 142 311 141 b 161 4 276 84 220 33 b 155 0 159 1 155 0 b 163 -4 155 0 159 -2 b 308 -138 220 -34 276 -84 b 313 -142 311 -141 313 -142 b 317 -138 314 -142 315 -141 b 464 -4 351 -84 406 -34 b 470 0 468 -2 470 0 b 464 4 470 0 468 1 b 317 137 406 33 351 84 "},v47:{x_min:-24.5,x_max:315.78125,ha:322,o:"m -24 -145 l -24 -5 l -20 -5 b 1 -26 -10 -5 -6 -9 b 175 -241 31 -86 96 -166 b 314 -548 259 -323 304 -420 b 315 -589 315 -555 315 -571 b 314 -630 315 -606 315 -623 b 298 -730 311 -664 306 -699 l 295 -742 l 296 -748 b 314 -850 304 -778 311 -813 b 315 -892 315 -857 315 -874 b 314 -932 315 -909 315 -925 b 298 -1032 311 -967 306 -1002 l 295 -1045 l 296 -1050 b 314 -1153 304 -1081 311 -1115 b 315 -1193 315 -1160 315 -1177 b 314 -1235 315 -1211 315 -1228 b 217 -1526 306 -1338 270 -1444 b 201 -1533 213 -1532 208 -1533 b 182 -1522 193 -1533 185 -1529 b 179 -1514 181 -1518 179 -1517 b 189 -1489 179 -1508 182 -1501 b 266 -1217 240 -1403 266 -1308 b 262 -1156 266 -1196 265 -1177 b 110 -907 247 -1043 190 -950 b 0 -889 87 -895 50 -889 l -1 -889 l -24 -889 l -24 -749 l -24 -610 l -20 -610 b 1 -631 -10 -610 -6 -614 b 175 -846 31 -691 96 -771 b 259 -956 213 -884 236 -914 b 265 -966 262 -961 264 -966 b 265 -966 265 -966 265 -966 b 265 -953 265 -964 265 -959 b 266 -920 266 -943 266 -932 b 262 -853 266 -898 265 -873 b 110 -605 247 -741 190 -648 b 0 -587 87 -592 50 -587 l -1 -587 l -24 -587 l -24 -448 l -24 -308 l -20 -308 b 1 -328 -10 -308 -6 -312 b 175 -544 31 -388 96 -469 b 259 -655 213 -581 236 -612 b 265 -663 262 -659 264 -663 b 265 -663 265 -663 265 -663 b 265 -650 265 -663 265 -657 b 266 -617 266 -641 266 -630 b 262 -551 266 -595 265 -570 b 110 -303 247 -438 190 -345 b 0 -284 87 -290 50 -284 l -1 -284 l -24 -284 l -24 -145 "},v49:{x_min:0,x_max:630.203125,ha:643,o:"m 308 204 b 314 205 310 205 313 205 b 326 201 319 205 323 204 b 355 154 328 199 338 180 b 401 83 362 142 392 95 l 409 72 b 431 41 412 66 424 49 b 619 -174 498 -51 570 -134 b 630 -192 626 -180 630 -186 b 626 -202 630 -195 628 -199 b 616 -206 623 -205 620 -206 b 552 -188 608 -206 592 -202 b 310 -155 488 -169 392 -155 b 268 -156 295 -155 281 -155 b 77 -188 197 -161 126 -173 b 13 -206 35 -202 20 -206 b 9 -206 12 -206 10 -206 b 0 -191 2 -202 0 -197 b 8 -176 0 -186 2 -180 b 204 49 58 -136 138 -43 l 220 72 l 227 83 b 295 188 245 108 281 166 b 308 204 299 197 304 202 m 315 147 b 314 147 315 147 314 147 b 314 147 314 147 314 147 b 306 129 314 145 310 138 l 296 105 b 281 72 292 97 284 77 l 274 56 b 181 -123 247 -4 212 -72 l 174 -134 l 176 -133 b 314 -123 215 -127 272 -123 b 451 -133 356 -123 413 -127 l 454 -134 l 449 -123 b 353 56 417 -72 381 -4 l 347 72 b 332 105 344 77 336 97 l 322 129 b 315 147 318 138 315 145 "},v4a:{x_min:70.78125,x_max:378.390625,ha:315,o:"m 246 373 b 254 373 249 373 251 373 b 372 324 303 373 360 351 b 378 302 377 317 378 309 b 338 251 378 278 362 255 b 328 249 334 249 332 249 b 283 294 303 249 283 270 b 288 315 283 301 284 308 b 289 319 289 317 289 319 b 289 319 289 319 289 319 b 283 320 289 320 287 320 b 270 322 279 322 274 322 b 206 288 242 322 215 308 b 206 283 206 287 206 285 b 257 223 206 267 230 238 b 284 206 272 213 277 210 b 351 90 328 173 351 130 b 340 47 351 74 348 59 b 205 -30 314 -2 264 -30 b 182 -29 198 -30 190 -30 b 84 15 147 -24 103 -5 b 70 48 74 24 70 36 b 108 99 70 70 85 94 b 121 102 112 101 117 102 b 167 56 147 102 167 80 b 159 31 167 48 164 40 l 156 26 l 157 26 b 190 20 167 22 178 20 b 220 26 201 20 212 22 b 258 65 243 34 258 51 b 257 70 258 66 258 69 b 204 126 249 94 234 109 b 114 258 148 158 114 209 b 125 302 114 273 118 288 b 246 373 147 342 193 370 "},v4b:{x_min:0,x_max:503.609375,ha:514,o:"m 274 430 b 277 430 276 430 277 430 b 310 394 296 430 310 415 b 308 383 310 391 308 387 b 306 367 307 381 307 374 b 236 120 298 305 272 210 b 40 -273 189 -5 125 -134 b 20 -287 35 -283 27 -287 b 5 -281 14 -287 9 -285 b 0 -267 1 -277 0 -273 b 9 -242 0 -262 2 -255 b 246 395 137 -12 232 242 b 274 430 249 416 257 427 m 468 430 b 472 430 469 430 470 430 b 503 394 490 430 503 415 b 502 383 503 391 503 387 b 499 367 502 381 500 374 b 431 120 491 305 465 210 b 234 -273 382 -5 318 -134 b 213 -287 228 -283 220 -287 b 198 -281 208 -287 202 -285 b 193 -267 194 -277 193 -273 b 202 -242 193 -262 196 -255 b 439 395 330 -12 426 242 b 468 430 442 416 451 427 "},v4d:{x_min:-311.6875,x_max:310.328125,ha:317,o:"m -9 388 b -2 390 -8 390 -5 390 b 5 388 1 390 4 390 b 19 378 10 387 16 383 b 23 333 23 371 23 371 b 24 298 23 299 24 298 b 81 276 34 298 65 285 b 213 91 145 240 190 177 b 224 24 217 76 224 36 b 257 24 224 24 235 24 b 299 19 292 24 292 24 b 310 -1 306 15 310 6 b 299 -23 310 -11 306 -19 b 257 -27 292 -27 292 -27 b 224 -29 235 -27 224 -29 b 213 -95 224 -40 217 -80 b 81 -280 190 -181 145 -244 b 24 -301 65 -290 34 -301 b 23 -335 24 -301 23 -303 l 23 -340 b 17 -381 23 -374 23 -374 b -1 -391 13 -388 5 -391 b -21 -381 -9 -391 -17 -388 b -27 -340 -27 -374 -27 -374 l -27 -335 b -28 -301 -27 -303 -27 -301 b -85 -280 -38 -301 -69 -290 b -217 -95 -149 -244 -194 -181 b -228 -29 -221 -80 -228 -40 b -259 -27 -228 -29 -238 -27 b -300 -23 -294 -27 -294 -27 b -311 -2 -307 -19 -311 -11 b -294 23 -311 8 -304 19 b -259 24 -291 23 -284 24 b -228 24 -239 24 -228 24 b -217 91 -228 36 -221 76 b -85 276 -194 177 -149 240 b -28 298 -69 285 -38 298 b -27 333 -27 298 -27 299 b -27 371 -27 362 -27 369 b -9 388 -24 378 -17 385 m -27 136 b -28 247 -27 197 -28 247 b -61 216 -31 247 -53 226 b -123 33 -95 172 -121 98 l -125 24 l -76 24 l -27 24 l -27 136 m 29 242 b 24 247 27 245 24 247 b 23 136 24 247 23 197 l 23 24 l 72 24 l 121 24 l 119 33 b 29 242 115 116 77 206 m -27 -140 l -27 -27 l -76 -27 l -125 -27 l -123 -36 b -61 -220 -121 -102 -95 -176 b -28 -251 -53 -230 -31 -251 b -27 -140 -28 -251 -27 -201 m 119 -36 l 121 -27 l 72 -27 l 23 -27 l 23 -140 b 24 -251 23 -201 24 -251 b 57 -220 27 -251 49 -230 b 119 -36 91 -176 117 -102 "},v4e:{x_min:0,x_max:239.5625,ha:244,o:"m 10 460 b 20 462 13 462 14 462 b 39 449 28 462 35 458 l 40 446 l 40 326 b 40 205 40 259 40 205 b 127 227 40 205 80 215 b 220 249 196 244 213 249 b 227 247 224 249 225 248 b 238 237 231 245 235 241 l 239 233 l 239 -106 l 239 -448 l 238 -451 b 219 -463 234 -459 225 -463 b 198 -451 210 -463 202 -459 l 197 -448 l 197 -324 b 197 -201 197 -248 197 -201 b 110 -223 196 -201 157 -210 b 17 -245 42 -240 24 -245 b 10 -242 13 -245 13 -244 b 0 -233 6 -241 2 -237 l 0 -230 l 0 108 l 0 446 l 0 449 b 10 460 2 453 6 458 m 197 22 b 197 70 197 41 197 58 b 196 116 197 113 197 116 l 196 116 b 118 97 196 116 160 106 l 40 77 l 40 -18 b 40 -112 40 -69 40 -112 l 119 -93 l 197 -73 l 197 22 "},v51:{x_min:-1.359375,x_max:455.96875,ha:465,o:"m 352 541 b 357 542 353 542 355 542 b 377 530 364 542 372 537 l 378 526 l 378 394 l 379 262 l 404 266 b 436 270 420 269 430 270 b 450 265 443 270 446 269 b 455 220 455 259 455 260 l 455 208 l 455 161 l 454 156 b 411 140 449 147 447 147 b 378 133 393 137 379 134 b 378 68 378 133 378 106 b 378 22 378 54 378 38 l 379 -87 l 404 -83 b 436 -79 420 -80 430 -79 b 450 -84 443 -79 446 -80 b 455 -129 455 -90 455 -88 l 455 -141 l 455 -188 l 454 -192 b 413 -209 449 -202 447 -202 b 382 -215 398 -212 383 -215 l 378 -215 l 378 -345 l 378 -380 b 375 -485 378 -484 378 -480 b 357 -494 371 -491 364 -494 b 340 -485 351 -494 344 -491 b 336 -383 337 -480 336 -484 l 336 -349 l 336 -223 l 334 -223 b 291 -231 334 -223 314 -227 l 247 -240 l 247 -371 l 246 -503 l 245 -506 b 225 -519 242 -514 234 -519 b 206 -506 219 -519 210 -514 l 205 -503 l 205 -376 l 205 -248 l 160 -256 l 115 -265 l 115 -396 l 115 -527 l 114 -531 b 95 -544 110 -539 102 -544 b 76 -531 87 -544 78 -539 l 73 -527 l 73 -399 b 73 -273 73 -330 73 -273 b 49 -277 73 -273 61 -274 b 17 -281 32 -280 24 -281 b 4 -276 10 -281 8 -280 b -1 -234 0 -269 -1 -272 b 0 -219 -1 -229 0 -224 l 0 -170 l 1 -167 b 10 -158 2 -163 6 -159 b 49 -149 13 -156 16 -155 l 73 -145 l 73 -34 b 73 76 73 26 73 76 b 49 72 73 76 61 74 b 17 68 32 69 24 68 b 4 73 10 68 8 69 b -1 115 0 80 -1 77 b 0 130 -1 120 0 124 l 0 179 l 1 181 b 10 191 2 186 6 190 b 49 199 13 192 16 194 l 73 204 l 73 338 b 73 374 73 352 73 365 b 77 483 73 484 73 477 b 95 492 81 489 88 492 b 111 483 100 492 107 489 b 115 378 115 477 115 483 l 115 342 b 117 212 115 223 115 212 b 204 229 117 212 200 227 l 205 229 l 205 365 l 205 502 l 206 505 b 225 517 210 513 219 517 b 245 505 234 517 242 513 l 246 502 l 247 369 l 247 237 l 249 237 b 336 254 253 238 336 254 b 337 390 336 254 337 302 l 337 526 l 338 530 b 352 541 341 535 347 539 m 336 15 b 336 126 336 102 336 126 l 336 126 b 291 117 336 126 315 122 l 247 109 l 247 -1 l 247 -112 l 249 -112 b 336 -95 253 -111 336 -95 b 336 15 336 -95 336 -56 m 205 -120 b 205 -55 205 -120 205 -93 b 205 -9 205 -41 205 -24 l 205 101 l 160 93 l 115 84 l 115 -26 b 115 -83 115 -49 115 -69 b 117 -137 115 -133 115 -137 b 205 -120 118 -137 204 -120 "},v52:{x_min:-10.890625,x_max:298.078125,ha:294,o:"m 138 473 b 142 474 140 473 141 474 b 164 459 148 474 153 470 b 191 402 183 442 191 423 b 181 353 191 388 187 371 b 178 349 179 352 178 349 b 179 348 178 348 179 348 b 185 349 181 348 182 348 b 255 376 210 355 234 363 b 272 381 264 381 266 381 b 298 355 287 381 298 370 b 288 330 298 348 298 345 b 171 34 238 254 194 141 b 166 13 168 16 168 16 b 144 1 161 5 152 1 b 121 15 134 1 125 5 b 115 33 119 18 117 24 b 0 330 91 145 49 252 b -10 355 -9 345 -10 348 b 13 381 -10 371 0 381 b 31 376 19 381 25 380 b 132 345 61 358 103 345 l 136 345 l 137 355 b 145 378 138 359 142 370 b 152 415 149 394 152 405 b 137 452 152 427 148 438 b 133 464 134 458 133 460 b 138 473 133 467 134 470 "},v53:{x_min:0,x_max:902.421875,ha:921,o:"m 17 240 b 24 241 19 241 21 241 b 32 240 28 241 31 241 b 46 229 38 238 43 234 b 50 88 50 223 50 237 b 50 -1 50 63 50 34 b 50 -90 50 -36 50 -65 b 46 -231 50 -238 50 -224 b 25 -242 42 -238 34 -242 b 0 -224 14 -242 4 -235 b 0 2 0 -222 0 -108 b 0 223 0 112 0 220 b 17 240 2 230 9 237 m 110 240 b 118 241 111 241 114 241 b 126 240 121 241 123 241 b 142 223 133 237 140 230 b 144 123 144 220 144 205 b 144 29 144 45 144 29 b 144 29 144 29 144 29 b 393 183 166 106 264 167 b 450 186 412 184 431 186 b 756 29 600 186 732 120 b 756 29 756 29 756 29 b 758 123 758 29 758 45 b 760 227 758 226 758 223 b 784 241 766 237 774 241 b 804 229 792 241 800 237 b 809 88 808 223 809 237 l 809 -1 l 809 -90 b 804 -231 809 -238 808 -224 b 784 -242 800 -238 792 -242 b 762 -231 775 -242 766 -238 b 758 -124 756 -224 758 -231 b 756 -30 758 -47 758 -30 b 756 -30 756 -30 756 -30 b 509 -184 736 -108 637 -169 b 450 -187 488 -187 469 -187 b 144 -30 300 -187 168 -122 b 144 -30 144 -30 144 -30 b 144 -124 144 -30 144 -47 b 140 -231 144 -231 144 -224 b 118 -242 134 -238 126 -242 b 92 -224 107 -242 96 -235 b 92 2 92 -222 92 -108 b 92 223 92 112 92 220 b 110 240 95 230 102 237 m 432 161 b 413 162 426 162 420 162 b 313 41 351 162 313 109 b 347 -73 313 5 323 -34 b 487 -163 385 -133 439 -163 b 578 -97 526 -163 562 -142 b 588 -43 585 -80 588 -62 b 432 161 588 47 518 147 m 868 240 b 876 241 869 241 872 241 b 884 240 879 241 882 241 b 898 229 890 238 894 234 b 902 88 902 223 902 237 l 902 -1 l 902 -90 b 898 -231 902 -238 902 -224 b 876 -242 892 -238 884 -242 b 852 -224 865 -242 854 -235 b 850 2 850 -222 850 -108 b 852 223 850 112 850 220 b 868 240 853 230 860 237 "},v54:{x_min:-24.5,x_max:317.140625,ha:324,o:"m -24 -161 l -24 -5 l -20 -5 b 0 -24 -9 -5 -2 -12 b 171 -315 21 -124 84 -233 b 317 -660 268 -406 317 -531 b 187 -1014 317 -782 274 -909 b 161 -1034 172 -1034 171 -1034 b 141 -1013 149 -1034 141 -1025 b 152 -991 141 -1004 142 -1002 b 266 -682 228 -899 266 -788 b 174 -430 266 -588 236 -498 b -23 -317 136 -388 66 -348 b -24 -161 -23 -316 -24 -285 "},v55:{x_min:0,x_max:551.25,ha:563,o:"m 289 644 b 304 645 294 645 299 645 b 404 566 349 645 392 613 b 406 541 405 557 406 549 b 379 471 406 514 397 489 l 377 467 l 382 470 b 509 591 438 485 485 531 b 513 601 510 595 513 599 b 530 609 518 607 524 609 b 551 588 540 609 551 602 b 200 -605 551 584 204 -599 b 182 -616 197 -612 190 -616 b 163 -602 174 -616 166 -610 b 161 -598 161 -601 161 -601 b 217 -402 161 -589 170 -562 b 272 -213 247 -298 272 -213 b 272 -213 272 -213 272 -213 b 264 -219 272 -213 268 -216 b 140 -262 227 -247 182 -262 b 36 -226 102 -262 65 -249 b 0 -145 12 -206 0 -176 b 17 -84 0 -124 5 -104 b 103 -38 38 -54 70 -38 b 191 -91 137 -38 172 -56 b 205 -141 201 -106 205 -124 b 178 -212 205 -167 196 -194 l 175 -215 l 182 -213 b 307 -93 236 -198 284 -151 b 372 129 308 -88 372 127 b 372 129 372 129 372 129 b 364 122 372 129 368 126 b 240 80 328 94 283 80 b 137 115 202 80 166 91 b 99 195 112 136 99 165 b 118 256 99 217 106 238 b 204 303 138 287 171 303 b 292 249 238 303 273 285 b 306 199 302 234 306 217 b 279 129 306 173 296 148 l 276 126 l 281 127 b 408 248 336 142 385 190 b 473 470 409 254 473 469 b 473 470 473 470 473 470 b 465 464 473 470 469 467 b 341 421 428 435 383 421 b 236 458 303 421 266 433 b 200 537 212 478 200 508 b 289 644 200 585 234 635 "},v58:{x_min:-21.78125,x_max:367.5,ha:375,o:"m 259 1553 b 265 1553 261 1553 264 1553 b 288 1540 272 1553 277 1550 b 367 1351 340 1493 367 1424 b 336 1221 367 1308 357 1263 l 332 1211 l 333 1208 b 367 1077 356 1170 367 1124 b 336 945 367 1032 357 986 l 332 935 l 333 932 b 367 800 356 893 367 848 b 336 669 367 756 357 710 l 332 659 l 333 656 b 367 523 356 617 367 571 b 345 412 367 485 360 446 b 231 273 322 356 284 310 b -1 19 121 195 27 93 b -17 4 -4 11 -10 5 l -21 4 l -21 134 l -21 265 l -17 265 b 133 291 20 265 96 278 b 318 537 245 328 318 433 b 307 603 318 559 315 582 b 303 614 304 612 304 614 b 298 609 302 614 300 613 b 231 549 281 589 258 567 b -1 295 121 471 27 369 b -17 280 -4 287 -10 281 l -21 280 l -21 410 l -21 541 l -17 541 b 133 567 20 541 96 555 b 318 813 245 605 318 709 b 307 880 318 835 315 859 b 303 891 304 888 304 891 b 298 885 302 891 300 888 b 231 825 281 866 258 843 b -1 571 121 748 27 645 b -17 556 -4 563 -10 557 l -21 556 l -21 687 l -21 817 l -17 817 b 133 843 20 817 96 830 b 318 1089 245 881 318 985 b 307 1156 318 1111 315 1134 b 303 1167 304 1164 304 1167 b 298 1161 302 1167 300 1164 b 231 1102 281 1140 258 1120 b -1 848 121 1024 27 921 b -17 832 -4 839 -10 834 l -21 832 l -21 963 l -21 1093 l -17 1093 b 114 1113 12 1093 78 1103 b 313 1314 215 1142 289 1218 b 318 1364 317 1331 318 1347 b 255 1511 318 1422 295 1478 b 243 1532 247 1519 243 1525 b 259 1553 243 1540 250 1550 "},v59:{x_min:0,x_max:464.140625,ha:474,o:"m 0 0 l 0 347 l 76 347 l 153 347 l 153 0 l 153 -348 l 76 -348 l 0 -348 l 0 0 m 308 -1 l 308 347 l 386 347 l 464 347 l 464 -1 l 464 -348 l 386 -348 l 308 -348 l 308 -1 "},v5a:{x_min:-171.5,x_max:170.140625,ha:174,o:"m -6 566 b 0 567 -5 567 -2 567 b 14 556 6 567 12 563 b 92 285 14 555 50 433 b 170 13 166 33 170 19 b 168 13 170 13 170 13 b 161 1 168 8 167 4 l 159 0 l 122 0 l 84 0 l 81 1 b 21 195 76 5 78 -5 b -32 381 -8 297 -32 381 b -87 197 -32 381 -57 298 b -141 8 -115 94 -140 9 b -155 0 -142 2 -149 0 b -171 15 -163 0 -171 5 b -14 556 -171 18 -24 528 b -6 566 -14 560 -10 564 "},v5b:{x_min:-441,x_max:439.640625,ha:449,o:"m -428 -2 b -421 0 -427 -1 -424 0 b -406 -6 -416 0 -409 -2 b -400 -31 -401 -12 -400 -15 b -1 -352 -392 -215 -215 -352 b 58 -349 19 -352 38 -351 b 398 -31 250 -326 392 -192 b 404 -6 398 -15 400 -12 b 419 -1 408 -2 413 -1 b 439 -13 427 -1 435 -5 b 439 -29 439 -16 439 -22 b 434 -105 439 -48 438 -80 b 0 -489 397 -333 213 -489 b -68 -484 -23 -489 -44 -488 b -441 -36 -280 -452 -436 -263 b -441 -30 -441 -34 -441 -31 b -428 -2 -441 -11 -439 -5 m -13 -9 b -1 -8 -9 -8 -5 -8 b 50 -36 19 -8 39 -19 b 61 -72 57 -47 61 -59 b 50 -106 61 -84 57 -97 b -1 -134 39 -124 19 -134 b -46 -115 -17 -134 -34 -129 b -62 -72 -57 -102 -62 -87 b -13 -9 -62 -44 -44 -16 "},v5c:{x_min:0,x_max:447.8125,ha:457,o:"m 0 -87 l 0 0 l 223 0 l 447 0 l 447 -87 l 447 -174 l 223 -174 l 0 -174 l 0 -87 "},v5d:{x_min:-1.359375,x_max:592.078125,ha:604,o:"m 280 692 b 295 694 283 692 289 694 b 310 692 300 694 307 692 b 357 630 340 684 357 657 b 336 580 357 612 351 594 b 311 538 321 566 311 549 b 352 492 311 512 330 492 b 366 495 357 492 362 492 b 397 553 390 503 397 517 b 415 603 397 576 402 591 b 460 623 427 617 443 623 b 509 599 479 623 498 614 b 522 559 518 587 522 573 b 494 506 522 538 513 519 b 451 495 481 498 473 496 b 415 488 432 495 426 494 b 394 449 404 483 394 464 b 394 448 394 448 394 448 l 394 440 l 397 433 b 428 409 404 420 413 413 b 438 408 431 408 435 408 b 479 431 450 408 462 415 b 528 455 495 448 510 455 b 548 452 534 455 541 453 b 592 391 577 442 592 416 b 549 331 592 365 577 340 b 528 327 541 328 534 327 b 479 351 510 327 495 335 b 438 374 464 367 450 374 b 417 369 431 374 424 373 b 394 333 402 360 394 348 b 400 312 394 326 396 319 b 451 287 408 294 420 288 b 513 258 484 285 499 278 b 522 223 519 247 522 234 b 461 159 522 190 496 159 b 449 161 457 159 453 159 b 397 229 416 167 397 191 b 366 288 397 265 390 278 b 352 290 362 290 357 290 b 315 262 336 290 321 280 b 311 245 313 256 311 251 b 334 204 311 233 318 220 b 355 170 348 190 351 184 b 357 152 356 166 357 159 b 355 136 357 147 356 140 b 295 88 345 104 321 88 b 232 152 264 88 232 112 b 255 204 232 174 238 186 b 279 244 273 222 279 231 l 279 245 b 238 290 279 270 259 290 b 224 288 234 290 228 290 b 193 229 200 278 193 265 b 141 161 193 191 174 167 b 129 159 137 159 133 159 b 68 223 93 159 68 190 b 77 258 68 234 70 247 b 138 287 91 278 106 285 b 185 302 166 287 175 291 b 196 333 193 312 196 323 b 174 369 196 347 187 360 b 152 374 166 373 159 374 b 111 351 140 374 126 367 b 62 327 95 335 80 327 b 51 328 58 327 54 327 b -1 391 16 334 -1 363 b 53 455 -1 420 17 449 b 62 455 57 455 59 455 b 111 431 80 455 95 448 b 152 408 127 415 140 408 b 161 409 155 408 159 408 b 193 433 176 413 186 420 l 196 440 l 196 448 b 196 451 196 449 196 449 b 190 471 196 459 194 463 b 137 495 182 489 167 495 l 134 495 l 134 495 b 68 560 95 495 68 521 b 129 623 68 596 95 623 b 144 621 134 623 138 623 b 193 553 175 614 193 589 b 224 495 193 517 200 503 b 238 492 228 492 234 492 b 279 538 259 492 279 512 b 254 580 279 549 269 566 b 232 630 239 594 232 612 b 280 692 232 657 250 684 m 307 456 b 295 458 303 458 299 458 b 230 391 258 458 230 426 b 236 360 230 381 231 371 b 295 324 249 337 272 324 b 353 360 318 324 341 337 b 360 391 357 370 360 381 b 307 456 360 421 340 451 "},v60:{x_min:-590.71875,x_max:589.359375,ha:601,o:"m -367 173 b -362 174 -366 174 -364 174 b -351 173 -357 174 -353 173 b -262 86 -348 172 -328 151 b -176 0 -216 37 -176 0 b -107 84 -176 0 -145 37 b -31 174 -36 173 -38 172 b -25 174 -29 174 -28 174 b -16 173 -23 174 -19 173 b 72 86 -13 172 6 151 b 157 0 119 37 157 0 b 227 84 159 0 189 37 b 303 174 298 173 296 172 b 308 174 304 174 307 174 b 318 173 313 174 317 173 b 481 11 322 172 357 134 l 494 -1 l 522 34 b 560 76 553 72 555 74 b 567 77 563 77 564 77 b 589 56 579 77 589 68 b 586 48 589 54 588 51 b 411 -172 583 41 416 -166 b 397 -176 406 -174 401 -176 b 387 -174 393 -176 390 -176 b 299 -87 386 -173 366 -152 b 213 0 253 -38 213 0 b 144 -86 213 0 182 -38 b 68 -174 73 -174 74 -173 b 62 -176 66 -176 65 -176 b 53 -174 59 -176 55 -174 b -35 -87 50 -173 29 -152 b -121 0 -83 -38 -121 0 b -190 -86 -122 0 -152 -38 b -266 -174 -261 -174 -259 -173 b -272 -176 -268 -176 -270 -176 b -281 -174 -276 -176 -280 -174 b -371 -86 -284 -173 -304 -152 b -457 0 -417 -38 -457 0 l -457 0 b -477 -26 -457 0 -470 -16 b -548 -227 -524 -88 -548 -161 b -536 -303 -548 -254 -544 -280 b -533 -317 -534 -309 -533 -313 b -553 -338 -533 -330 -541 -338 b -577 -315 -566 -338 -571 -333 b -590 -227 -586 -287 -590 -258 b -518 -9 -590 -154 -564 -77 b -465 56 -509 2 -504 8 l -402 134 b -367 173 -375 169 -372 172 "},v62:{x_min:46.28125,x_max:669.671875,ha:563,o:"m 183 376 b 189 376 185 376 187 376 b 212 374 197 376 208 376 b 265 337 234 369 253 355 b 274 317 268 331 273 320 b 274 316 274 317 274 316 b 280 323 276 316 276 319 b 311 358 288 337 299 348 b 319 366 315 360 318 365 b 356 376 326 373 340 376 b 382 371 364 376 374 374 b 428 337 400 366 417 352 b 436 317 431 331 436 320 b 438 316 436 317 436 316 b 442 323 438 316 439 319 b 475 358 451 337 462 348 b 483 366 477 360 481 365 b 518 376 488 373 503 376 b 544 373 528 376 536 376 b 604 285 579 360 604 326 b 597 249 604 273 601 258 b 543 63 596 247 544 70 b 541 54 543 61 541 55 b 540 44 540 51 540 47 b 552 23 540 33 545 23 b 552 23 552 23 552 23 b 647 126 586 29 627 72 b 658 138 651 136 653 138 b 660 138 660 138 660 138 b 669 129 666 137 669 136 b 654 88 669 122 665 109 b 562 -12 631 43 602 9 l 549 -19 b 521 -27 540 -24 530 -27 b 447 30 490 -27 458 -4 b 443 58 445 38 443 48 b 450 93 443 72 446 84 b 504 278 453 97 504 272 b 507 288 506 283 506 287 b 509 298 507 292 509 295 b 491 326 509 310 502 320 b 487 327 490 327 488 327 b 479 324 484 327 483 326 b 441 270 462 316 443 288 b 435 249 441 265 436 254 b 398 127 434 248 419 195 b 362 4 379 61 362 5 b 328 -1 359 -1 362 -1 b 314 -1 323 -1 319 -1 b 302 -1 310 -1 306 -1 b 266 4 266 -1 269 -1 b 265 6 265 5 265 5 b 303 144 265 13 272 34 b 343 278 325 216 343 276 b 344 288 343 281 344 285 b 345 298 345 291 345 295 b 330 326 345 310 340 320 b 323 327 328 327 325 327 b 317 324 322 327 321 326 b 279 270 300 316 281 288 b 273 249 279 265 274 254 b 236 127 272 248 255 195 b 200 4 216 61 200 5 b 164 -1 197 -1 198 -1 b 151 -1 161 -1 156 -1 b 140 -1 147 -1 142 -1 b 103 4 104 -1 106 -1 b 103 6 103 5 103 5 b 141 144 103 13 108 34 b 181 278 161 216 179 276 b 182 288 181 281 181 285 b 183 298 182 291 183 295 b 168 324 183 310 178 320 b 160 327 166 326 163 327 b 141 320 156 327 151 324 b 69 230 112 305 85 272 b 57 215 65 217 62 215 b 55 215 57 215 55 215 b 46 224 49 215 46 217 b 59 260 46 231 50 242 b 151 363 81 306 112 341 b 161 369 155 365 160 367 b 183 376 166 371 174 374 "},v68:{x_min:-597.53125,x_max:596.171875,ha:608,o:"m -533 324 b -525 327 -530 326 -528 327 b -504 305 -514 327 -504 317 b -504 305 -504 305 -504 305 b -513 284 -504 299 -504 299 b -556 112 -541 226 -556 167 b -545 33 -556 84 -552 58 b -524 -20 -541 15 -532 -9 l -522 -23 l -491 15 l -413 111 b -355 174 -367 169 -363 174 b -351 174 -353 174 -352 174 b -254 86 -343 174 -348 179 b -168 -1 -208 37 -168 -1 b -100 84 -168 -1 -137 37 b -23 173 -28 173 -29 172 b -19 174 -21 174 -20 174 b -8 173 -14 174 -10 173 b 155 11 -5 172 43 123 l 166 -1 l 168 1 l 170 4 l 170 130 b 171 260 170 256 170 258 b 191 274 175 269 183 274 b 205 267 196 274 201 272 b 212 158 212 262 210 273 l 212 56 l 257 112 b 311 173 304 172 304 172 b 317 174 313 174 314 174 b 326 173 319 174 323 173 b 490 11 329 172 366 134 l 502 -1 l 530 34 b 568 76 560 72 563 74 b 575 77 570 77 573 77 b 596 56 586 77 596 68 b 594 48 596 54 596 51 b 417 -172 592 41 424 -166 b 405 -176 415 -174 409 -176 b 396 -174 401 -176 398 -176 b 307 -87 393 -173 372 -152 b 221 -1 259 -38 221 -1 b 216 -6 221 -1 219 -2 l 212 -12 l 212 -147 b 212 -210 212 -173 212 -194 b 205 -292 212 -297 210 -287 b 191 -299 201 -297 196 -299 b 172 -287 183 -299 175 -295 b 170 -174 171 -284 171 -284 l 170 -63 l 127 -117 b 73 -176 84 -170 80 -176 b 68 -176 72 -176 70 -176 b -27 -87 59 -174 65 -180 b -114 0 -74 -38 -112 0 b -182 -86 -114 0 -145 -38 b -258 -174 -253 -174 -253 -173 b -264 -176 -259 -176 -262 -176 b -274 -174 -268 -176 -272 -174 b -438 -11 -277 -173 -348 -102 l -449 0 l -479 -37 b -524 -80 -513 -80 -514 -80 l -524 -80 b -553 -52 -534 -80 -540 -74 b -597 109 -583 -8 -597 48 b -560 280 -597 165 -585 224 b -533 324 -548 310 -540 322 "},v6c:{x_min:-1.359375,x_max:193.28125,ha:197,o:"m 78 233 b 87 233 81 233 84 233 b 187 140 132 233 174 195 b 193 102 190 127 193 115 b 43 -113 193 22 136 -62 b 27 -119 36 -116 31 -119 b 19 -108 21 -119 19 -115 b 29 -97 19 -102 20 -101 b 102 13 73 -72 102 -27 b 92 51 102 26 98 40 l 91 54 l 84 54 b 8 104 53 54 21 74 b -1 142 1 116 -1 130 b 78 233 -1 187 31 227 "},v6d:{x_min:-590.71875,x_max:589.359375,ha:601,o:"m 544 335 b 553 337 548 337 551 337 b 575 313 563 337 570 330 b 589 226 583 285 589 256 b 517 8 589 152 563 76 b 464 -58 507 -4 503 -9 l 401 -136 b 362 -176 372 -172 370 -176 b 357 -176 360 -176 359 -176 b 261 -87 349 -174 355 -180 b 175 0 215 -38 175 0 b 106 -86 175 0 144 -38 b 29 -174 35 -174 36 -173 b 24 -176 28 -176 27 -176 b 14 -174 21 -176 17 -174 b -73 -87 12 -173 -8 -152 b -159 0 -121 -38 -159 0 b -228 -86 -160 0 -190 -38 b -304 -174 -299 -174 -298 -173 b -310 -176 -306 -176 -308 -176 b -319 -174 -314 -176 -318 -174 b -483 -12 -323 -173 -359 -137 l -495 0 l -524 -34 b -562 -77 -553 -73 -556 -76 b -568 -79 -564 -79 -566 -79 b -590 -58 -581 -79 -590 -69 b -588 -49 -590 -55 -589 -52 b -412 170 -585 -43 -417 165 b -398 174 -408 173 -402 174 b -389 173 -394 174 -392 174 b -300 86 -387 172 -366 151 b -215 -1 -254 37 -215 -1 b -145 84 -215 -1 -183 37 b -69 173 -74 173 -76 172 b -63 174 -68 174 -66 174 b -54 173 -61 174 -57 173 b 34 86 -51 172 -31 151 b 119 -1 81 37 119 -1 b 189 84 121 -1 151 37 b 265 173 259 173 258 172 b 270 174 266 174 269 174 b 280 173 274 174 279 173 b 370 84 283 172 303 151 b 455 -1 416 37 455 -1 l 455 -1 b 476 24 455 -1 469 15 b 547 226 522 87 547 159 b 534 302 547 252 543 278 b 532 317 533 308 532 313 b 544 335 532 326 536 333 "},v6f:{x_min:-80.3125,x_max:78.9375,ha:81,o:"m 63 191 b 69 192 65 192 66 192 b 77 188 72 192 76 191 b 78 183 78 187 78 186 b 74 158 78 179 77 172 l 66 115 b 9 -161 49 30 10 -158 b -10 -187 6 -172 -1 -181 b -34 -194 -17 -191 -25 -194 b -80 -147 -58 -194 -80 -174 b -80 -141 -80 -144 -80 -142 b 9 70 -80 -134 -73 -117 l 49 163 b 63 191 59 188 61 190 "},v70:{x_min:0,x_max:436.921875,ha:446,o:"m 213 190 b 217 191 215 191 216 191 b 231 184 223 191 228 188 b 249 154 240 167 246 159 b 419 18 292 91 348 45 b 436 -1 435 11 436 8 b 424 -16 436 -9 434 -13 b 308 -87 394 -26 340 -59 b 231 -186 276 -117 257 -142 b 219 -192 228 -191 225 -192 b 198 -174 209 -192 208 -191 b 47 -33 161 -113 110 -63 b 10 -16 34 -26 17 -19 b 0 -1 2 -13 0 -9 b 17 18 0 8 1 11 b 198 173 95 48 156 101 b 213 190 206 187 208 188 "},v72:{x_min:-423.3125,x_max:421.9375,ha:431,o:"m -262 197 b -247 197 -257 197 -253 197 b -118 162 -210 197 -163 184 b 40 45 -61 134 -13 98 b 277 -95 119 -33 200 -81 b 289 -97 281 -97 285 -97 b 378 0 332 -97 371 -55 b 378 11 378 4 378 6 b 302 83 378 55 345 83 b 242 66 283 83 262 77 b 208 56 231 59 219 56 b 148 120 175 56 148 81 b 201 186 148 151 164 172 b 261 198 220 194 240 198 b 420 45 341 198 411 136 b 421 22 421 37 421 29 b 245 -199 421 -93 338 -199 b 238 -198 243 -199 240 -199 b -44 -47 148 -194 50 -141 b -250 86 -114 22 -183 66 b -295 94 -270 91 -283 94 b -315 91 -302 94 -307 94 b -381 4 -356 81 -381 43 b -355 -56 -381 -18 -372 -40 b -298 -81 -338 -73 -319 -81 b -246 -68 -283 -81 -265 -77 b -212 -58 -234 -61 -223 -58 b -178 -69 -200 -58 -189 -62 b -151 -122 -160 -81 -151 -101 b -171 -167 -151 -138 -157 -155 b -239 -195 -185 -181 -213 -192 b -257 -197 -245 -197 -250 -197 b -423 -5 -352 -197 -423 -109 b -412 65 -423 16 -419 40 b -262 197 -389 137 -329 188 "},v74:{x_min:-206.890625,x_max:428.75,ha:438,o:"m 389 -351 b 394 -351 390 -351 393 -351 b 428 -385 413 -351 428 -367 b 428 -394 428 -388 428 -391 b 394 -428 426 -406 421 -410 l 332 -473 l 269 -516 l 205 -560 l 141 -603 l 77 -648 l 13 -692 l -50 -737 l -114 -780 l -145 -802 b -171 -813 -157 -810 -163 -813 b -175 -813 -172 -813 -174 -813 b -206 -777 -194 -811 -206 -795 b -202 -760 -206 -771 -205 -766 b -87 -675 -197 -752 -206 -757 l -34 -639 l 83 -557 l 145 -514 l 209 -470 l 272 -427 b 389 -351 375 -356 381 -352 "},v75:{x_min:-149.71875,x_max:148.359375,ha:151,o:"m -137 381 b -130 383 -134 383 -133 383 b -111 371 -122 383 -114 378 b -55 224 -110 370 -85 305 b 0 80 -25 145 -1 80 b 54 224 0 80 24 145 b 112 377 114 384 110 373 b 127 384 118 381 122 384 b 148 362 138 384 148 374 l 148 356 l 83 183 b 16 9 47 88 17 11 b -1 0 12 2 5 0 b -14 5 -5 0 -10 1 b -84 183 -19 9 -13 -6 l -149 356 l -149 362 b -137 381 -149 371 -145 378 "},v78:{x_min:0,x_max:193.28125,ha:197,o:"m 85 514 b 95 517 88 517 89 517 b 114 505 103 517 110 513 l 115 502 l 115 376 b 115 249 115 306 115 249 b 141 258 117 249 127 252 l 167 266 l 172 266 b 190 254 181 265 187 262 l 193 251 l 193 202 l 193 188 b 187 147 193 149 191 152 b 147 130 183 142 182 141 l 115 119 l 115 9 b 115 -99 115 -51 115 -99 b 141 -91 115 -99 127 -95 b 171 -81 166 -81 167 -81 l 171 -81 b 191 -94 181 -81 189 -87 b 193 -142 191 -97 193 -120 b 191 -195 193 -167 191 -194 b 125 -227 187 -205 187 -204 l 115 -230 l 115 -366 l 115 -503 l 114 -506 b 95 -519 110 -514 102 -519 b 74 -506 87 -519 78 -514 l 73 -503 l 73 -374 b 73 -245 73 -260 73 -245 b 73 -245 73 -245 73 -245 b 55 -252 72 -245 63 -249 l 32 -260 b 19 -263 27 -262 23 -263 b 4 -256 13 -263 8 -260 b 0 -215 0 -251 0 -254 b 0 -199 0 -210 0 -206 l 0 -152 l 1 -149 b 8 -140 2 -145 5 -141 b 42 -127 9 -140 24 -133 l 73 -116 l 73 -5 b 73 23 73 4 73 15 b 73 105 73 70 73 105 b 49 97 73 105 61 101 b 17 88 32 91 23 88 b 4 95 10 88 8 91 b 0 137 0 101 0 98 b 0 151 0 141 0 145 l 0 199 l 1 202 b 43 224 5 212 5 212 l 73 234 l 73 367 l 73 502 l 74 505 b 85 514 77 509 81 513 "},v79:{x_min:-1.359375,x_max:899.703125,ha:918,o:"m 307 349 b 332 351 315 351 323 351 b 443 340 367 351 408 347 b 741 47 607 306 720 195 b 744 0 743 31 744 16 b 660 -303 744 -90 713 -206 b 28 -755 534 -531 304 -695 b 14 -756 23 -755 19 -756 b -1 -741 4 -756 -1 -750 b 21 -720 -1 -731 1 -728 b 567 -56 337 -601 548 -344 b 568 -11 568 -41 568 -24 b 442 285 568 129 525 233 b 325 319 406 308 367 319 b 93 177 232 319 137 266 b 84 154 91 170 84 155 b 84 154 84 154 84 154 b 88 156 84 154 85 155 b 159 177 110 170 134 177 b 257 134 194 177 231 162 b 294 41 281 108 294 73 b 171 -97 294 -24 246 -90 b 156 -98 166 -97 161 -98 b 6 74 73 -98 6 -22 b 6 80 6 76 6 79 b 307 349 10 223 141 340 m 839 215 b 845 216 841 216 842 216 b 862 213 852 216 860 215 b 899 163 887 206 899 184 b 872 117 899 145 890 127 b 847 111 865 112 856 111 b 808 130 833 111 818 117 b 796 162 800 140 796 151 b 839 215 796 187 812 212 m 839 -112 b 845 -112 841 -112 842 -112 b 862 -115 852 -112 860 -113 b 899 -165 887 -122 899 -144 b 872 -210 899 -183 890 -201 b 847 -217 865 -215 856 -217 b 808 -198 833 -217 818 -210 b 796 -165 800 -188 796 -177 b 839 -112 796 -140 812 -116 "},v7c:{x_min:0,x_max:300.8125,ha:307,o:"m 49 505 b 53 506 50 505 51 506 b 70 496 58 506 62 503 b 81 485 73 492 78 488 l 96 473 l 111 459 l 122 449 l 134 438 l 182 396 l 255 330 b 292 291 292 298 292 298 l 292 290 l 292 284 l 283 270 b 209 36 234 197 209 113 b 288 -170 209 -44 235 -119 b 299 -184 295 -179 299 -181 b 300 -191 300 -187 300 -188 b 285 -206 300 -199 294 -206 b 280 -206 283 -206 281 -206 b 247 -201 270 -202 259 -201 b 176 -222 223 -201 197 -208 b 114 -340 136 -249 114 -292 b 172 -471 114 -384 134 -433 b 185 -492 182 -481 185 -487 b 181 -502 185 -496 183 -499 b 171 -508 176 -505 174 -508 b 152 -498 166 -508 160 -503 b 0 -284 65 -428 12 -352 b 0 -260 0 -278 0 -270 b 1 -238 0 -252 0 -242 b 148 -140 16 -177 73 -140 b 209 -148 167 -140 189 -142 b 215 -149 212 -148 215 -149 b 215 -149 215 -149 215 -149 l 215 -149 b 201 -136 215 -148 209 -142 l 157 -97 l 96 -41 b 17 34 21 24 17 29 b 17 37 17 36 17 36 b 17 38 17 37 17 38 b 25 56 17 44 17 44 b 110 298 81 131 110 219 b 46 474 110 367 88 431 b 38 491 40 480 38 487 b 49 505 38 498 42 502 "},v7d:{x_min:-1.359375,x_max:436.921875,ha:446,o:"m 213 205 b 217 205 215 205 216 205 b 234 194 224 205 234 199 b 236 187 234 194 235 190 l 245 167 l 261 129 l 270 106 b 355 -61 294 54 329 -13 b 420 -163 381 -105 402 -138 b 436 -188 435 -184 436 -184 b 436 -191 436 -190 436 -190 b 421 -206 436 -201 431 -206 l 421 -206 l 416 -206 l 405 -201 b 217 -158 347 -172 283 -158 b 31 -201 153 -158 88 -172 l 20 -206 l 14 -206 l 14 -206 b 0 -191 5 -206 0 -201 b -1 -188 0 -190 -1 -190 b 14 -163 -1 -186 0 -184 b 95 -34 36 -136 72 -77 b 166 106 119 8 148 68 l 175 129 l 183 148 l 200 188 b 213 205 205 199 208 202 "},v7f:{x_min:0,x_max:367.5,ha:375,o:"m 0 124 l 0 187 l 61 187 l 122 187 l 122 138 l 122 91 l 153 61 l 183 30 l 213 61 l 243 91 l 243 138 l 243 187 l 306 187 l 367 187 l 367 124 l 367 61 l 321 61 l 274 61 l 243 30 l 213 0 l 243 -31 l 274 -62 l 321 -62 l 367 -62 l 367 -124 l 367 -188 l 306 -188 l 243 -188 l 243 -140 l 243 -93 l 213 -62 l 183 -31 l 153 -62 l 122 -93 l 122 -140 l 122 -188 l 61 -188 l 0 -188 l 0 -124 l 0 -62 l 46 -62 l 92 -62 l 123 -31 l 153 0 l 123 30 l 92 61 l 46 61 l 0 61 l 0 124 "},v80:{x_min:29.9375,x_max:420.578125,ha:371,o:"m 115 345 b 221 347 117 345 166 347 b 411 345 306 347 409 345 b 420 330 416 342 420 335 b 415 319 420 326 419 321 b 178 118 397 303 179 118 b 178 117 178 118 178 117 b 181 117 178 117 178 117 b 189 117 182 117 185 117 b 193 117 190 117 191 117 b 247 98 215 117 232 111 b 296 75 266 83 280 76 b 302 75 299 75 300 75 b 322 91 311 75 315 79 b 322 91 322 91 322 91 b 322 91 322 91 322 91 b 319 91 322 91 321 91 b 313 90 318 90 315 90 b 283 107 300 90 288 97 b 277 126 279 114 277 121 b 319 167 277 149 295 167 b 319 167 319 167 319 167 b 362 118 347 167 362 147 b 355 82 362 108 359 96 b 311 33 349 65 340 55 b 224 1 284 12 253 1 b 194 5 213 1 204 2 b 168 18 183 8 178 11 b 110 36 151 30 130 36 b 57 15 88 36 68 29 b 47 11 54 12 51 11 b 31 20 40 11 34 13 b 29 26 31 22 29 25 b 68 66 29 36 39 45 b 285 250 73 71 281 248 b 285 250 285 250 285 250 b 231 252 285 252 261 252 b 137 250 190 252 141 250 b 93 227 122 248 110 241 b 78 220 88 222 83 220 b 66 227 74 220 70 222 b 63 234 65 229 63 231 b 85 291 63 241 69 252 b 115 345 108 342 108 344 "},v81:{x_min:0,x_max:428.75,ha:438,o:"m 262 186 b 273 186 266 186 272 186 b 274 186 273 186 274 186 b 285 186 274 186 280 186 b 428 48 375 181 428 122 b 386 -68 428 12 416 -29 b 155 -187 329 -145 236 -187 b 12 -111 92 -187 38 -162 b 0 -51 4 -91 0 -72 b 262 186 0 58 122 179 m 366 131 b 352 134 362 133 357 134 b 219 81 321 134 269 115 b 47 -111 126 23 50 -62 b 47 -112 47 -111 47 -112 b 77 -136 47 -129 58 -136 b 264 -45 118 -136 194 -101 b 382 109 336 12 382 76 b 366 131 382 120 377 129 "},v83:{x_min:-1.359375,x_max:847.96875,ha:865,o:"m 488 1499 b 495 1500 490 1500 492 1500 b 541 1465 507 1500 521 1490 b 679 1078 622 1372 679 1210 b 677 1050 679 1068 677 1060 b 477 642 668 893 604 764 l 443 609 l 431 596 l 431 592 l 438 562 l 449 508 l 460 458 b 481 355 475 390 481 355 b 481 355 481 355 481 355 b 490 356 481 355 485 355 b 528 358 495 356 511 358 b 558 356 540 358 552 356 b 839 95 699 338 808 237 b 847 22 845 72 847 47 b 631 -303 847 -113 766 -242 b 620 -309 623 -308 620 -309 l 620 -310 b 631 -359 620 -310 626 -333 l 646 -435 l 660 -496 b 672 -588 668 -535 672 -563 b 664 -653 672 -610 669 -630 b 383 -875 630 -792 509 -875 b 201 -810 321 -875 257 -855 b 129 -680 151 -768 129 -730 b 274 -530 129 -592 200 -530 b 351 -553 300 -530 326 -538 b 412 -669 393 -582 412 -626 b 287 -805 412 -735 366 -800 l 279 -805 l 285 -809 b 383 -830 318 -823 351 -830 b 586 -718 464 -830 540 -789 b 626 -584 612 -678 626 -631 b 619 -528 626 -566 623 -548 b 612 -495 619 -526 616 -510 b 577 -324 590 -387 577 -324 b 577 -324 577 -324 577 -324 b 568 -326 575 -324 571 -324 b 528 -334 558 -328 537 -333 b 465 -338 506 -337 485 -338 b 24 -11 269 -338 87 -206 b -1 145 8 41 -1 93 b 96 442 -1 249 32 351 b 322 714 166 541 236 626 l 352 745 l 345 782 l 332 843 l 315 921 b 303 984 310 950 304 978 b 295 1082 298 1017 295 1049 b 413 1426 295 1208 336 1329 b 488 1499 436 1456 477 1496 m 549 1301 b 541 1301 547 1301 544 1301 b 411 1207 500 1301 447 1263 b 355 1004 374 1152 355 1079 b 359 942 355 984 356 963 b 371 881 362 927 363 917 l 385 818 b 392 782 389 799 392 784 l 392 782 b 434 828 393 782 424 816 b 607 1165 534 941 594 1060 b 608 1193 608 1175 608 1183 b 597 1270 608 1224 604 1254 b 549 1301 589 1286 571 1299 m 398 528 b 393 555 396 542 393 553 b 392 555 393 555 393 555 b 317 470 390 555 347 505 b 190 298 266 408 212 334 b 127 70 148 227 127 148 b 155 -77 127 19 137 -30 b 468 -303 209 -216 333 -303 b 519 -299 484 -303 502 -302 b 568 -284 541 -295 568 -287 l 568 -284 b 563 -263 568 -284 566 -274 l 534 -120 l 511 -13 l 496 61 l 480 133 b 469 187 472 176 469 187 b 468 188 469 187 469 188 b 416 162 462 188 430 172 b 337 13 364 126 337 69 b 413 -124 337 -40 363 -93 b 428 -144 424 -131 428 -137 b 428 -149 428 -145 428 -148 b 409 -166 426 -161 419 -166 b 394 -162 405 -166 400 -165 b 240 77 302 -122 240 -27 l 240 77 b 430 342 240 197 315 301 l 436 344 l 426 394 l 398 528 m 548 194 b 526 195 540 195 532 195 b 519 195 524 195 521 195 l 514 195 l 518 177 l 539 79 l 552 15 l 566 -48 l 594 -187 l 605 -240 b 612 -266 609 -254 611 -266 b 612 -266 612 -266 612 -266 b 641 -248 613 -266 630 -256 b 744 -98 692 -212 730 -156 b 751 -40 749 -79 751 -59 b 548 194 751 76 665 181 "},v84:{x_min:25.859375,x_max:164.6875,ha:168,o:"m 34 369 b 40 370 35 370 38 370 b 59 353 49 370 50 367 b 164 40 122 254 155 158 b 164 0 164 33 164 16 b 164 -40 164 -16 164 -34 b 59 -353 155 -158 122 -254 b 40 -371 53 -366 47 -371 b 34 -370 38 -371 36 -370 b 25 -358 28 -367 25 -363 b 31 -337 25 -352 27 -347 b 92 0 72 -234 92 -117 b 31 335 92 116 72 233 b 25 356 27 345 25 352 b 34 369 25 363 28 366 "},v86:{x_min:-571.671875,x_max:570.3125,ha:582,o:"m -386 173 b -381 174 -385 174 -383 174 b -370 173 -377 174 -372 173 b -281 86 -367 172 -347 151 b -196 0 -235 37 -196 0 b -126 84 -196 0 -164 37 b -50 174 -55 173 -57 172 b -44 174 -49 174 -47 174 b -35 173 -42 174 -38 173 b 53 86 -32 172 -12 151 b 138 0 100 37 138 0 b 208 84 140 0 170 37 b 284 174 279 173 277 172 b 289 174 285 174 288 174 b 299 173 294 174 298 173 b 462 11 303 172 338 134 l 475 -1 l 503 34 b 541 76 534 72 536 74 b 548 77 544 77 545 77 b 570 56 560 77 570 68 b 567 48 570 54 568 51 b 392 -172 564 41 397 -166 b 378 -176 387 -174 382 -176 b 368 -174 374 -176 371 -176 b 280 -87 367 -173 345 -152 b 194 0 234 -38 194 0 b 125 -86 194 0 163 -38 b 49 -174 54 -174 55 -173 b 43 -176 47 -176 46 -176 b 34 -174 40 -176 36 -174 b -54 -87 31 -173 10 -152 b -140 0 -102 -38 -140 0 b -209 -86 -141 0 -171 -38 b -285 -174 -280 -174 -279 -173 b -291 -176 -287 -176 -289 -176 b -300 -174 -295 -176 -299 -174 b -464 -12 -304 -173 -340 -137 l -476 0 l -504 -34 b -543 -77 -534 -73 -537 -76 b -549 -79 -545 -79 -547 -79 b -571 -58 -562 -79 -571 -69 b -568 -49 -571 -55 -570 -52 b -392 172 -566 -43 -396 167 b -386 173 -390 172 -387 173 "},v8a:{x_min:-170.140625,x_max:168.78125,ha:172,o:"m -160 567 b -122 567 -159 567 -149 567 l -87 567 l -84 566 b -74 553 -78 563 -77 560 b -20 366 -73 551 -49 466 b 31 186 8 267 31 186 b 85 371 31 186 55 269 b 140 559 114 473 138 557 b 153 567 141 564 148 567 b 168 559 159 567 166 564 b 168 555 168 557 168 557 b 92 281 168 548 159 513 b 14 13 50 134 14 13 b 0 0 14 6 6 0 b -17 15 -8 0 -17 8 b -93 283 -17 15 -51 136 b -170 552 -166 533 -170 548 b -170 553 -170 552 -170 552 b -160 567 -170 560 -167 564 "},v8b:{x_min:0,x_max:319.859375,ha:326,o:"m 149 508 b 159 509 152 509 155 509 b 186 494 170 509 181 503 b 190 440 190 487 190 488 l 190 430 l 190 377 l 242 377 l 251 377 b 303 373 298 377 296 377 b 319 345 314 367 319 356 b 304 319 319 335 314 324 b 250 315 296 315 299 315 l 242 315 l 190 315 l 190 262 l 190 252 b 186 198 190 204 190 205 b 159 183 179 188 170 183 b 132 198 148 183 138 188 b 127 252 127 205 127 204 l 127 262 l 127 315 l 76 315 l 68 315 b 14 319 20 315 21 315 b 0 347 4 324 0 335 b 14 373 0 356 4 367 b 68 377 21 377 20 377 l 76 377 l 127 377 l 127 430 l 127 440 b 132 494 127 488 127 487 b 149 508 136 501 142 505 "},v8c:{x_min:-330.75,x_max:329.390625,ha:336,o:"m -133 483 b -117 484 -127 484 -122 484 b 31 373 -51 484 9 440 b 35 348 34 365 35 356 b -25 285 35 313 10 285 b -87 331 -55 285 -76 302 b -167 402 -100 376 -133 402 b -191 398 -175 402 -183 401 b -227 341 -215 388 -227 369 b -225 320 -227 334 -227 327 b -13 74 -209 230 -125 133 b 6 65 -4 70 5 66 l 9 63 l 10 65 b 117 231 12 68 40 112 l 189 341 l 242 424 b 268 460 262 456 264 458 b 283 464 273 463 277 464 b 308 438 296 464 308 453 l 308 437 b 287 396 308 430 308 428 l 95 98 l 59 43 l 58 41 l 65 37 b 253 -156 151 -8 217 -77 b 281 -285 272 -199 281 -244 b 148 -481 281 -381 231 -463 b 115 -485 137 -484 126 -485 b -32 -376 51 -485 -9 -442 b -36 -349 -35 -366 -36 -358 b 25 -287 -36 -315 -12 -287 b 85 -333 54 -287 74 -302 b 166 -403 99 -377 133 -403 b 190 -399 174 -403 182 -402 b 225 -342 215 -390 225 -370 b 224 -322 225 -335 225 -328 b 12 -76 208 -231 125 -134 b -8 -66 2 -72 -6 -68 l -10 -65 l -12 -66 b -118 -231 -13 -68 -42 -113 l -190 -342 l -243 -426 b -269 -462 -264 -458 -265 -458 b -284 -466 -274 -464 -279 -466 b -310 -440 -298 -466 -310 -455 l -310 -438 b -288 -398 -310 -430 -308 -430 l -96 -99 l -59 -44 l -59 -43 l -66 -38 b -281 284 -198 33 -281 158 l -281 284 b -133 483 -281 392 -220 474 m 254 177 b 266 179 258 177 262 179 b 319 149 287 179 307 167 b 329 115 326 140 329 127 b 319 79 329 102 326 90 b 268 51 307 61 287 51 b 221 72 250 51 234 58 b 205 115 210 84 205 99 b 254 177 205 142 223 170 m -281 -54 b -269 -52 -277 -52 -273 -52 b -223 -73 -253 -52 -235 -59 b -206 -116 -212 -84 -206 -101 b -216 -151 -206 -129 -209 -141 b -269 -179 -228 -170 -249 -179 b -314 -159 -285 -179 -302 -173 b -330 -116 -325 -147 -330 -131 b -281 -54 -330 -88 -313 -61 "},v8f:{x_min:-21.78125,x_max:362.0625,ha:369,o:"m 302 1031 b 308 1032 304 1032 307 1032 b 330 1016 318 1032 325 1027 b 362 867 351 970 362 920 b 340 738 362 824 353 780 l 336 727 l 340 717 b 362 591 355 677 362 634 b 257 323 362 496 325 401 b 204 272 243 306 227 290 b 20 56 129 206 66 133 b -1 18 12 44 0 22 b -19 4 -4 9 -12 4 l -21 4 l -21 140 l -21 276 l -12 277 b 167 333 61 288 127 309 b 319 598 262 388 319 491 b 311 664 319 620 317 642 l 310 673 l 304 664 b 204 548 279 620 250 587 b 20 333 129 483 66 409 b -1 292 12 320 0 298 b -19 280 -4 285 -12 280 l -21 280 l -21 416 l -21 552 l -12 553 b 167 609 61 564 127 585 b 319 874 264 666 319 770 b 294 992 319 914 311 954 b 288 1011 288 1004 288 1007 b 302 1031 288 1021 294 1028 "},v90:{x_min:-171.5,x_max:483.1875,ha:493,o:"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 495 20 616 20 616 b 20 373 20 427 20 373 b 115 410 20 373 63 390 l 210 448 l 210 531 b 212 620 210 614 210 616 b 231 632 215 628 223 632 b 246 627 236 632 242 631 b 251 541 251 620 251 628 l 251 463 l 315 489 b 387 514 368 509 381 514 b 393 513 390 514 392 514 b 406 494 402 510 406 502 b 397 476 406 487 404 480 b 323 446 396 474 363 462 l 251 417 l 251 283 l 251 148 l 254 151 b 370 199 291 183 332 199 b 415 191 385 199 400 197 b 483 84 458 176 483 134 b 461 0 483 58 476 29 b 332 -142 439 -40 411 -72 l 255 -215 b 231 -229 240 -229 239 -229 b 216 -223 224 -229 220 -227 b 210 -158 210 -217 210 -223 b 210 -120 210 -148 210 -136 l 210 -29 l 205 -34 b 100 -142 182 -65 159 -88 l 23 -215 b -1 -229 9 -229 6 -229 b -19 -217 -9 -229 -16 -224 l -20 -215 l -21 48 l -21 310 l -83 287 b -152 262 -133 266 -145 262 b -157 263 -153 262 -155 262 b -171 283 -166 266 -171 274 b -161 301 -171 290 -167 297 b -91 328 -160 302 -129 315 l -21 356 l -21 487 l -20 617 l -19 621 b -8 631 -17 626 -12 630 m 210 288 b 210 401 210 351 210 401 b 114 365 209 401 167 384 l 20 327 l 20 238 l 20 148 l 21 151 b 140 199 59 183 102 199 b 206 180 164 199 187 192 l 209 177 b 209 177 209 177 209 177 b 210 288 210 177 210 199 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 m 341 131 b 328 133 337 133 332 133 b 322 133 326 133 323 133 b 257 87 296 129 273 113 l 251 80 l 251 -37 l 251 -156 l 255 -152 b 375 81 328 -72 375 20 l 375 83 b 341 131 375 113 367 126 "},v92:{x_min:0,x_max:598.890625,ha:611,o:"m 62 181 b 77 183 66 183 72 183 b 91 181 83 183 88 183 b 202 131 100 180 106 177 l 299 87 l 394 131 b 517 183 499 181 502 183 b 519 183 517 183 518 183 b 598 104 567 183 598 144 b 577 49 598 84 592 65 b 518 15 567 38 563 37 b 484 0 499 6 484 0 b 518 -16 484 -1 499 -8 b 577 -51 563 -38 567 -40 b 598 -105 592 -66 598 -86 b 519 -184 598 -145 567 -184 b 517 -184 518 -184 517 -184 b 394 -133 502 -184 499 -183 l 299 -88 l 202 -133 b 81 -184 99 -183 95 -184 b 77 -184 80 -184 78 -184 b 0 -105 29 -184 0 -145 b 20 -51 0 -86 5 -66 b 80 -16 29 -40 34 -38 b 114 -1 98 -8 114 -1 b 80 15 114 0 98 6 b 20 49 34 37 29 38 b 0 104 6 65 0 84 b 62 181 0 140 23 174 m 88 134 b 74 136 85 134 80 136 b 68 134 72 136 69 136 b 46 104 54 130 46 117 b 55 81 46 95 49 88 b 149 34 59 76 53 80 b 224 -1 190 15 224 0 b 144 -38 224 -1 187 -18 b 54 -84 59 -79 58 -79 b 46 -105 49 -90 46 -98 b 76 -137 46 -122 58 -137 b 78 -137 77 -137 77 -137 b 194 -86 87 -137 76 -141 b 298 -36 250 -58 298 -36 b 298 -36 298 -36 298 -36 b 402 -84 299 -36 345 -58 b 518 -137 522 -141 510 -137 b 521 -137 519 -137 519 -137 b 551 -105 539 -137 551 -122 b 541 -83 551 -98 548 -90 b 447 -36 537 -77 544 -81 b 374 -1 406 -16 374 -1 b 447 34 374 0 406 15 b 541 81 544 80 537 76 b 551 104 548 88 551 97 b 521 136 551 120 539 136 b 518 136 519 136 519 136 b 517 136 518 136 517 136 l 517 136 b 402 83 511 136 511 136 b 298 34 345 56 299 34 b 298 34 298 34 298 34 b 194 84 298 34 250 56 b 88 134 137 111 89 133 "},v93:{x_min:0,x_max:438.28125,ha:447,o:"m 212 205 b 219 205 213 205 216 205 b 239 183 228 205 231 204 b 421 -163 298 40 363 -83 b 438 -191 434 -180 438 -186 b 436 -197 438 -192 438 -195 b 424 -206 434 -204 431 -206 b 406 -201 420 -206 415 -205 b 216 -156 347 -172 281 -156 b 23 -205 148 -156 80 -173 b 14 -206 20 -206 17 -206 b 0 -191 6 -206 0 -201 b 6 -176 0 -187 1 -183 b 202 192 63 -104 142 45 b 212 205 205 199 208 202 m 264 48 l 249 81 l 243 94 l 242 91 b 89 -126 208 36 137 -66 b 81 -138 85 -133 81 -138 b 81 -138 81 -138 81 -138 b 81 -138 81 -138 81 -138 b 95 -133 81 -138 87 -136 b 280 -94 156 -108 221 -94 b 334 -98 299 -94 317 -95 b 343 -99 338 -99 343 -99 b 343 -99 343 -99 343 -99 b 338 -94 343 -99 341 -97 b 264 48 318 -58 287 1 "},v94:{x_min:-149.71875,x_max:148.359375,ha:151,o:"m -9 215 b 0 217 -6 217 -4 217 b 19 205 8 217 14 213 b 20 142 20 202 20 201 l 20 84 l 23 84 b 144 -27 81 74 129 30 b 148 -66 147 -40 148 -54 b 36 -213 148 -134 103 -197 b 0 -219 24 -217 12 -219 b -145 -104 -68 -219 -129 -173 b -149 -68 -148 -91 -149 -79 b -24 84 -149 6 -98 74 l -21 84 l -21 142 b -19 205 -20 201 -20 202 b -9 215 -17 209 -13 213 m -21 -15 b -23 41 -21 37 -21 41 b -23 41 -23 41 -23 41 b -76 11 -35 40 -62 26 b -108 -65 -98 -11 -108 -38 b -1 -176 -108 -122 -65 -176 b 107 -65 63 -176 107 -122 b 74 11 107 -38 96 -11 b 20 41 61 26 32 41 b 20 -15 20 41 20 15 b 19 -74 20 -72 20 -72 b 0 -87 14 -83 6 -87 b -19 -74 -8 -87 -16 -83 b -21 -15 -20 -72 -20 -72 "},v95:{x_min:0,x_max:406.96875,ha:415,o:"m 55 181 b 70 183 61 183 66 183 b 111 170 85 183 99 179 b 160 130 115 167 137 149 l 202 95 l 245 130 b 319 181 299 176 302 179 b 334 183 325 183 330 183 b 406 109 375 183 406 148 b 401 81 406 99 405 91 b 348 24 394 65 390 59 b 318 -1 332 11 318 0 b 348 -26 318 -1 332 -12 b 401 -83 390 -61 394 -66 b 406 -111 405 -93 406 -101 b 334 -184 406 -149 375 -184 b 319 -183 330 -184 325 -184 b 245 -131 302 -180 299 -177 l 202 -97 l 160 -131 b 85 -183 107 -177 103 -180 b 70 -184 80 -184 76 -184 b 0 -111 31 -184 0 -149 b 4 -83 0 -101 1 -93 b 58 -26 10 -66 16 -61 b 88 -1 74 -12 88 -1 b 58 24 88 0 74 11 b 10 69 23 54 17 59 b 0 109 2 81 0 95 b 55 181 0 142 21 173 m 83 133 b 72 136 78 136 76 136 b 57 131 66 136 61 134 b 46 109 49 126 46 117 b 50 93 46 104 47 98 b 107 45 51 91 77 70 b 160 0 137 20 160 0 b 107 -47 160 -1 137 -22 b 50 -94 77 -72 51 -93 b 46 -111 47 -99 46 -105 b 59 -134 46 -120 50 -130 b 72 -137 62 -136 68 -137 b 83 -136 76 -137 80 -136 b 144 -84 84 -134 107 -116 b 202 -36 176 -58 202 -36 b 261 -84 202 -36 230 -58 b 323 -136 299 -116 321 -134 b 334 -137 326 -136 330 -137 b 345 -134 338 -137 343 -136 b 360 -111 355 -130 360 -120 b 355 -94 360 -105 359 -99 b 299 -47 353 -93 329 -72 b 245 0 269 -22 245 -1 b 299 45 245 0 269 20 b 355 93 329 70 353 91 b 360 109 359 98 360 104 b 345 133 360 119 355 129 b 334 136 343 134 338 136 b 323 134 330 136 326 134 b 261 83 321 133 299 115 b 202 34 230 56 202 34 b 144 83 202 34 176 56 b 83 133 106 115 84 133 "},v97:{x_min:-228.671875,x_max:227.3125,ha:232,o:"m -217 487 l -213 488 l 0 488 l 212 488 l 216 487 b 225 476 220 484 224 480 l 227 473 l 227 244 l 227 15 l 225 12 b 206 0 223 4 215 0 b 197 1 204 0 200 0 b 187 12 193 4 189 6 l 186 15 l 186 138 l 186 262 l -1 262 l -187 262 l -187 138 l -187 15 l -189 12 b -208 0 -193 4 -200 0 b -227 12 -216 0 -223 4 l -228 15 l -228 244 l -228 473 l -227 476 b -217 487 -225 480 -221 484 "},v9a:{x_min:-21.78125,x_max:367.5,ha:375,o:"m 230 1031 b 238 1032 232 1032 235 1032 b 259 1014 245 1032 251 1027 b 367 662 330 906 367 782 b 364 602 367 641 367 621 b 232 317 352 488 304 384 b 57 120 155 245 103 187 b -1 18 31 84 6 40 b -19 4 -4 11 -12 4 l -21 4 l -21 159 l -21 315 l -16 315 b 96 335 10 315 62 324 b 315 695 227 380 315 527 b 313 738 315 709 314 724 b 224 991 304 825 273 916 b 216 1013 219 999 216 1007 b 230 1031 216 1021 220 1028 "},v9b:{x_min:-24.5,x_max:313.0625,ha:319,o:"m -24 -133 l -24 -5 l -20 -5 b -1 -19 -12 -5 -4 -11 b 142 -213 13 -61 74 -144 b 258 -376 196 -269 230 -315 b 313 -605 295 -449 313 -528 b 292 -742 313 -652 306 -699 b 288 -752 289 -748 288 -752 b 288 -752 288 -752 288 -752 b 292 -764 289 -753 291 -757 b 313 -907 306 -811 313 -860 b 292 -1045 313 -954 306 -1002 b 288 -1054 289 -1050 288 -1054 b 288 -1054 288 -1054 288 -1054 b 292 -1067 289 -1054 291 -1060 b 313 -1210 306 -1113 313 -1161 b 292 -1346 313 -1257 306 -1304 b 288 -1357 289 -1353 288 -1357 b 288 -1357 288 -1357 288 -1357 b 292 -1368 289 -1357 291 -1363 b 313 -1512 306 -1415 313 -1464 b 292 -1648 313 -1560 306 -1605 b 288 -1660 289 -1654 288 -1660 b 288 -1660 288 -1660 288 -1660 b 292 -1671 289 -1660 291 -1665 b 313 -1814 306 -1719 313 -1766 b 250 -2040 313 -1897 291 -1977 b 232 -2062 238 -2057 236 -2059 b 221 -2065 230 -2063 225 -2065 b 200 -2045 210 -2065 201 -2057 b 200 -2043 200 -2044 200 -2044 b 208 -2026 200 -2037 202 -2034 b 269 -1826 249 -1966 269 -1897 b 153 -1544 269 -1726 230 -1625 b -9 -1472 115 -1506 58 -1481 b -21 -1471 -14 -1471 -19 -1471 l -24 -1471 l -24 -1343 l -24 -1215 l -20 -1215 b -1 -1229 -12 -1215 -4 -1221 b 142 -1424 13 -1270 74 -1353 b 257 -1582 196 -1478 228 -1524 b 264 -1594 261 -1589 264 -1594 l 264 -1594 b 265 -1582 264 -1594 264 -1589 b 270 -1525 268 -1562 270 -1544 b 153 -1243 270 -1424 228 -1321 b -9 -1170 115 -1203 58 -1178 b -21 -1168 -14 -1170 -19 -1168 l -24 -1168 l -24 -1041 l -24 -913 l -20 -913 b -1 -927 -12 -913 -4 -918 b 142 -1121 13 -967 74 -1050 b 257 -1281 196 -1175 228 -1221 b 264 -1292 261 -1286 264 -1292 l 264 -1292 b 265 -1279 264 -1292 264 -1286 b 270 -1222 268 -1261 270 -1242 b 153 -941 270 -1121 228 -1018 b -9 -867 115 -900 58 -875 b -21 -866 -14 -867 -19 -866 l -24 -866 l -24 -738 l -24 -610 l -20 -610 b -1 -624 -12 -610 -4 -616 b 142 -818 13 -664 74 -749 b 257 -978 196 -873 228 -918 b 264 -989 261 -984 264 -989 l 264 -989 b 265 -977 264 -989 264 -984 b 270 -920 268 -959 270 -939 b 153 -638 270 -818 228 -716 b -9 -564 115 -598 58 -573 b -21 -563 -14 -564 -19 -563 l -24 -563 l -24 -435 l -24 -308 l -20 -308 b -1 -322 -12 -308 -4 -313 b 142 -516 13 -363 74 -446 b 257 -675 196 -571 228 -616 b 264 -687 261 -681 264 -687 l 264 -687 b 265 -674 264 -687 264 -681 b 270 -617 268 -656 270 -637 b 153 -335 270 -516 228 -413 b -9 -262 115 -295 58 -270 b -21 -260 -14 -262 -19 -260 l -24 -260 l -24 -133 "},v9c:{x_min:-166.0625,x_max:-25.859375,ha:0,o:"m -49 369 b -42 370 -46 369 -44 370 b -27 360 -36 370 -29 366 b -25 355 -27 359 -25 358 b -32 335 -25 351 -28 347 b -92 52 -66 248 -87 159 b -93 -1 -93 43 -93 20 b -92 -54 -93 -23 -93 -45 b -32 -337 -85 -162 -66 -251 b -25 -355 -27 -349 -25 -352 b -42 -371 -25 -365 -32 -371 b -61 -353 -50 -371 -51 -369 b -163 -63 -119 -262 -153 -165 b -166 -1 -166 -37 -166 -31 b -163 62 -166 30 -166 36 b -61 352 -153 163 -119 260 b -49 369 -54 365 -51 366 "},v9e:{x_min:0,x_max:607.0625,ha:619,o:"m 243 631 b 250 632 246 632 249 632 b 270 620 259 632 268 628 l 272 616 l 272 201 l 272 -212 l 270 -216 b 251 -229 268 -224 259 -229 b 227 -215 243 -229 240 -229 l 151 -142 b 32 -16 81 -80 53 -49 b 0 84 9 18 0 52 b 111 199 0 149 42 199 b 137 197 119 199 127 198 b 228 151 168 191 197 177 l 231 148 l 231 383 b 232 620 231 616 231 616 b 243 631 234 624 238 630 m 168 131 b 152 133 163 133 157 133 b 107 102 130 133 111 120 b 106 86 107 97 106 91 b 111 41 106 73 108 56 b 227 -152 125 -13 171 -90 l 231 -156 l 231 -37 l 231 80 l 225 87 b 168 131 210 111 190 126 m 347 631 b 353 632 348 632 351 632 b 374 620 363 632 371 628 b 375 383 375 616 375 616 l 375 148 l 377 151 b 492 199 415 183 454 199 b 537 191 507 199 522 197 b 607 84 582 176 607 134 b 583 0 607 58 598 29 b 455 -142 562 -40 533 -72 l 378 -215 b 355 -229 364 -229 362 -229 b 334 -216 345 -229 337 -224 l 333 -212 l 333 201 l 333 616 l 334 620 b 347 631 337 624 341 630 m 465 131 b 451 133 461 133 455 133 b 445 133 449 133 446 133 b 379 87 419 129 396 113 l 375 80 l 375 -37 l 375 -156 l 378 -152 b 499 81 451 -72 499 20 l 499 83 b 465 131 499 113 490 126 "},va3:{x_min:58.53125,x_max:228.671875,ha:294,o:"m 138 371 b 142 373 140 371 141 373 b 178 342 149 373 156 366 b 228 251 217 297 228 278 b 228 244 228 248 228 247 b 176 147 227 212 212 184 b 123 73 152 122 132 93 b 121 62 122 70 121 66 b 145 13 121 48 129 31 b 153 -2 151 6 153 1 b 149 -9 153 -5 152 -6 b 144 -11 148 -11 145 -11 b 129 -1 140 -11 136 -8 b 61 87 89 37 68 68 b 58 113 59 95 58 105 b 110 215 58 144 74 177 b 163 287 134 240 155 269 b 166 299 166 291 166 295 b 141 348 166 313 157 330 b 133 360 134 356 133 358 b 133 363 133 362 133 362 b 138 371 133 367 136 370 "},va5:{x_min:0,x_max:349.8125,ha:357,o:"m 88 302 b 103 303 93 302 98 303 b 202 224 149 303 191 270 b 205 199 204 216 205 208 b 178 129 205 173 196 147 l 175 126 l 182 127 b 307 249 236 142 284 190 b 313 259 308 254 311 258 b 329 267 317 265 323 267 b 349 247 340 267 349 259 b 201 -263 349 242 204 -258 b 182 -273 197 -270 190 -273 b 163 -260 174 -273 166 -269 b 161 -256 161 -259 161 -258 b 217 -59 161 -248 170 -220 b 272 129 247 43 272 127 b 272 129 272 129 272 129 b 264 122 272 129 268 126 b 140 80 227 94 183 80 b 36 115 102 80 65 91 b 0 194 10 136 0 165 b 88 302 0 244 32 292 "},va9:{x_min:-24.5,x_max:314.421875,ha:321,o:"m -24 -145 l -24 -5 l -20 -5 b 0 -23 -9 -5 -2 -12 b 27 -87 4 -38 14 -66 b 138 -220 53 -136 88 -177 b 235 -328 179 -255 208 -288 b 314 -592 287 -409 314 -501 b 292 -732 314 -639 307 -687 l 289 -742 l 294 -756 b 314 -896 307 -802 314 -849 b 292 -1035 314 -943 307 -991 l 289 -1045 l 294 -1057 b 314 -1197 307 -1104 314 -1152 b 292 -1338 314 -1246 307 -1292 l 289 -1347 l 294 -1360 b 314 -1500 307 -1407 314 -1454 b 273 -1689 314 -1565 300 -1628 b 250 -1712 265 -1710 261 -1712 b 228 -1691 236 -1712 228 -1704 l 228 -1685 l 234 -1675 b 270 -1507 258 -1621 270 -1564 b 98 -1193 270 -1381 209 -1261 b 40 -1174 76 -1179 58 -1174 b -10 -1189 24 -1174 8 -1178 b -20 -1192 -14 -1192 -16 -1192 l -24 -1192 l -24 -1052 l -24 -913 l -20 -913 b 0 -931 -9 -913 -2 -920 b 27 -995 4 -946 14 -974 b 138 -1128 53 -1043 88 -1085 b 257 -1275 190 -1172 228 -1220 b 262 -1283 259 -1279 262 -1283 l 262 -1283 b 269 -1249 264 -1282 268 -1260 b 270 -1206 270 -1233 270 -1220 b 98 -891 270 -1075 206 -957 b 40 -871 76 -877 58 -871 b -10 -886 24 -871 8 -875 b -20 -889 -14 -889 -16 -889 l -24 -889 l -24 -749 l -24 -610 l -20 -610 b 0 -628 -9 -610 -2 -617 b 27 -692 4 -644 14 -671 b 138 -825 53 -741 88 -782 b 257 -973 190 -870 228 -917 b 262 -981 259 -977 262 -981 l 262 -981 b 269 -946 264 -979 268 -957 b 270 -903 270 -931 270 -917 b 98 -588 270 -774 206 -655 b 40 -569 76 -574 58 -569 b -10 -584 24 -569 8 -574 b -20 -587 -14 -587 -16 -587 l -24 -587 l -24 -448 l -24 -308 l -20 -308 b 0 -326 -9 -308 -2 -315 b 27 -390 4 -341 14 -369 b 138 -523 53 -438 88 -480 b 257 -670 190 -567 228 -614 b 262 -678 259 -674 262 -678 b 262 -678 262 -678 262 -678 b 269 -644 264 -677 268 -656 b 270 -601 270 -628 270 -614 b 98 -285 270 -471 206 -352 b 40 -266 76 -273 58 -266 b -10 -281 24 -266 8 -272 b -20 -284 -14 -284 -16 -284 l -24 -284 l -24 -145 "},vaa:{x_min:-1.359375,x_max:752.703125,ha:768,o:"m 490 985 b 504 986 495 986 500 986 b 604 907 551 986 593 954 b 607 884 607 900 607 892 b 581 813 607 857 597 831 l 578 810 l 583 811 b 710 932 638 827 687 873 b 714 943 711 936 713 942 b 730 952 720 949 725 952 b 752 931 741 952 752 943 b 200 -946 752 927 204 -941 b 182 -957 197 -953 190 -957 b 163 -945 174 -957 166 -953 b 161 -939 161 -942 161 -942 b 217 -743 161 -931 170 -904 b 272 -555 247 -639 272 -555 b 272 -555 272 -555 272 -555 b 264 -560 272 -555 268 -557 b 140 -603 227 -589 182 -603 b 36 -567 102 -603 65 -592 b -1 -487 12 -548 -1 -517 b 17 -427 -1 -466 5 -445 b 103 -380 38 -395 70 -380 b 191 -433 137 -380 172 -398 b 205 -484 201 -448 205 -466 b 178 -553 205 -509 196 -535 l 175 -557 l 182 -555 b 307 -435 236 -539 284 -494 b 372 -213 308 -430 372 -215 b 372 -213 372 -213 372 -213 b 364 -219 372 -213 368 -216 b 240 -262 328 -247 283 -262 b 137 -226 202 -262 166 -249 b 99 -145 112 -206 99 -176 b 118 -84 99 -124 106 -104 b 204 -38 138 -54 171 -38 b 292 -91 238 -38 273 -56 b 306 -141 302 -106 306 -124 b 279 -212 306 -167 296 -194 l 276 -215 l 281 -213 b 408 -93 336 -198 385 -151 b 473 129 409 -88 473 127 b 473 129 473 129 473 129 b 465 122 473 129 469 126 b 341 80 428 94 383 80 b 236 115 303 80 266 91 b 200 195 213 136 200 165 b 217 256 200 217 206 238 b 304 303 239 287 272 303 b 393 249 338 303 374 285 b 406 199 402 234 406 217 b 379 129 406 173 397 148 l 377 126 l 382 127 b 509 248 436 142 485 190 b 574 470 510 254 574 469 b 574 470 574 470 574 470 b 566 464 574 470 570 467 b 442 421 529 435 484 421 b 337 458 404 421 367 433 b 300 538 314 477 300 508 b 318 598 300 559 306 580 b 404 645 340 630 372 645 b 494 592 439 645 475 627 b 507 541 502 577 507 559 b 480 471 507 516 498 489 l 477 467 l 483 470 b 608 589 537 485 586 531 b 675 811 611 595 675 810 b 675 811 675 811 675 811 b 666 806 675 811 671 809 b 543 763 628 777 585 763 b 438 799 504 763 468 775 b 401 878 412 820 401 849 b 490 985 401 928 434 977 "},vab:{x_min:0,x_max:272.21875,ha:278,o:"m 243 631 b 250 632 246 632 249 632 b 270 620 259 632 268 628 l 272 616 l 272 201 l 272 -212 l 270 -216 b 251 -229 268 -224 259 -229 b 227 -215 243 -229 240 -229 l 151 -142 b 32 -16 81 -80 53 -49 b 0 84 9 18 0 52 b 111 199 0 149 42 199 b 137 197 119 199 127 198 b 228 151 168 191 197 177 l 231 148 l 231 383 b 232 620 231 616 231 616 b 243 631 234 624 238 630 m 168 131 b 152 133 163 133 157 133 b 107 102 130 133 111 120 b 106 86 107 97 106 91 b 111 41 106 73 108 56 b 227 -152 125 -13 171 -90 l 231 -156 l 231 -37 l 231 80 l 225 87 b 168 131 210 111 190 126 "},vad:{x_min:0,x_max:873.828125,ha:892,o:"m 0 0 l 0 703 l 81 703 l 164 703 l 164 0 l 164 -705 l 81 -705 l 0 -705 l 0 0 m 225 0 l 225 703 l 246 703 l 268 703 l 268 366 l 268 30 l 274 36 b 314 79 284 44 302 63 b 413 302 357 137 392 213 b 432 327 419 324 421 327 b 449 306 443 327 447 322 b 611 115 457 195 529 115 b 651 122 624 115 638 117 b 728 316 705 140 724 188 b 729 388 728 342 729 366 b 671 635 729 533 711 602 b 581 662 649 652 616 662 b 477 637 545 662 510 653 l 475 635 l 477 634 b 503 627 488 632 495 631 b 545 556 532 612 545 584 b 491 480 545 524 526 491 b 465 474 481 476 473 474 b 379 563 417 474 379 516 b 389 602 379 576 382 588 b 541 691 409 641 479 681 b 582 694 555 692 568 694 b 865 462 714 694 834 598 b 873 392 871 440 873 416 b 865 317 873 367 871 341 b 639 84 839 194 748 101 b 612 83 630 83 620 83 b 511 116 577 83 543 94 b 504 120 509 119 506 120 b 504 120 504 120 504 120 b 469 59 504 120 488 93 l 432 -1 l 469 -61 b 504 -122 488 -94 504 -122 b 504 -122 504 -122 504 -122 b 511 -117 506 -122 509 -120 b 612 -84 543 -95 577 -84 b 665 -91 630 -84 647 -87 b 869 -338 771 -122 850 -216 b 873 -392 872 -356 873 -374 b 798 -595 873 -469 847 -539 b 581 -695 741 -662 660 -695 b 406 -626 517 -695 454 -671 b 381 -563 389 -607 381 -585 b 465 -477 381 -519 413 -477 b 545 -559 514 -477 545 -519 b 503 -628 545 -587 532 -613 b 477 -635 495 -632 488 -634 l 475 -637 l 477 -638 b 581 -663 510 -655 545 -663 b 671 -637 616 -663 649 -653 b 729 -391 711 -603 729 -534 b 728 -317 729 -367 728 -344 b 623 -117 722 -173 698 -124 b 611 -116 619 -116 615 -116 b 449 -308 528 -116 457 -198 b 432 -328 447 -323 443 -328 b 413 -303 421 -328 419 -326 b 314 -80 392 -215 357 -138 b 274 -37 302 -65 284 -45 l 268 -31 l 268 -367 l 268 -705 l 246 -705 l 225 -705 l 225 0 "},vb1:{x_min:78.9375,x_max:485.921875,ha:417,o:"m 362 378 b 378 380 367 380 372 380 b 472 348 415 380 453 367 b 485 315 481 338 485 327 b 462 273 485 298 477 281 b 439 267 454 269 446 267 b 398 290 424 267 409 274 b 344 319 385 309 364 319 b 281 269 315 319 289 301 b 279 262 280 266 279 262 b 276 256 279 260 277 258 b 274 249 276 254 274 251 b 238 127 273 248 257 192 b 201 4 217 61 201 5 b 166 -1 198 -1 200 -1 b 153 -1 163 -1 157 -1 b 141 -1 148 -1 144 -1 b 104 4 106 -1 107 -1 b 104 6 104 5 104 5 b 142 144 104 13 110 34 b 182 278 164 219 181 276 b 183 288 182 281 182 285 b 185 302 185 292 185 298 b 164 330 185 317 176 328 b 159 330 163 330 161 330 b 102 302 140 330 119 320 b 91 294 95 295 93 294 b 88 294 91 294 89 294 b 78 303 83 294 78 298 b 81 312 78 306 78 309 b 200 373 106 347 160 373 b 215 371 205 373 209 371 b 266 335 235 367 254 353 b 269 331 268 333 269 331 b 269 331 269 331 269 331 b 273 335 269 331 270 334 b 362 378 298 359 330 376 "},vb3:{x_min:0,x_max:227.3125,ha:232,o:"m 91 213 b 100 215 93 215 96 215 b 227 58 167 215 224 144 b 227 52 227 56 227 54 b 61 -201 227 -43 164 -138 b 29 -216 44 -212 36 -216 b 23 -210 27 -216 24 -213 b 21 -205 21 -208 21 -206 b 34 -192 21 -201 25 -197 b 122 -55 89 -161 122 -106 b 104 6 122 -33 117 -12 l 103 9 l 96 9 b 4 79 57 9 17 38 b 0 112 1 90 0 101 b 91 213 0 163 36 209 "},vb4:{x_min:-597.53125,x_max:596.171875,ha:608,o:"m -533 324 b -525 327 -530 326 -528 327 b -504 305 -514 327 -504 317 b -504 305 -504 305 -504 305 b -513 284 -504 299 -504 299 b -556 112 -541 226 -556 167 b -545 33 -556 84 -552 58 b -524 -20 -541 15 -532 -9 l -522 -23 l -491 15 l -413 111 b -355 174 -367 169 -363 174 b -351 174 -353 174 -352 174 b -254 86 -343 174 -348 179 b -168 -1 -208 37 -168 -1 b -100 84 -168 -1 -137 37 b -23 173 -28 173 -29 172 b -19 174 -21 174 -20 174 b -8 173 -14 174 -10 173 b 80 86 -5 172 13 151 b 166 -1 127 37 166 -1 b 235 84 166 -1 197 37 b 311 173 306 173 304 172 b 317 174 313 174 314 174 b 326 173 319 174 323 173 b 490 11 329 172 366 134 l 502 -1 l 530 34 b 568 76 560 72 563 74 b 575 77 570 77 573 77 b 596 56 586 77 596 68 b 594 48 596 54 596 51 b 417 -172 592 41 424 -166 b 405 -176 415 -174 409 -176 b 396 -174 401 -176 398 -176 b 307 -87 393 -173 372 -152 b 221 -1 259 -38 221 -1 b 152 -86 221 -1 190 -38 b 76 -176 81 -174 83 -173 b 70 -176 74 -176 73 -176 b 61 -174 66 -176 62 -174 b -27 -87 58 -173 38 -152 b -114 -1 -74 -38 -112 -1 b -182 -86 -114 -1 -145 -38 b -258 -176 -253 -174 -253 -173 b -264 -176 -259 -176 -262 -176 b -274 -174 -268 -176 -272 -174 b -438 -11 -277 -173 -348 -102 l -449 0 l -479 -37 b -524 -80 -513 -80 -514 -80 l -524 -80 b -553 -52 -534 -80 -540 -74 b -597 109 -583 -8 -597 48 b -560 280 -597 165 -585 224 b -533 324 -548 310 -540 322 "},vb6:{x_min:0,x_max:556.6875,ha:568,o:"m 289 545 b 298 546 292 545 295 546 b 318 533 306 546 315 541 b 319 428 319 530 319 528 l 319 327 l 334 327 b 526 223 412 326 485 285 b 543 172 537 206 543 190 b 447 76 543 122 503 76 b 445 76 446 76 446 76 b 359 165 394 77 359 119 b 368 205 359 179 362 192 b 441 251 382 233 412 251 b 455 249 446 251 451 251 b 460 248 458 249 460 248 b 460 248 460 248 460 248 b 454 254 460 249 458 251 b 334 295 419 280 378 294 l 319 295 l 319 4 l 319 -287 l 321 -285 b 328 -285 322 -285 325 -285 b 524 -99 424 -277 507 -198 b 541 -79 526 -84 530 -79 b 556 -97 551 -79 556 -84 b 548 -133 556 -105 553 -117 b 334 -317 521 -233 434 -306 b 322 -319 329 -317 323 -317 l 319 -319 l 319 -424 b 319 -471 319 -444 319 -459 b 313 -541 319 -544 318 -535 b 298 -548 308 -545 303 -548 b 279 -534 289 -548 281 -542 b 277 -424 277 -531 277 -530 l 277 -317 l 273 -317 b 13 -95 153 -305 51 -217 b 0 2 4 -62 0 -29 b 182 295 0 126 66 238 b 274 324 210 309 249 320 l 277 324 l 277 427 b 279 533 277 528 277 530 b 289 545 281 538 285 542 m 277 2 b 277 291 277 161 277 291 b 268 288 277 291 273 290 b 144 1 179 265 144 184 b 276 -284 144 -199 175 -267 l 277 -285 l 277 2 "},vb9:{x_min:-122.5,x_max:121.140625,ha:124,o:"m -16 145 b 0 147 -10 147 -5 147 b 121 -1 66 147 121 77 b 114 -49 121 -16 118 -33 b -1 -148 95 -112 47 -148 b -85 -106 -31 -148 -61 -134 b -122 -1 -110 -76 -122 -38 b -16 145 -122 68 -81 134 m 12 111 b 0 113 8 113 4 113 b -68 22 -29 113 -61 73 b -70 0 -69 15 -70 6 b -13 -113 -70 -49 -47 -98 b -1 -115 -9 -115 -5 -115 b 63 -40 24 -115 53 -83 b 68 -1 66 -27 68 -15 b 12 111 68 48 46 97 "},vba:{x_min:-118.421875,x_max:597.53125,ha:381,o:"m 460 574 b 464 574 461 574 462 574 b 488 574 470 574 481 574 b 500 573 491 574 498 574 b 594 503 543 570 588 538 b 597 488 596 498 597 494 b 528 417 597 449 564 417 b 502 423 519 417 510 419 b 465 481 477 434 465 458 b 488 528 465 499 472 516 b 490 530 490 530 490 530 b 490 530 490 530 490 530 b 468 517 488 530 475 523 b 349 340 419 485 377 420 b 347 330 348 334 347 330 b 383 328 347 328 363 328 b 428 326 423 328 424 328 b 442 302 438 320 442 312 b 430 281 442 294 438 285 b 385 276 424 277 426 276 l 377 276 l 332 276 l 330 269 b 178 -117 303 126 250 -9 b 1 -249 129 -194 69 -237 b -20 -251 -6 -251 -13 -251 b -114 -187 -65 -251 -100 -227 b -118 -156 -117 -177 -118 -166 b -51 -84 -118 -116 -91 -84 b -31 -87 -46 -84 -39 -86 b 16 -152 0 -95 16 -124 b -12 -205 16 -173 8 -194 b -16 -208 -14 -206 -16 -208 b -14 -208 -16 -208 -14 -208 b -9 -206 -14 -208 -12 -208 b 74 -124 23 -197 54 -166 b 172 224 98 -79 125 22 b 185 276 178 252 183 274 b 185 276 185 276 185 276 b 141 276 185 276 181 276 b 91 280 96 276 96 276 b 77 302 83 285 77 294 b 91 326 77 312 83 320 b 148 328 95 328 96 328 l 198 330 l 202 341 b 460 574 249 473 351 566 "},vbf:{x_min:-53.078125,x_max:513.140625,ha:485,o:"m 185 383 b 196 384 187 383 191 384 b 277 334 230 384 259 365 b 288 301 281 324 288 306 b 288 297 288 298 288 297 b 294 302 289 297 291 299 b 394 370 323 338 367 367 b 404 371 398 370 401 371 b 510 272 453 371 498 328 b 513 237 513 262 513 251 b 507 172 513 217 511 192 b 326 -34 487 59 412 -26 b 314 -36 322 -36 318 -36 b 274 -24 298 -36 283 -31 l 265 -16 b 224 44 246 -1 232 20 b 223 49 224 47 223 49 b 223 49 223 49 223 49 b 149 -197 221 48 149 -194 b 149 -198 149 -197 149 -198 b 170 -210 149 -202 155 -205 b 187 -215 174 -210 175 -212 b 204 -231 201 -219 204 -222 b 197 -245 204 -240 202 -242 l 194 -248 l 76 -248 l -42 -248 l -46 -245 b -53 -231 -51 -242 -53 -240 b -35 -215 -53 -222 -49 -217 b -13 -210 -21 -212 -20 -212 b -6 -208 -10 -209 -8 -208 b 0 -206 -6 -208 -2 -206 b 25 -188 13 -201 21 -195 b 163 280 28 -183 163 276 b 166 291 163 283 164 287 b 167 302 167 295 167 299 b 155 324 167 315 161 324 b 155 324 155 324 155 324 b 65 230 125 322 85 280 b 53 215 61 217 58 215 b 51 215 53 215 51 215 b 42 224 46 215 42 217 b 57 263 42 231 47 244 b 140 360 77 305 104 337 b 152 370 144 365 149 369 b 185 383 157 376 172 381 m 374 306 b 366 308 371 308 368 308 b 300 273 348 308 321 294 b 284 254 288 262 287 259 b 280 242 283 249 281 245 b 257 169 279 240 270 213 l 236 98 l 236 93 b 251 48 238 77 243 61 b 279 27 258 37 272 27 b 281 27 279 27 280 27 b 291 31 281 27 287 30 b 396 170 334 52 378 109 b 406 247 402 197 406 224 b 401 277 406 259 405 270 b 374 306 397 290 383 303 "},vc3:{x_min:-10.890625,x_max:299.4375,ha:294,o:"m 136 460 b 142 462 137 462 140 462 b 166 449 152 462 161 456 b 171 428 168 446 168 445 b 288 131 194 322 238 209 b 298 115 295 120 296 117 b 299 106 298 112 299 109 b 273 81 299 91 287 81 b 255 86 268 81 261 83 b 155 116 225 104 183 116 l 152 116 l 149 108 b 141 83 148 102 144 91 b 134 48 137 69 134 58 b 149 9 134 34 140 24 b 153 -1 152 5 153 1 b 149 -9 153 -5 152 -6 b 144 -11 148 -11 147 -11 b 122 2 138 -11 133 -6 b 95 61 104 20 95 38 b 107 108 95 74 99 90 b 108 113 107 111 108 112 b 107 113 108 113 108 113 b 102 113 106 113 104 113 b 31 86 76 108 53 98 b 14 80 24 81 20 80 b -10 106 0 80 -10 91 b 0 131 -10 115 -9 116 b 115 430 49 209 91 317 b 136 460 119 451 123 456 "}},cssFontWeight:"normal",ascender:1903,underlinePosition:-125,cssFontStyle:"normal",boundingBox:{yMin:-2065.375,xMin:-695.53125,yMax:1901.578125,xMax:1159.671875},resolution:1e3,descender:-2066,familyName:"VexFlow-18",lineHeight:4093,underlineThickness:50},Vex.Flow.renderGlyph=function(a,b,c,d,e,f){var g=72*d/(100*Vex.Flow.Font.resolution),h=Vex.Flow.Glyph.loadMetrics(Vex.Flow.Font,e,!f);
Vex.Flow.Glyph.renderOutline(a,h.outline,g,b,c)},Vex.Flow.Glyph=function(){function a(a,b,c){this.code=a,this.point=b,this.context=null,this.options={cache:!0,font:Vex.Flow.Font},this.width=null,this.metrics=null,this.x_shift=0,this.y_shift=0,c?this.setOptions(c):this.reset()}return a.prototype={setOptions:function(a){Vex.Merge(this.options,a),this.reset()},setStave:function(a){return this.stave=a,this},setXShift:function(a){return this.x_shift=a,this},setYShift:function(a){return this.y_shift=a,this},setContext:function(a){return this.context=a,this},getContext:function(){return this.context},reset:function(){this.metrics=Vex.Flow.Glyph.loadMetrics(this.options.font,this.code,this.options.cache),this.scale=72*this.point/(100*this.options.font.resolution)},setWidth:function(a){return this.width=a,this},getMetrics:function(){if(!this.metrics)throw new Vex.RuntimeError("BadGlyph","Glyph "+this.code+" is not initialized.");return{x_min:this.metrics.x_min*this.scale,x_max:this.metrics.x_max*this.scale,width:this.width||(this.metrics.x_max-this.metrics.x_min)*this.scale,height:this.metrics.ha*this.scale}},render:function(b,c,d){if(!this.metrics)throw new Vex.RuntimeError("BadGlyph","Glyph "+this.code+" is not initialized.");var e=this.metrics.outline,f=this.scale;a.renderOutline(b,e,f,c,d)},renderToStave:function(b){if(!this.metrics)throw new Vex.RuntimeError("BadGlyph","Glyph "+this.code+" is not initialized.");if(!this.stave)throw new Vex.RuntimeError("GlyphError","No valid stave");if(!this.context)throw new Vex.RERR("GlyphError","No valid context");var c=this.metrics.outline,d=this.scale;a.renderOutline(this.context,c,d,b+this.x_shift,this.stave.getYForGlyphs()+this.y_shift)}},a.loadMetrics=function(a,b,c){var d=a.glyphs[b];if(!d)throw new Vex.RuntimeError("BadGlyph","Glyph "+b+" does not exist in font.");var e,f=d.x_min,g=d.x_max,h=d.ha;if(d.o)return c?d.cached_outline?e=d.cached_outline:(e=d.o.split(" "),d.cached_outline=e):(d.cached_outline&&delete d.cached_outline,e=d.o.split(" ")),{x_min:f,x_max:g,ha:h,outline:e};throw new Vex.RuntimeError("BadGlyph","Glyph "+this.code+" has no outline defined.")},a.renderOutline=function(a,b,c,d,e){var f=b.length;a.beginPath(),a.moveTo(d,e);for(var g=0;f>g;){var h=b[g++];switch(h){case"m":a.moveTo(d+b[g++]*c,e+b[g++]*-c);break;case"l":a.lineTo(d+b[g++]*c,e+b[g++]*-c);break;case"q":var i=d+b[g++]*c,j=e+b[g++]*-c;a.quadraticCurveTo(d+b[g++]*c,e+b[g++]*-c,i,j);break;case"b":var k=d+b[g++]*c,l=e+b[g++]*-c;a.bezierCurveTo(d+b[g++]*c,e+b[g++]*-c,d+b[g++]*c,e+b[g++]*-c,k,l)}}a.fill()},a}(),Vex.Flow.Stave=function(){function a(a,b,c,d){arguments.length>0&&this.init(a,b,c,d)}var b=Vex.Flow.STAVE_LINE_THICKNESS>1?Vex.Flow.STAVE_LINE_THICKNESS:0;return a.prototype={init:function(a,b,c,d){this.x=a,this.y=b,this.width=c,this.glyph_start_x=a+5,this.glyph_end_x=a+c,this.start_x=this.glyph_start_x,this.end_x=this.glyph_end_x,this.context=null,this.glyphs=[],this.end_glyphs=[],this.modifiers=[],this.measure=0,this.clef="treble",this.font={family:"sans-serif",size:8,weight:""},this.options={vertical_bar_width:10,glyph_spacing_px:10,num_lines:5,fill_style:"#999999",spacing_between_lines_px:10,space_above_staff_ln:4,space_below_staff_ln:4,top_text_position:1},this.bounds={x:this.x,y:this.y,w:this.width,h:0},Vex.Merge(this.options,d),this.resetLines(),this.modifiers.push(new Vex.Flow.Barline(Vex.Flow.Barline.type.SINGLE,this.x)),this.modifiers.push(new Vex.Flow.Barline(Vex.Flow.Barline.type.SINGLE,this.x+this.width))},resetLines:function(){this.options.line_config=[];for(var a=0;a<this.options.num_lines;a++)this.options.line_config.push({visible:!0});this.height=(this.options.num_lines+this.options.space_above_staff_ln)*this.options.spacing_between_lines_px,this.options.bottom_text_position=this.options.num_lines+1},setNoteStartX:function(a){return this.start_x=a,this},getNoteStartX:function(){var a=this.start_x;return this.modifiers[0].barline==Vex.Flow.Barline.type.REPEAT_BEGIN&&this.modifiers.length>2&&(a+=20),a},getNoteEndX:function(){return this.end_x},getTieStartX:function(){return this.start_x},getTieEndX:function(){return this.x+this.width},setContext:function(a){return this.context=a,this},getContext:function(){return this.context},getX:function(){return this.x},getNumLines:function(){return this.options.num_lines},setNumLines:function(a){return this.options.num_lines=parseInt(a,10),this.resetLines(),this},setY:function(a){return this.y=a,this},setWidth:function(a){return this.width=a,this.glyph_end_x=this.x+a,this.end_x=this.glyph_end_x,this},getWidth:function(){return this.width},setMeasure:function(a){return this.measure=a,this},setBegBarType:function(a){return(a==Vex.Flow.Barline.type.SINGLE||a==Vex.Flow.Barline.type.REPEAT_BEGIN||a==Vex.Flow.Barline.type.NONE)&&(this.modifiers[0]=new Vex.Flow.Barline(a,this.x)),this},setEndBarType:function(a){return a!=Vex.Flow.Barline.type.REPEAT_BEGIN&&(this.modifiers[1]=new Vex.Flow.Barline(a,this.x+this.width)),this},getModifierXShift:function(a){"undefined"==typeof a&&(a=this.glyphs.length-1),"number"!=typeof a&&new Vex.RERR("InvalidIndex","Must be of number type");for(var b=this.glyph_start_x,c=0,d=0;a+1>d;++d){var e=this.glyphs[d];b+=e.getMetrics().width,c+=e.getMetrics().width}return c>0&&(c+=this.options.vertical_bar_width+10),c},setRepetitionTypeLeft:function(a,b){return this.modifiers.push(new Vex.Flow.Repetition(a,this.x,b)),this},setRepetitionTypeRight:function(a,b){return this.modifiers.push(new Vex.Flow.Repetition(a,this.x,b)),this},setVoltaType:function(a,b,c){return this.modifiers.push(new Vex.Flow.Volta(a,b,this.x,c)),this},setSection:function(a,b){return this.modifiers.push(new Vex.Flow.StaveSection(a,this.x,b)),this},setTempo:function(a,b){return this.modifiers.push(new Vex.Flow.StaveTempo(a,this.x,b)),this},setText:function(a,b,c){return this.modifiers.push(new Vex.Flow.StaveText(a,b,c)),this},getHeight:function(){return this.height},getSpacingBetweenLines:function(){return this.options.spacing_between_lines_px},getBoundingBox:function(){return new Vex.Flow.BoundingBox(this.x,this.y,this.width,this.getBottomY()-this.y)},getBottomY:function(){var a=this.options,b=a.spacing_between_lines_px,c=this.getYForLine(a.num_lines)+a.space_below_staff_ln*b;return c},getBottomLineY:function(){return this.getYForLine(this.options.num_lines)},getYForLine:function(a){var c=this.options,d=c.spacing_between_lines_px,e=c.space_above_staff_ln,f=this.y+(a*d+e*d)-b/2;return f},getYForTopText:function(a){var b=a||0;return this.getYForLine(-b-this.options.top_text_position)},getYForBottomText:function(a){var b=a||0;return this.getYForLine(this.options.bottom_text_position+b)},getYForNote:function(a){var b=this.options,c=b.spacing_between_lines_px,d=b.space_above_staff_ln,e=this.y+d*c+5*c-a*c;return e},getYForGlyphs:function(){return this.getYForLine(3)},addGlyph:function(a){return a.setStave(this),this.glyphs.push(a),this.start_x+=a.getMetrics().width,this},addEndGlyph:function(a){return a.setStave(this),this.end_glyphs.push(a),this.end_x-=a.getMetrics().width,this},addModifier:function(a){return this.modifiers.push(a),a.addToStave(this,0===this.glyphs.length),this},addEndModifier:function(a){return this.modifiers.push(a),a.addToStaveEnd(this,0===this.end_glyphs.length),this},addKeySignature:function(a){return this.addModifier(new Vex.Flow.KeySignature(a)),this},addClef:function(a,b,c){return this.clef=a,this.addModifier(new Vex.Flow.Clef(a,b,c)),this},addEndClef:function(a,b,c){return this.addEndModifier(new Vex.Flow.Clef(a,b,c)),this},addTimeSignature:function(a,b){return this.addModifier(new Vex.Flow.TimeSignature(a,b)),this},addEndTimeSignature:function(a,b){this.addEndModifier(new Vex.Flow.TimeSignature(a,b))},addTrebleGlyph:function(){return this.clef="treble",this.addGlyph(new Vex.Flow.Glyph("v83",40)),this},draw:function(){if(!this.context)throw new Vex.RERR("NoCanvasContext","Can't draw stave without canvas context.");for(var a,b,c=this.options.num_lines,d=this.width,e=this.x,f=0;c>f;f++)a=this.getYForLine(f),this.context.save(),this.context.setFillStyle(this.options.fill_style),this.context.setStrokeStyle(this.options.fill_style),this.options.line_config[f].visible&&this.context.fillRect(e,a,d,Vex.Flow.STAVE_LINE_THICKNESS),this.context.restore();e=this.glyph_start_x;for(var g=0;g<this.glyphs.length;++g)b=this.glyphs[g],b.getContext()||b.setContext(this.context),b.renderToStave(e),e+=b.getMetrics().width;for(e=this.glyph_end_x,g=0;g<this.end_glyphs.length;++g)b=this.end_glyphs[g],b.getContext()||b.setContext(this.context),e-=b.getMetrics().width,b.renderToStave(e);for(g=0;g<this.modifiers.length;g++)"function"==typeof this.modifiers[g].draw&&this.modifiers[g].draw(this,this.getModifierXShift());if(this.measure>0){this.context.save(),this.context.setFont(this.font.family,this.font.size,this.font.weight);var h=this.context.measureText(""+this.measure).width;a=this.getYForTopText(0)+3,this.context.fillText(""+this.measure,this.x-h/2,a),this.context.restore()}return this},drawVertical:function(a,b){this.drawVerticalFixed(this.x+a,b)},drawVerticalFixed:function(a,b){if(!this.context)throw new Vex.RERR("NoCanvasContext","Can't draw stave without canvas context.");var c=this.getYForLine(0),d=this.getYForLine(this.options.num_lines-1);b&&this.context.fillRect(a-3,c,1,d-c+1),this.context.fillRect(a,c,1,d-c+1)},drawVerticalBar:function(a){this.drawVerticalBarFixed(this.x+a,!1)},drawVerticalBarFixed:function(a){if(!this.context)throw new Vex.RERR("NoCanvasContext","Can't draw stave without canvas context.");var b=this.getYForLine(0),c=this.getYForLine(this.options.num_lines-1);this.context.fillRect(a,b,1,c-b+1)},getConfigForLines:function(){return this.options.line_config},setConfigForLine:function(a,b){if(a>=this.options.num_lines||0>a)throw new Vex.RERR("StaveConfigError","The line number must be within the range of the number of lines in the Stave.");if(!b.hasOwnProperty("visible"))throw new Vex.RERR("StaveConfigError","The line configuration object is missing the 'visible' property.");if("boolean"!=typeof b.visible)throw new Vex.RERR("StaveConfigError","The line configuration objects 'visible' property must be true or false.");return this.options.line_config[a]=b,this},setConfigForLines:function(a){if(a.length!==this.options.num_lines)throw new Vex.RERR("StaveConfigError","The length of the lines configuration array must match the number of lines in the Stave");for(var b in a)a[b]||(a[b]=this.options.line_config[b]),Vex.Merge(this.options.line_config[b],a[b]);return this.options.line_config=a,this}},a}(),Vex.Flow.StaveConnector=function(){function a(a,b){this.init(a,b)}function b(b,c,d,e,f){if(c!==a.type.BOLD_DOUBLE_LEFT&&c!==a.type.BOLD_DOUBLE_RIGHT)throw Vex.RERR("InvalidConnector","A REPEAT_BEGIN or REPEAT_END type must be provided.");var g=3,h=3.5,i=2;c===a.type.BOLD_DOUBLE_RIGHT&&(g=-5,h=3),b.fillRect(d+g,e,1,f-e),b.fillRect(d-i,e,h,f-e)}return a.type={SINGLE_RIGHT:0,SINGLE_LEFT:1,SINGLE:1,DOUBLE:2,BRACE:3,BRACKET:4,BOLD_DOUBLE_LEFT:5,BOLD_DOUBLE_RIGHT:6,THIN_DOUBLE:7},a.prototype={init:function(b,c){this.thickness=Vex.Flow.STAVE_LINE_THICKNESS,this.width=3,this.top_stave=b,this.bottom_stave=c,this.type=a.type.DOUBLE,this.x_shift=0},setContext:function(a){return this.ctx=a,this},setType:function(b){return b>=a.type.SINGLE_RIGHT&&b<=a.type.THIN_DOUBLE&&(this.type=b),this},setText:function(a,b){return this.text=a,this.text_options={shift_x:0,shift_y:0},Vex.Merge(this.text_options,b),this.font={family:"times",size:16,weight:"normal"},this},setFont:function(a){Vex.Merge(this.font,a)},setXShift:function(a){if("number"!=typeof a)throw Vex.RERR("InvalidType","x_shift must be a Number");return this.x_shift=a,this},draw:function(){if(!this.ctx)throw new Vex.RERR("NoContext","Can't draw without a context.");var c=this.top_stave.getYForLine(0),d=this.bottom_stave.getYForLine(this.bottom_stave.getNumLines()-1)+this.thickness,e=this.width,f=this.top_stave.getX(),g=this.type===a.type.SINGLE_RIGHT||this.type===a.type.BOLD_DOUBLE_RIGHT||this.type===a.type.THIN_DOUBLE;g&&(f=this.top_stave.getX()+this.top_stave.width);var h=d-c;switch(this.type){case a.type.SINGLE:e=1;break;case a.type.SINGLE_LEFT:e=1;break;case a.type.SINGLE_RIGHT:e=1;break;case a.type.DOUBLE:f-=this.width+2;break;case a.type.BRACE:e=12;var i=this.top_stave.getX()-2,j=c,k=i,l=d,m=i-e,n=j+h/2,o=m-.9*e,p=j+.2*h,q=i+1.1*e,r=n-.135*h,s=q,t=n+.135*h,u=o,v=l-.2*h,w=m-e,x=v,y=i+.4*e,z=n+.135*h,A=y,B=n-.135*h,C=w,D=p;this.ctx.beginPath(),this.ctx.moveTo(i,j),this.ctx.bezierCurveTo(o,p,q,r,m,n),this.ctx.bezierCurveTo(s,t,u,v,k,l),this.ctx.bezierCurveTo(w,x,y,z,m,n),this.ctx.bezierCurveTo(A,B,C,D,i,j),this.ctx.fill(),this.ctx.stroke();break;case a.type.BRACKET:c-=4,d+=4,h=d-c,Vex.Flow.renderGlyph(this.ctx,f-5,c-3,40,"v1b",!0),Vex.Flow.renderGlyph(this.ctx,f-5,d+3,40,"v10",!0),f-=this.width+2;break;case a.type.BOLD_DOUBLE_LEFT:b(this.ctx,this.type,f+this.x_shift,c,d);break;case a.type.BOLD_DOUBLE_RIGHT:b(this.ctx,this.type,f,c,d);break;case a.type.THIN_DOUBLE:e=1}if(this.type!==a.type.BRACE&&this.type!==a.type.BOLD_DOUBLE_LEFT&&this.type!==a.type.BOLD_DOUBLE_RIGHT&&this.ctx.fillRect(f,c,e,h),this.type===a.type.THIN_DOUBLE&&this.ctx.fillRect(f-3,c,e,h),void 0!==this.text){this.ctx.save(),this.ctx.lineWidth=2,this.ctx.setFont(this.font.family,this.font.size,this.font.weight);var E=this.ctx.measureText(""+this.text).width,F=this.top_stave.getX()-E-24+this.text_options.shift_x,G=(this.top_stave.getYForLine(0)+this.bottom_stave.getBottomLineY())/2+this.text_options.shift_y;this.ctx.fillText(""+this.text,F,G+4),this.ctx.restore()}}},a}(),Vex.Flow.TabStave=function(){function a(a,b,c,d){arguments.length>0&&this.init(a,b,c,d)}return Vex.Inherit(a,Vex.Flow.Stave,{init:function(b,c,d,e){var f={spacing_between_lines_px:13,num_lines:6,top_text_position:1};Vex.Merge(f,e),a.superclass.init.call(this,b,c,d,f)},getYForGlyphs:function(){return this.getYForLine(2.5)},addTabGlyph:function(){var a,b;switch(this.options.num_lines){case 8:a=55,b=14;break;case 7:a=47,b=8;break;case 6:a=40,b=1;break;case 5:a=30,b=-6;break;case 4:a=23,b=-12}var c=new Vex.Flow.Glyph("v2f",a);return c.y_shift=b,this.addGlyph(c),this}}),a}(),Vex.Flow.TickContext=function(){function a(){this.init()}return a.prototype={init:function(){this.currentTick=new Vex.Flow.Fraction(0,1),this.maxTicks=new Vex.Flow.Fraction(0,1),this.minTicks=null,this.width=0,this.padding=3,this.pixelsUsed=0,this.x=0,this.tickables=[],this.notePx=0,this.extraLeftPx=0,this.extraRightPx=0,this.align_center=!1,this.tContexts=[],this.ignore_ticks=!0,this.preFormatted=!1,this.postFormatted=!1,this.context=null},setContext:function(a){return this.context=a,this},getContext:function(){return this.context},shouldIgnoreTicks:function(){return this.ignore_ticks},getWidth:function(){return this.width+2*this.padding},getX:function(){return this.x},setX:function(a){return this.x=a,this},getPixelsUsed:function(){return this.pixelsUsed},setPixelsUsed:function(a){return this.pixelsUsed=a,this},setPadding:function(a){return this.padding=a,this},getMaxTicks:function(){return this.maxTicks},getMinTicks:function(){return this.minTicks},getTickables:function(){return this.tickables},getCenterAlignedTickables:function(){return this.tickables.filter(function(a){return a.isCenterAligned()})},getMetrics:function(){return{width:this.width,notePx:this.notePx,extraLeftPx:this.extraLeftPx,extraRightPx:this.extraRightPx}},getCurrentTick:function(){return this.currentTick},setCurrentTick:function(a){this.currentTick=a,this.preFormatted=!1},getExtraPx:function(){for(var a=0,b=0,c=0,d=0,e=0;e<this.tickables.length;e++){c=Math.max(this.tickables[e].extraLeftPx,c),d=Math.max(this.tickables[e].extraRightPx,d);var f=this.tickables[e].modifierContext;f&&null!=f&&(a=Math.max(a,f.state.left_shift),b=Math.max(b,f.state.right_shift))}return{left:a,right:b,extraLeft:c,extraRight:d}},addTickable:function(a){if(!a)throw new Vex.RERR("BadArgument","Invalid tickable added.");if(!a.shouldIgnoreTicks()){this.ignore_ticks=!1;var b=a.getTicks();b.greaterThan(this.maxTicks)&&(this.maxTicks=b.clone()),null==this.minTicks?this.minTicks=b.clone():b.lessThan(this.minTicks)&&(this.minTicks=b.clone())}return a.setTickContext(this),this.tickables.push(a),this.preFormatted=!1,this},preFormat:function(){if(!this.preFormatted){for(var a=0;a<this.tickables.length;++a){var b=this.tickables[a];b.preFormat();var c=b.getMetrics();this.extraLeftPx=Math.max(this.extraLeftPx,c.extraLeftPx+c.modLeftPx),this.extraRightPx=Math.max(this.extraRightPx,c.extraRightPx+c.modRightPx),this.notePx=Math.max(this.notePx,c.noteWidth),this.width=this.notePx+this.extraLeftPx+this.extraRightPx}return this}},postFormat:function(){return this.postFormatted?this:(this.postFormatted=!0,this)}},a.getNextContext=function(a){var b=a.tContexts,c=b.indexOf(a);return b[c+1]},a}(),Vex.Flow.Tickable=function(){function a(){this.init()}return a.prototype={init:function(){this.intrinsicTicks=0,this.tickMultiplier=new Vex.Flow.Fraction(1,1),this.ticks=new Vex.Flow.Fraction(0,1),this.width=0,this.x_shift=0,this.voice=null,this.tickContext=null,this.modifierContext=null,this.modifiers=[],this.preFormatted=!1,this.postFormatted=!1,this.tuplet=null,this.align_center=!1,this.center_x_shift=0,this.ignore_ticks=!1,this.context=null},setContext:function(a){this.context=a},getBoundingBox:function(){return null},getTicks:function(){return this.ticks},shouldIgnoreTicks:function(){return this.ignore_ticks},getWidth:function(){return this.width},setXShift:function(a){this.x_shift=a},getCenterXShift:function(){return this.isCenterAligned()?this.center_x_shift:0},isCenterAligned:function(){return this.align_center},setCenterAlignment:function(a){return this.align_center=a,this},getVoice:function(){if(!this.voice)throw new Vex.RERR("NoVoice","Tickable has no voice.");return this.voice},setVoice:function(a){this.voice=a},getTuplet:function(){return this.tuplet},setTuplet:function(a){var b,c;return this.tuplet&&(b=this.tuplet.getNoteCount(),c=this.tuplet.getBeatsOccupied(),this.applyTickMultiplier(b,c)),a&&(b=a.getNoteCount(),c=a.getBeatsOccupied(),this.applyTickMultiplier(c,b)),this.tuplet=a,this},addToModifierContext:function(a){this.modifierContext=a,this.preFormatted=!1},addModifier:function(a){return this.modifiers.push(a),this.preFormatted=!1,this},setTickContext:function(a){this.tickContext=a,this.preFormatted=!1},preFormat:function(){this.preFormatted||(this.width=0,this.modifierContext&&(this.modifierContext.preFormat(),this.width+=this.modifierContext.getWidth()))},postFormat:function(){return this.postFormatted?void 0:(this.postFormatted=!0,this)},getIntrinsicTicks:function(){return this.intrinsicTicks},setIntrinsicTicks:function(a){this.intrinsicTicks=a,this.ticks=this.tickMultiplier.clone().multiply(this.intrinsicTicks)},getTickMultiplier:function(){return this.tickMultiplier},applyTickMultiplier:function(a,b){this.tickMultiplier.multiply(a,b),this.ticks=this.tickMultiplier.clone().multiply(this.intrinsicTicks)},setDuration:function(a){var b=a.numerator*(Vex.Flow.RESOLUTION/a.denominator);this.ticks=this.tickMultiplier.clone().multiply(b),this.intrinsicTicks=this.ticks.value()}},a}(),Vex.Flow.Note=function(){function a(a){arguments.length>0&&this.init(a)}return a.CATEGORY="note",Vex.Inherit(a,Vex.Flow.Tickable,{init:function(b){if(a.superclass.init.call(this),!b)throw new Vex.RuntimeError("BadArguments","Note must have valid initialization data to identify duration and type.");var c=Vex.Flow.parseNoteData(b);if(!c)throw new Vex.RuntimeError("BadArguments","Invalid note initialization object: "+JSON.stringify(b));if(this.duration=c.duration,this.dots=c.dots,this.noteType=c.type,b.duration_override?this.setDuration(b.duration_override):this.setIntrinsicTicks(c.ticks),this.modifiers=[],this.glyph=Vex.Flow.durationToGlyph(this.duration,this.noteType),this.positions&&("object"!=typeof this.positions||!this.positions.length))throw new Vex.RuntimeError("BadArguments","Note keys must be array type.");this.playNote=null,this.tickContext=null,this.modifierContext=null,this.ignore_ticks=!1,this.width=0,this.extraLeftPx=0,this.extraRightPx=0,this.x_shift=0,this.left_modPx=0,this.right_modPx=0,this.voice=null,this.preFormatted=!1,this.ys=[],b.align_center&&this.setCenterAlignment(b.align_center),this.context=null,this.stave=null,this.render_options={annotation_spacing:5,stave_padding:12}},getPlayNote:function(){return this.playNote},setPlayNote:function(a){return this.playNote=a,this},isRest:function(){return!1},addStroke:function(a,b){return b.setNote(this),b.setIndex(a),this.modifiers.push(b),this.setPreFormatted(!1),this},getStave:function(){return this.stave},setStave:function(a){return this.stave=a,this.setYs([a.getYForLine(0)]),this.context=this.stave.context,this},getCategory:function(){return this.constructor.CATEGORY},setContext:function(a){return this.context=a,this},getExtraLeftPx:function(){return this.extraLeftPx},getExtraRightPx:function(){return this.extraRightPx},setExtraLeftPx:function(a){return this.extraLeftPx=a,this},setExtraRightPx:function(a){return this.extraRightPx=a,this},shouldIgnoreTicks:function(){return this.ignore_ticks},getLineNumber:function(){return 0},getLineForRest:function(){return 0},getGlyph:function(){return this.glyph},setYs:function(a){return this.ys=a,this},getYs:function(){if(0===this.ys.length)throw new Vex.RERR("NoYValues","No Y-values calculated for this note.");return this.ys},getYForTopText:function(a){if(!this.stave)throw new Vex.RERR("NoStave","No stave attached to this note.");return this.stave.getYForTopText(a)},getBoundingBox:function(){return null},getVoice:function(){if(!this.voice)throw new Vex.RERR("NoVoice","Note has no voice.");return this.voice},setVoice:function(a){return this.voice=a,this.preFormatted=!1,this},getTickContext:function(){return this.tickContext},setTickContext:function(a){return this.tickContext=a,this.preFormatted=!1,this},getDuration:function(){return this.duration},isDotted:function(){return this.dots>0},hasStem:function(){return!1},getDots:function(){return this.dots},getNoteType:function(){return this.noteType},setBeam:function(){return this},setModifierContext:function(a){return this.modifierContext=a,this},addModifier:function(a,b){return a.setNote(this),a.setIndex(b||0),this.modifiers.push(a),this.setPreFormatted(!1),this},getModifierStartXY:function(){if(!this.preFormatted)throw new Vex.RERR("UnformattedNote","Can't call GetModifierStartXY on an unformatted note");return{x:this.getAbsoluteX(),y:this.ys[0]}},getMetrics:function(){if(!this.preFormatted)throw new Vex.RERR("UnformattedNote","Can't call getMetrics on an unformatted note.");var a=0,b=0;null!=this.modifierContext&&(a=this.modifierContext.state.left_shift,b=this.modifierContext.state.right_shift);var c=this.getWidth();return{width:c,noteWidth:c-a-b-this.extraLeftPx-this.extraRightPx,left_shift:this.x_shift,modLeftPx:a,modRightPx:b,extraLeftPx:this.extraLeftPx,extraRightPx:this.extraRightPx}},setWidth:function(a){this.width=a},getWidth:function(){if(!this.preFormatted)throw new Vex.RERR("UnformattedNote","Can't call GetWidth on an unformatted note.");return this.width+(this.modifierContext?this.modifierContext.getWidth():0)},setXShift:function(a){return this.x_shift=a,this},getX:function(){if(!this.tickContext)throw new Vex.RERR("NoTickContext","Note needs a TickContext assigned for an X-Value");return this.tickContext.getX()+this.x_shift},getAbsoluteX:function(){if(!this.tickContext)throw new Vex.RERR("NoTickContext","Note needs a TickContext assigned for an X-Value");var a=this.tickContext.getX();return this.stave&&(a+=this.stave.getNoteStartX()+this.render_options.stave_padding),this.isCenterAligned()&&(a+=this.getCenterXShift()),a},setPreFormatted:function(a){if(this.preFormatted=a,this.preFormatted){var b=this.tickContext.getExtraPx();this.left_modPx=Math.max(this.left_modPx,b.left),this.right_modPx=Math.max(this.right_modPx,b.right)}}}),a}(),Vex.Flow.NoteHead=function(){function a(){c.DEBUG&&Vex.L("Vex.Flow.NoteHead",arguments)}function b(a,b,c,d,e){var f=15+Vex.Flow.STEM_WIDTH/2;a.save(),a.setLineWidth(Vex.Flow.STEM_WIDTH);var g=!1;if(Vex.Flow.durationToNumber(b)>2&&(g=!0),g||(c-=Vex.Flow.STEM_WIDTH/2*e),a.beginPath(),a.moveTo(c,d+11),a.lineTo(c,d+1),a.lineTo(c+f,d-10),a.lineTo(c+f,d),a.lineTo(c,d+11),a.closePath(),g?a.fill():a.stroke(),Vex.Flow.durationToFraction(b).equals(.5))for(var h=[-3,-1,f+1,f+3],i=0;i<h.length;i++)a.beginPath(),a.moveTo(c+h[i],d-10),a.lineTo(c+h[i],d+11),a.stroke();a.restore()}var c=function(a){arguments.length>0&&this.init(a)};return Vex.Inherit(c,Vex.Flow.Note,{init:function(a){if(c.superclass.init.call(this,a),this.index=a.index,this.x=a.x||0,this.y=a.y||0,this.note_type=a.note_type,this.duration=a.duration,this.displaced=a.displaced||!1,this.stem_direction=a.stem_direction||Vex.Flow.StaveNote.STEM_UP,this.line=a.line,this.glyph=Vex.Flow.durationToGlyph(this.duration,this.note_type),!this.glyph)throw new Vex.RuntimeError("BadArguments","No glyph found for duration '"+this.duration+"' and type '"+this.note_type+"'");this.glyph_code=this.glyph.code_head,this.x_shift=a.x_shift,a.custom_glyph_code&&(this.custom_glyph=!0,this.glyph_code=a.custom_glyph_code),this.context=null,this.style=a.style,this.slashed=a.slashed,Vex.Merge(this.render_options,{glyph_font_scale:35,stroke_px:3}),a.glyph_font_scale&&(this.render_options.glyph_font_scale=a.glyph_font_scale),this.setWidth(this.glyph.head_width)},getCategory:function(){return"notehead"},setContext:function(a){return this.context=a,this},getWidth:function(){return this.width},isDisplaced:function(){return this.displaced===!0},getStyle:function(){return this.style},setStyle:function(a){return this.style=a,this},getGlyph:function(){return this.glyph},setX:function(a){return this.x=a,this},getY:function(){return this.y},setY:function(a){return this.y=a,this},getLine:function(){return this.line},setLine:function(a){return this.line=a,this},getAbsoluteX:function(){var a=c.superclass.getAbsoluteX,b=this.preFormatted?a.call(this):this.x;return b+(this.displaced?this.width*this.stem_direction:0)},getBoundingBox:function(){if(!this.preFormatted)throw new Vex.RERR("UnformattedNote","Can't call getBoundingBox on an unformatted note.");var a=this.stave.getSpacingBetweenLines(),b=a/2,c=this.y-b;return new Vex.Flow.BoundingBox(this.getAbsoluteX(),c,this.width,a)},applyStyle:function(a){var b=this.getStyle();return b.shadowColor&&a.setShadowColor(b.shadowColor),b.shadowBlur&&a.setShadowBlur(b.shadowBlur),b.fillStyle&&a.setFillStyle(b.fillStyle),b.strokeStyle&&a.setStrokeStyle(b.strokeStyle),this},setStave:function(a){var b=this.getLine();return this.stave=a,this.setY(a.getYForNote(b)),this.context=this.stave.context,this},preFormat:function(){if(this.preFormatted)return this;var a=this.getGlyph(),b=a.head_width+this.extraLeftPx+this.extraRightPx;return this.setWidth(b),this.setPreFormatted(!0),this},draw:function(){if(!this.context)throw new Vex.RERR("NoCanvasContext","Can't draw without a canvas context.");var c=this.context,d=this.getAbsoluteX(),e=this.y;a("Drawing note head '",this.note_type,this.duration,"' at",d,e);var f=this.stem_direction,g=this.render_options.glyph_font_scale,h=this.line;if(0>=h||h>=6){var i=e,j=Math.floor(h);0>h&&j-h==-.5?i-=5:h>6&&j-h==-.5&&(i+=5),"r"!=this.note_type&&c.fillRect(d-this.render_options.stroke_px,i,this.getGlyph().head_width+2*this.render_options.stroke_px,1)}"s"==this.note_type?b(c,this.duration,d,e,f):this.style?(c.save(),this.applyStyle(c),Vex.Flow.renderGlyph(c,d,e,g,this.glyph_code),c.restore()):Vex.Flow.renderGlyph(c,d,e,g,this.glyph_code)}}),c}(),Vex.Flow.Stem=function(){function a(){b.DEBUG&&Vex.L("Vex.Flow.Stem",arguments)}var b=function(a){arguments.length>0&&this.init(a)};return b.UP=1,b.DOWN=-1,b.WIDTH=Vex.Flow.STEM_WIDTH,b.HEIGHT=Vex.Flow.STEM_HEIGHT,b.prototype={init:function(a){this.x_begin=a.x_begin||0,this.x_end=a.x_end||0,this.y_top=a.y_top||0,this.y_bottom=a.y_bottom||0,this.y_extend=a.y_extend||0,this.stem_extension=a.stem_extension||0,this.stem_direction=a.stem_direction||0,this.hide=!1},setNoteHeadXBounds:function(a,b){return this.x_begin=a,this.x_end=b,this},setDirection:function(a){this.stem_direction=a},setExtension:function(a){this.stem_extension=a},setYBounds:function(a,b){this.y_top=a,this.y_bottom=b},getCategory:function(){return"stem"},setContext:function(a){return this.context=a,this},getHeight:function(){return(this.y_bottom-this.y_top)*this.stem_direction+(b.HEIGHT+this.stem_extension)*this.stem_direction},getBoundingBox:function(){throw new Vex.RERR("NotImplemented","getBoundingBox() not implemented.")},getExtents:function(){for(var a=[this.y_top,this.y_bottom],c=this.y_top,d=this.y_bottom,e=b.HEIGHT+this.stem_extension,f=0;f<a.length;++f){var g=a[f]+e*-this.stem_direction;this.stem_direction==b.DOWN?(c=c>g?c:g,d=d<a[f]?d:a[f]):(c=g>c?c:g,d=d>a[f]?d:a[f])}return{topY:c,baseY:d}},setStyle:function(a){return this.style=a,this},getStyle:function(){return this.style},applyStyle:function(a){var b=this.getStyle();return b&&(b.shadowColor&&a.setShadowColor(b.shadowColor),b.shadowBlur&&a.setShadowBlur(b.shadowBlur),b.strokeStyle&&a.setStrokeStyle(b.strokeStyle)),this},draw:function(){if(!this.context)throw new Vex.RERR("NoCanvasContext","Can't draw without a canvas context.");if(!this.hide){var c,d,e=this.context,f=this.stem_direction;f==b.DOWN?(c=this.x_begin+b.WIDTH/2,d=this.y_top+2):(c=this.x_end+b.WIDTH/2,d=this.y_bottom-2),d+=this.y_extend*f,a("Rendering stem - ","Top Y: ",this.y_top,"Bottom Y: ",this.y_bottom),e.save(),this.applyStyle(e),e.beginPath(),e.setLineWidth(b.WIDTH),e.moveTo(c,d),e.lineTo(c,d-this.getHeight()),e.stroke(),e.restore()}}},b}(),Vex.Flow.StemmableNote=function(){function a(){b.DEBUG&&Vex.L("Vex.Flow.StemmableNote",arguments)}var b=function(a){arguments.length>0&&this.init(a)},c=Vex.Flow.Stem;return Vex.Inherit(b,Vex.Flow.Note,{init:function(a){b.superclass.init.call(this,a),this.stem=null,this.stem_extension_override=null,this.beam=null},getStem:function(){return this.stem},setStem:function(a){return this.stem=a,this},buildStem:function(){var a=new c;return this.setStem(a),this},getStemLength:function(){return c.HEIGHT+this.getStemExtension()},getBeamCount:function(){var a=this.getGlyph();return a?a.beam_count:0},getStemMinumumLength:function(){var a=Vex.Flow.durationToFraction(this.duration),b=a.value()<=1?0:20;switch(this.duration){case"8":null==this.beam&&(b=35);break;case"16":b=null==this.beam?35:25;break;case"32":b=null==this.beam?45:35;break;case"64":b=null==this.beam?50:40;break;case"128":b=null==this.beam?55:45}return b},getStemDirection:function(){return this.stem_direction},setStemDirection:function(a){if(a||(a=c.UP),a!=c.UP&&a!=c.DOWN)throw new Vex.RERR("BadArgument","Invalid stem direction: "+a);return this.stem_direction=a,this.stem&&(this.stem.setDirection(a),this.stem.setExtension(this.getStemExtension())),this.beam=null,this.preFormatted&&this.preFormat(),this},getStemX:function(){var a=this.getAbsoluteX()+this.x_shift,b=this.getAbsoluteX()+this.x_shift+this.glyph.head_width,d=this.stem_direction==c.DOWN?a:b;return d-=c.WIDTH/2*this.stem_direction},getCenterGlyphX:function(){return this.getAbsoluteX()+this.x_shift+this.glyph.head_width/2},getStemExtension:function(){var a=this.getGlyph();return null!=this.stem_extension_override?this.stem_extension_override:a?1===this.getStemDirection()?a.stem_up_extension:a.stem_down_extension:0},setStemLength:function(a){return this.stem_extension_override=a-c.HEIGHT,this},getStemExtents:function(){if(!this.ys||0===this.ys.length)throw new Vex.RERR("NoYValues","Can't get top stem Y when note has no Y values.");for(var b=this.ys[0],d=this.ys[0],e=c.HEIGHT+this.getStemExtension(),f=0;f<this.ys.length;++f){var g=this.ys[f]+e*-this.stem_direction;this.stem_direction==c.DOWN?(b=b>g?b:g,d=d<this.ys[f]?d:this.ys[f]):(b=g>b?b:g,d=d>this.ys[f]?d:this.ys[f]),("s"==this.noteType||"x"==this.noteType)&&(b-=7*this.stem_direction,d-=7*this.stem_direction)
}return a("Stem extents: ",b,d),{topY:b,baseY:d}},setBeam:function(a){return this.beam=a,this},getYForTopText:function(a){var b=this.getStemExtents();return this.hasStem()?Vex.Min(this.stave.getYForTopText(a),b.topY-this.render_options.annotation_spacing*(a+1)):this.stave.getYForTopText(a)},getYForBottomText:function(a){var b=this.getStemExtents();return this.hasStem()?Vex.Max(this.stave.getYForTopText(a),b.baseY+this.render_options.annotation_spacing*a):this.stave.getYForBottomText(a)},postFormat:function(){return this.beam&&this.beam.postFormat(),this.postFormatted=!0,this},drawStem:function(a){if(!this.context)throw new Vex.RERR("NoCanvasContext","Can't draw without a canvas context.");this.setStem(new c(a)),this.stem.setContext(this.context).draw()}}),b}(),Vex.Flow.StaveNote=function(){function a(){b.DEBUG&&Vex.L("Vex.Flow.StaveNote",arguments)}var b=function(a){arguments.length>0&&this.init(a)};b.CATEGORY="stavenotes";var c=Vex.Flow.Stem,d=Vex.Flow.NoteHead;b.STEM_UP=c.UP,b.STEM_DOWN=c.DOWN;var e=function(a,b,c){var d=(b.isrest?0:1)*c;a.line+=d,a.max_line+=d,a.min_line+=d,a.note.setKeyLine(0,a.note.getKeyLine(0)+d)},f=function(a,b,c){var d=a.line-Vex.MidLine(b.min_line,c.max_line);a.note.setKeyLine(0,a.note.getKeyLine(0)-d),a.line-=d,a.max_line-=d,a.min_line-=d};return b.format=function(a,c){if(!a||a.length<2)return!1;if(null!=a[0].getStave())return b.formatByY(a,c);for(var d=[],g=0;g<a.length;g++){var h,i=a[g].getKeyProps(),j=i[0].line,k=i[i.length-1].line,l=a[g].getStemDirection(),m=a[g].getStemLength()/10,n=a[g].getStemMinumumLength()/10;a[g].isRest()?(h=j+a[g].glyph.line_above,k=j-a[g].glyph.line_below):(h=1==l?i[i.length-1].line+m:i[i.length-1].line,k=1==l?i[0].line:i[0].line-m),d.push({line:i[0].line,max_line:h,min_line:k,isrest:a[g].isRest(),stem_dir:l,stem_max:m,stem_min:n,voice_shift:a[g].getVoiceShiftWidth(),is_displaced:a[g].isDisplaced(),note:a[g]})}var o=d.length,p=d[0],q=o>2?d[1]:null,r=o>2?d[2]:d[1];2==o&&-1==p.stem_dir&&1==r.stem_dir&&(p=d[1],r=d[0]);var s,t=Math.max(p.voice_shift,r.voice_shift),u=0;if(2==o){var v=p.stem_dir==r.stem_dir?0:.5;return p.stem_dir==r.stem_dir&&p.min_line<=r.max_line&&(p.isrest||(s=Math.abs(p.line-(r.max_line+.5)),s=Math.max(s,p.stem_min),p.min_line=p.line-s,p.note.setStemLength(10*s))),p.min_line<=r.max_line+v&&(p.isrest?e(p,r,1):r.isrest?e(r,p,-1):(u=t,p.stem_dir==r.stem_dir?p.note.setXShift(u+3):r.note.setXShift(u))),!0}if(null!=q&&q.min_line<r.max_line+.5&&(q.isrest||(s=Math.abs(q.line-(r.max_line+.5)),s=Math.max(s,q.stem_min),q.min_line=q.line-s,q.note.setStemLength(10*s))),q.isrest&&!p.isrest&&!r.isrest&&(p.min_line<=q.max_line||q.min_line<=r.max_line)){var w=q.max_line-q.min_line,x=p.min_line-r.max_line;return x>w?f(q,p,r):(u=t+3,q.note.setXShift(u)),!0}return p.isrest&&q.isrest&&r.isrest?(e(p,q,1),e(r,q,-1),!0):(q.isrest&&p.isrest&&q.min_line<=r.max_line&&e(q,r,1),q.isrest&&r.isrest&&p.min_line<=q.max_line&&e(q,p,-1),p.isrest&&p.min_line<=q.max_line&&e(p,q,1),r.isrest&&q.min_line<=r.max_line&&e(r,q,-1),(!p.isrest&&!q.isrest&&p.min_line<=q.max_line+.5||!q.isrest&&!r.isrest&&q.min_line<=r.max_line)&&(u=t+3,q.note.setXShift(u)),!0)},b.formatByY=function(a,b){var c,d=!0;for(c=0;c<a.length;c++)d=d&&null!=a[c].getStave();if(!d)throw new Vex.RERR("Stave Missing","All notes must have a stave - Vex.Flow.ModifierContext.formatMultiVoice!");var e=0;for(c=0;c<a.length-1;c++){var f=a[c],g=a[c+1];f.getStemDirection()==Vex.Flow.StaveNote.STEM_DOWN&&(f=a[c+1],g=a[c]);var h=f.getKeyProps(),i=g.getKeyProps(),j=f.getStave().getYForLine(h[0].line),k=g.getStave().getYForLine(i[i.length-1].line),l=f.getStave().options.spacing_between_lines_px;Math.abs(j-k)==l/2&&(e=f.getVoiceShiftWidth(),g.setXShift(e))}b.right_shift+=e},b.postFormat=function(a){return a?(a.forEach(function(a){a.postFormat()}),!0):!1},Vex.Inherit(b,Vex.Flow.StemmableNote,{init:function(a){if(b.superclass.init.call(this,a),this.keys=a.keys,this.clef=a.clef,this.octave_shift=a.octave_shift,this.beam=null,this.glyph=Vex.Flow.durationToGlyph(this.duration,this.noteType),!this.glyph)throw new Vex.RuntimeError("BadArguments","Invalid note initialization data (No glyph found): "+JSON.stringify(a));this.displaced=!1,this.dot_shiftY=0,this.keyProps=[],this.use_default_head_x=!1,this.note_heads=[],this.modifiers=[],Vex.Merge(this.render_options,{glyph_font_scale:35,stroke_px:3}),this.calculateKeyProps(),this.buildStem(),a.auto_stem?this.autoStem():this.setStemDirection(a.stem_direction),this.buildNoteHeads(),this.calcExtraPx()},buildStem:function(){var a=this.getGlyph(),b=0;("v95"==a.code_head||"v3e"==a.code_head)&&(b=-4);var d=new c({y_extend:b});this.isRest()&&(d.hide=!0),this.setStem(d)},buildNoteHeads:function(){var a=this.getStemDirection(),b=this.getKeys(),e=null,f=null,g=!1,h=0,i=b.length,j=1;a===c.DOWN&&(h=b.length-1,i=-1,j=-1);for(var k=h;k!=i;k+=j){var l=this.keyProps[k],m=l.line;null===e?e=m:(f=Math.abs(e-m),0===f||.5===f?g=!g:(g=!1,this.use_default_head_x=!0)),e=m;var n=new d({duration:this.duration,note_type:this.noteType,displaced:g,stem_direction:a,custom_glyph_code:l.code,glyph_font_scale:this.render_options.glyph_font_scale,x_shift:l.shift_right,line:l.line});this.note_heads[k]=n}},autoStem:function(){var a;this.min_line=this.keyProps[0].line,this.max_line=this.keyProps[this.keyProps.length-1].line;var b=(this.min_line+this.max_line)/2;a=3>b?1:-1,this.setStemDirection(a)},calculateKeyProps:function(){for(var a=null,b=0;b<this.keys.length;++b){var c=this.keys[b];this.glyph.rest&&(this.glyph.position=c);var d={octave_shift:this.octave_shift||0},e=Vex.Flow.keyProperties(c,this.clef,d);if(!e)throw new Vex.RuntimeError("BadArguments","Invalid key for note properties: "+c);"R"===e.key&&(e.line="1"===this.duration||"w"===this.duration?4:3);var f=e.line;null===a?a=f:.5==Math.abs(a-f)&&(this.displaced=!0,e.displaced=!0,this.keyProps.length>0&&(this.keyProps[b-1].displaced=!0)),a=f,this.keyProps.push(e)}this.keyProps.sort(function(a,b){return a.line-b.line})},getBoundingBox:function(){if(!this.preFormatted)throw new Vex.RERR("UnformattedNote","Can't call getBoundingBox on an unformatted note.");var a=this.getMetrics(),b=a.width,c=this.getAbsoluteX()-a.modLeftPx-a.extraLeftPx,d=0,e=0,f=this.getStave().getSpacingBetweenLines()/2,g=2*f;if(this.isRest()){var h=this.ys[0],i=Vex.Flow.durationToFraction(this.duration);i.equals(1)||i.equals(2)?(d=h-f,e=h+f):(d=h-this.glyph.line_above*g,e=h+this.glyph.line_below*g)}else if(this.glyph.stem){var j=this.getStemExtents();j.baseY+=f*this.stem_direction,d=Vex.Min(j.topY,j.baseY),e=Vex.Max(j.topY,j.baseY)}else{d=null,e=null;for(var k=0;k<this.ys.length;++k){var l=this.ys[k];0===k?(d=l,e=l):(d=Vex.Min(l,d),e=Vex.Max(l,e)),d-=f,e+=f}}return new Vex.Flow.BoundingBox(c,d,b,e-d)},getLineNumber:function(a){if(!this.keyProps.length)throw new Vex.RERR("NoKeyProps","Can't get bottom note line, because note is not initialized properly.");for(var b=this.keyProps[0].line,c=0;c<this.keyProps.length;c++){var d=this.keyProps[c].line;a?d>b&&(b=d):b>d&&(b=d)}return b},isRest:function(){return this.glyph.rest},isChord:function(){return!this.isRest()&&this.keys.length>1},hasStem:function(){return this.glyph.stem},getYForTopText:function(a){var b=this.getStemExtents();return Vex.Min(this.stave.getYForTopText(a),b.topY-this.render_options.annotation_spacing*(a+1))},getYForBottomText:function(a){var b=this.getStemExtents();return Vex.Max(this.stave.getYForTopText(a),b.baseY+this.render_options.annotation_spacing*a)},setStave:function(a){var b=Vex.Flow.StaveNote.superclass;b.setStave.call(this,a);var c=this.note_heads.map(function(b){return b.setStave(a),b.getY()});this.setYs(c);var d=this.getNoteHeadBounds();return this.beam||this.stem.setYBounds(d.y_top,d.y_bottom),this},getKeys:function(){return this.keys},getKeyProps:function(){return this.keyProps},isDisplaced:function(){return this.displaced},setNoteDisplaced:function(a){return this.displaced=a,this},getTieRightX:function(){var a=this.getAbsoluteX();return a+=this.glyph.head_width+this.x_shift+this.extraRightPx,this.modifierContext&&(a+=this.modifierContext.getExtraRightPx()),a},getTieLeftX:function(){var a=this.getAbsoluteX();return a+=this.x_shift-this.extraLeftPx},getLineForRest:function(){var a=this.keyProps[0].line;if(this.keyProps.length>1){var b=this.keyProps[this.keyProps.length-1].line,c=Vex.Max(a,b),d=Vex.Min(a,b);a=Vex.MidLine(c,d)}return a},getModifierStartXY:function(a,b){if(!this.preFormatted)throw new Vex.RERR("UnformattedNote","Can't call GetModifierStartXY on an unformatted note");if(0===this.ys.length)throw new Vex.RERR("NoYValues","No Y-Values calculated for this note.");var c=0;return a==Vex.Flow.Modifier.Position.LEFT?c=-2:a==Vex.Flow.Modifier.Position.RIGHT?c=this.glyph.head_width+this.x_shift+2:(a==Vex.Flow.Modifier.Position.BELOW||a==Vex.Flow.Modifier.Position.ABOVE)&&(c=this.glyph.head_width/2),{x:this.getAbsoluteX()+c,y:this.ys[b]}},setStyle:function(a){this.note_heads.forEach(function(b){b.setStyle(a)},this),this.stem.setStyle(a)},setKeyStyle:function(a,b){return this.note_heads[a].setStyle(b),this},setKeyLine:function(a,b){return this.keyProps[a].line=b,this.note_heads[a].setLine(b),this},getKeyLine:function(a){return this.keyProps[a].line},addToModifierContext:function(a){this.setModifierContext(a);for(var b=0;b<this.modifiers.length;++b)this.modifierContext.addModifier(this.modifiers[b]);return this.modifierContext.addModifier(this),this.setPreFormatted(!1),this},addModifier:function(a,b){return b.setNote(this),b.setIndex(a),this.modifiers.push(b),this.setPreFormatted(!1),this},addAccidental:function(a,b){return this.addModifier(a,b)},addArticulation:function(a,b){return this.addModifier(a,b)},addAnnotation:function(a,b){return this.addModifier(a,b)},addDot:function(a){var b=new Vex.Flow.Dot;return b.setDotShiftY(this.glyph.dot_shiftY),this.dots++,this.addModifier(a,b)},addDotToAll:function(){for(var a=0;a<this.keys.length;++a)this.addDot(a);return this},getAccidentals:function(){return this.modifierContext.getModifiers("accidentals")},getDots:function(){return this.modifierContext.getModifiers("dots")},getVoiceShiftWidth:function(){return this.glyph.head_width*(this.displaced?2:1)},calcExtraPx:function(){this.setExtraLeftPx(this.displaced&&-1==this.stem_direction?this.glyph.head_width:0),this.setExtraRightPx(this.displaced&&1==this.stem_direction?this.glyph.head_width:0)},preFormat:function(){if(!this.preFormatted){this.modifierContext&&this.modifierContext.preFormat();var a=this.glyph.head_width+this.extraLeftPx+this.extraRightPx;this.glyph.flag&&null===this.beam&&1==this.stem_direction&&(a+=this.glyph.head_width),this.setWidth(a),this.setPreFormatted(!0)}},getNoteHeadBounds:function(){var a=null,b=null,c=this.stave.getNumLines(),d=1;return this.note_heads.forEach(function(e){var f=e.getLine(),g=e.getY();(null===a||a>g)&&(a=g),(null===b||g>b)&&(b=g),c=f>c?f:c,d=d>f?f:d},this),{y_top:a,y_bottom:b,highest_line:c,lowest_line:d}},getNoteHeadBeginX:function(){return this.getAbsoluteX()+this.x_shift},getNoteHeadEndX:function(){var a=this.getNoteHeadBeginX();return a+this.glyph.head_width-Vex.Flow.STEM_WIDTH/2},drawLedgerLines:function(){function a(a){h.use_default_head_x===!0&&(g=h.getAbsoluteX()+h.x_shift);var b=g-h.render_options.stroke_px,d=g+h.glyph.head_width-g+2*h.render_options.stroke_px;c.fillRect(b,a,d,1)}if(!this.isRest()){if(!this.context)throw new Vex.RERR("NoCanvasContext","Can't draw without a canvas context.");var b,c=this.context,d=this.getNoteHeadBounds(),e=d.highest_line,f=d.lowest_line,g=this.note_heads[0].getAbsoluteX(),h=this;for(b=6;e>=b;++b)a(this.stave.getYForNote(b));for(b=0;b>=f;--b)a(this.stave.getYForNote(b))}},drawModifiers:function(){if(!this.context)throw new Vex.RERR("NoCanvasContext","Can't draw without a canvas context.");for(var a=this.context,b=0;b<this.modifiers.length;b++){var c=this.modifiers[b],d=this.note_heads[c.getIndex()],e=d.getStyle();e&&(a.save(),d.applyStyle(a)),c.setContext(a),c.draw(),e&&a.restore()}},drawFlag:function(){if(!this.context)throw new Vex.RERR("NoCanvasContext","Can't draw without a canvas context.");var a=this.context,b=this.getGlyph(),d=null===this.beam,e=this.getNoteHeadBounds(),f=this.getNoteHeadBeginX(),g=this.getNoteHeadEndX();if(b.flag&&d){var h,i,j,k=this.stem.getHeight();this.getStemDirection()===c.DOWN?(h=f+1,i=e.y_top-k+2,j=b.code_flag_downstem):(h=g+1,i=e.y_bottom-k-2,j=b.code_flag_upstem),Vex.Flow.renderGlyph(a,h,i,this.render_options.glyph_font_scale,j)}},drawNoteHeads:function(){this.note_heads.forEach(function(a){a.setContext(this.context).draw()},this)},drawStem:function(a){if(!this.context)throw new Vex.RERR("NoCanvasContext","Can't draw without a canvas context.");a&&this.setStem(new c(a)),this.stem.setContext(this.context).draw()},draw:function(){if(!this.context)throw new Vex.RERR("NoCanvasContext","Can't draw without a canvas context.");if(!this.stave)throw new Vex.RERR("NoStave","Can't draw without a stave.");if(0===this.ys.length)throw new Vex.RERR("NoYValues","Can't draw note without Y values.");var b=this.getNoteHeadBeginX(),c=this.getNoteHeadEndX(),d=this.hasStem()&&!this.beam;this.note_heads.forEach(function(a){a.setX(b)},this),this.stem.setNoteHeadXBounds(b,c),a("Rendering ",this.isChord()?"chord :":"note :",this.keys),this.drawLedgerLines(),d&&this.drawStem(),this.drawNoteHeads(),this.drawFlag(),this.drawModifiers()}}),b}(),Vex.Flow.TabNote=function(){function a(a,b){arguments.length>0&&this.init(a,b)}function b(a,b){for(var c=[],d=[],e=1;a>=e;e++){var f=b.indexOf(e)>-1;f?(c.push(d),d=[]):d.push(e)}return d.length>0&&c.push(d),c}function c(a,b,c,d){var e=1!==d,f=-1!==d,g=c.getSpacingBetweenLines(),h=c.getNumLines(),i=[];return b.forEach(function(b){var j=b.indexOf(h)>-1,k=b.indexOf(1)>-1;if(!(e&&k||f&&j)){1===b.length&&b.push(b[0]);var l=[];b.forEach(function(b,e,f){var i=1===b,j=b===h,k=c.getYForLine(b-1);0!==e||i?e!==f.length-1||j||(k+=g/2-1):k-=g/2-1,l.push(k),1===d&&i?l.push(a-2):-1===d&&j&&l.push(a+2)}),i.push(l.sort(function(a,b){return a-b}))}}),i}var d=Vex.Flow.Stem;return Vex.Inherit(a,Vex.Flow.StemmableNote,{init:function(a,b){var c=Vex.Flow.TabNote.superclass;if(c.init.call(this,a),this.ghost=!1,this.positions=a.positions,Vex.Merge(this.render_options,{glyph_font_scale:30,draw_stem:b,draw_dots:b,draw_stem_through_stave:!1}),this.glyph=Vex.Flow.durationToGlyph(this.duration,this.noteType),!this.glyph)throw new Vex.RuntimeError("BadArguments","Invalid note initialization data (No glyph found): "+JSON.stringify(a));this.buildStem(),this.setStemDirection(a.stem_direction?a.stem_direction:d.UP),this.ghost=!1,this.updateWidth()},getCategory:function(){return"tabnotes"},setGhost:function(a){return this.ghost=a,this.updateWidth(),this},hasStem:function(){return this.render_options.draw_stem},getStemExtension:function(){var a=this.getGlyph();return null!=this.stem_extension_override?this.stem_extension_override:a?1===this.getStemDirection()?a.tabnote_stem_up_extension:a.tabnote_stem_down_extension:0},addDot:function(){var a=new Vex.Flow.Dot;return this.dots++,this.addModifier(a,0)},updateWidth:function(){this.glyphs=[],this.width=0;for(var a=0;a<this.positions.length;++a){var b=this.positions[a].fret;this.ghost&&(b="("+b+")");var c=Vex.Flow.tabToGlyph(b);this.glyphs.push(c),this.width=c.width>this.width?c.width:this.width}},setStave:function(a){var b=Vex.Flow.TabNote.superclass;b.setStave.call(this,a),this.context=a.context,this.width=0;var c;if(this.context)for(c=0;c<this.glyphs.length;++c){var d=""+this.glyphs[c].text;"X"!=d.toUpperCase()&&(this.glyphs[c].width=this.context.measureText(d).width),this.width=this.glyphs[c].width>this.width?this.glyphs[c].width:this.width}var e=[];for(c=0;c<this.positions.length;++c){var f=this.positions[c].str;e.push(this.stave.getYForLine(f-1))}return this.setYs(e)},getPositions:function(){return this.positions},addToModifierContext:function(a){this.setModifierContext(a);for(var b=0;b<this.modifiers.length;++b)this.modifierContext.addModifier(this.modifiers[b]);return this.modifierContext.addModifier(this),this.preFormatted=!1,this},getTieRightX:function(){var a=this.getAbsoluteX(),b=this.glyph.head_width;return a+=b/2,a+=-this.width/2+this.width+2},getTieLeftX:function(){var a=this.getAbsoluteX(),b=this.glyph.head_width;return a+=b/2,a-=this.width/2+2},getModifierStartXY:function(a,b){if(!this.preFormatted)throw new Vex.RERR("UnformattedNote","Can't call GetModifierStartXY on an unformatted note");if(0===this.ys.length)throw new Vex.RERR("NoYValues","No Y-Values calculated for this note.");var c=0;if(a==Vex.Flow.Modifier.Position.LEFT)c=-2;else if(a==Vex.Flow.Modifier.Position.RIGHT)c=this.width+2;else if(a==Vex.Flow.Modifier.Position.BELOW||a==Vex.Flow.Modifier.Position.ABOVE){var d=this.glyph.head_width;c=d/2}return{x:this.getAbsoluteX()+c,y:this.ys[b]}},getLineForRest:function(){return this.positions[0].str},preFormat:function(){this.preFormatted||(this.modifierContext&&this.modifierContext.preFormat(),this.setPreFormatted(!0))},getStemX:function(){return this.getCenterGlyphX()},getStemY:function(){var a=this.stave.getNumLines(),b=-.5,c=a-.5,e=d.UP===this.stem_direction?b:c;return this.stave.getYForLine(e)},getStemExtents:function(){var a=this.getStemY(),b=a+d.HEIGHT*-this.stem_direction;return{topY:b,baseY:a}},drawFlag:function(){var a=null==this.beam&&this.render_options.draw_stem,b=null==this.beam&&a;if(this.glyph.flag&&b){var c,e=this.getStemX()+1,f=this.getStemY()-this.stem.getHeight();c=this.stem_direction==d.DOWN?this.glyph.code_flag_downstem:this.glyph.code_flag_upstem,Vex.Flow.renderGlyph(this.context,e,f,this.render_options.glyph_font_scale,c)}},drawModifiers:function(){this.modifiers.forEach(function(a){("dots"!==a.getCategory()||this.render_options.draw_dots)&&(a.setContext(this.context),a.draw())},this)},drawStemThrough:function(){var a=this.getStemX(),e=this.getStemY(),f=this.context,g=this.render_options.draw_stem_through_stave,h=this.render_options.draw_stem;if(h&&g){var i=this.stave.getNumLines(),j=this.positions.map(function(a){return a.str}),k=b(i,j),l=c(e,k,this.getStave(),this.getStemDirection());this.beam&&1!==this.getStemDirection()||(a+=d.WIDTH/2),f.save(),f.setLineWidth(d.WIDTH),l.forEach(function(b){f.beginPath(),f.moveTo(a,b[0]),f.lineTo(a,b[b.length-1]),f.stroke(),f.closePath()}),f.restore()}},drawPositions:function(){for(var a,b=this.context,c=this.getAbsoluteX(),d=this.ys,e=0;e<this.positions.length;++e){a=d[e];var f=this.glyphs[e],g=this.glyph.head_width,h=c+g/2-f.width/2;if(b.clearRect(h-2,a-3,f.width+4,6),f.code)Vex.Flow.renderGlyph(b,h,a+5+f.shift_y,this.render_options.glyph_font_scale,f.code);else{var i=f.text.toString();b.fillText(i,h,a+5)}}},draw:function(){if(!this.context)throw new Vex.RERR("NoCanvasContext","Can't draw without a canvas context.");if(!this.stave)throw new Vex.RERR("NoStave","Can't draw without a stave.");if(0===this.ys.length)throw new Vex.RERR("NoYValues","Can't draw note without Y values.");var a=null==this.beam&&this.render_options.draw_stem;this.drawPositions(),this.drawStemThrough();var b=this.getStemX(),c=this.getStemY();a&&this.drawStem({x_begin:b,x_end:b,y_top:c,y_bottom:c,y_extend:0,stem_extension:this.getStemExtension(),stem_direction:this.stem_direction}),this.drawFlag(),this.drawModifiers()}}),a}(),Vex.Flow.GhostNote=function(){function a(a){arguments.length>0&&this.init(a)}return Vex.Inherit(a,Vex.Flow.StemmableNote,{init:function(b){if(!b)throw new Vex.RuntimeError("BadArguments","Ghost note must have valid initialization data to identify duration.");var c;if("string"==typeof b)c={duration:b};else{if("object"!=typeof b)throw new Vex.RuntimeError("BadArguments","Ghost note must have valid initialization data to identify duration.");c=b}a.superclass.init.call(this,c),this.setWidth(0)},isRest:function(){return!0},setStave:function(b){a.superclass.setStave.call(this,b)},addToModifierContext:function(){return this},preFormat:function(){return this.setPreFormatted(!0),this},draw:function(){if(!this.stave)throw new Vex.RERR("NoStave","Can't draw without a stave.");for(var a=0;a<this.modifiers.length;++a){var b=this.modifiers[a];b.setContext(this.context),b.draw()}}}),a}(),Vex.Flow.ClefNote=function(){function a(a,b,c){this.init(a,b,c)}return Vex.Inherit(a,Vex.Flow.Note,{init:function(b,c,d){a.superclass.init.call(this,{duration:"b"}),this.setClef(b,c,d),this.ignore_ticks=!0},setClef:function(a,b,c){return this.clef_obj=new Vex.Flow.Clef(a,b,c),this.clef=this.clef_obj.clef,this.glyph=new Vex.Flow.Glyph(this.clef.code,this.clef.point),this.setWidth(this.glyph.getMetrics().width),this},getClef:function(){return this.clef},setStave:function(a){var b=Vex.Flow.ClefNote.superclass;b.setStave.call(this,a)},getBoundingBox:function(){return new Vex.Flow.BoundingBox(0,0,0,0)},addToModifierContext:function(){return this},getCategory:function(){return"clefnote"},preFormat:function(){return this.setPreFormatted(!0),this},draw:function(){if(!this.stave)throw new Vex.RERR("NoStave","Can't draw without a stave.");this.glyph.getContext()||this.glyph.setContext(this.context);var a=this.getAbsoluteX();if(this.glyph.setStave(this.stave),this.glyph.setYShift(this.stave.getYForLine(this.clef.line)-this.stave.getYForGlyphs()),this.glyph.renderToStave(a),void 0!==this.clef_obj.annotation){var b=new Vex.Flow.Glyph(this.clef_obj.annotation.code,this.clef_obj.annotation.point);b.getContext()||b.setContext(this.context),b.setStave(this.stave),b.setYShift(this.stave.getYForLine(this.clef_obj.annotation.line)-this.stave.getYForGlyphs()),b.setXShift(this.clef_obj.annotation.x_shift),b.renderToStave(a)}}}),a}(),Vex.Flow.TimeSigNote=function(){function a(a,b){arguments.length>0&&this.init(a,b)}return Vex.Inherit(a,Vex.Flow.Note,{init:function(b,c){a.superclass.init.call(this,{duration:"b"});var d=new Vex.Flow.TimeSignature(b,c);this.timeSig=d.getTimeSig(),this.setWidth(this.timeSig.glyph.getMetrics().width),this.ignore_ticks=!0},setStave:function(a){var b=Vex.Flow.TimeSigNote.superclass;b.setStave.call(this,a)},getBoundingBox:function(){return new Vex.Flow.BoundingBox(0,0,0,0)},addToModifierContext:function(){return this},preFormat:function(){return this.setPreFormatted(!0),this},draw:function(){if(!this.stave)throw new Vex.RERR("NoStave","Can't draw without a stave.");this.timeSig.glyph.getContext()||this.timeSig.glyph.setContext(this.context),this.timeSig.glyph.setStave(this.stave),this.timeSig.glyph.setYShift(this.stave.getYForLine(this.timeSig.line)-this.stave.getYForGlyphs()),this.timeSig.glyph.renderToStave(this.getAbsoluteX())}}),a}(),Vex.Flow.Beam=function(){function a(a,b){arguments.length>0&&this.init(a,b)}function b(a){var b=0;return a.forEach(function(a){a.keyProps&&a.keyProps.forEach(function(a){b+=a.line-3})}),b>=0?c.DOWN:c.UP}var c=Vex.Flow.Stem;return a.prototype={init:function(a,d){if(!a||a==[])throw new Vex.RuntimeError("BadArguments","No notes provided for beam.");if(1==a.length)throw new Vex.RuntimeError("BadArguments","Too few notes for beam.");if(this.ticks=a[0].getIntrinsicTicks(),this.ticks>=Vex.Flow.durationToTicks("4"))throw new Vex.RuntimeError("BadArguments","Beams can only be applied to notes shorter than a quarter note.");var e,f;for(this.stem_direction=c.UP,e=0;e<a.length;++e)if(f=a[e],f.hasStem()){this.stem_direction=f.getStemDirection();break}var g=this.stem_direction;if(d&&"stavenotes"===a[0].getCategory())g=b(a);else if(d&&"tabnotes"===a[0].getCategory()){var h=a.reduce(function(a,b){return a+b.stem_direction},0);g=h>-1?c.UP:c.DOWN}for(e=0;e<a.length;++e)f=a[e],d&&(f.setStemDirection(g),this.stem_direction=g),f.setBeam(this);this.postFormatted=!1,this.notes=a,this.beam_count=this.getBeamCount(),this.break_on_indices=[],this.render_options={beam_width:5,max_slope:.25,min_slope:-.25,slope_iterations:20,slope_cost:100,show_stemlets:!1,stemlet_extension:7,partial_beam_length:10}},setContext:function(a){return this.context=a,this},getNotes:function(){return this.notes},getBeamCount:function(){var a=this.notes.map(function(a){return a.getGlyph().beam_count}),b=a.reduce(function(a,b){return b>a?b:a});return b},breakSecondaryAt:function(a){return this.break_on_indices=a,this},getSlopeY:function(a,b,c,d){return c+(a-b)*d},calculateSlope:function(){for(var a=this.notes[0],b=a.getStemExtents().topY,c=a.getStemX(),d=(this.render_options.max_slope-this.render_options.min_slope)/this.render_options.slope_iterations,e=Number.MAX_VALUE,f=0,g=0,h=this.render_options.min_slope;h<=this.render_options.max_slope;h+=d){for(var i=0,j=0,k=1;k<this.notes.length;++k){var l=this.notes[k],m=l.getStemX(),n=l.getStemExtents().topY,o=this.getSlopeY(m,c,b,h)+j;if(n*this.stem_direction<o*this.stem_direction){var p=Math.abs(n-o);j+=p*-this.stem_direction,i+=p*k}else i+=(n-o)*this.stem_direction}var q=this.notes[this.notes.length-1],r=(q.getStemExtents().topY-b)/(q.getStemX()-c),s=r/2,t=Math.abs(s-h),u=this.render_options.slope_cost*t+Math.abs(i);e>u&&(e=u,f=h,g=j)}this.slope=f,this.y_shift=g},applyStemExtensions:function(){for(var a=this.notes[0],b=a.getStemExtents().topY,d=a.getStemX(),e=0;e<this.notes.length;++e){var f=this.notes[e],g=f.getStemX(),h=f.getStemExtents(),i=h.baseY,j=h.topY;i+=this.stem_direction*f.glyph.stem_offset;var k=Vex.Flow.STEM_WIDTH;if(f.hasStem()){var l=this.getSlopeY(g,d,b,this.slope)+this.y_shift;f.setStem(new Vex.Flow.Stem({x_begin:g-Vex.Flow.STEM_WIDTH/2,x_end:g,y_top:1===this.stem_direction?j:i,y_bottom:1===this.stem_direction?i:j,y_extend:k,stem_extension:Math.abs(j-l)-c.HEIGHT-1,stem_direction:this.stem_direction}))}else if(f.isRest()&&this.render_options.show_stemlets){var m=f.getCenterGlyphX(),n=this.render_options.beam_width,o=(this.beam_count-1)*n*1.5+n,p=o-k+this.render_options.stemlet_extension,q=this.getSlopeY(m,d,b,this.slope)+this.y_shift,r=q+Vex.Flow.Stem.HEIGHT*this.stem_direction,s=q+p*this.stem_direction;f.setStem(new Vex.Flow.Stem({x_begin:m,x_end:m,y_bottom:1===this.stem_direction?s:r,y_top:1===this.stem_direction?r:s,y_extend:k,stem_extension:-1,stem_direction:this.stem_direction}))}}},getBeamLines:function(a){function b(b,c){var d=0;c&&b&&(d=b.getBeamCount()-c.getBeamCount());var e="8"!==a&&d>0,f="8"!==a&&0>d;return{left:e,right:f}}for(var c,d=[],e=!1,f=this.render_options.partial_beam_length,g=0;g<this.notes.length;++g){var h=this.notes[g],i=this.notes[g-1],j=this.notes[g+1],k=h.getIntrinsicTicks(),l=b(i,j),m=h.isRest()?h.getCenterGlyphX():h.getStemX();if(k<Vex.Flow.durationToTicks(a))if(e){c=d[d.length-1],c.end=m;var n=-1!==this.break_on_indices.indexOf(g),o=parseInt(a,10)>=8;n&&o&&(e=!1)}else{var p={start:m,end:null};l.left&&(p.end=m-f),d.push(p),e=!0}else e&&(c=d[d.length-1],null==c.end&&(c.end=c.start+f)),e=!1}return e===!0&&(c=d[d.length-1],null==c.end&&(c.end=c.start-f)),d},drawStems:function(){this.notes.forEach(function(a){a.getStem()&&a.getStem().setContext(this.context).draw()},this)},drawBeamLines:function(){if(!this.context)throw new Vex.RERR("NoCanvasContext","Can't draw without a canvas context.");for(var a=["4","8","16","32","64"],b=this.notes[0],d=this.notes[this.notes.length-1],e=b.getStemExtents().topY,f=d.getStemExtents().topY,g=b.getStemX(),h=this.render_options.beam_width*this.stem_direction,i=0;i<a.length;++i){for(var j=a[i],k=this.getBeamLines(j),l=0;l<k.length;++l){var m=k[l],n=m.start-(this.stem_direction==c.DOWN?Vex.Flow.STEM_WIDTH/2:0),o=this.getSlopeY(n,g,e,this.slope),p=m.end+(1==this.stem_direction?Vex.Flow.STEM_WIDTH/3:-Vex.Flow.STEM_WIDTH/3),q=this.getSlopeY(p,g,e,this.slope);this.context.beginPath(),this.context.moveTo(n,o+this.y_shift),this.context.lineTo(n,o+h+this.y_shift),this.context.lineTo(p+1,q+h+this.y_shift),this.context.lineTo(p+1,q+this.y_shift),this.context.closePath(),this.context.fill()}e+=1.5*h,f+=1.5*h}},preFormat:function(){return this},postFormat:function(){this.postFormatted||(this.calculateSlope(),this.applyStemExtensions(),this.postFormatted=!0)},draw:function(){if(!this.context)throw new Vex.RERR("NoCanvasContext","Can't draw without a canvas context.");if(!this.unbeamable)return this.postFormatted||this.postFormat(),this.drawStems(),this.drawBeamLines(),!0}},a.getDefaultBeamGroups=function(a){a&&"c"!=a||(a="4/4");var b={"1/2":["1/2"],"2/2":["1/2"],"3/2":["1/2"],"4/2":["1/2"],"1/4":["1/4"],"2/4":["1/4"],"3/4":["1/4"],"4/4":["1/4"],"1/8":["1/8"],"2/8":["2/8"],"3/8":["3/8"],"4/8":["2/8"],"1/16":["1/16"],"2/16":["2/16"],"3/16":["3/16"],"4/16":["2/16"]},c=Vex.Flow.Fraction,d=b[a];if(d)return d.map(function(a){return(new c).parse(a)});var e=parseInt(a.split("/")[0],10),f=parseInt(a.split("/")[1],10),g=e%3===0;return g?[new c(3,f)]:f>4?[new c(2,f)]:4>=f?[new c(1,f)]:void 0},a.applyAndGetBeams=function(b,c,d){return a.generateBeams(b.getTickables(),{groups:d,stem_direction:c})},a.generateBeams=function(a,d){function e(a){return a.reduce(function(a,b){return b.getTicks().clone().add(a)},new Vex.Flow.Fraction(0,1))}function f(){n.length-1>p?p+=1:p=0}function g(){var a=[];o.forEach(function(b){if(a=[],b.shouldIgnoreTicks())return q.push(r),void(r=a);r.push(b);var c=n[p].clone(),d=e(r),g=Vex.Flow.durationToNumber(b.duration)<8;g&&b.tuplet&&(c.numerator*=2),d.greaterThan(c)?(g||a.push(r.pop()),q.push(r),r=a,f()):d.equals(c)&&(q.push(r),r=a,f())}),r.length>0&&q.push(r)}function h(){return q.filter(function(a){if(a.length>1){var b=!0;return a.forEach(function(a){a.getIntrinsicTicks()>=Vex.Flow.durationToTicks("4")&&(b=!1)}),b}return!1})}function i(){var a=[];q.forEach(function(b){var c=[];b.forEach(function(b,e,f){var g=0===e||e===f.length-1,h=f[e-1],i=!d.beam_rests&&b.isRest(),j=d.beam_rests&&d.beam_middle_only&&b.isRest()&&g,k=!1;if(d.maintain_stem_directions&&h&&!b.isRest()&&!h.isRest()){var l=h.getStemDirection(),m=b.getStemDirection();k=m!==l}var n=parseInt(b.duration,10)<8,o=i||j||k||n;o?(c.length>0&&a.push(c),c=k?[b]:[]):c.push(b)}),c.length>0&&a.push(c)}),q=a}function j(){q.forEach(function(a){var e;if(d.maintain_stem_directions){var f=k(a);e=f?f.getStemDirection():c.UP}else e=d.stem_direction?d.stem_direction:b(a);l(a,e)})}function k(a){for(var b=0;b<a.length;b++){var c=a[b];if(!c.isRest())return c}return!1}function l(a,b){a.forEach(function(a){a.setStemDirection(b)})}function m(){return q.filter(function(a){return a[0]?a[0].tuplet:void 0})}d||(d={}),d.groups&&d.groups.length||(d.groups=[new Vex.Flow.Fraction(2,8)]);var n=d.groups.map(function(a){if(!a.multiply)throw new Vex.RuntimeError("InvalidBeamGroups","The beam groups must be an array of Vex.Flow.Fractions");return a.clone().multiply(Vex.Flow.RESOLUTION,1)}),o=a,p=0,q=[],r=[];g(),i(),j();var s=h(),t=m(),u=[];return s.forEach(function(a){var b=new Vex.Flow.Beam(a);d.show_stemlets&&(b.render_options.show_stemlets=!0),u.push(b)}),t.forEach(function(a){for(var b=a[0],d=0;d<a.length;++d)if(a[d].hasStem()){b=a[d];break}var e=b.tuplet;b.beam&&e.setBracketed(!1),b.stem_direction==c.DOWN&&e.setTupletLocation(Vex.Flow.Tuplet.LOCATION_BOTTOM)}),u},a}(),Vex.Flow.Voice=function(){function a(a){arguments.length>0&&this.init(a)}return a.Mode={STRICT:1,SOFT:2,FULL:3},a.prototype={init:function(a){this.time=Vex.Merge({num_beats:4,beat_value:4,resolution:Vex.Flow.RESOLUTION},a),this.totalTicks=new Vex.Flow.Fraction(this.time.num_beats*(this.time.resolution/this.time.beat_value),1),this.resolutionMultiplier=1,this.tickables=[],this.ticksUsed=new Vex.Flow.Fraction(0,1),this.smallestTickCount=this.totalTicks.clone(),this.largestTickWidth=0,this.stave=null,this.boundingBox=null,this.mode=Vex.Flow.Voice.Mode.STRICT,this.voiceGroup=null},getTotalTicks:function(){return this.totalTicks},getTicksUsed:function(){return this.ticksUsed},getLargestTickWidth:function(){return this.largestTickWidth},getSmallestTickCount:function(){return this.smallestTickCount},getTickables:function(){return this.tickables},getMode:function(){return this.mode},setMode:function(a){return this.mode=a,this},getResolutionMultiplier:function(){return this.resolutionMultiplier},getActualResolution:function(){return this.resolutionMultiplier*this.time.resolution},setStave:function(a){return this.stave=a,this.boundingBox=null,this
},getBoundingBox:function(){var a,b,c,d;if(!this.boundingBox){if(!this.stave)throw Vex.RERR("NoStave","Can't get bounding box without stave.");for(a=this.stave,b=null,d=0;d<this.tickables.length;++d)this.tickables[d].setStave(a),c=this.tickables[d].getBoundingBox(),c&&(b=b?b.mergeWith(c):c);this.boundingBox=b}return this.boundingBox},getVoiceGroup:function(){if(!this.voiceGroup)throw new Vex.RERR("NoVoiceGroup","No voice group for voice.");return this.voiceGroup},setVoiceGroup:function(a){return this.voiceGroup=a,this},setStrict:function(a){return this.mode=a?Vex.Flow.Voice.Mode.STRICT:Vex.Flow.Voice.Mode.SOFT,this},isComplete:function(){return this.mode==Vex.Flow.Voice.Mode.STRICT||this.mode==Vex.Flow.Voice.Mode.FULL?this.ticksUsed.equals(this.totalTicks):!0},addTickable:function(a){if(!a.shouldIgnoreTicks()){var b=a.getTicks();if(this.ticksUsed.add(b),(this.mode==Vex.Flow.Voice.Mode.STRICT||this.mode==Vex.Flow.Voice.Mode.FULL)&&this.ticksUsed.greaterThan(this.totalTicks))throw this.totalTicks.subtract(b),new Vex.RERR("BadArgument","Too many ticks.");b.lessThan(this.smallestTickCount)&&(this.smallestTickCount=b.clone()),this.resolutionMultiplier=this.ticksUsed.denominator,this.totalTicks.add(0,this.ticksUsed.denominator)}return this.tickables.push(a),a.setVoice(this),this},addTickables:function(a){for(var b=0;b<a.length;++b)this.addTickable(a[b]);return this},preFormat:function(){return this.preFormatted?void 0:(this.tickables.forEach(function(a){a.getStave()||a.setStave(this.stave)},this),this.preFormatted=!0,this)},draw:function(a,b){for(var c=null,d=0;d<this.tickables.length;++d){var e=this.tickables[d];if(b&&e.setStave(b),!e.getStave())throw new Vex.RuntimeError("MissingStave","The voice cannot draw tickables without staves.");if(0===d&&(c=e.getBoundingBox()),d>0&&c){var f=e.getBoundingBox();f&&c.mergeWith(f)}e.setContext(a),e.draw()}this.boundingBox=c}},a}(),Vex.Flow.VoiceGroup=function(){function a(){this.init()}return a.prototype={init:function(){this.voices=[],this.modifierContexts=[]},getVoices:function(){return this.voices},getModifierContexts:function(){return this.modifierContexts},addVoice:function(a){if(!a)throw new Vex.RERR("BadArguments","Voice cannot be null.");this.voices.push(a),a.setVoiceGroup(this)}},a}(),Vex.Flow.Modifier=function(){function a(){this.constructor=a,this.init()}function b(){a.DEBUG&&Vex.L("Vex.Flow.Modifier",arguments)}return a.CATEGORY="none",a.Position={LEFT:1,RIGHT:2,ABOVE:3,BELOW:4},a.prototype={init:function(){this.width=0,this.context=null,this.note=null,this.index=null,this.text_line=0,this.position=a.Position.LEFT,this.modifier_context=null,this.x_shift=0,this.y_shift=0,b("Created new modifier")},getCategory:function(){return this.constructor.CATEGORY},getWidth:function(){return this.width},setWidth:function(a){return this.width=a,this},getNote:function(){return this.note},setNote:function(a){return this.note=a,this},getIndex:function(){return this.index},setIndex:function(a){return this.index=a,this},getContext:function(){return this.context},setContext:function(a){return this.context=a,this},getModifierContext:function(){return this.modifier_context},setModifierContext:function(a){return this.modifier_context=a,this},getPosition:function(){return this.position},setPosition:function(a){return this.position=a,this},setTextLine:function(a){return this.text_line=a,this},setYShift:function(a){return this.y_shift=a,this},setXShift:function(b){this.x_shift=0,this.position==a.Position.LEFT?this.x_shift-=b:this.x_shift+=b},draw:function(){if(!this.context)throw new Vex.RERR("NoCanvasContext","Can't draw without a canvas context.");throw new Vex.RERR("MethodNotImplemented","Draw() not implemented for this modifier.")}},a}(),Vex.Flow.ModifierContext=function(){function a(){this.modifiers={},this.preFormatted=!1,this.postFormatted=!1,this.width=0,this.spacing=0,this.state={left_shift:0,right_shift:0,text_line:0},this.PREFORMAT=[Vex.Flow.StaveNote,Vex.Flow.Dot,Vex.Flow.FretHandFinger,Vex.Flow.Accidental,Vex.Flow.GraceNoteGroup,Vex.Flow.Stroke,Vex.Flow.StringNumber,Vex.Flow.Articulation,Vex.Flow.Ornament,Vex.Flow.Annotation,Vex.Flow.Bend,Vex.Flow.Vibrato],this.POSTFORMAT=[Vex.Flow.StaveNote]}function b(){a.DEBUG&&Vex.L("Vex.Flow.ModifierContext",arguments)}return a.prototype={addModifier:function(a){var b=a.getCategory();return this.modifiers[b]||(this.modifiers[b]=[]),this.modifiers[b].push(a),a.setModifierContext(this),this.preFormatted=!1,this},getModifiers:function(a){return this.modifiers[a]},getWidth:function(){return this.width},getExtraLeftPx:function(){return this.state.left_shift},getExtraRightPx:function(){return this.state.right_shift},getState:function(){return this.state},getMetrics:function(){if(!this.formatted)throw new Vex.RERR("UnformattedModifier","Unformatted modifier has no metrics.");return{width:this.state.left_shift+this.state.right_shift+this.spacing,spacing:this.spacing,extra_left_px:this.state.left_shift,extra_right_px:this.state.right_shift}},preFormat:function(){this.preFormatted||(this.PREFORMAT.forEach(function(a){b("Preformatting ModifierContext: ",a.CATEGORY),a.format(this.getModifiers(a.CATEGORY),this.state,this)},this),this.width=this.state.left_shift+this.state.right_shift,this.preFormatted=!0)},postFormat:function(){this.postFormatted||this.POSTFORMAT.forEach(function(a){b("Postformatting ModifierContext: ",a.CATEGORY),a.postFormat(this.getModifiers(a.CATEGORY),this)},this)}},a}(),Vex.Flow.Accidental=function(){function a(a){arguments.length>0&&this.init(a)}function b(){a.DEBUG&&Vex.L("Vex.Flow.Accidental",arguments)}a.CATEGORY="accidentals";var c=Vex.Flow.Modifier;return a.format=function(a,c){var d=c.left_shift,e=2;if(!a||0===a.length)return!1;var f,g,h,i=[],j=!1,k=null,l=0;for(f=0;f<a.length;++f){g=a[f];var m=g.getNote(),n=m.getStave(),o=m.getKeyProps()[g.getIndex()];if(m!=k){for(var p=0;p<m.keys.length;++p)h=m.getKeyProps()[p],l=h.displaced?m.getExtraLeftPx():l;k=m}if(null!==n){j=!0;var q=n.options.spacing_between_lines_px,r=n.getYForLine(o.line),s=Math.round(r/q*2)/2;i.push({y:r,line:s,shift:l,acc:g,lineSpace:q})}else i.push({line:o.line,shift:l,acc:g})}i.sort(function(a,b){return b.line-a.line});var t=[],u=0,v=null;for(f=0;f<i.length;f++)g=i[f],(null===v||v!=g.line)&&t.push({line:g.line,flat_line:!0,dbl_sharp_line:!0,num_acc:0,width:0}),"b"!=g.acc.type&&"bb"!=g.acc.type&&(t[t.length-1].flat_line=!1),"##"!=g.acc.type&&(t[t.length-1].dbl_sharp_line=!1),t[t.length-1].num_acc++,t[t.length-1].width+=g.acc.getWidth()+e,u=g.shift>u?g.shift:u,v=g.line;var w=0;for(f=0;f<t.length;f++){for(var x=!1,y=f,z=f;z+1<t.length&&!x;)this.checkCollision(t[z],t[z+1])?z++:x=!0;var A=z-y+1,B=this.checkCollision(t[y],t[z])?"a":"b",C=this.checkCollision;switch(A){case 3:"a"==B&&t[y+1].line-t[y+2].line==.5&&t[y].line-t[y+1].line!=.5&&(B="second_on_bottom");break;case 4:C(t[y],t[y+2])||C(t[y+1],t[y+3])||(B="spaced_out_tetrachord");break;case 5:"b"!=B||C(t[y+1],t[y+3])||(B="spaced_out_pentachord"),"spaced_out_pentachord"!=B||C(t[y],t[y+2])||C(t[y+2],t[y+4])||(B="very_spaced_out_pentachord");break;case 6:C(t[y],t[y+3])||C(t[y+1],t[y+4])||C(t[y+2],t[y+5])||(B="spaced_out_hexachord"),C(t[y],t[y+2])||C(t[y+2],t[y+4])||C(t[y+1],t[y+3])||C(t[y+3],t[y+5])||(B="very_spaced_out_hexachord")}var D,E;if(A>=7){for(var F=2,G=!0;G===!0;){G=!1;a:for(var H=0;H+F<t.length;H++)if(this.checkCollision(t[H],t[H+F])){G=!0,F++;break a}}for(D=f;z>=D;D++)E=(D-f)%F+1,t[D].column=E,w=w>E?w:E}else for(D=f;z>=D;D++)E=Vex.Flow.accidentalColumnsTable[A][B][D-f],t[D].column=E,w=w>E?w:E;f=z}var I=[],J=[];for(f=0;w>=f;f++)I[f]=0,J[f]=0;for(I[0]=u+d,J[0]=u+d,t.forEach(function(a){a.width>I[a.column]&&(I[a.column]=a.width)}),f=1;f<I.length;f++)J[f]=I[f]+J[f-1];var K=0;t.forEach(function(a){var c=0,d=K+a.num_acc;for(K;d>K;K++){var f=J[a.column-1]+c;i[K].acc.setXShift(f),c+=i[K].acc.getWidth()+e,b("Line, acc_count, shift: ",a.line,K,f)}}),c.left_shift+=J[J.length-1]},a.checkCollision=function(a,c){var d=c.line-a.line,e=3;d>0?(e=c.flat_line||c.dbl_sharp_line?2.5:3,a.dbl_sharp_line&&(d-=.5)):(e=a.flat_line||a.dbl_sharp_line?2.5:3,c.dbl_sharp_line&&(d-=.5));var f=Math.abs(d)<e;return b("Line_1, Line_2, Collision: ",a.line,c.line,f),f},Vex.Inherit(a,c,{init:function(d){if(a.superclass.init.call(this),b("New accidental: ",d),this.note=null,this.index=null,this.type=d,this.position=c.Position.LEFT,this.render_options={font_scale:38,stroke_px:3},this.accidental=Vex.Flow.accidentalCodes(this.type),!this.accidental)throw new Vex.RERR("ArgumentError","Unknown accidental type: "+d);this.cautionary=!1,this.paren_left=null,this.paren_right=null,this.setWidth(this.accidental.width)},setNote:function(a){if(!a)throw new Vex.RERR("ArgumentError","Bad note value: "+a);this.note=a,"gracenotes"===this.note.getCategory()&&(this.render_options.font_scale=25,this.setWidth(this.accidental.gracenote_width))},setAsCautionary:function(){this.cautionary=!0,this.render_options.font_scale=28,this.paren_left=Vex.Flow.accidentalCodes("{"),this.paren_right=Vex.Flow.accidentalCodes("}");var a="##"==this.type||"bb"==this.type?6:4;return this.setWidth(this.paren_left.width+this.accidental.width+this.paren_right.width-a),this},draw:function(){if(!this.context)throw new Vex.RERR("NoContext","Can't draw accidental without a context.");if(!this.note||null==this.index)throw new Vex.RERR("NoAttachedNote","Can't draw accidental without a note and index.");var a=this.note.getModifierStartXY(this.position,this.index),c=a.x+this.x_shift-this.width,d=a.y+this.y_shift;b("Rendering: ",this.type,c,d),this.cautionary?(c+=3,Vex.Flow.renderGlyph(this.context,c,d,this.render_options.font_scale,this.paren_left.code),c+=2,Vex.Flow.renderGlyph(this.context,c,d,this.render_options.font_scale,this.accidental.code),c+=this.accidental.width-2,("##"==this.type||"bb"==this.type)&&(c-=2),Vex.Flow.renderGlyph(this.context,c,d,this.render_options.font_scale,this.paren_right.code)):Vex.Flow.renderGlyph(this.context,c,d,this.render_options.font_scale,this.accidental.code)}}),a.applyAccidentals=function(a,b){var c=[],d={};a.forEach(function(a){var b=new Vex.Flow.Fraction(0,1),e=a.getTickables();e.forEach(function(a){var e=d[b.value()];e?e.push(a):(c.push(b.value()),d[b.value()]=[a]),b.add(a.getTicks())})});var e=new Vex.Flow.Music;b||(b="C");var f=e.createScaleMap(b);c.forEach(function(a){var b=d[a],c=[];b.forEach(function(a){a.isRest()||a.keys.forEach(function(b,d){var g=e.getNoteParts(b.split("/")[0]),h=g.accidental||"n",i=g.root+h,j=f[g.root]===i,k=c.indexOf(i)>-1;if(!j||j&&k){f[g.root]=i;var l=new Vex.Flow.Accidental(h);a.addAccidental(d,l),c.push(i)}})})})},a}(),Vex.Flow.Dot=function(){function a(){this.init()}a.CATEGORY="dots";var b=Vex.Flow.Modifier;return a.format=function(a,b){var c=b.right_shift,d=1;if(!a||0===a.length)return!1;var e,f,g,h,i=[];for(e=0;e<a.length;++e){f=a[e],g=f.getNote();var j;"function"==typeof g.getKeyProps?(j=g.getKeyProps()[f.getIndex()],h=j.displaced?g.getExtraRightPx():0):(j={line:.5},h=0),i.push({line:j.line,shift:h,note:g,dot:f})}i.sort(function(a,b){return b.line-a.line});var k=c,l=0,m=null,n=null,o=null,p=0;for(e=0;e<i.length;++e){f=i[e].dot,g=i[e].note,h=i[e].shift;var q=i[e].line;(q!=m||g!=n)&&(k=h),g.isRest()||q==m||(.5==Math.abs(q%1)?p=0:g.isRest()||(p=.5,null==n||n.isRest()||m-q!=.5?q+p==o&&(p=-.5):p=-.5)),f.dot_shiftY+=-p,o=q+p,f.setXShift(k),k+=f.getWidth()+d,l=k>l?k:l,m=q,n=g}b.right_shift+=l},Vex.Inherit(a,b,{init:function(){a.superclass.init.call(this),this.note=null,this.index=null,this.position=b.Position.RIGHT,this.radius=2,this.setWidth(5),this.dot_shiftY=0},setNote:function(a){this.note=a,"gracenotes"===this.note.getCategory()&&(this.radius*=.5,this.setWidth(3))},setDotShiftY:function(a){return this.dot_shiftY=a,this},draw:function(){if(!this.context)throw new Vex.RERR("NoContext","Can't draw dot without a context.");if(!this.note||null==this.index)throw new Vex.RERR("NoAttachedNote","Can't draw dot without a note and index.");var a=this.note.stave.options.spacing_between_lines_px,b=this.note.getModifierStartXY(this.position,this.index);"tabnotes"===this.note.getCategory()&&(b.y=this.note.getStemExtents().baseY);var c=b.x+this.x_shift+this.width-this.radius,d=b.y+this.y_shift+this.dot_shiftY*a,e=this.context;e.beginPath(),e.arc(c,d,this.radius,0,2*Math.PI,!1),e.fill()}}),a}(),Vex.Flow.Formatter=function(){function a(){this.minTotalWidth=0,this.hasMinTotalWidth=!1,this.pixelsPerTick=0,this.totalTicks=new Vex.Flow.Fraction(0,1),this.tContexts=null,this.mContexts=null}function b(){a.DEBUG&&Vex.L("Vex.Flow.Formatter",arguments)}function c(a,b,c,d){var e=b;for(c++;c<a.length;){if(!a[c].isRest()&&!a[c].shouldIgnoreTicks()){e=a[c].getLineForRest();break}c++}if(d&&b!=e){var f=Vex.Max(b,e),g=Vex.Min(b,e);e=Vex.MidLine(f,g)}return e}function d(a,b,c){if(!a||!a.length)throw new Vex.RERR("BadArgument","No voices to format");var d,e,f=a[0].getTotalTicks(),g={},h=[],i=[],j=1;for(d=0;d<a.length;++d){if(e=a[d],!e.getTotalTicks().equals(f))throw new Vex.RERR("TickMismatch","Voices should have same total note duration in ticks.");if(e.getMode()==Vex.Flow.Voice.Mode.STRICT&&!e.isComplete())throw new Vex.RERR("IncompleteVoice","Voice does not have enough notes.");var k=Vex.Flow.Fraction.LCM(j,e.getResolutionMultiplier());k>j&&(j=k)}for(d=0;d<a.length;++d){e=a[d];for(var l=e.getTickables(),m=new Vex.Flow.Fraction(0,j),n=0;n<l.length;++n){var o=l[n],p=m.numerator;if(!g[p]){var q=new b;i.push(q),g[p]=q}c(o,g[p]),h.push(p),m.add(o.getTicks())}}return{map:g,array:i,list:Vex.SortAndUnique(h,function(a,b){return a-b},function(a,b){return a===b}),resolutionMultiplier:j}}return a.FormatAndDraw=function(b,c,d,e){var f={auto_beam:!1,align_rests:!1};"object"==typeof e?Vex.Merge(f,e):"boolean"==typeof e&&(f.auto_beam=e);var g=new Vex.Flow.Voice(Vex.Flow.TIME4_4).setMode(Vex.Flow.Voice.Mode.SOFT);g.addTickables(d);var h=null;if(f.auto_beam&&(h=Vex.Flow.Beam.applyAndGetBeams(g)),(new a).joinVoices([g],{align_rests:f.align_rests}).formatToStave([g],c,{align_rests:f.align_rests}),g.setStave(c),g.draw(b,c),null!=h)for(var i=0;i<h.length;++i)h[i].setContext(b).draw();return g.getBoundingBox()},a.FormatAndDrawTab=function(b,c,d,e,f,g,h){var i={auto_beam:g,align_rests:!1};"object"==typeof h?Vex.Merge(i,h):"boolean"==typeof h&&(i.auto_beam=h);var j=new Vex.Flow.Voice(Vex.Flow.TIME4_4).setMode(Vex.Flow.Voice.Mode.SOFT);j.addTickables(f);var k=new Vex.Flow.Voice(Vex.Flow.TIME4_4).setMode(Vex.Flow.Voice.Mode.SOFT);k.addTickables(e);var l=null;if(i.auto_beam&&(l=Vex.Flow.Beam.applyAndGetBeams(j)),(new a).joinVoices([j],{align_rests:i.align_rests}).joinVoices([k]).formatToStave([j,k],d,{align_rests:i.align_rests}),j.draw(b,d),k.draw(b,c),null!=l)for(var m=0;m<l.length;++m)l[m].setContext(b).draw();new Vex.Flow.StaveConnector(d,c).setContext(b).draw()},a.AlignRestsToNotes=function(a,b,d){for(var e=0;e<a.length;++e)if(a[e]instanceof Vex.Flow.StaveNote&&a[e].isRest()){var f=a[e];if(f.tuplet&&!d)continue;var g=f.getGlyph().position.toUpperCase();if("R/4"!=g&&"B/4"!=g)continue;if(b||null!=f.beam){var h=f.getKeyProps()[0];if(0===e)h.line=c(a,h.line,e,!1),f.setKeyLine(0,h.line);else if(e>0&&e<a.length){var i;a[e-1].isRest()?(i=a[e-1].getKeyProps()[0].line,h.line=i):(i=a[e-1].getLineForRest(),h.line=c(a,i,e,!0)),f.setKeyLine(0,h.line)}}}return this},a.prototype={alignRests:function(b,c){if(!b||!b.length)throw new Vex.RERR("BadArgument","No voices to format rests");for(var d=0;d<b.length;d++)new a.AlignRestsToNotes(b[d].tickables,c)},preCalculateMinTotalWidth:function(a){if(!this.hasMinTotalWidth){if(!this.tContexts){if(!a)throw new Vex.RERR("BadArgument","'voices' required to run preCalculateMinTotalWidth");this.createTickContexts(a)}var b=this.tContexts,c=b.list,d=b.map;this.minTotalWidth=0;for(var e=0;e<c.length;++e){var f=d[c[e]];f.preFormat(),this.minTotalWidth+=f.getWidth()}return this.hasMinTotalWidth=!0,this.minTotalWidth}},getMinTotalWidth:function(){if(!this.hasMinTotalWidth)throw new Vex.RERR("NoMinTotalWidth","Need to call 'preCalculateMinTotalWidth' or 'preFormat' before calling 'getMinTotalWidth'");return this.minTotalWidth},createModifierContexts:function(a){var b=d(a,Vex.Flow.ModifierContext,function(a,b){a.addToModifierContext(b)});return this.mContexts=b,b},createTickContexts:function(a){var b=d(a,Vex.Flow.TickContext,function(a,b){b.addTickable(a)});return b.array.forEach(function(a){a.tContexts=b.array}),this.totalTicks=a[0].getTicksUsed().clone(),this.tContexts=b,b},preFormat:function(a,b,c,d){var e=this.tContexts,f=e.list,g=e.map;c&&d&&c.forEach(function(a){a.setStave(d),a.preFormat()}),a?this.pixelsPerTick=a/(this.totalTicks.value()*e.resolutionMultiplier):(a=0,this.pixelsPerTick=0);var h=0,i=a/2,j=0,k=0,l=0,m=0,n=null,o=a;this.minTotalWidth=0;var p,q,r;for(p=0;p<f.length;++p){q=f[p],r=g[q],b&&r.setContext(b),r.preFormat();var s=r.getMetrics(),t=r.getWidth();this.minTotalWidth+=t;var u=0,v=t;k=Math.min((q-l)*this.pixelsPerTick,v);var w=h+k;null!=n&&(u=h+m-n.extraLeftPx),w=r.shouldIgnoreTicks()?u+r.getWidth():Math.max(w,u),r.shouldIgnoreTicks()&&a&&(a-=r.getWidth(),this.pixelsPerTick=a/(this.totalTicks.value()*e.resolutionMultiplier));var x=s.extraLeftPx;null!=n&&(j=w-h-(m-n.extraLeftPx)),p>0&&j>0&&(j>=x?x=0:x-=j),w+=x,r.setX(w),r.setPixelsUsed(v),n=s,m=t,l=q,h=w}if(this.hasMinTotalWidth=!0,a>0){var y=o-(h+m),z=y/(this.totalTicks.value()*e.resolutionMultiplier),A=0;for(l=0,p=0;p<f.length;++p){q=f[p],r=g[q],k=(q-l)*z,A+=k,r.setX(r.getX()+A),l=q;var B=r.getCenterAlignedTickables();B.forEach(function(a){a.center_x_shift=i-r.getX()})}}},postFormat:function(){return this.mContexts.list.forEach(function(a){this.mContexts.map[a].postFormat()},this),this.tContexts.list.forEach(function(a){this.tContexts.map[a].postFormat()},this),this},joinVoices:function(a){return this.createModifierContexts(a),this.hasMinTotalWidth=!1,this},format:function(a,b,c){var d={align_rests:!1,context:null,stave:null};return Vex.Merge(d,c),this.alignRests(a,d.align_rests),this.createTickContexts(a),this.preFormat(b,d.context,a,d.stave),d.stave&&this.postFormat(),this},formatToStave:function(a,c,d){var e=c.getNoteEndX()-c.getNoteStartX()-10;b("Formatting voices to width: ",e);var f={context:c.getContext()};return Vex.Merge(f,d),this.format(a,e,f)}},a}(),Vex.Flow.StaveTie=function(){function a(a,b){arguments.length>0&&this.init(a,b)}return a.prototype={init:function(a,b){this.notes=a,this.context=null,this.text=b,this.render_options={cp1:8,cp2:12,text_shift_x:0,first_x_shift:0,last_x_shift:0,y_shift:7,tie_spacing:0,font:{family:"Arial",size:10,style:""}},this.font=this.render_options.font,this.setNotes(a)},setContext:function(a){return this.context=a,this},setFont:function(a){return this.font=a,this},setNotes:function(a){if(!a.first_note&&!a.last_note)throw new Vex.RuntimeError("BadArguments","Tie needs to have either first_note or last_note set.");if(a.first_indices||(a.first_indices=[0]),a.last_indices||(a.last_indices=[0]),a.first_indices.length!=a.last_indices.length)throw new Vex.RuntimeError("BadArguments","Tied notes must have similar index sizes");return this.first_note=a.first_note,this.first_indices=a.first_indices,this.last_note=a.last_note,this.last_indices=a.last_indices,this},isPartial:function(){return!this.first_note||!this.last_note},renderTie:function(a){if(0===a.first_ys.length||0===a.last_ys.length)throw new Vex.RERR("BadArguments","No Y-values to render");var b=this.context,c=this.render_options.cp1,d=this.render_options.cp2;Math.abs(a.last_x_px-a.first_x_px)<10&&(c=2,d=8);for(var e=this.render_options.first_x_shift,f=this.render_options.last_x_shift,g=this.render_options.y_shift*a.direction,h=0;h<this.first_indices.length;++h){var i=(a.last_x_px+f+(a.first_x_px+e))/2,j=a.first_ys[this.first_indices[h]]+g,k=a.last_ys[this.last_indices[h]]+g;if(isNaN(j)||isNaN(k))throw new Vex.RERR("BadArguments","Bad indices for tie rendering.");var l=(j+k)/2+c*a.direction,m=(j+k)/2+d*a.direction;b.beginPath(),b.moveTo(a.first_x_px+e,j),b.quadraticCurveTo(i,l,a.last_x_px+f,k),b.quadraticCurveTo(i,m,a.first_x_px+e,j),b.closePath(),b.fill()}},renderText:function(a,b){if(this.text){var c=(a+b)/2;c-=this.context.measureText(this.text).width/2,this.context.save(),this.context.setFont(this.font.family,this.font.size,this.font.style),this.context.fillText(this.text,c+this.render_options.text_shift_x,(this.first_note||this.last_note).getStave().getYForTopText()-1),this.context.restore()}},draw:function(){if(!this.context)throw new Vex.RERR("NoContext","No context to render tie.");var a,b,c,d,e,f=this.first_note,g=this.last_note;return f?(a=f.getTieRightX()+this.render_options.tie_spacing,e=f.getStemDirection(),c=f.getYs()):(a=g.getStave().getTieStartX(),c=g.getYs(),this.first_indices=this.last_indices),g?(b=g.getTieLeftX()+this.render_options.tie_spacing,e=g.getStemDirection(),d=g.getYs()):(b=f.getStave().getTieEndX(),d=f.getYs(),this.last_indices=this.first_indices),this.renderTie({first_x_px:a,last_x_px:b,first_ys:c,last_ys:d,direction:e}),this.renderText(a,b),!0}},a}(),Vex.Flow.TabTie=function(){function a(a,b){arguments.length>0&&this.init(a,b)}return a.createHammeron=function(b){return new a(b,"H")},a.createPulloff=function(b){return new a(b,"P")},Vex.Inherit(a,Vex.Flow.StaveTie,{init:function(b,c){a.superclass.init.call(this,b,c),this.render_options.cp1=9,this.render_options.cp2=11,this.render_options.y_shift=3,this.setNotes(b)},draw:function(){if(!this.context)throw new Vex.RERR("NoContext","No context to render tie.");var a,b,c,d,e=this.first_note,f=this.last_note;return e?(a=e.getTieRightX()+this.render_options.tie_spacing,c=e.getYs()):(a=f.getStave().getTieStartX(),c=f.getYs(),this.first_indices=this.last_indices),f?(b=f.getTieLeftX()+this.render_options.tie_spacing,d=f.getYs()):(b=e.getStave().getTieEndX(),d=e.getYs(),this.last_indices=this.first_indices),this.renderTie({first_x_px:a,last_x_px:b,first_ys:c,last_ys:d,direction:-1}),this.renderText(a,b),!0}}),a}(),Vex.Flow.TabSlide=function(){function a(a,b){arguments.length>0&&this.init(a,b)}return a.SLIDE_UP=1,a.SLIDE_DOWN=-1,a.createSlideUp=function(b){return new a(b,a.SLIDE_UP)},a.createSlideDown=function(b){return new a(b,a.SLIDE_DOWN)},Vex.Inherit(a,Vex.Flow.TabTie,{init:function(b,c){if(a.superclass.init.call(this,b,"sl."),!c){var d=b.first_note.getPositions()[0].fret,e=b.last_note.getPositions()[0].fret;c=parseInt(d,10)>parseInt(e,10)?a.SLIDE_DOWN:a.SLIDE_UP}this.slide_direction=c,this.render_options.cp1=11,this.render_options.cp2=14,this.render_options.y_shift=.5,this.setFont({font:"Times",size:10,style:"bold italic"}),this.setNotes(b)},renderTie:function(b){if(0===b.first_ys.length||0===b.last_ys.length)throw new Vex.RERR("BadArguments","No Y-values to render");var c=this.context,d=b.first_x_px,e=b.first_ys,f=b.last_x_px,g=this.slide_direction;if(g!=a.SLIDE_UP&&g!=a.SLIDE_DOWN)throw new Vex.RERR("BadSlide","Invalid slide direction");for(var h=0;h<this.first_indices.length;++h){var i=e[this.first_indices[h]]+this.render_options.y_shift;if(isNaN(i))throw new Vex.RERR("BadArguments","Bad indices for slide rendering.");c.beginPath(),c.moveTo(d,i+3*g),c.lineTo(f,i-3*g),c.closePath(),c.stroke()}}}),a}(),Vex.Flow.Bend=function(){function a(a,b,c){arguments.length>0&&this.init(a,b,c)}a.CATEGORY="bends",a.UP=0,a.DOWN=1;var b=Vex.Flow.Modifier;return a.format=function(a,b){if(!a||0===a.length)return!1;for(var c=0,d=b.text_line,e=0;e<a.length;++e){var f=a[e];f.setXShift(c),c=f.getWidth(),f.setTextLine(d)}return b.right_shift+=c,b.text_line+=1,!0},Vex.Inherit(a,b,{init:function(b,c,d){var e=Vex.Flow.Bend.superclass;e.init.call(this),this.text=b,this.x_shift=0,this.release=c||!1,this.font="10pt Arial",this.render_options={line_width:1.5,line_style:"#777777",bend_width:8,release_width:8},d?this.phrase=d:(this.phrase=[{type:a.UP,text:this.text}],this.release&&this.phrase.push({type:a.DOWN,text:""})),this.updateWidth()},setXShift:function(a){this.x_shift=a,this.updateWidth()},setFont:function(a){return this.font=a,this},getText:function(){return this.text},updateWidth:function(){function b(a){var b;return b=c.context?c.context.measureText(a).width:Vex.Flow.textWidth(a)}for(var c=this,d=0,e=0;e<this.phrase.length;++e){var f=this.phrase[e];if("width"in f)d+=f.width;else{var g=f.type==a.UP?this.render_options.bend_width:this.render_options.release_width;f.width=Vex.Max(g,b(f.text))+3,f.draw_width=f.width/2,d+=f.width}}return this.setWidth(d+this.x_shift),this},draw:function(){function c(a,b,c,d){var e=a+c,f=b;i.save(),i.beginPath(),i.setLineWidth(l.render_options.line_width),i.setStrokeStyle(l.render_options.line_style),i.setFillStyle(l.render_options.line_style),i.moveTo(a,b),i.quadraticCurveTo(e,f,a+c,d),i.stroke(),i.restore()}function d(a,b,c,d){i.save(),i.beginPath(),i.setLineWidth(l.render_options.line_width),i.setStrokeStyle(l.render_options.line_style),i.setFillStyle(l.render_options.line_style),i.moveTo(a,d),i.quadraticCurveTo(a+c,d,a+c,b),i.stroke(),i.restore()}function e(a,b,c){var d=4,e=c||1;i.beginPath(),i.moveTo(a,b),i.lineTo(a-d,b+d*e),i.lineTo(a+d,b+d*e),i.closePath(),i.fill()}function f(a,b){i.save(),i.setRawFont(l.font);var c=a-i.measureText(b).width/2;i.fillText(b,c,k),i.restore()}if(!this.context)throw new Vex.RERR("NoContext","Can't draw bend without a context.");if(!this.note||null==this.index)throw new Vex.RERR("NoNoteForBend","Can't draw bend without a note or index.");var g=this.note.getModifierStartXY(b.Position.RIGHT,this.index);g.x+=3,g.y+=.5;for(var h=this.x_shift,i=this.context,j=this.note.getStave().getYForTopText(this.text_line)+3,k=this.note.getStave().getYForTopText(this.text_line)-1,l=this,m=null,n=0,o=0;o<this.phrase.length;++o){var p=this.phrase[o];0===o&&(p.draw_width+=h),n=p.draw_width+(m?m.draw_width:0)-(1==o?h:0),p.type==a.UP&&(m&&m.type==a.UP&&e(g.x,j),c(g.x,g.y,n,j)),p.type==a.DOWN&&(m&&m.type==a.UP&&d(g.x,g.y,n,j),m&&m.type==a.DOWN&&(e(g.x,g.y,-1),d(g.x,g.y,n,j)),null==m&&(n=p.draw_width,d(g.x,g.y,n,j))),f(g.x+n,p.text),m=p,m.x=g.x,g.x+=n}m.type==a.UP?e(m.x+n,j):m.type==a.DOWN&&e(m.x+n,g.y,-1)}}),a}(),Vex.Flow.Vibrato=function(){function a(){this.init()}a.CATEGORY="vibratos";var b=Vex.Flow.Modifier;return a.format=function(a,b,c){if(!a||0===a.length)return!1;var d=b.text_line,e=0,f=b.right_shift-7,g=c.getModifiers(Vex.Flow.Bend.CATEGORY);g&&g.length>0&&d--;for(var h=0;h<a.length;++h){var i=a[h];i.setXShift(f),i.setTextLine(d),e+=i.getWidth(),f+=e}return b.right_shift+=e,b.text_line+=1,!0},Vex.Inherit(a,b,{init:function(){var a=Vex.Flow.Vibrato.superclass;a.init.call(this),this.harsh=!1,this.position=Vex.Flow.Modifier.Position.RIGHT,this.render_options={vibrato_width:20,wave_height:6,wave_width:4,wave_girth:2},this.setVibratoWidth(this.render_options.vibrato_width)},setHarsh:function(a){return this.harsh=a,this},setVibratoWidth:function(a){return this.vibrato_width=a,this.setWidth(this.vibrato_width),this},draw:function(){function a(a,b){var f=d.render_options.wave_width,g=d.render_options.wave_girth,h=d.render_options.wave_height,i=e/f;c.beginPath();var j;if(d.harsh){for(c.moveTo(a,b+g+1),j=0;i/2>j;++j)c.lineTo(a+f,b-h/2),a+=f,c.lineTo(a+f,b+h/2),a+=f;for(j=0;i/2>j;++j)c.lineTo(a-f,b-h/2+g+1),a-=f,c.lineTo(a-f,b+h/2+g+1),a-=f;c.fill()}else{for(c.moveTo(a,b+g),j=0;i/2>j;++j)c.quadraticCurveTo(a+f/2,b-h/2,a+f,b),a+=f,c.quadraticCurveTo(a+f/2,b+h/2,a+f,b),a+=f;for(j=0;i/2>j;++j)c.quadraticCurveTo(a-f/2,b+h/2+g,a-f,b+g),a-=f,c.quadraticCurveTo(a-f/2,b-h/2+g,a-f,b+g),a-=f;c.fill()}}if(!this.context)throw new Vex.RERR("NoContext","Can't draw vibrato without a context.");if(!this.note)throw new Vex.RERR("NoNoteForVibrato","Can't draw vibrato without an attached note.");var b=this.note.getModifierStartXY(Vex.Flow.Modifier.Position.RIGHT,this.index),c=this.context,d=this,e=this.vibrato_width,f=b.x+this.x_shift,g=this.note.getYForTopText(this.text_line)+2;a(f,g)}}),a}(),Vex.Flow.Annotation=function(){function a(a){arguments.length>0&&this.init(a)}function b(){a.DEBUG&&Vex.L("Vex.Flow.Annotation",arguments)}a.CATEGORY="annotations",a.Justify={LEFT:1,CENTER:2,RIGHT:3,CENTER_STEM:4},a.VerticalJustify={TOP:1,CENTER:2,BOTTOM:3,CENTER_STEM:4},a.format=function(a,b){if(!a||0===a.length)return!1;for(var c,d=b.text_line,e=0,f=0;f<a.length;++f){var g=a[f];g.setTextLine(d),c=g.getWidth()>e?g.getWidth():e,d++}return b.left_shift+=c/2,b.right_shift+=c/2,!0};var c=Vex.Flow.Modifier;return Vex.Inherit(a,c,{init:function(b){a.superclass.init.call(this),this.note=null,this.index=null,this.text_line=0,this.text=b,this.justification=a.Justify.CENTER,this.vert_justification=a.VerticalJustify.TOP,this.font={family:"Arial",size:10,weight:""},this.setWidth(Vex.Flow.textWidth(b))},setTextLine:function(a){return this.text_line=a,this},setFont:function(a,b,c){return this.font={family:a,size:b,weight:c},this},setVerticalJustification:function(a){return this.vert_justification=a,this},getJustification:function(){return this.justification},setJustification:function(a){return this.justification=a,this},draw:function(){if(!this.context)throw new Vex.RERR("NoContext","Can't draw text annotation without a context.");if(!this.note)throw new Vex.RERR("NoNoteForAnnotation","Can't draw text annotation without an attached note.");var d=this.note.getModifierStartXY(c.Position.ABOVE,this.index);this.context.save(),this.context.setFont(this.font.family,this.font.size,this.font.weight);var e,f,g=this.context.measureText(this.text).width,h=this.context.measureText("m").width;e=this.justification==a.Justify.LEFT?d.x:this.justification==a.Justify.RIGHT?d.x-g:this.justification==a.Justify.CENTER?d.x-g/2:this.note.getStemX()-g/2;var i,j,k=this.note.hasStem(),l=this.note.getStave();if(k&&(i=this.note.getStem().getExtents(),j=l.getSpacingBetweenLines()),this.vert_justification==a.VerticalJustify.BOTTOM){if(f=l.getYForBottomText(this.text_line),k){var m=1===this.note.getStemDirection()?i.baseY:i.topY;f=Math.max(f,m+j*(this.text_line+2))}}else if(this.vert_justification==a.VerticalJustify.CENTER){var n=this.note.getYForTopText(this.text_line)-1,o=l.getYForBottomText(this.text_line);f=n+(o-n)/2+h/2}else if(this.vert_justification==a.VerticalJustify.TOP)f=Math.min(l.getYForTopText(this.text_line),this.note.getYs()[0]-10),k&&(f=Math.min(f,i.topY-5-j*this.text_line));else{var p=this.note.getStemExtents();f=p.topY+(p.baseY-p.topY)/2+h/2}b("Rendering annotation: ",this.text,e,f),this.context.fillText(this.text,e,f),this.context.restore()}}),a}(),Vex.Flow.Articulation=function(){function a(a){arguments.length>0&&this.init(a)}function b(){a.DEBUG&&Vex.L("Vex.Flow.Articulation",arguments)}a.CATEGORY="articulations";var c=Vex.Flow.Modifier;return a.format=function(a,b){if(!a||0===a.length)return!1;for(var c,d=b.text_line,e=0,f=0;f<a.length;++f){var g=a[f];g.setTextLine(d),c=g.getWidth()>e?g.getWidth():e;var h=Vex.Flow.articulationCodes(g.type);d+=h.between_lines?1:1.5}return b.left_shift+=c/2,b.right_shift+=c/2,b.text_line=d,!0},Vex.Inherit(a,c,{init:function(b){if(a.superclass.init.call(this),this.note=null,this.index=null,this.type=b,this.position=c.Position.BELOW,this.render_options={font_scale:38},this.articulation=Vex.Flow.articulationCodes(this.type),!this.articulation)throw new Vex.RERR("ArgumentError","Articulation not found: '"+this.type+"'");this.setWidth(this.articulation.width)},draw:function(){if(!this.context)throw new Vex.RERR("NoContext","Can't draw Articulation without a context.");if(!this.note||null===this.index)throw new Vex.RERR("NoAttachedNote","Can't draw Articulation without a note and index.");var a=this.note.getStemDirection(),d=this.note.getStave(),e=this.position===c.Position.ABOVE&&a===Vex.Flow.StaveNote.STEM_DOWN||this.position===c.Position.BELOW&&a===Vex.Flow.StaveNote.STEM_UP,f=function(a,b,d){var f=a.position===c.Position.ABOVE?1:-1,g=a.getNote().getDuration();!e&&Vex.Flow.durationToNumber(g)<=1&&(b+=3.5*f);var h=b+f*d;return h>=1&&5>=h&&h%1===0?!0:!1},g=this.note.getModifierStartXY(this.position,this.index),h=g.y,i=0,j=1,k=d.getSpacingBetweenLines(),l="tabnotes"===this.note.getCategory(),m=this.note.getStem().getExtents(),n=m.topY,o=m.baseY;
a===Vex.Flow.StaveNote.STEM_DOWN&&(n=m.baseY,o=m.topY),l&&(this.note.hasStem()?a===Vex.Flow.StaveNote.STEM_UP?o=d.getYForBottomText(this.text_line-2):a===Vex.Flow.StaveNote.STEM_DOWN&&(n=d.getYForTopText(this.text_line-1.5)):(n=d.getYForTopText(this.text_line-1),o=d.getYForBottomText(this.text_line-2)));var p=this.position===c.Position.ABOVE?!0:!1,q=this.note.getLineNumber(p);!e&&this.note.beam&&(j+=.5),f(this,q,j)&&(j+=.5);var r;this.position===c.Position.ABOVE?(i=this.articulation.shift_up,r=n-7-k*(this.text_line+j),h=this.articulation.between_lines?r:Math.min(d.getYForTopText(this.text_line)-3,r)):(i=this.articulation.shift_down-10,r=o+10+k*(this.text_line+j),h=this.articulation.between_lines?r:Math.max(d.getYForBottomText(this.text_line),r));var s=g.x+this.articulation.shift_right;h+=i+this.y_shift,b("Rendering articulation: ",this.articulation,s,h),Vex.Flow.renderGlyph(this.context,s,h,this.render_options.font_scale,this.articulation.code)}}),a}(),Vex.Flow.Tuning=function(){function a(a){this.init(a)}return a.names={standard:"E/5,B/4,G/4,D/4,A/3,E/3",dagdad:"D/5,A/4,G/4,D/4,A/3,D/3",dropd:"E/5,B/4,G/4,D/4,A/3,D/3",eb:"Eb/5,Bb/4,Gb/4,Db/4,Ab/3,Db/3"},a.prototype={init:function(a){this.setTuning(a||"E/5,B/4,G/4,D/4,A/3,E/3,B/2,E/2")},noteToInteger:function(a){return Vex.Flow.keyProperties(a).int_value},setTuning:function(a){Vex.Flow.Tuning.names[a]&&(a=Vex.Flow.Tuning.names[a]),this.tuningString=a,this.tuningValues=[],this.numStrings=0;var b=a.split(/\s*,\s*/);if(0===b.length)throw new Vex.RERR("BadArguments","Invalid tuning string: "+a);this.numStrings=b.length;for(var c=0;c<this.numStrings;++c)this.tuningValues[c]=this.noteToInteger(b[c])},getValueForString:function(a){var b=parseInt(a,10);if(1>b||b>this.numStrings)throw new Vex.RERR("BadArguments","String number must be between 1 and "+this.numStrings+": "+a);return this.tuningValues[b-1]},getValueForFret:function(a,b){var c=this.getValueForString(b),d=parseInt(a,10);if(0>d)throw new Vex.RERR("BadArguments","Fret number must be 0 or higher: "+a);return c+d},getNoteForFret:function(a,b){var c=this.getValueForFret(a,b),d=Math.floor(c/12),e=c%12;return Vex.Flow.integerToNote(e)+"/"+d}},a}(),Vex.Flow.StaveModifier=function(){function a(){this.init()}return a.prototype={init:function(){this.padding=10},getCategory:function(){return""},makeSpacer:function(a){return{getContext:function(){return!0},setStave:function(){},renderToStave:function(){},getMetrics:function(){return{width:a}}}},placeGlyphOnLine:function(a,b,c){a.setYShift(b.getYForLine(c)-b.getYForGlyphs())},setPadding:function(a){this.padding=a},addToStave:function(a,b){return b||a.addGlyph(this.makeSpacer(this.padding)),this.addModifier(a),this},addToStaveEnd:function(a,b){return a.addEndGlyph(b?this.makeSpacer(2):this.makeSpacer(this.padding)),this.addEndModifier(a),this},addModifier:function(){throw new Vex.RERR("MethodNotImplemented","addModifier() not implemented for this stave modifier.")},addEndModifier:function(){throw new Vex.RERR("MethodNotImplemented","addEndModifier() not implemented for this stave modifier.")}},a}(),Vex.Flow.KeySignature=function(){function a(a){arguments.length>0&&this.init(a)}return a.accidentalSpacing={"#":{above:6,below:4},b:{above:4,below:7},n:{above:3,below:-1}},Vex.Inherit(a,Vex.Flow.StaveModifier,{init:function(b){a.superclass.init(),this.glyphFontScale=38,this.accList=Vex.Flow.keySignature(b)},addAccToStave:function(b,c,d){var e=Vex.Flow.accidentalCodes(c.type),f=new Vex.Flow.Glyph(e.code,this.glyphFontScale),g=0;if("n"===c.type&&d){var h=d.line>=c.line,i=a.accidentalSpacing[d.type];g=h?i.above:i.below}f.setWidth(e.width+g),this.placeGlyphOnLine(f,b,c.line),b.addGlyph(f)},cancelKey:function(a){var b=Vex.Flow.keySignature(a),c=this.accList.length>0&&b[0].type!==this.accList[0].type,d=0;if(d=c?b.length:b.length-this.accList.length,!(1>d)){for(var e=[],f=0;d>f;f++){var g=f;c||(g=b.length-d+f);var h=b[g];e.push({type:"n",line:h.line})}return this.accList=e.concat(this.accList),this}},addModifier:function(a){this.convertAccLines(a.clef,this.accList[0].type);for(var b=0;b<this.accList.length;++b)this.addAccToStave(a,this.accList[b],this.accList[b+1])},addToStave:function(a,b){return 0===this.accList.length?this:(b||a.addGlyph(this.makeSpacer(this.padding)),this.addModifier(a),this)},convertAccLines:function(a,b){var c,d=0,e="tenor"===a&&"#"===b?!0:!1;switch(a){case"bass":d=1;break;case"alto":d=.5;break;case"tenor":e||(d=-.5)}var f;if(e)for(c=[3,1,2.5,.5,2,0,1.5],f=0;f<this.accList.length;++f)this.accList[f].line=c[f];else if("treble"!=a)for(f=0;f<this.accList.length;++f)this.accList[f].line+=d}}),a}(),Vex.Flow.TimeSignature=function(){function a(a,b){arguments.length>0&&this.init(a,b)}return a.glyphs={C:{code:"v41",point:40,line:2},"C|":{code:"vb6",point:40,line:2}},Vex.Inherit(a,Vex.Flow.StaveModifier,{init:function(b,c){a.superclass.init();var d=c||15;this.setPadding(d),this.point=40,this.topLine=2,this.bottomLine=4,this.timeSig=this.parseTimeSpec(b)},parseTimeSpec:function(b){if("C"==b||"C|"==b){var c=a.glyphs[b];return{num:!1,line:c.line,glyph:new Vex.Flow.Glyph(c.code,c.point)}}var d,e,f=[];for(d=0;d<b.length&&(e=b.charAt(d),"/"!=e);++d){if(!/[0-9]/.test(e))throw new Vex.RERR("BadTimeSignature","Invalid time spec: "+b);f.push(e)}if(0===d)throw new Vex.RERR("BadTimeSignature","Invalid time spec: "+b);if(++d,d==b.length)throw new Vex.RERR("BadTimeSignature","Invalid time spec: "+b);for(var g=[];d<b.length;++d){if(e=b.charAt(d),!/[0-9]/.test(e))throw new Vex.RERR("BadTimeSignature","Invalid time spec: "+b);g.push(e)}return{num:!0,glyph:this.makeTimeSignatureGlyph(f,g)}},makeTimeSignatureGlyph:function(a,b){var c=new Vex.Flow.Glyph("v0",this.point);c.topGlyphs=[],c.botGlyphs=[];var d,e,f=0;for(d=0;d<a.length;++d){e=a[d];var g=new Vex.Flow.Glyph("v"+e,this.point);c.topGlyphs.push(g),f+=g.getMetrics().width}var h=0;for(d=0;d<b.length;++d){e=b[d];var i=new Vex.Flow.Glyph("v"+e,this.point);c.botGlyphs.push(i),h+=i.getMetrics().width}var j=f>h?f:h,k=c.getMetrics().x_min;c.getMetrics=function(){return{x_min:k,x_max:k+j,width:j}};var l=(j-f)/2,m=(j-h)/2,n=this;return c.renderToStave=function(a){var b,c,d=a+l;for(b=0;b<this.topGlyphs.length;++b)c=this.topGlyphs[b],Vex.Flow.Glyph.renderOutline(this.context,c.metrics.outline,c.scale,d+c.x_shift,this.stave.getYForLine(n.topLine)+1),d+=c.getMetrics().width;for(d=a+m,b=0;b<this.botGlyphs.length;++b)c=this.botGlyphs[b],n.placeGlyphOnLine(c,this.stave,c.line),Vex.Flow.Glyph.renderOutline(this.context,c.metrics.outline,c.scale,d+c.x_shift,this.stave.getYForLine(n.bottomLine)+1),d+=c.getMetrics().width},c},getTimeSig:function(){return this.timeSig},addModifier:function(a){this.timeSig.num||this.placeGlyphOnLine(this.timeSig.glyph,a,this.timeSig.line),a.addGlyph(this.timeSig.glyph)},addEndModifier:function(a){this.timeSig.num||this.placeGlyphOnLine(this.timeSig.glyph,a,this.timeSig.line),a.addEndGlyph(this.timeSig.glyph)}}),a}(),Vex.Flow.Clef=function(){function a(a,b,c){arguments.length>0&&this.init(a,b,c)}function b(){Vex.Flow.Clef.DEBUG&&Vex.L("Vex.Flow.Clef",arguments)}return a.types={treble:{code:"v83",line:3},bass:{code:"v79",line:1},alto:{code:"vad",line:2},tenor:{code:"vad",line:1},percussion:{code:"v59",line:2},soprano:{code:"vad",line:4},"mezzo-soprano":{code:"vad",line:3},"baritone-c":{code:"vad",line:0},"baritone-f":{code:"v79",line:2},subbass:{code:"v79",line:0},french:{code:"v83",line:4}},a.sizes={"default":40,small:32},a.annotations={"8va":{code:"v8",sizes:{"default":{point:20,attachments:{treble:{line:-1.2,x_shift:11}}},small:{point:18,attachments:{treble:{line:-.4,x_shift:8}}}}},"8vb":{code:"v8",sizes:{"default":{point:20,attachments:{treble:{line:6.3,x_shift:10},bass:{line:4,x_shift:1}}},small:{point:18,attachments:{treble:{line:5.8,x_shift:6},bass:{line:3.5,x_shift:.5}}}}}},Vex.Inherit(a,Vex.Flow.StaveModifier,{init:function(a,c,d){var e=Vex.Flow.Clef.superclass;if(e.init.call(this),this.clef=Vex.Flow.Clef.types[a],this.size=void 0===c?"default":c,this.clef.point=Vex.Flow.Clef.sizes[this.size],void 0!==d){var f=Vex.Flow.Clef.annotations[d];this.annotation={code:f.code,point:f.sizes[this.size].point,line:f.sizes[this.size].attachments[a].line,x_shift:f.sizes[this.size].attachments[a].x_shift}}b("Creating clef:",a)},addModifier:function(a){var b=new Vex.Flow.Glyph(this.clef.code,this.clef.point);if(this.placeGlyphOnLine(b,a,this.clef.line),void 0!==this.annotation){var c=new Vex.Flow.Glyph(this.annotation.code,this.annotation.point);c.metrics.x_max=0,c.setXShift(this.annotation.x_shift),this.placeGlyphOnLine(c,a,this.annotation.line),a.addGlyph(c)}a.addGlyph(b)},addEndModifier:function(a){var b=new Vex.Flow.Glyph(this.clef.code,this.clef.point);if(this.placeGlyphOnLine(b,a,this.clef.line),a.addEndGlyph(b),void 0!==this.annotation){var c=new Vex.Flow.Glyph(this.annotation.code,this.annotation.point);c.metrics.x_max=0,c.setXShift(this.annotation.x_shift),this.placeGlyphOnLine(c,a,this.annotation.line),a.addEndGlyph(c)}}}),a}(),Vex.Flow.Music=function(){function a(){this.init()}return a.NUM_TONES=12,a.roots=["c","d","e","f","g","a","b"],a.root_values=[0,2,4,5,7,9,11],a.root_indices={c:0,d:1,e:2,f:3,g:4,a:5,b:6},a.canonical_notes=["c","c#","d","d#","e","f","f#","g","g#","a","a#","b"],a.diatonic_intervals=["unison","m2","M2","m3","M3","p4","dim5","p5","m6","M6","b7","M7","octave"],a.diatonic_accidentals={unison:{note:0,accidental:0},m2:{note:1,accidental:-1},M2:{note:1,accidental:0},m3:{note:2,accidental:-1},M3:{note:2,accidental:0},p4:{note:3,accidental:0},dim5:{note:4,accidental:-1},p5:{note:4,accidental:0},m6:{note:5,accidental:-1},M6:{note:5,accidental:0},b7:{note:6,accidental:-1},M7:{note:6,accidental:0},octave:{note:7,accidental:0}},a.intervals={u:0,unison:0,m2:1,b2:1,min2:1,S:1,H:1,2:2,M2:2,maj2:2,T:2,W:2,m3:3,b3:3,min3:3,M3:4,3:4,maj3:4,4:5,p4:5,"#4":6,b5:6,aug4:6,dim5:6,5:7,p5:7,"#5":8,b6:8,aug5:8,6:9,M6:9,maj6:9,b7:10,m7:10,min7:10,dom7:10,M7:11,maj7:11,8:12,octave:12},a.scales={major:[2,2,1,2,2,2,1],dorian:[2,1,2,2,2,1,2],mixolydian:[2,2,1,2,2,1,2],minor:[2,1,2,2,1,2,2]},a.accidentals=["bb","b","n","#","##"],a.noteValues={c:{root_index:0,int_val:0},cn:{root_index:0,int_val:0},"c#":{root_index:0,int_val:1},"c##":{root_index:0,int_val:2},cb:{root_index:0,int_val:11},cbb:{root_index:0,int_val:10},d:{root_index:1,int_val:2},dn:{root_index:1,int_val:2},"d#":{root_index:1,int_val:3},"d##":{root_index:1,int_val:4},db:{root_index:1,int_val:1},dbb:{root_index:1,int_val:0},e:{root_index:2,int_val:4},en:{root_index:2,int_val:4},"e#":{root_index:2,int_val:5},"e##":{root_index:2,int_val:6},eb:{root_index:2,int_val:3},ebb:{root_index:2,int_val:2},f:{root_index:3,int_val:5},fn:{root_index:3,int_val:5},"f#":{root_index:3,int_val:6},"f##":{root_index:3,int_val:7},fb:{root_index:3,int_val:4},fbb:{root_index:3,int_val:3},g:{root_index:4,int_val:7},gn:{root_index:4,int_val:7},"g#":{root_index:4,int_val:8},"g##":{root_index:4,int_val:9},gb:{root_index:4,int_val:6},gbb:{root_index:4,int_val:5},a:{root_index:5,int_val:9},an:{root_index:5,int_val:9},"a#":{root_index:5,int_val:10},"a##":{root_index:5,int_val:11},ab:{root_index:5,int_val:8},abb:{root_index:5,int_val:7},b:{root_index:6,int_val:11},bn:{root_index:6,int_val:11},"b#":{root_index:6,int_val:0},"b##":{root_index:6,int_val:1},bb:{root_index:6,int_val:10},bbb:{root_index:6,int_val:9}},a.prototype={init:function(){},isValidNoteValue:function(a){return null==a||0>a||a>=Vex.Flow.Music.NUM_TONES?!1:!0},isValidIntervalValue:function(a){return this.isValidNoteValue(a)},getNoteParts:function(a){if(!a||a.length<1)throw new Vex.RERR("BadArguments","Invalid note name: "+a);if(a.length>3)throw new Vex.RERR("BadArguments","Invalid note name: "+a);var b=a.toLowerCase(),c=/^([cdefgab])(b|bb|n|#|##)?$/,d=c.exec(b);if(null!=d){var e=d[1],f=d[2];return{root:e,accidental:f}}throw new Vex.RERR("BadArguments","Invalid note name: "+a)},getKeyParts:function(a){if(!a||a.length<1)throw new Vex.RERR("BadArguments","Invalid key: "+a);var b=a.toLowerCase(),c=/^([cdefgab])(b|#)?(mel|harm|m|M)?$/,d=c.exec(b);if(null!=d){var e=d[1],f=d[2],g=d[3];return g||(g="M"),{root:e,accidental:f,type:g}}throw new Vex.RERR("BadArguments","Invalid key: "+a)},getNoteValue:function(b){var c=a.noteValues[b];if(null==c)throw new Vex.RERR("BadArguments","Invalid note name: "+b);return c.int_val},getIntervalValue:function(b){var c=a.intervals[b];if(null==c)throw new Vex.RERR("BadArguments","Invalid interval name: "+b);return c},getCanonicalNoteName:function(b){if(!this.isValidNoteValue(b))throw new Vex.RERR("BadArguments","Invalid note value: "+b);return a.canonical_notes[b]},getCanonicalIntervalName:function(b){if(!this.isValidIntervalValue(b))throw new Vex.RERR("BadArguments","Invalid interval value: "+b);return a.diatonic_intervals[b]},getRelativeNoteValue:function(b,c,d){if(null==d&&(d=1),1!=d&&-1!=d)throw new Vex.RERR("BadArguments","Invalid direction: "+d);var e=(b+d*c)%a.NUM_TONES;return 0>e&&(e+=a.NUM_TONES),e},getRelativeNoteName:function(b,c){var d=this.getNoteParts(b),e=this.getNoteValue(d.root),f=c-e;if(Math.abs(f)>a.NUM_TONES-3){var g=1;f>0&&(g=-1);var h=(c+1+(e+1))%a.NUM_TONES*g;if(Math.abs(h)>2)throw new Vex.RERR("BadArguments","Notes not related: "+b+", "+c);f=h}if(Math.abs(f)>2)throw new Vex.RERR("BadArguments","Notes not related: "+b+", "+c);var i,j=d.root;if(f>0)for(i=1;f>=i;++i)j+="#";else if(0>f)for(i=-1;i>=f;--i)j+="b";return j},getScaleTones:function(a,b){var c=[];c.push(a);for(var d=a,e=0;e<b.length;++e)d=this.getRelativeNoteValue(d,b[e]),d!=a&&c.push(d);return c},getIntervalBetween:function(b,c,d){if(null==d&&(d=1),1!=d&&-1!=d)throw new Vex.RERR("BadArguments","Invalid direction: "+d);if(!this.isValidNoteValue(b)||!this.isValidNoteValue(c))throw new Vex.RERR("BadArguments","Invalid notes: "+b+", "+c);var e;return e=1==d?c-b:b-c,0>e&&(e+=a.NUM_TONES),e},createScaleMap:function(a){var b=this.getKeyParts(a),c=Vex.Flow.KeyManager.scales[b.type],d=b.root;if(b.accidental&&(d+=b.accidental),!c)throw new Vex.RERR("BadArguments","Unsupported key type: "+a);for(var e=this.getScaleTones(this.getNoteValue(d),c),f=Vex.Flow.Music.root_indices[b.root],g={},h=0;h<Vex.Flow.Music.roots.length;++h){var i=(f+h)%Vex.Flow.Music.roots.length,j=Vex.Flow.Music.roots[i],k=this.getRelativeNoteName(j,e[h]);1===k.length&&(k+="n"),g[j]=k}return g}},a}(),Vex.Flow.KeyManager=function(){function a(a){this.init(a)}return a.scales={M:Vex.Flow.Music.scales.major,m:Vex.Flow.Music.scales.minor},a.prototype={init:function(a){this.music=new Vex.Flow.Music,this.setKey(a)},setKey:function(a){return this.key=a,this.reset(),this},getKey:function(){return this.key},reset:function(){this.keyParts=this.music.getKeyParts(this.key),this.keyString=this.keyParts.root,this.keyParts.accidental&&(this.keyString+=this.keyParts.accidental);var b=a.scales[this.keyParts.type];if(!b)throw new Vex.RERR("BadArguments","Unsupported key type: "+this.key);this.scale=this.music.getScaleTones(this.music.getNoteValue(this.keyString),Vex.Flow.KeyManager.scales[this.keyParts.type]),this.scaleMap={},this.scaleMapByValue={},this.originalScaleMapByValue={};for(var c=Vex.Flow.Music.root_indices[this.keyParts.root],d=0;d<Vex.Flow.Music.roots.length;++d){var e=(c+d)%Vex.Flow.Music.roots.length,f=Vex.Flow.Music.roots[e],g=this.music.getRelativeNoteName(f,this.scale[d]);this.scaleMap[f]=g,this.scaleMapByValue[this.scale[d]]=g,this.originalScaleMapByValue[this.scale[d]]=g}return this},getAccidental:function(a){var b=this.music.getKeyParts(a).root,c=this.music.getNoteParts(this.scaleMap[b]);return{note:this.scaleMap[b],accidental:c.accidental}},selectNote:function(a){a=a.toLowerCase();var b=this.music.getNoteParts(a),c=this.scaleMap[b.root],d=this.music.getNoteParts(c);if(c==a)return{note:c,accidental:b.accidental,change:!1};var e=this.scaleMapByValue[this.music.getNoteValue(a)];if(null!=e)return{note:e,accidental:this.music.getNoteParts(e).accidental,change:!1};var f=this.originalScaleMapByValue[this.music.getNoteValue(a)];return null!=f?(this.scaleMap[d.root]=f,delete this.scaleMapByValue[this.music.getNoteValue(c)],this.scaleMapByValue[this.music.getNoteValue(a)]=f,{note:f,accidental:this.music.getNoteParts(f).accidental,change:!0}):d.root==a?(delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[b.root])],this.scaleMapByValue[this.music.getNoteValue(d.root)]=d.root,this.scaleMap[d.root]=d.root,{note:d.root,accidental:null,change:!0}):(delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[b.root])],this.scaleMapByValue[this.music.getNoteValue(a)]=a,delete this.scaleMap[d.root],this.scaleMap[d.root]=a,{note:a,accidental:b.accidental,change:!0})}},a}(),Vex.Flow.Renderer=function(){function a(a,b){arguments.length>0&&this.init(a,b)}return a.Backends={CANVAS:1,RAPHAEL:2,SVG:3,VML:4},a.LineEndType={NONE:1,UP:2,DOWN:3},a.USE_CANVAS_PROXY=!1,a.buildContext=function(b,c,d,e,f){var g=new a(b,c);d&&e&&g.resize(d,e),f||(f="#FFF");var h=g.getContext();return h.setBackgroundFillStyle(f),h},a.getCanvasContext=function(b,c,d,e){return a.buildContext(b,a.Backends.CANVAS,c,d,e)},a.getRaphaelContext=function(b,c,d,e){return a.buildContext(b,a.Backends.RAPHAEL,c,d,e)},a.bolsterCanvasContext=function(b){if(a.USE_CANVAS_PROXY)return new Vex.Flow.CanvasContext(b);var c=["clear","setFont","setRawFont","setFillStyle","setBackgroundFillStyle","setStrokeStyle","setShadowColor","setShadowBlur","setLineWidth","setLineCap","setLineDash"];b.vexFlowCanvasContext=b;for(var d in c){var e=c[d];b[e]=Vex.Flow.CanvasContext.prototype[e]}return b},a.drawDashedLine=function(a,b,c,d,e,f){a.beginPath();var g=d-b,h=e-c,i=Math.atan2(h,g),j=b,k=c;a.moveTo(b,c);for(var l=0,m=!0;!(0>g?d>=j:j>=d)||!(0>h?e>=k:k>=e);){var n=f[l++%f.length],o=j+Math.cos(i)*n;j=0>g?Math.max(d,o):Math.min(d,o);var p=k+Math.sin(i)*n;k=0>h?Math.max(e,p):Math.min(e,p),m?a.lineTo(j,k):a.moveTo(j,k),m=!m}a.closePath(),a.stroke()},a.prototype={init:function(b,c){if(this.sel=b,!this.sel)throw new Vex.RERR("BadArgument","Invalid selector for renderer.");if(this.element=document.getElementById(b),this.element||(this.element=b),this.ctx=null,this.paper=null,this.backend=c,this.backend==a.Backends.CANVAS){if(!this.element.getContext)throw new Vex.RERR("BadElement","Can't get canvas context from element: "+b);this.ctx=a.bolsterCanvasContext(this.element.getContext("2d"))}else{if(this.backend!=a.Backends.RAPHAEL)throw new Vex.RERR("InvalidBackend","No support for backend: "+this.backend);this.ctx=new Vex.Flow.RaphaelContext(this.element)}},resize:function(b,c){if(this.backend==a.Backends.CANVAS){if(!this.element.getContext)throw new Vex.RERR("BadElement","Can't get canvas context from element: "+this.sel);this.element.width=b,this.element.height=c,this.ctx=a.bolsterCanvasContext(this.element.getContext("2d"))}else this.ctx.resize(b,c);return this},getContext:function(){return this.ctx}},a}(),Vex.Flow.RaphaelContext=function(){function a(a){arguments.length>0&&this.init(a)}return a.prototype={init:function(a){this.element=a,this.paper=Raphael(a),this.path="",this.pen={x:0,y:0},this.lineWidth=1,this.state={scale:{x:1,y:1},font_family:"Arial",font_size:8,font_weight:800},this.attributes={"stroke-width":.3,fill:"black",stroke:"black",font:"10pt Arial"},this.background_attributes={"stroke-width":0,fill:"white",stroke:"white",font:"10pt Arial"},this.shadow_attributes={width:0,color:"black"},this.state_stack=[]},setFont:function(a,b,c){return this.state.font_family=a,this.state.font_size=b,this.state.font_weight=c,this.attributes.font=(this.state.font_weight||"")+" "+this.state.font_size*this.state.scale.x+"pt "+this.state.font_family,this},setRawFont:function(a){return this.attributes.font=a,this},setFillStyle:function(a){return this.attributes.fill=a,this},setBackgroundFillStyle:function(a){return this.background_attributes.fill=a,this.background_attributes.stroke=a,this},setStrokeStyle:function(a){return this.attributes.stroke=a,this},setShadowColor:function(a){return this.shadow_attributes.color=a,this},setShadowBlur:function(a){return this.shadow_attributes.width=a,this},setLineWidth:function(a){this.attributes["stroke-width"]=a,this.lineWidth=a},setLineDash:function(){return this},setLineCap:function(){return this},scale:function(a,b){return this.state.scale={x:a,y:b},this.attributes.transform="S"+a+","+b+",0,0",this.attributes.scale=a+","+b+",0,0",this.attributes.font=this.state.font_size*this.state.scale.x+"pt "+this.state.font_family,this.background_attributes.transform="S"+a+","+b+",0,0",this.background_attributes.font=this.state.font_size*this.state.scale.x+"pt "+this.state.font_family,this},clear:function(){this.paper.clear()},resize:function(a,b){return this.element.style.width=a,this.paper.setSize(a,b),this},setViewBox:function(a){this.paper.canvas.setAttribute("viewBox",a)},rect:function(a,b,c,d){return 0>d&&(b+=d,d=-d),this.paper.rect(a,b,c-.5,d-.5).attr(this.attributes).attr("fill","none").attr("stroke-width",this.lineWidth),this},fillRect:function(a,b,c,d){return 0>d&&(b+=d,d=-d),this.paper.rect(a,b,c-.5,d-.5).attr(this.attributes),this},clearRect:function(a,b,c,d){return 0>d&&(b+=d,d=-d),this.paper.rect(a,b,c-.5,d-.5).attr(this.background_attributes),this},beginPath:function(){return this.path="",this.pen.x=0,this.pen.y=0,this},moveTo:function(a,b){return this.path+="M"+a+","+b,this.pen.x=a,this.pen.y=b,this},lineTo:function(a,b){return this.path+="L"+a+","+b,this.pen.x=a,this.pen.y=b,this},bezierCurveTo:function(a,b,c,d,e,f){return this.path+="C"+a+","+b+","+c+","+d+","+e+","+f,this.pen.x=e,this.pen.y=f,this},quadraticCurveTo:function(a,b,c,d){return this.path+="Q"+a+","+b+","+c+","+d,this.pen.x=c,this.pen.y=d,this},arc:function(a,b,c,d,e,f){function g(a){for(;0>a;)a+=2*Math.PI;for(;a>2*Math.PI;)a-=2*Math.PI;return a}if(d=g(d),e=g(e),d>e){var h=d;d=e,e=h,f=!f}var i=e-d;return i>Math.PI?(this.arcHelper(a,b,c,d,d+i/2,f),this.arcHelper(a,b,c,d+i/2,e,f)):this.arcHelper(a,b,c,d,e,f),this},arcHelper:function(a,b,c,d,e,f){var g=a+c*Math.cos(d),h=b+c*Math.sin(d),i=a+c*Math.cos(e),j=b+c*Math.sin(e),k=0,l=0;f?(l=1,e-d<Math.PI&&(k=1)):e-d>Math.PI&&(k=1),this.path+="M"+g+","+h+",A"+c+","+c+",0,"+k+","+l+","+i+","+j+"M"+this.pen.x+","+this.pen.y},glow:function(){var a=this.paper.set();if(this.shadow_attributes.width>0)for(var b=this.shadow_attributes,c=b.width/2,d=1;c>=d;d++)a.push(this.paper.path(this.path).attr({stroke:b.color,"stroke-linejoin":"round","stroke-linecap":"round","stroke-width":+(b.width/c*d).toFixed(3),opacity:+((b.opacity||.3)/c).toFixed(3),transform:this.attributes.transform,scale:this.attributes.scale}));return a},fill:function(){var a=this.paper.path(this.path).attr(this.attributes).attr("stroke-width",0);return this.glow(a),this},stroke:function(){var a=this.lineWidth*(this.state.scale.x+this.state.scale.y)/2,b=this.paper.path(this.path).attr(this.attributes).attr("fill","none").attr("stroke-width",a);return this.glow(b),this},closePath:function(){return this.path+="Z",this},measureText:function(a){var b=this.paper.text(0,0,a).attr(this.attributes).attr("fill","none").attr("stroke","none"),c=b.getBBox();return b.remove(),{width:c.width,height:c.height}},fillText:function(a,b,c){return this.paper.text(b+this.measureText(a).width/2,c-this.state.font_size/(2.25*this.state.scale.y),a).attr(this.attributes),this},save:function(){return this.state_stack.push({state:{font_family:this.state.font_family},attributes:{font:this.attributes.font,fill:this.attributes.fill,stroke:this.attributes.stroke,"stroke-width":this.attributes["stroke-width"]},shadow_attributes:{width:this.shadow_attributes.width,color:this.shadow_attributes.color}}),this},restore:function(){var a=this.state_stack.pop();return this.state.font_family=a.state.font_family,this.attributes.font=a.attributes.font,this.attributes.fill=a.attributes.fill,this.attributes.stroke=a.attributes.stroke,this.attributes["stroke-width"]=a.attributes["stroke-width"],this.shadow_attributes.width=a.shadow_attributes.width,this.shadow_attributes.color=a.shadow_attributes.color,this}},a}(),Vex.Flow.CanvasContext=function(){function a(a){arguments.length>0&&this.init(a)}return a.WIDTH=600,a.HEIGHT=400,a.prototype={init:function(b){this.vexFlowCanvasContext=b,this.canvas=b.canvas?b.canvas:{width:a.WIDTH,height:a.HEIGHT}},clear:function(){this.vexFlowCanvasContext.clearRect(0,0,this.canvas.width,this.canvas.height)},setFont:function(a,b,c){return this.vexFlowCanvasContext.font=(c||"")+" "+b+"pt "+a,this},setRawFont:function(a){return this.vexFlowCanvasContext.font=a,this},setFillStyle:function(a){return this.vexFlowCanvasContext.fillStyle=a,this},setBackgroundFillStyle:function(a){return this.background_fillStyle=a,this},setStrokeStyle:function(a){return this.vexFlowCanvasContext.strokeStyle=a,this},setShadowColor:function(a){return this.vexFlowCanvasContext.shadowColor=a,this},setShadowBlur:function(a){return this.vexFlowCanvasContext.shadowBlur=a,this},setLineWidth:function(a){return this.vexFlowCanvasContext.lineWidth=a,this},setLineCap:function(a){return this.vexFlowCanvasContext.lineCap=a,this},setLineDash:function(a){this.vexFlowCanvasContext.lineDash=a},scale:function(a,b){return this.vexFlowCanvasContext.scale(parseFloat(a),parseFloat(b))},resize:function(a,b){return this.vexFlowCanvasContext.resize(parseInt(a,10),parseInt(b,10))},rect:function(a,b,c,d){return this.vexFlowCanvasContext.rect(a,b,c,d)},fillRect:function(a,b,c,d){return this.vexFlowCanvasContext.fillRect(a,b,c,d)},clearRect:function(a,b,c,d){return this.vexFlowCanvasContext.clearRect(a,b,c,d)},beginPath:function(){return this.vexFlowCanvasContext.beginPath()},moveTo:function(a,b){return this.vexFlowCanvasContext.moveTo(a,b)},lineTo:function(a,b){return this.vexFlowCanvasContext.lineTo(a,b)},bezierCurveTo:function(a,b,c,d,e,f){return this.vexFlowCanvasContext.bezierCurveTo(a,b,c,d,e,f)},quadraticCurveTo:function(a,b,c,d){return this.vexFlowCanvasContext.quadraticCurveTo(a,b,c,d)},arc:function(a,b,c,d,e,f){return this.vexFlowCanvasContext.arc(a,b,c,d,e,f)},glow:function(){return this.vexFlowCanvasContext.glow()},fill:function(){return this.vexFlowCanvasContext.fill()},stroke:function(){return this.vexFlowCanvasContext.stroke()},closePath:function(){return this.vexFlowCanvasContext.closePath()},measureText:function(a){return this.vexFlowCanvasContext.measureText(a)},fillText:function(a,b,c){return this.vexFlowCanvasContext.fillText(a,b,c)},save:function(){return this.vexFlowCanvasContext.save()},restore:function(){return this.vexFlowCanvasContext.restore()}},a}(),Vex.Flow.Barline=function(){function a(a,b){arguments.length>0&&this.init(a,b)}return a.type={SINGLE:1,DOUBLE:2,END:3,REPEAT_BEGIN:4,REPEAT_END:5,REPEAT_BOTH:6,NONE:7},Vex.Inherit(a,Vex.Flow.StaveModifier,{init:function(b,c){a.superclass.init.call(this),this.thickness=Vex.Flow.STAVE_LINE_THICKNESS,this.barline=b,this.x=c},getCategory:function(){return"barlines"},setX:function(a){return this.x=a,this},draw:function(b,c){switch(c="number"!=typeof c?0:c,this.barline){case a.type.SINGLE:this.drawVerticalBar(b,this.x,!1);break;case a.type.DOUBLE:this.drawVerticalBar(b,this.x,!0);break;case a.type.END:this.drawVerticalEndBar(b,this.x);break;case a.type.REPEAT_BEGIN:c>0&&this.drawVerticalBar(b,this.x),this.drawRepeatBar(b,this.x+c,!0);break;case a.type.REPEAT_END:this.drawRepeatBar(b,this.x,!1);break;case a.type.REPEAT_BOTH:this.drawRepeatBar(b,this.x,!1),this.drawRepeatBar(b,this.x,!0)}},drawVerticalBar:function(a,b,c){if(!a.context)throw new Vex.RERR("NoCanvasContext","Can't draw stave without canvas context.");var d=a.getYForLine(0),e=a.getYForLine(a.getNumLines()-1)+this.thickness;c&&a.context.fillRect(b-3,d,1,e-d),a.context.fillRect(b,d,1,e-d)},drawVerticalEndBar:function(a,b){if(!a.context)throw new Vex.RERR("NoCanvasContext","Can't draw stave without canvas context.");var c=a.getYForLine(0),d=a.getYForLine(a.getNumLines()-1)+this.thickness;a.context.fillRect(b-5,c,1,d-c),a.context.fillRect(b-2,c,3,d-c)},drawRepeatBar:function(a,b,c){if(!a.context)throw new Vex.RERR("NoCanvasContext","Can't draw stave without canvas context.");var d=a.getYForLine(0),e=a.getYForLine(a.getNumLines()-1)+this.thickness,f=3;c||(f=-5),a.context.fillRect(b+f,d,1,e-d),a.context.fillRect(b-2,d,3,e-d);var g=2;c?f+=4:f-=4;var h=b+f+g/2,i=(a.getNumLines()-1)*a.getSpacingBetweenLines();i=i/2-a.getSpacingBetweenLines()/2;var j=d+i+g/2;a.context.beginPath(),a.context.arc(h,j,g,0,2*Math.PI,!1),a.context.fill(),j+=a.getSpacingBetweenLines(),a.context.beginPath(),a.context.arc(h,j,g,0,2*Math.PI,!1),a.context.fill()}}),a}(),Vex.Flow.StaveHairpin=function(){function a(a,b){arguments.length>0&&this.init(a,b)}return a.type={CRESC:1,DECRESC:2},a.FormatByTicksAndDraw=function(b,c,d,e,f,g){var h=c.pixelsPerTick;if(null==h)throw new Vex.RuntimeError("BadArguments","A valid Formatter must be provide to draw offsets by ticks.");var i=h*g.left_shift_ticks,j=h*g.right_shift_ticks,k={height:g.height,y_shift:g.y_shift,left_shift_px:i,right_shift_px:j};new a({first_note:d.first_note,last_note:d.last_note},e).setContext(b).setRenderOptions(k).setPosition(f).draw()},a.prototype={init:function(a,b){this.notes=a,this.hairpin=b,this.position=Vex.Flow.Modifier.Position.BELOW,this.context=null,this.render_options={height:10,y_shift:0,left_shift_px:0,right_shift_px:0},this.setNotes(a)},setContext:function(a){return this.context=a,this},setPosition:function(a){return(a==Vex.Flow.Modifier.Position.ABOVE||a==Vex.Flow.Modifier.Position.BELOW)&&(this.position=a),this},setRenderOptions:function(a){return null!=a.height&&null!=a.y_shift&&null!=a.left_shift_px&&null!=a.right_shift_px&&(this.render_options=a),this},setNotes:function(a){if(!a.first_note&&!a.last_note)throw new Vex.RuntimeError("BadArguments","Hairpin needs to have either first_note or last_note set.");return this.first_note=a.first_note,this.last_note=a.last_note,this},renderHairpin:function(b){var c=this.context,d=this.render_options.y_shift+20,e=b.first_y;this.position==Vex.Flow.Modifier.Position.ABOVE&&(d=-d+30,e=b.first_y-b.staff_height);var f=this.render_options.left_shift_px,g=this.render_options.right_shift_px;switch(this.hairpin){case a.type.CRESC:c.moveTo(b.last_x+g,e+d),c.lineTo(b.first_x+f,e+this.render_options.height/2+d),c.lineTo(b.last_x+g,e+this.render_options.height+d);break;case a.type.DECRESC:c.moveTo(b.first_x+f,e+d),c.lineTo(b.last_x+g,e+this.render_options.height/2+d),c.lineTo(b.first_x+f,e+this.render_options.height+d)}c.stroke()},draw:function(){if(!this.context)throw new Vex.RERR("NoContext","Can't draw Hairpin without a context.");var a=this.first_note,b=this.last_note,c=a.getModifierStartXY(this.position,0),d=b.getModifierStartXY(this.position,0);return this.renderHairpin({first_x:c.x,last_x:d.x,first_y:a.getStave().y+a.getStave().height,last_y:b.getStave().y+b.getStave().height,staff_height:a.getStave().height}),!0}},a}(),Vex.Flow.Volta=function(){function a(a,b,c,d){arguments.length>0&&this.init(a,b,c,d)}return a.type={NONE:1,BEGIN:2,MID:3,END:4,BEGIN_END:5},Vex.Inherit(a,Vex.Flow.StaveModifier,{init:function(b,c,d,e){a.superclass.init.call(this),this.volta=b,this.x=d,this.y_shift=e,this.number=c,this.font={family:"sans-serif",size:9,weight:"bold"}},getCategory:function(){return"voltas"},setShiftY:function(a){return this.y_shift=a,this},draw:function(b,c){if(!b.context)throw new Vex.RERR("NoCanvasContext","Can't draw stave without canvas context.");var d=b.context,e=b.width,f=b.getYForTopText(b.options.num_lines)+this.y_shift,g=1.5*b.options.spacing_between_lines_px;switch(this.volta){case Vex.Flow.Volta.type.BEGIN:d.fillRect(this.x+c,f,1,g);break;case Vex.Flow.Volta.type.END:e-=5,d.fillRect(this.x+c+e,f,1,g);break;case Vex.Flow.Volta.type.BEGIN_END:e-=3,d.fillRect(this.x+c,f,1,g),d.fillRect(this.x+c+e,f,1,g)}return(this.volta==a.type.BEGIN||this.volta==a.type.BEGIN_END)&&(d.save(),d.setFont(this.font.family,this.font.size,this.font.weight),d.fillText(this.number,this.x+c+5,f+15),d.restore()),d.fillRect(this.x+c,f,e,1),this}}),a}(),Vex.Flow.Repetition=function(){function a(a,b,c){arguments.length>0&&this.init(a,b,c)
}return a.type={NONE:1,CODA_LEFT:2,CODA_RIGHT:3,SEGNO_LEFT:4,SEGNO_RIGHT:5,DC:6,DC_AL_CODA:7,DC_AL_FINE:8,DS:9,DS_AL_CODA:10,DS_AL_FINE:11,FINE:12},Vex.Inherit(a,Vex.Flow.StaveModifier,{init:function(b,c,d){a.superclass.init.call(this),this.symbol_type=b,this.x=c,this.x_shift=0,this.y_shift=d,this.font={family:"times",size:12,weight:"bold italic"}},getCategory:function(){return"repetitions"},setShiftX:function(a){return this.x_shift=a,this},setShiftY:function(a){return this.y_shift=a,this},draw:function(b,c){switch(this.symbol_type){case a.type.CODA_RIGHT:this.drawCodaFixed(b,c+b.width);break;case a.type.CODA_LEFT:this.drawSymbolText(b,c,"Coda",!0);break;case a.type.SEGNO_LEFT:this.drawSignoFixed(b,c);break;case a.type.SEGNO_RIGHT:this.drawSignoFixed(b,c+b.width);break;case a.type.DC:this.drawSymbolText(b,c,"D.C.",!1);break;case a.type.DC_AL_CODA:this.drawSymbolText(b,c,"D.C. al",!0);break;case a.type.DC_AL_FINE:this.drawSymbolText(b,c,"D.C. al Fine",!1);break;case a.type.DS:this.drawSymbolText(b,c,"D.S.",!1);break;case a.type.DS_AL_CODA:this.drawSymbolText(b,c,"D.S. al",!0);break;case a.type.DS_AL_FINE:this.drawSymbolText(b,c,"D.S. al Fine",!1);break;case a.type.FINE:this.drawSymbolText(b,c,"Fine",!1)}return this},drawCodaFixed:function(a,b){if(!a.context)throw new Vex.RERR("NoCanvasContext","Can't draw stave without canvas context.");var c=a.getYForTopText(a.options.num_lines)+this.y_shift;return Vex.Flow.renderGlyph(a.context,this.x+b+this.x_shift,c+25,40,"v4d",!0),this},drawSignoFixed:function(a,b){if(!a.context)throw new Vex.RERR("NoCanvasContext","Can't draw stave without canvas context.");var c=a.getYForTopText(a.options.num_lines)+this.y_shift;return Vex.Flow.renderGlyph(a.context,this.x+b+this.x_shift,c+25,30,"v8c",!0),this},drawSymbolText:function(a,b,c,d){if(!a.context)throw new Vex.RERR("NoCanvasContext","Can't draw stave without canvas context.");var e=a.context;e.save(),e.setFont(this.font.family,this.font.size,this.font.weight);var f=0+this.x_shift,g=b+this.x_shift;this.symbol_type==Vex.Flow.Repetition.type.CODA_LEFT?(f=this.x+a.options.vertical_bar_width,g=f+e.measureText(c).width+12):(g=this.x+b+a.width-5+this.x_shift,f=g-+e.measureText(c).width-12);var h=a.getYForTopText(a.options.num_lines)+this.y_shift;return d&&Vex.Flow.renderGlyph(e,g,h,40,"v4d",!0),e.fillText(c,f,h+5),e.restore(),this}}),a}(),Vex.Flow.StaveSection=function(){function a(a,b,c){arguments.length>0&&this.init(a,b,c)}var b=Vex.Flow.Modifier;return Vex.Inherit(a,b,{init:function(c,d,e){a.superclass.init.call(this),this.setWidth(16),this.section=c,this.position=b.Position.ABOVE,this.x=d,this.shift_x=0,this.shift_y=e,this.font={family:"sans-serif",size:12,weight:"bold"}},getCategory:function(){return"stavesection"},setStaveSection:function(a){return this.section=a,this},setShiftX:function(a){return this.shift_x=a,this},setShiftY:function(a){return this.shift_y=a,this},draw:function(a,b){if(!a.context)throw new Vex.RERR("NoContext","Can't draw stave section without a context.");var c=a.context;c.save(),c.lineWidth=2,c.setFont(this.font.family,this.font.size,this.font.weight);var d=c.measureText(""+this.section).width,e=d+6;18>e&&(e=18);var f=20,g=a.getYForTopText(3)+this.shift_y,h=this.x+b;return c.beginPath(),c.lineWidth=2,c.rect(h,g,e,f),c.stroke(),h+=(e-d)/2,c.fillText(""+this.section,h,g+16),c.restore(),this}}),a}(),Vex.Flow.StaveTempo=function(){function a(a,b,c){arguments.length>0&&this.init(a,b,c)}return Vex.Inherit(a,Vex.Flow.StaveModifier,{init:function(b,c,d){a.superclass.init.call(this),this.tempo=b,this.position=Vex.Flow.Modifier.Position.ABOVE,this.x=c,this.shift_x=10,this.shift_y=d,this.font={family:"times",size:14,weight:"bold"},this.render_options={glyph_font_scale:30}},getCategory:function(){return"stavetempo"},setTempo:function(a){return this.tempo=a,this},setShiftX:function(a){return this.shift_x=a,this},setShiftY:function(a){return this.shift_y=a,this},draw:function(a,b){if(!a.context)throw new Vex.RERR("NoContext","Can't draw stave tempo without a context.");var c=this.render_options,d=c.glyph_font_scale/38,e=this.tempo.name,f=this.tempo.duration,g=this.tempo.dots,h=this.tempo.bpm,i=this.font,j=a.context,k=this.x+this.shift_x+b,l=a.getYForTopText(1)+this.shift_y;if(j.save(),e&&(j.setFont(i.family,i.size,i.weight),j.fillText(e,k,l),k+=j.measureText(e).width),f&&h){j.setFont(i.family,i.size,"normal"),e&&(k+=j.measureText(" ").width,j.fillText("(",k,l),k+=j.measureText("(").width);var m=Vex.Flow.durationToGlyph(f);if(k+=3*d,Vex.Flow.renderGlyph(j,k,l,c.glyph_font_scale,m.code_head),k+=m.head_width*d,m.stem){var n=30;m.beam_count&&(n+=3*(m.beam_count-1)),n*=d;var o=l-n;j.fillRect(k,o,d,n),m.flag&&(Vex.Flow.renderGlyph(j,k+d,o,c.glyph_font_scale,m.code_flag_upstem),g||(k+=6*d))}for(var p=0;g>p;p++)k+=6*d,j.beginPath(),j.arc(k,l+2*d,2*d,0,2*Math.PI,!1),j.fill();j.fillText(" = "+h+(e?")":""),k+3*d,l)}return j.restore(),this}}),a}(),Vex.Flow.StaveText=function(){function a(a,b,c){arguments.length>0&&this.init(a,b,c)}var b=Vex.Flow.Modifier;return Vex.Inherit(a,b,{init:function(b,c,d){a.superclass.init.call(this),this.setWidth(16),this.text=b,this.position=c,this.options={shift_x:0,shift_y:0,justification:Vex.Flow.TextNote.Justification.CENTER},Vex.Merge(this.options,d),this.font={family:"times",size:16,weight:"normal"}},getCategory:function(){return"stavetext"},setStaveText:function(a){return this.text=a,this},setShiftX:function(a){return this.shift_x=a,this},setShiftY:function(a){return this.shift_y=a,this},setFont:function(a){Vex.Merge(this.font,a)},setText:function(a){this.text=a},draw:function(a){if(!a.context)throw new Vex.RERR("NoContext","Can't draw stave text without a context.");var b=a.context;b.save(),b.lineWidth=2,b.setFont(this.font.family,this.font.size,this.font.weight);var c,d,e=b.measureText(""+this.text).width,f=Vex.Flow.Modifier;switch(this.position){case f.Position.LEFT:case f.Position.RIGHT:d=(a.getYForLine(0)+a.getBottomLineY())/2+this.options.shift_y,c=this.position==f.Position.LEFT?a.getX()-e-24+this.options.shift_x:a.getX()+a.getWidth()+24+this.options.shift_x;break;case f.Position.ABOVE:case f.Position.BELOW:var g=Vex.Flow.TextNote.Justification;c=a.getX()+this.options.shift_x,this.options.justification==g.CENTER?c+=a.getWidth()/2-e/2:this.options.justification==g.RIGHT&&(c+=a.getWidth()-e),d=this.position==f.Position.ABOVE?a.getYForTopText(2)+this.options.shift_y:a.getYForBottomText(2)+this.options.shift_y;break;default:throw new Vex.RERR("InvalidPosition","Value Must be in Modifier.Position.")}return b.fillText(""+this.text,c,d+4),b.restore(),this}}),a}(),Vex.Flow.BarNote=function(){function a(){this.init()}function b(){a.DEBUG&&Vex.L("Vex.Flow.BarNote",arguments)}return Vex.Inherit(a,Vex.Flow.Note,{init:function(){a.superclass.init.call(this,{duration:"b"});var b=Vex.Flow.Barline.type;this.metrics={widths:{}},this.metrics.widths[b.SINGLE]=8,this.metrics.widths[b.DOUBLE]=12,this.metrics.widths[b.END]=15,this.metrics.widths[b.REPEAT_BEGIN]=14,this.metrics.widths[b.REPEAT_END]=14,this.metrics.widths[b.REPEAT_BOTH]=18,this.metrics.widths[b.NONE]=0,this.ignore_ticks=!0,this.type=b.SINGLE,this.setWidth(this.metrics.widths[this.type])},getType:function(){return this.type},setType:function(a){return this.type=a,this.setWidth(this.metrics.widths[this.type]),this},getBoundingBox:function(){return new Vex.Flow.BoundingBox(0,0,0,0)},addToModifierContext:function(){return this},preFormat:function(){return this.setPreFormatted(!0),this},draw:function(){if(!this.stave)throw new Vex.RERR("NoStave","Can't draw without a stave.");b("Rendering bar line at: ",this.getAbsoluteX());var a=new Vex.Flow.Barline(this.type,this.getAbsoluteX());a.draw(this.stave)}}),a}(),Vex.Flow.Tremolo=function(){function a(a){arguments.length>0&&this.init(a)}var b=Vex.Flow.Modifier;return Vex.Inherit(a,b,{init:function(c){a.superclass.init.call(this),this.num=c,this.note=null,this.index=null,this.position=b.Position.CENTER,this.code="v74",this.shift_right=-2,this.y_spacing=4,this.render_options={font_scale:35,stroke_px:3,stroke_spacing:10},this.font={family:"Arial",size:16,weight:""}},getCategory:function(){return"tremolo"},draw:function(){if(!this.context)throw new Vex.RERR("NoContext","Can't draw Tremolo without a context.");if(!this.note||null==this.index)throw new Vex.RERR("NoAttachedNote","Can't draw Tremolo without a note and index.");var a=this.note.getModifierStartXY(this.position,this.index),b=a.x,c=a.y;b+=this.shift_right;for(var d=0;d<this.num;++d)Vex.Flow.renderGlyph(this.context,b,c,this.render_options.font_scale,this.code),c+=this.y_spacing}}),a}(),Vex.Flow.Tuplet=function(){function a(a,b){arguments.length>0&&this.init(a,b)}return a.LOCATION_TOP=1,a.LOCATION_BOTTOM=-1,a.prototype={init:function(b,c){if(!b||b==[])throw new Vex.RuntimeError("BadArguments","No notes provided for tuplet.");if(1==b.length)throw new Vex.RuntimeError("BadArguments","Too few notes for tuplet.");this.options=Vex.Merge({},c),this.notes=b,this.num_notes="num_notes"in this.options?this.options.num_notes:b.length,this.beats_occupied="beats_occupied"in this.options?this.options.beats_occupied:2,this.bracketed=null==b[0].beam,this.ratioed=!1,this.point=28,this.y_pos=16,this.x_pos=100,this.width=200,this.location=a.LOCATION_TOP,Vex.Flow.Formatter.AlignRestsToNotes(b,!0,!0),this.resolveGlyphs(),this.attach()},attach:function(){for(var a=0;a<this.notes.length;a++){var b=this.notes[a];b.setTuplet(this)}},detach:function(){for(var a=0;a<this.notes.length;a++){var b=this.notes[a];b.setTuplet(null)}},setContext:function(a){return this.context=a,this},setBracketed:function(a){return this.bracketed=a?!0:!1,this},setRatioed:function(a){return this.ratioed=a?!0:!1,this},setTupletLocation:function(b){if(b){if(b!=a.LOCATION_TOP&&b!=a.LOCATION_BOTTOM)throw new Vex.RERR("BadArgument","Invalid tuplet location: "+b)}else b=a.LOCATION_TOP;return this.location=b,this},getNotes:function(){return this.notes},getNoteCount:function(){return this.num_notes},getBeatsOccupied:function(){return this.beats_occupied},setBeatsOccupied:function(a){this.detach(),this.beats_occupied=a,this.resolveGlyphs(),this.attach()},resolveGlyphs:function(){this.num_glyphs=[];for(var a=this.num_notes;a>=1;)this.num_glyphs.push(new Vex.Flow.Glyph("v"+a%10,this.point)),a=parseInt(a/10,10);for(this.denom_glyphs=[],a=this.beats_occupied;a>=1;)this.denom_glyphs.push(new Vex.Flow.Glyph("v"+a%10,this.point)),a=parseInt(a/10,10)},draw:function(){if(!this.context)throw new Vex.RERR("NoCanvasContext","Can't draw without a canvas context.");var b=this.notes[0],c=this.notes[this.notes.length-1];this.bracketed?(this.x_pos=b.getTieLeftX()-5,this.width=c.getTieRightX()-this.x_pos+5):(this.x_pos=b.getStemX(),this.width=c.getStemX()-this.x_pos);var d;if(this.location==a.LOCATION_TOP)for(this.y_pos=b.getStave().getYForLine(0)-15,d=0;d<this.notes.length;++d){var e=this.notes[d].getStemDirection()===Vex.Flow.Stem.UP?this.notes[d].getStemExtents().topY-10:this.notes[d].getStemExtents().baseY-20;e<this.y_pos&&(this.y_pos=e)}else for(this.y_pos=b.getStave().getYForLine(4)+20,d=0;d<this.notes.length;++d){var f=this.notes[d].getStemDirection()===Vex.Flow.Stem.UP?this.notes[d].getStemExtents().baseY+20:this.notes[d].getStemExtents().topY+10;f>this.y_pos&&(this.y_pos=f)}var g,h=0;for(g in this.num_glyphs)h+=this.num_glyphs[g].getMetrics().width;if(this.ratioed){for(g in this.denom_glyphs)h+=this.denom_glyphs[g].getMetrics().width;h+=.32*this.point}var i=this.x_pos+this.width/2,j=i-h/2;if(this.bracketed){var k=this.width/2-h/2-5;k>0&&(this.context.fillRect(this.x_pos,this.y_pos,k,1),this.context.fillRect(this.x_pos+this.width/2+h/2+5,this.y_pos,k,1),this.context.fillRect(this.x_pos,this.y_pos+(this.location==a.LOCATION_BOTTOM),1,10*this.location),this.context.fillRect(this.x_pos+this.width,this.y_pos+(this.location==a.LOCATION_BOTTOM),1,10*this.location))}var l=0,m=this.num_glyphs.length;for(g in this.num_glyphs)this.num_glyphs[m-g-1].render(this.context,j+l,this.y_pos+this.point/3-2),l+=this.num_glyphs[m-g-1].getMetrics().width;if(this.ratioed){var n=j+l+.16*this.point,o=.06*this.point;this.context.beginPath(),this.context.arc(n,this.y_pos-.08*this.point,o,0,2*Math.PI,!0),this.context.closePath(),this.context.fill(),this.context.beginPath(),this.context.arc(n,this.y_pos+.12*this.point,o,0,2*Math.PI,!0),this.context.closePath(),this.context.fill(),l+=.32*this.point,m=this.denom_glyphs.length;for(g in this.denom_glyphs)this.denom_glyphs[m-g-1].render(this.context,j+l,this.y_pos+this.point/3-2),l+=this.denom_glyphs[m-g-1].getMetrics().width}}},a}(),Vex.Flow.BoundingBox=function(){function a(a,b,c,d){this.init(a,b,c,d)}return a.copy=function(b){return new a(b.x,b.y,b.w,b.h)},a.prototype={init:function(a,b,c,d){this.x=a,this.y=b,this.w=c,this.h=d},getX:function(){return this.x},getY:function(){return this.y},getW:function(){return this.w},getH:function(){return this.h},setX:function(a){return this.x=a,this},setY:function(a){return this.y=a,this},setW:function(a){return this.w=a,this},setH:function(a){return this.h=a,this},move:function(a,b){this.x+=a,this.y+=b},clone:function(){return a.copy(this)},mergeWith:function(a,b){var c=a,d=this.x<c.x?this.x:c.x,e=this.y<c.y?this.y:c.y,f=this.x+this.w<c.x+c.w?c.x+c.w-this.x:this.x+this.w-Vex.Min(this.x,c.x),g=this.y+this.h<c.y+c.h?c.y+c.h-this.y:this.y+this.h-Vex.Min(this.y,c.y);return this.x=d,this.y=e,this.w=f,this.h=g,b&&this.draw(b),this},draw:function(a,b,c){b||(b=0),c||(c=0),a.rect(this.x+b,this.y+c,this.w,this.h),a.stroke()}},a}(),Vex.Flow.TextNote=function(){function a(a){arguments.length>0&&this.init(a)}return a.Justification={LEFT:1,CENTER:2,RIGHT:3},a.GLYPHS={segno:{code:"v8c",point:40,x_shift:0,y_shift:-10},tr:{code:"v1f",point:40,x_shift:0,y_shift:0},mordent_upper:{code:"v1e",point:40,x_shift:0,y_shift:0},mordent_lower:{code:"v45",point:40,x_shift:0,y_shift:0},f:{code:"vba",point:40,x_shift:0,y_shift:0},p:{code:"vbf",point:40,x_shift:0,y_shift:0},m:{code:"v62",point:40,x_shift:0,y_shift:0},s:{code:"v4a",point:40,x_shift:0,y_shift:0},z:{code:"v80",point:40,x_shift:0,y_shift:0},coda:{code:"v4d",point:40,x_shift:0,y_shift:-8},pedal_open:{code:"v36",point:40,x_shift:0,y_shift:0},pedal_close:{code:"v5d",point:40,x_shift:0,y_shift:3},caesura_straight:{code:"v34",point:40,x_shift:0,y_shift:2},caesura_curved:{code:"v4b",point:40,x_shift:0,y_shift:2},breath:{code:"v6c",point:40,x_shift:0,y_shift:0},tick:{code:"v6f",point:50,x_shift:0,y_shift:0},turn:{code:"v72",point:40,x_shift:0,y_shift:0},turn_inverted:{code:"v33",point:40,x_shift:0,y_shift:0},mordent:{code:"v1e",point:40,x_shift:0,y_shift:0}},Vex.Inherit(a,Vex.Flow.Note,{init:function(b){if(a.superclass.init.call(this,b),this.text=b.text,this.superscript=b.superscript,this.subscript=b.subscript,this.glyph_type=b.glyph,this.glyph=null,this.font={family:"Arial",size:12,weight:""},b.font&&(this.font=b.font),this.glyph_type){var c=a.GLYPHS[this.glyph_type];if(!c)throw new Vex.RERR("Invalid glyph type: "+this.glyph_type);this.glyph=new Vex.Flow.Glyph(c.code,c.point,{cache:!1}),this.setWidth(c.width?c.width:this.glyph.getMetrics().width),this.glyph_struct=c}else this.setWidth(Vex.Flow.textWidth(this.text));this.line=b.line||0,this.smooth=b.smooth||!1,this.ignore_ticks=b.ignore_ticks||!1,this.justification=a.Justification.LEFT},setJustification:function(a){return this.justification=a,this},setLine:function(a){return this.line=a,this},preFormat:function(){if(!this.context)throw new Vex.RERR("NoRenderContext","Can't measure text without rendering context.");this.preFormatted||(this.smooth?this.setWidth(0):this.glyph||this.setWidth(this.context.measureText(this.text).width),this.justification==a.Justification.CENTER?this.extraLeftPx=this.width/2:this.justification==a.Justification.RIGHT&&(this.extraLeftPx=this.width),this.setPreFormatted(!0))},draw:function(){if(!this.context)throw new Vex.RERR("NoCanvasContext","Can't draw without a canvas context.");if(!this.stave)throw new Vex.RERR("NoStave","Can't draw without a stave.");var b=this.context,c=this.getAbsoluteX();this.justification==a.Justification.CENTER?c-=this.getWidth()/2:this.justification==a.Justification.RIGHT&&(c-=this.getWidth());var d;if(this.glyph)d=this.stave.getYForLine(this.line+-3),this.glyph.render(this.context,c+this.glyph_struct.x_shift,d+this.glyph_struct.y_shift);else{d=this.stave.getYForLine(this.line+-3),b.save(),b.setFont(this.font.family,this.font.size,this.font.weight),b.fillText(this.text,c,d);var e=b.measureText("M").width,f=b.measureText(this.text).width;this.superscript&&(b.setFont(this.font.family,this.font.size/1.3,this.font.weight),b.fillText(this.superscript,c+f+2,d-e/2.2)),this.subscript&&(b.setFont(this.font.family,this.font.size/1.3,this.font.weight),b.fillText(this.subscript,c+f+2,d+e/2.2-1)),b.restore()}}}),a}(),Vex.Flow.FretHandFinger=function(){function a(a){arguments.length>0&&this.init(a)}a.CATEGORY="frethandfinger";var b=Vex.Flow.Modifier;return a.format=function(a,b){var c=b.left_shift,d=b.right_shift,e=1;if(!a||0===a.length)return!1;var f,g,h,i,j,k=[],l=null,m=0,n=0;for(f=0;f<a.length;++f){g=a[f],h=g.getNote(),i=g.getPosition();var o=h.getKeyProps()[g.getIndex()];if(h!=l){for(var p=0;p<h.keys.length;++p)j=h.getKeyProps()[p],0===c&&(m=j.displaced?h.getExtraLeftPx():m),0===d&&(n=j.displaced?h.getExtraRightPx():n);l=h}k.push({line:o.line,pos:i,shiftL:m,shiftR:n,note:h,num:g})}k.sort(function(a,b){return b.line-a.line});var q=0,r=0,s=0,t=0,u=null,v=null;for(f=0;f<k.length;++f){var w=0;h=k[f].note,i=k[f].pos,g=k[f].num;var x=k[f].line,y=k[f].shiftL,z=k[f].shiftR;(x!=u||h!=v)&&(q=c+y,r=d+z);var A=g.getWidth()+e;i==Vex.Flow.Modifier.Position.LEFT?(g.setXShift(c+q),w=c+A,s=w>s?w:s):i==Vex.Flow.Modifier.Position.RIGHT&&(g.setXShift(r),w=n+A,t=w>t?w:t),u=x,v=h}b.left_shift+=s,b.right_shift+=t},Vex.Inherit(a,b,{init:function(a){var c=Vex.Flow.FretHandFinger.superclass;c.init.call(this),this.note=null,this.index=null,this.finger=a,this.width=7,this.position=b.Position.LEFT,this.x_shift=0,this.y_shift=0,this.x_offset=0,this.y_offset=0,this.font={family:"sans-serif",size:9,weight:"bold"}},getNote:function(){return this.note},setNote:function(a){return this.note=a,this},getIndex:function(){return this.index},setIndex:function(a){return this.index=a,this},getPosition:function(){return this.position},setPosition:function(a){return a>=b.Position.LEFT&&a<=b.Position.BELOW&&(this.position=a),this},setFretHandFinger:function(a){return this.finger=a,this},setOffsetX:function(a){return this.x_offset=a,this},setOffsetY:function(a){return this.y_offset=a,this},draw:function(){if(!this.context)throw new Vex.RERR("NoContext","Can't draw string number without a context.");if(!this.note||null==this.index)throw new Vex.RERR("NoAttachedNote","Can't draw string number without a note and index.");var a=this.context,c=this.note.getModifierStartXY(this.position,this.index),d=c.x+this.x_shift+this.x_offset,e=c.y+this.y_shift+this.y_offset+5;switch(this.position){case b.Position.ABOVE:d-=4,e-=12;break;case b.Position.BELOW:d-=2,e+=10;break;case b.Position.LEFT:d-=this.width;break;case b.Position.RIGHT:d+=1}a.save(),a.setFont(this.font.family,this.font.size,this.font.weight),a.fillText(""+this.finger,d,e),a.restore()}}),a}(),Vex.Flow.StringNumber=function(){function a(a){arguments.length>0&&this.init(a)}a.CATEGORY="stringnumber";var b=Vex.Flow.Modifier;return a.format=function(a,b){var c=b.left_shift,d=b.right_shift,e=1;if(!a||0===a.length)return this;var f,g,h,i,j,k=[],l=null,m=0,n=0;for(f=0;f<a.length;++f)for(g=a[f],h=g.getNote(),f=0;f<a.length;++f){g=a[f],h=g.getNote(),i=g.getPosition();var o=h.getKeyProps()[g.getIndex()];if(h!=l){for(var p=0;p<h.keys.length;++p)j=h.getKeyProps()[p],0===c&&(m=j.displaced?h.getExtraLeftPx():m),0===d&&(n=j.displaced?h.getExtraRightPx():n);l=h}k.push({line:o.line,pos:i,shiftL:m,shiftR:n,note:h,num:g})}k.sort(function(a,b){return b.line-a.line});var q=0,r=0,s=0,t=0,u=null,v=null;for(f=0;f<k.length;++f){var w=0;h=k[f].note,i=k[f].pos,g=k[f].num;var x=k[f].line,y=k[f].shiftL,z=k[f].shiftR;(x!=u||h!=v)&&(q=c+y,r=d+z);var A=g.getWidth()+e;i==Vex.Flow.Modifier.Position.LEFT?(g.setXShift(c),w=m+A,s=w>s?w:s):i==Vex.Flow.Modifier.Position.RIGHT&&(g.setXShift(r),w+=A,t=w>t?w:t),u=x,v=h}return b.left_shift+=s,b.right_shift+=t,!0},Vex.Inherit(a,b,{init:function(c){a.superclass.init.call(this),this.note=null,this.last_note=null,this.index=null,this.string_number=c,this.setWidth(20),this.position=b.Position.ABOVE,this.x_shift=0,this.y_shift=0,this.x_offset=0,this.y_offset=0,this.dashed=!0,this.leg=Vex.Flow.Renderer.LineEndType.NONE,this.radius=8,this.font={family:"sans-serif",size:10,weight:"bold"}},getNote:function(){return this.note},setNote:function(a){return this.note=a,this},getIndex:function(){return this.index},setIndex:function(a){return this.index=a,this},setLineEndType:function(a){return a>=Vex.Flow.Renderer.LineEndType.NONE&&a<=Vex.Flow.Renderer.LineEndType.DOWN&&(this.leg=a),this},getPosition:function(){return this.position},setPosition:function(a){return a>=b.Position.LEFT&&a<=b.Position.BELOW&&(this.position=a),this},setStringNumber:function(a){return this.string_number=a,this},setOffsetX:function(a){return this.x_offset=a,this},setOffsetY:function(a){return this.y_offset=a,this},setLastNote:function(a){return this.last_note=a,this},setDashed:function(a){return this.dashed=a,this},draw:function(){if(!this.context)throw new Vex.RERR("NoContext","Can't draw string number without a context.");if(!this.note||null==this.index)throw new Vex.RERR("NoAttachedNote","Can't draw string number without a note and index.");var a=this.context,c=this.note.stave.options.spacing_between_lines_px,d=this.note.getModifierStartXY(this.position,this.index),e=d.x+this.x_shift+this.x_offset,f=d.y+this.y_shift+this.y_offset;switch(this.position){case b.Position.ABOVE:case b.Position.BELOW:var g=this.note.getStemExtents(),h=g.topY,i=g.baseY+2;this.note.stem_direction==Vex.Flow.StaveNote.STEM_DOWN&&(h=g.baseY,i=g.topY-2),f=this.position==b.Position.ABOVE?this.note.hasStem()?h-1.75*c:d.y-1.75*c:this.note.hasStem()?i+1.5*c:d.y+1.75*c,f+=this.y_shift+this.y_offset;break;case b.Position.LEFT:e-=this.radius/2+5;break;case b.Position.RIGHT:e+=this.radius/2+6}a.save(),a.beginPath(),a.arc(e,f,this.radius,0,2*Math.PI,!1),a.lineWidth=1.5,a.stroke(),a.setFont(this.font.family,this.font.size,this.font.weight);var j=e-a.measureText(this.string_number).width/2;if(a.fillText(""+this.string_number,j,f+4.5),null!=this.last_note){var k=this.last_note.getStemX()-this.note.getX()+5;a.strokeStyle="#000000",a.lineCap="round",a.lineWidth=.6,this.dashed?Vex.Flow.Renderer.drawDashedLine(a,e+10,f,e+k,f,[3,3]):Vex.Flow.Renderer.drawDashedLine(a,e+10,f,e+k,f,[3,0]);var l,m;switch(this.leg){case Vex.Flow.Renderer.LineEndType.UP:l=-10,m=this.dashed?[3,3]:[3,0],Vex.Flow.Renderer.drawDashedLine(a,e+k,f,e+k,f+l,m);break;case Vex.Flow.Renderer.LineEndType.DOWN:l=10,m=this.dashed?[3,3]:[3,0],Vex.Flow.Renderer.drawDashedLine(a,e+k,f,e+k,f+l,m)}}a.restore()}}),a}(),Vex.Flow.Stroke=function(){function a(a,b){arguments.length>0&&this.init(a,b)}a.CATEGORY="strokes",a.Type={BRUSH_DOWN:1,BRUSH_UP:2,ROLL_DOWN:3,ROLL_UP:4,RASQUEDO_DOWN:5,RASQUEDO_UP:6};var b=Vex.Flow.Modifier;return a.format=function(a,b){var c=b.left_shift,d=0;if(!a||0===a.length)return this;var e,f,g,h=[];for(e=0;e<a.length;++e){f=a[e];var i,j=f.getNote();j instanceof Vex.Flow.StaveNote?(i=j.getKeyProps()[f.getIndex()],g=i.displaced?j.getExtraLeftPx():0,h.push({line:i.line,shift:g,str:f})):(i=j.getPositions()[f.getIndex()],h.push({line:i.str,shift:0,str:f}))}var k=c,l=0;for(e=0;e<h.length;++e)f=h[e].str,g=h[e].shift,f.setXShift(k+g),l=Math.max(f.getWidth()+d,l);return b.left_shift+=l,!0},Vex.Inherit(a,b,{init:function(c,d){a.superclass.init.call(this),this.note=null,this.options=Vex.Merge({},d),this.all_voices="all_voices"in this.options?this.options.all_voices:!0,this.note_end=null,this.index=null,this.type=c,this.position=b.Position.LEFT,this.render_options={font_scale:38,stroke_px:3,stroke_spacing:10},this.font={family:"serif",size:10,weight:"bold italic"},this.setXShift(0),this.setWidth(10)},getPosition:function(){return this.position},addEndNote:function(a){return this.note_end=a,this},draw:function(){if(!this.context)throw new Vex.RERR("NoContext","Can't draw stroke without a context.");if(!this.note||null==this.index)throw new Vex.RERR("NoAttachedNote","Can't draw stroke without a note and index.");var b,c=this.note.getModifierStartXY(this.position,this.index),d=this.note.getYs(),e=c.y,f=c.y,g=c.x-5,h=this.note.stave.options.spacing_between_lines_px,i=this.getModifierContext().getModifiers(this.note.getCategory());for(b=0;b<i.length;b++){d=i[b].getYs();for(var j=0;j<d.length;j++)(this.note==i[b]||this.all_voices)&&(e=Vex.Min(e,d[j]),f=Vex.Max(f,d[j]))}var k,l,m,n,o;switch(this.type){case a.Type.BRUSH_DOWN:k="vc3",l=-3,m=e-h/2+10,f+=h/2;break;case a.Type.BRUSH_UP:k="v11",l=.5,m=f+h/2,e-=h/2;break;case a.Type.ROLL_DOWN:case a.Type.RASQUEDO_DOWN:k="vc3",l=-3,n=this.x_shift+l-2,this.note instanceof Vex.Flow.StaveNote?(e+=1.5*h,f+=(f-e)%2!==0?.5*h:h,m=e-h,o=f+h+2):(e+=1.5*h,f+=h,m=e-.75*h,o=f+.25*h);break;case a.Type.ROLL_UP:case a.Type.RASQUEDO_UP:k="v52",l=-4,n=this.x_shift+l-1,this.note instanceof Vex.Flow.StaveNote?(m=h/2,e+=.5*h,(f-e)%2===0&&(f+=h/2),m=f+.5*h,o=e-1.25*h):(e+=.25*h,f+=.5*h,m=f+.25*h,o=e-h)}if(this.type==a.Type.BRUSH_DOWN||this.type==a.Type.BRUSH_UP)this.context.fillRect(g+this.x_shift,e,1,f-e);else if(this.note instanceof Vex.Flow.StaveNote)for(b=e;f>=b;b+=h)Vex.Flow.renderGlyph(this.context,g+this.x_shift-4,b,this.render_options.font_scale,"va3");else{for(b=e;f>=b;b+=10)Vex.Flow.renderGlyph(this.context,g+this.x_shift-4,b,this.render_options.font_scale,"va3");this.type==Vex.Flow.Stroke.Type.RASQUEDO_DOWN&&(o=b+.25*h)}Vex.Flow.renderGlyph(this.context,g+this.x_shift+l,m,this.render_options.font_scale,k),(this.type==a.Type.RASQUEDO_DOWN||this.type==a.Type.RASQUEDO_UP)&&(this.context.save(),this.context.setFont(this.font.family,this.font.size,this.font.weight),this.context.fillText("R",g+n,o),this.context.restore())}}),a}(),Vex.Flow.Curve=function(){function a(a,b,c){arguments.length>0&&this.init(a,b,c)}return a.Position={NEAR_HEAD:1,NEAR_TOP:2},a.DEBUG=!0,a.prototype={init:function(b,c,d){this.render_options={spacing:2,thickness:2,x_shift:0,y_shift:10,position:a.Position.NEAR_HEAD,invert:!1,cps:[{x:0,y:10},{x:0,y:10}]},Vex.Merge(this.render_options,d),this.setNotes(b,c)},setContext:function(a){return this.context=a,this},setNotes:function(a,b){if(!a&&!b)throw new Vex.RuntimeError("BadArguments","Curve needs to have either first_note or last_note set.");return this.from=a,this.to=b,this},isPartial:function(){return!this.from||!this.to},renderCurve:function(a){var b=this.context,c=this.render_options.cps,d=this.render_options.x_shift,e=this.render_options.y_shift*a.direction,f=a.first_x+d,g=a.first_y+e,h=a.last_x-d,i=a.last_y+e,j=this.render_options.thickness,k=(h-f)/(c.length+2);b.beginPath(),b.moveTo(f,g),b.bezierCurveTo(f+k+c[0].x,g+c[0].y*a.direction,h-k+c[1].x,i+c[1].y*a.direction,h,i),b.bezierCurveTo(h-k+c[1].x,i+(c[1].y+j)*a.direction,f+k+c[0].x,g+(c[0].y+j)*a.direction,f,g),b.stroke(),b.closePath(),b.fill()},draw:function(){if(!this.context)throw new Vex.RERR("NoContext","No context to render tie.");var b,c,d,e,f,g=this.from,h=this.to,i="baseY",j="baseY",k=this.render_options.position,l=this.render_options.position_end;return k===a.Position.NEAR_TOP&&(i="topY",j="topY"),l==a.Position.NEAR_HEAD?j="baseY":l==a.Position.NEAR_TOP&&(j="topY"),g?(b=g.getTieRightX(),f=g.getStemDirection(),d=g.getStemExtents()[i]):(b=h.getStave().getTieStartX(),d=h.getStemExtents()[i]),h?(c=h.getTieLeftX(),f=h.getStemDirection(),e=h.getStemExtents()[j]):(c=g.getStave().getTieEndX(),e=g.getStemExtents()[j]),this.renderCurve({first_x:b,last_x:c,first_y:d,last_y:e,direction:f*(this.render_options.invert===!0?-1:1)}),!0}},a}(),Vex.Flow.StaveLine=function(){function a(a){arguments.length>0&&this.init(a)}function b(a,b,c,d,e,f,g){a.beginPath(),a.moveTo(b,c),a.lineTo(d,e),a.lineTo(f,g),a.lineTo(b,c),a.closePath(),a.fill()}function c(a,c,d,e){var f,g,h,i,j=e.draw_start_arrow&&e.draw_end_arrow,k=c.x,l=c.y,m=d.x,n=d.y,o=Math.sqrt((m-k)*(m-k)+(n-l)*(n-l)),p=(o-e.arrowhead_length/3)/o;e.draw_end_arrow||j?(f=Math.round(k+(m-k)*p),g=Math.round(l+(n-l)*p)):(f=m,g=n),e.draw_start_arrow||j?(h=k+(m-k)*(1-p),i=l+(n-l)*(1-p)):(h=k,i=l),e.color&&(a.setStrokeStyle(e.color),a.setFillStyle(e.color)),a.beginPath(),a.moveTo(h,i),a.lineTo(f,g),a.stroke(),a.closePath();var q,r,s,t,u,v,w=Math.atan2(n-l,m-k),x=Math.abs(e.arrowhead_length/Math.cos(e.arrowhead_angle));(e.draw_end_arrow||j)&&(q=w+Math.PI+e.arrowhead_angle,s=m+Math.cos(q)*x,t=n+Math.sin(q)*x,r=w+Math.PI-e.arrowhead_angle,u=m+Math.cos(r)*x,v=n+Math.sin(r)*x,b(a,s,t,m,n,u,v)),(e.draw_start_arrow||j)&&(q=w+e.arrowhead_angle,s=k+Math.cos(q)*x,t=l+Math.sin(q)*x,r=w-e.arrowhead_angle,u=k+Math.cos(r)*x,v=l+Math.sin(r)*x,b(a,s,t,k,l,u,v))}return a.TextVerticalPosition={TOP:1,BOTTOM:2},a.TextJustification={LEFT:1,CENTER:2,RIGHT:3},a.prototype={init:function(b){this.notes=b,this.context=null,this.text="",this.font={family:"Arial",size:10,weight:""},this.render_options={padding_left:4,padding_right:3,line_width:1,line_dash:null,rounded_end:!0,color:null,draw_start_arrow:!1,draw_end_arrow:!1,arrowhead_length:10,arrowhead_angle:Math.PI/8,text_position_vertical:a.TextVerticalPosition.TOP,text_justification:a.TextJustification.CENTER},this.setNotes(b)},setContext:function(a){return this.context=a,this},setFont:function(a){return this.font=a,this},setText:function(a){return this.text=a,this},setNotes:function(a){if(!a.first_note&&!a.last_note)throw new Vex.RuntimeError("BadArguments","Notes needs to have either first_note or last_note set.");if(a.first_indices||(a.first_indices=[0]),a.last_indices||(a.last_indices=[0]),a.first_indices.length!=a.last_indices.length)throw new Vex.RuntimeError("BadArguments","Connected notes must have similar index sizes");return this.first_note=a.first_note,this.first_indices=a.first_indices,this.last_note=a.last_note,this.last_indices=a.last_indices,this},applyLineStyle:function(){if(!this.context)throw new Vex.RERR("NoContext","No context to apply the styling to");var a=this.render_options,b=this.context;a.line_dash&&b.setLineDash(a.line_dash),a.line_width&&b.setLineWidth(a.line_width),b.setLineCap(a.rounded_end?"round":"square")},applyFontStyle:function(){if(!this.context)throw new Vex.RERR("NoContext","No context to apply the styling to");var a=this.context;this.font&&a.setFont(this.font.family,this.font.size,this.font.weight),this.render_options.color&&(a.setStrokeStyle(this.render_options.color),a.setFillStyle(this.render_options.color))},draw:function(){if(!this.context)throw new Vex.RERR("NoContext","No context to render StaveLine.");var b=this.context,d=this.first_note,e=this.last_note,f=this.render_options;b.save(),this.applyLineStyle();var g,h;this.first_indices.forEach(function(a,i){var j=this.last_indices[i];g=d.getModifierStartXY(2,a),h=e.getModifierStartXY(1,j);var k=g.y>h.y;g.x+=d.getMetrics().modRightPx+f.padding_left,h.x-=e.getMetrics().modLeftPx+f.padding_right;var l=d.getGlyph().head_width,m=d.getKeyProps()[a].displaced;m&&1===d.getStemDirection()&&(g.x+=l+f.padding_left);var n=e.getKeyProps()[j].displaced;n&&-1===e.getStemDirection()&&(h.x-=l+f.padding_right),g.y+=k?-3:1,h.y+=k?2:0,c(b,g,h,this.render_options)},this),b.restore();var i=b.measureText(this.text).width,j=f.text_justification,k=0;if(j===a.TextJustification.LEFT)k=g.x;else if(j===a.TextJustification.CENTER){var l=h.x-g.x,m=l/2+g.x;k=m-i/2}else j===a.TextJustification.RIGHT&&(k=h.x-i);var n,o=f.text_position_vertical;return o===a.TextVerticalPosition.TOP?n=d.getStave().getYForTopText():o===a.TextVerticalPosition.BOTTOM&&(n=d.getStave().getYForBottomText()),b.save(),this.applyFontStyle(),b.fillText(this.text,k,n),b.restore(),this}},a}(),Vex.Flow.Crescendo=function(){function a(a){arguments.length>0&&this.init(a)
}function b(){a.DEBUG&&Vex.L("Vex.Flow.Crescendo",arguments)}function c(a,b){var c=b.begin_x,d=b.end_x,e=b.y,f=b.height/2;a.beginPath(),b.reverse?(a.moveTo(c,e-f),a.lineTo(d,e),a.lineTo(c,e+f)):(a.moveTo(d,e-f),a.lineTo(c,e),a.lineTo(d,e+f)),a.stroke(),a.closePath()}return Vex.Inherit(a,Vex.Flow.Note,{init:function(b){a.superclass.init.call(this,b),this.decrescendo=!1,this.line=b.line||0,this.height=15,Vex.Merge(this.render_options,{extend_left:0,extend_right:0,y_shift:0})},setLine:function(a){return this.line=a,this},setHeight:function(a){return this.height=a,this},setDecrescendo:function(a){return this.decrescendo=a,this},preFormat:function(){return this.preFormatted=!0,this},draw:function(){if(!this.context)throw new Vex.RERR("NoContext","Can't draw Hairpin without a context.");var a,d=this.getTickContext(),e=Vex.Flow.TickContext.getNextContext(d),f=this.getAbsoluteX();a=e?e.getX():this.stave.x+this.stave.width;var g=this.stave.getYForLine(this.line+-3)+1;b("Drawing ",this.decrescendo?"decrescendo ":"crescendo ",this.height,"x",f-a),c(this.context,{begin_x:f-this.render_options.extend_left,end_x:a+this.render_options.extend_right,y:g+this.render_options.y_shift,height:this.height,reverse:this.decrescendo})}}),a}(),Vex.Flow.Ornament=function(){function a(a){arguments.length>0&&this.init(a)}function b(){a.DEBUG&&Vex.L("Vex.Flow.Ornament",arguments)}a.CATEGORY="ornaments";var c={n:{shift_x:1,shift_y_upper:0,shift_y_lower:0,height:17},"#":{shift_x:0,shift_y_upper:-2,shift_y_lower:-2,height:20},b:{shift_x:1,shift_y_upper:0,shift_y_lower:3,height:18},"##":{shift_x:0,shift_y_upper:0,shift_y_lower:0,height:12},bb:{shift_x:0,shift_y_upper:0,shift_y_lower:4,height:17},db:{shift_x:-3,shift_y_upper:0,shift_y_lower:4,height:17},bbs:{shift_x:0,shift_y_upper:0,shift_y_lower:4,height:17},d:{shift_x:0,shift_y_upper:0,shift_y_lower:0,height:17},"++":{shift_x:-2,shift_y_upper:-6,shift_y_lower:-3,height:22},"+":{shift_x:1,shift_y_upper:-4,shift_y_lower:-2,height:20}},d=Vex.Flow.Modifier;return a.format=function(a,b){if(!a||0===a.length)return!1;for(var c,d=b.text_line,e=0,f=0;f<a.length;++f){var g=a[f];g.setTextLine(d),c=g.getWidth()>e?g.getWidth():e;var h=Vex.Flow.ornamentCodes(g.type);d+=h.between_lines?1:1.5}return b.left_shift+=c/2,b.right_shift+=c/2,b.text_line=d,!0},Vex.Inherit(a,d,{init:function(b){if(a.superclass.init.call(this),this.note=null,this.index=null,this.type=b,this.position=d.Position.ABOVE,this.delayed=!1,this.accidental_upper="",this.accidental_lower="",this.render_options={font_scale:38},this.ornament=Vex.Flow.ornamentCodes(this.type),!this.ornament)throw new Vex.RERR("ArgumentError","Ornament not found: '"+this.type+"'");this.setWidth(this.ornament.width)},setDelayed:function(a){return this.delayed=a,this},setUpperAccidental:function(a){return this.accidental_upper=a,this},setLowerAccidental:function(a){return this.accidental_lower=a,this},draw:function(){function a(a,b,d){var e=Vex.Flow.accidentalCodes(b),f=q-3,g=r+2;d?(g-=h?h.height:18,g+="tr"===t.type?-8:0):g+="tr"===t.type?-6:0;var h=c[b];h&&(f+=h.shift_x,g+=d?h.shift_y_upper:h.shift_y_lower);var i=t.render_options.font_scale/1.3;Vex.Flow.renderGlyph(a,f,g,i,e.code),d||(r-=h?h.height:18)}if(!this.context)throw new Vex.RERR("NoContext","Can't draw Ornament without a context.");if(!this.note||null===this.index)throw new Vex.RERR("NoAttachedNote","Can't draw Ornament without a note and index.");var d,e,f=this.context,g=this.note.getStemDirection(),h=this.note.getStave(),i=this.note.getStem().getExtents();g===Vex.Flow.StaveNote.STEM_DOWN?(d=i.baseY,e=i.topY):(d=i.topY,e=i.baseY);var j="tabnotes"===this.note.getCategory();j&&(this.note.hasStem()?g===Vex.Flow.StaveNote.STEM_UP?e=h.getYForBottomText(this.text_line-2):g===Vex.Flow.StaveNote.STEM_DOWN&&(d=h.getYForTopText(this.text_line-1.5)):(d=h.getYForTopText(this.text_line-1),e=h.getYForBottomText(this.text_line-2)));var k=g===Vex.Flow.StaveNote.STEM_DOWN,l=h.getSpacingBetweenLines(),m=1;!k&&this.note.beam&&(m+=.5);var n=l*(this.text_line+m),o=d-7-n,p=this.note.getModifierStartXY(this.position,this.index),q=p.x+this.ornament.shift_right,r=Math.min(h.getYForTopText(this.text_line)-3,o);if(r+=this.ornament.shift_up+this.y_shift,this.delayed){q+=this.ornament.width;var s=Vex.Flow.TickContext.getNextContext(this.note.getTickContext());q+=s?.5*(s.getX()-q):.5*(h.x+h.width-q)}var t=this;this.accidental_lower&&a(f,this.accidental_lower,!1,q,r),b("Rendering ornament: ",this.ornament,q,r),Vex.Flow.renderGlyph(f,q,r,this.render_options.font_scale,this.ornament.code),this.accidental_upper&&a(f,this.accidental_upper,!0,q,r)}}),a}(),Vex.Flow.PedalMarking=function(){function a(a){arguments.length>0&&this.init(a)}function b(){a.DEBUG&&Vex.L("Vex.Flow.PedalMarking",arguments)}function c(b,c,d,e,f){var g=a.GLYPHS[b],h=new Vex.Flow.Glyph(g.code,f);h.render(c,d+g.x_shift,e+g.y_shift)}return a.GLYPHS={pedal_depress:{code:"v36",x_shift:-10,y_shift:0},pedal_release:{code:"v5d",x_shift:-2,y_shift:3}},a.Styles={TEXT:1,BRACKET:2,MIXED:3},a.createSustain=function(b){var c=new a(b);return c},a.createSostenuto=function(b){var c=new a(b);return c.setStyle(a.Styles.MIXED),c.setCustomText("Sost. Ped."),c},a.createUnaCorda=function(b){var c=new a(b);return c.setStyle(a.Styles.TEXT),c.setCustomText("una corda","tre corda"),c},a.prototype={init:function(a){this.notes=a,this.style=Vex.Flow.PedalMarking.TEXT,this.line=0,this.custom_depress_text="",this.custom_release_text="",this.font={family:"Times New Roman",size:12,weight:"italic bold"},this.render_options={bracket_height:10,text_margin_right:6,bracket_line_width:1,glyph_point_size:40,color:"black"}},setCustomText:function(a,b){return this.custom_depress_text=a||"",this.custom_release_text=b||"",this},setStyle:function(a){if(1>a&&a>3)throw new Vex.RERR("InvalidParameter","The style must be one found in PedalMarking.Styles");return this.style=a,this},setLine:function(a){return this.line=a,this},setContext:function(a){return this.context=a,this},drawBracketed:function(){var b,d,e=this.context,f=!1,g=this;this.notes.forEach(function(h,i,j){f=!f;var k=h.getAbsoluteX(),l=h.getStave().getYForBottomText(g.line+3);if(b>k)throw new Vex.RERR("InvalidConfiguration","The notes provided must be in order of ascending x positions");var m=j[i+1]===h,n=j[i-1]===h,o=0;if(f)if(o=n?5:0,g.style!==a.Styles.MIXED||n)e.beginPath(),e.moveTo(k,l-g.render_options.bracket_height),e.lineTo(k+o,l),e.stroke(),e.closePath();else if(g.custom_depress_text){var p=e.measureText(g.custom_depress_text).width;e.fillText(g.custom_depress_text,k-p/2,l),o=p/2+g.render_options.text_margin_right}else c("pedal_depress",e,k,l,g.render_options.glyph_point_size),o=20+g.render_options.text_margin_right;else o=m?-5:0,e.beginPath(),e.moveTo(b,d),e.lineTo(k+o,l),e.lineTo(k,l-g.render_options.bracket_height),e.stroke(),e.closePath();b=k+o,d=l})},drawText:function(){var a=this.context,b=!1,d=this,e=d.render_options.glyph_point_size;this.notes.forEach(function(f){b=!b;var g=f.getStave(),h=f.getAbsoluteX(),i=g.getYForBottomText(d.line+3),j=0;b?d.custom_depress_text?(j=a.measureText(d.custom_depress_text).width,a.fillText(d.custom_depress_text,h-j/2,i)):c("pedal_depress",a,h,i,e):d.custom_release_text?(j=a.measureText(d.custom_release_text).width,a.fillText(d.custom_release_text,h-j/2,i)):c("pedal_release",a,h,i,e)})},draw:function(){if(!this.context)throw new Vex.RERR("NoContext","Can't draw PedalMarking without a context.");var c=this.context;c.save(),c.setStrokeStyle(this.render_options.color),c.setFillStyle(this.render_options.color),c.setFont(this.font.family,this.font.size,this.font.weight),b("Rendering Pedal Marking"),this.style===a.Styles.BRACKET||this.style===a.Styles.MIXED?(c.setLineWidth(this.render_options.bracket_line_width),this.drawBracketed()):this.style===Vex.Flow.PedalMarking.Styles.TEXT&&this.drawText(),c.restore()}},a}(),Vex.Flow.TextBracket=function(){function a(a){arguments.length>0&&this.init(a)}function b(){a.DEBUG&&Vex.L("Vex.Flow.TextBracket",arguments)}return a.Positions={TOP:1,BOTTOM:-1},a.prototype={init:function(b){this.start=b.start,this.stop=b.stop,this.text=b.text||"",this.superscript=b.superscript||"",this.position=b.position||a.Positions.TOP,this.line=1,this.font={family:"Serif",size:15,weight:"italic"},this.render_options={dashed:!0,dash:[5],color:"black",line_width:1,show_bracket:!0,bracket_height:8,underline_superscript:!0}},applyStyle:function(a){return a.setFont(this.font.family,this.font.size,this.font.weight),a.setStrokeStyle(this.render_options.color),a.setFillStyle(this.render_options.color),a.setLineWidth(this.render_options.line_width),this},setDashed:function(a,b){return this.render_options.dashed=a,b&&(this.render_options.dash=b),this},setFont:function(a){return this.font=a,this},setContext:function(a){return this.context=a,this},setLine:function(a){return this.line=a,this},draw:function(){var c=this.context,d=0;switch(this.position){case a.Positions.TOP:d=this.start.getStave().getYForTopText(this.line);break;case a.Positions.BOTTOM:d=this.start.getStave().getYForBottomText(this.line)}var e={x:this.start.getAbsoluteX(),y:d},f={x:this.stop.getAbsoluteX(),y:d};b("Rendering TextBracket: start:",e,"stop:",f,"y:",d);var g=this.render_options.bracket_height*this.position;c.save(),this.applyStyle(c),c.fillText(this.text,e.x,e.y);var h=c.measureText(this.text).width,i=c.measureText("M").width,j=e.y-i/2.5;c.setFont(this.font.family,this.font.size/1.4,this.font.weight),c.fillText(this.superscript,e.x+h+1,j);var k=c.measureText(this.superscript).width,l=c.measureText("M").width,m=e.x,n=j,o=f.x+this.stop.getGlyph().head_width;this.position===a.Positions.TOP?(m+=h+k+5,n-=l/2.7):this.position===a.Positions.BOTTOM&&(n+=l/2.7,m+=h+2,this.render_options.underline_superscript||(m+=k)),this.render_options.dashed?(Vex.Flow.Renderer.drawDashedLine(c,m,n,o,n,this.render_options.dash),this.render_options.show_bracket&&Vex.Flow.Renderer.drawDashedLine(c,o,n+1*this.position,o,n+g,this.render_options.dash)):(c.beginPath(),c.moveTo(m,n),c.lineTo(o,n),this.render_options.show_bracket&&c.lineTo(o,n+g),c.stroke(),c.closePath()),c.restore()}},a}(),Vex.Flow.TextDynamics=function(){function a(a){arguments.length>0&&this.init(a)}function b(){a.DEBUG&&Vex.L("Vex.Flow.TextDynamics",arguments)}return a.GLYPHS={f:{code:"vba",width:12},p:{code:"vbf",width:14},m:{code:"v62",width:17},s:{code:"v4a",width:10},z:{code:"v80",width:12},r:{code:"vb1",width:12}},Vex.Inherit(a,Vex.Flow.Note,{init:function(c){a.superclass.init.call(this,c),this.sequence=c.text.toLowerCase(),this.line=c.line||0,this.glyphs=[],Vex.Merge(this.render_options,{glyph_font_size:40}),b("New Dynamics Text: ",this.sequence)},setLine:function(a){return this.line=a,this},preFormat:function(){var b=0;return this.sequence.split("").forEach(function(c){var d=a.GLYPHS[c];if(!d)throw new Vex.RERR("Invalid dynamics character: "+c);var e=this.render_options.glyph_font_size,f=new Vex.Flow.Glyph(d.code,e);this.glyphs.push(f),b+=d.width},this),this.setWidth(b),this.preFormatted=!0,this},draw:function(){var c=this.getAbsoluteX(),d=this.stave.getYForLine(this.line+-3);b("Rendering Dynamics: ",this.sequence);var e=c;this.glyphs.forEach(function(b,c){var f=this.sequence[c];b.render(this.context,e,d),e+=a.GLYPHS[f].width},this)}}),a}(),Vex.Flow.GraceNote=function(){var a=function(a){arguments.length>0&&this.init(a)};return Vex.Inherit(a,Vex.Flow.StaveNote,{init:function(b){a.superclass.init.call(this,b),this.render_options.glyph_font_scale=22,this.render_options.stem_height=20,this.render_options.stroke_px=2,this.glyph.head_width=6,this.slash=b.slash,this.slur=!0,this.buildNoteHeads(),this.width=3},getStemExtension:function(){var a=this.getGlyph();return null!=this.stem_extension_override?this.stem_extension_override:a?1===this.getStemDirection()?a.gracenote_stem_up_extension:a.gracenote_stem_down_extension:0},getCategory:function(){return"gracenotes"},draw:function(){a.superclass.draw.call(this);var b=this.context,c=this.getStemDirection();if(this.slash){b.beginPath();var d=this.getAbsoluteX(),e=this.getYs()[0]-this.stem.getHeight()/2.8;1===c?(d+=1,b.lineTo(d,e),b.lineTo(d+13,e-9)):-1===c&&(d-=4,e+=1,b.lineTo(d,e),b.lineTo(d+13,e+9)),b.closePath(),b.stroke()}}}),a}(),Vex.Flow.GraceNoteGroup=function(){function a(a,b){arguments.length>0&&this.init(a,b)}function b(){a.DEBUG&&Vex.L("Vex.Flow.GraceNoteGroup",arguments)}return a.CATEGORY="gracenotegroups",a.format=function(a,b){var c=4;if(!a||0===a.length)return!1;var d,e,f,g=[],h=!1,i=null,j=0;for(d=0;d<a.length;++d){e=a[d];var k=e.getNote(),l=k.getStave();if(k!=i){for(var m=0;m<k.keys.length;++m)f=k.getKeyProps()[m],j=f.displaced?k.getExtraLeftPx():j;i=k}null!=l?(h=!0,g.push({shift:j,gracenote_group:e})):g.push({shift:j,gracenote_group:e})}var n=g[0].shift;for(d=0;d<g.length;++d)e=g[d].gracenote_group,e.preFormat(),n=e.getWidth()+c;return b.left_shift+=n,!0},Vex.Inherit(a,Vex.Flow.Modifier,{init:function(b,c){var d=a.superclass;return d.init.call(this),this.note=null,this.index=null,this.position=Vex.Flow.Modifier.Position.LEFT,this.grace_notes=b,this.width=0,this.preFormatted=!1,this.show_slur=c,this.slur=null,this.formatter=new Vex.Flow.Formatter,this.voice=new Vex.Flow.Voice({num_beats:4,beat_value:4,resolution:Vex.Flow.RESOLUTION}).setStrict(!1),this.voice.addTickables(this.grace_notes),this},preFormat:function(){this.preFormatted||(this.formatter.joinVoices([this.voice]).format([this.voice],0),this.setWidth(this.formatter.getMinTotalWidth()),this.preFormatted=!0)},beamNotes:function(){if(this.grace_notes.length>1){var a=new Vex.Flow.Beam(this.grace_notes);a.render_options.beam_width=3,a.render_options.partial_beam_length=4,this.beam=a}return this},setNote:function(a){this.note=a},setWidth:function(a){this.width=a},getWidth:function(){return this.width},setXShift:function(a){this.x_shift=a},draw:function(){function a(a,b){var c=b.getTickContext(),d=c.getExtraPx(),e=c.getX()-d.left-d.extraLeft;a.forEach(function(a){var c=a.getTickContext(),d=c.getX();a.setStave(b.stave),c.setX(e+d)})}if(!this.context)throw new Vex.RuntimeError("NoContext","Can't draw Grace note without a context.");var c=this.getNote();if(b("Drawing grace note group for:",c),!c||null===this.index)throw new Vex.RuntimeError("NoAttachedNote","Can't draw grace note without a parent note and parent note index.");a(this.grace_notes,c),this.grace_notes.forEach(function(a){a.setContext(this.context).draw()},this),this.beam&&this.beam.setContext(this.context).draw(),this.show_slur&&(this.slur=new Vex.Flow.StaveTie({last_note:this.grace_notes[0],first_note:c,first_indices:[0],last_indices:[0]}),this.slur.render_options.cp2=12,this.slur.setContext(this.context).draw())}}),a}();
/*# sourceMappingURL=vexflow-min.js.map*/;
define("vexflow", (function (global) {
    return function () {
        var ret, fn;
        return ret || global.Vex;
    };
}(this)));


define('modules/LSViewer/src/LSNoteView',['vexflow', 'modules/converters/MusicCSLJson/src/NoteModel_CSLJson'], function(Vex, NoteModel_CSLJson) {
	function LSNoteView(note) {
		this.vexflowNote = createVexflowNote(note);
		this.note = note;


		/**
		 * @param  {NoteModel} note
		 * @return {Vex.Flow.StaveNote}
		 */
		function createVexflowNote(note) {

			var cslNote = NoteModel_CSLJson.exportToMusicCSLJSON(note);
			if (note.isRest){
				cslNote.keys[0] = "B/4";
			}
			var vexflowNote = new Vex.Flow.StaveNote(cslNote);
			
			if (parseInt(vexflowNote.keyProps[0].octave, null) >= 5) {
				vexflowNote.setStemDirection(-1);
			}
			var accidental = [];
			var i;
			for (i = 0; i < note.getNumPitches(); i++) {
				accidental.push(note.getAccidental(i));
			}
			//accidental can either be a string (for monophony) or an array (for polyphony)
			for (var acc in accidental) {
				if (accidental[acc] != null && accidental[acc].length !== 0)
					vexflowNote.addAccidental(acc, new Vex.Flow.Accidental(accidental[acc]));
			}
			var dot = note.getDot();

			if (dot) {
				for (i = 0; i < dot; i++) vexflowNote.addDot(0);
			}
			//if (note.isRest)
			return vexflowNote;
		}

	}
	LSNoteView.prototype.getVexflowNote = function() {
		return this.vexflowNote;
	};

	LSNoteView.prototype.getArea = function() {
		var boundingBox = this.vexflowNote.getBoundingBox();
			
		return {
			x: boundingBox.x,
			y: this.vexflowNote.stave.y,
			w: boundingBox.w,
			h: boundingBox.h
		};
	};
	LSNoteView.prototype.isBeamable = function() {
		return (/^\d+$/).test(this.vexflowNote.duration) && !this.note.isRest;
	};
	return LSNoteView;
});
define('modules/LSViewer/src/LSChordView',['vexflow'], function(Vex) {
	function LSChordView(chord,color) {
		this.color = color || "#000";
		this.chord = chord;
	}
	LSChordView.prototype.draw = function(ctx, barDimensions, timeSig, chordsY) {

		function getChordX (beat, barDimensions, totalBeats) {
			var zeroBasedBeat = beat - 1;
			var beatWidth = barDimensions.width / totalBeats ;
			return barDimensions.left + zeroBasedBeat * beatWidth;
		}

		ctx.font = "18px Verdana"; // font for chords
		ctx.textBaseline = "top"; // font for chords
		ctx.fillStyle = this.color;
		var chordX = getChordX(this.chord.getBeat(),barDimensions,timeSig.getBeatUnit());
		ctx.fillText(this.chord.toString(), chordX, barDimensions.top - chordsY);
		ctx.fillStyle = "black";
		ctx.textBaseline = "alphabetic"; // font for chords
	};

	return LSChordView;
});
define('modules/LSViewer/src/LSBarView',['vexflow'], function(Vex) {
	function LSBarView(barDimensions) {
		this.vexflowStave = new Vex.Flow.Stave(barDimensions.left, barDimensions.top, barDimensions.width);
	}
	LSBarView.prototype.draw = function(ctx, songIt, sectionIt, endingsY, labelsY) {
		if (songIt.getBarIndex() === 0) {
			this.vexflowStave.addClef("treble").setContext(ctx).draw();
		}
		//name section
		if (sectionIt.getBarIndex() === 0) {
			var nameSection = sectionIt.getSection().getName();
			var repeatSection = parseInt(sectionIt.getSection().getRepeatTimes(), 10) + 1;
			var textRepeatSection = '';
			if (repeatSection > 1) {
				textRepeatSection += ' (x' + repeatSection + ')';
			}
			if (nameSection !== "") {
				this.vexflowStave.setSection(nameSection + textRepeatSection, 9);
			}
		}

		//Bar number
		var drawStavesNumber = true;
		if (drawStavesNumber === true) {
			ctx.font = "10px Verdana"; // font for staves number
			ctx.fillStyle = "#900";
			var position = this.getVexflowStave();
			ctx.fillText(songIt.getBarIndex() + 1, position.x + 3, position.y + 37);
			ctx.fillStyle = "#000";
			ctx.font = "18px Verdana";
		}

		var keySignature = songIt.getBarKeySignature();
		if (keySignature != songIt.prevKeySig) {
			this.vexflowStave.addKeySignature(keySignature);
		}

		var timeSignature = songIt.getBarTimeSignature();
		if (timeSignature.toString() != songIt.prevTimeSig) {
			this.vexflowStave.addTimeSignature(timeSignature.toString());
		}

		var bar = songIt.getBar(),
			followingBar = songIt.getFollowingBar(),
			ending = bar.getEnding();
		//endings
		if (ending) {
			songIt.setEndingState(followingBar.getEnding() ? 'BEGIN_END' : 'BEGIN');
			this.vexflowStave.setVoltaType(Vex.Flow.Volta.type[songIt.getEndingState()], ending + ".", endingsY);
		} else {

			if (songIt.getEndingState() != null) {
				if (sectionIt.isLastBar() || followingBar.getEnding()) {
					songIt.setEndingState('END');
					if (!sectionIt.isLastBar()) {
						this.vexflowStave.setEndBarType(Vex.Flow.Barline.type.REPEAT_END);
					}
					this.vexflowStave.setVoltaType(Vex.Flow.Volta.type[songIt.getEndingState()], ending + ".", endingsY);
					songIt.setEndingState(null);
				} else if (songIt.getEndingState() == 'BEGIN' || songIt.getEndingState() == 'MID') {
					songIt.setEndingState('MID');
					this.vexflowStave.setVoltaType(Vex.Flow.Volta.type[songIt.getEndingState()], ending + ".", endingsY);
				}
			}
		}

		var label = bar.getLabel();
		if (label === 'coda' || label === 'coda2') {
			this.vexflowStave.setRepetitionTypeRight(Vex.Flow.Repetition.type.CODA_RIGHT, labelsY);
		}
		if (label === 'segno' || label === 'segno2') {
			this.vexflowStave.setRepetitionTypeRight(Vex.Flow.Repetition.type.SEGNO_RIGHT, labelsY);
		}
		var sublabel = bar.getSublabel(true);
		if (sublabel != null) {
			this.vexflowStave.setRepetitionTypeRight(Vex.Flow.Repetition.type[sublabel], labelsY);
		}
		if (sectionIt.isLastBar()) {
			this.vexflowStave.setEndBarType(Vex.Flow.Barline.type.END);
		}
		this.vexflowStave.setContext(ctx).draw();
	};
	// LSBarView.prototype.setKeySignature = function(prevKeySignature) {
	// 	this.keySignature = song.getTonalityAt(this.numBar);

	// };
	LSBarView.prototype.getKeySignature = function() {
		return this.keySignature;
	};
	LSBarView.prototype.getVexflowStave = function() {
		return this.vexflowStave;
	};


	return LSBarView;
});
define('modules/LSViewer/src/BeamManager',['vexflow'], function(Vex) {
	function BeamManager() {
		this.beams = []; //array of arrays of vexflow notes, each array of vxfNotes represents a beam group
		this.counter = 0;
		this.lastNoteBeat = -1;
	}

	/**
	 * saves information for later drawing beams: it is set in this.beams
	 * @param  {NoteManagerModel} noteMng
	 * @param  {Number} iNote    index of note
	 * @param  {LSNoteView} noteView
	 */
	BeamManager.prototype.checkBeam = function(noteMng, iNote, noteView) {

		/**
		 * isSameBeat: for now we just consider beaming at quarter beat level (in the future we may decide beaming level dependign on time signature )
		 * @param  {Number}  beat1
		 * @param  {Number}  beat2
		 * @return {Boolean}
		 */
		function isSameBeat(beat1, beat2) {
			return Math.floor(beat1) == Math.floor(beat2);
		}

		var noteBeat;
		if (noteView.isBeamable()) {
			noteBeat = noteMng.getNoteBeat(iNote);
			//new position for beam array when they are not in same beat
			if (!isSameBeat(noteBeat, this.lastNoteBeat)) {
				//if length is not > 1, it means that we had a lonely beamable note, so we won't beam it
				//thus, we don't increment counter -> we overwrite position
				if (this.beams[this.counter] && this.beams[this.counter].length > 1) {
					this.counter++;
				}
				this.beams[this.counter] = [];
			}
			var vexflowNote = noteView.getVexflowNote();

			this.beams[this.counter].push(vexflowNote);
			this.lastNoteBeat = noteBeat;
		}
	};

	/**
	 * 	@return {Array} Array of Vex.Flow.Beam (generate from information in array this.beams) needed to draw
	 */
	BeamManager.prototype.getVexflowBeams = function() {
		var vexflowBeams = [];
		for (var j = 0; j < this.beams.length; j++) {
			if (this.beams[j] && this.beams[j].length > 1)
				vexflowBeams[j] = new Vex.Flow.Beam(this.beams[j], true); //auto_stem true
			else vexflowBeams[j] = null;
		}
		return vexflowBeams;
	};

	/**
	 * 	draws beams
	 * @param  {Context} ctx
	 * @param  {Array} vxfBeams  Array of Vex.Flow.Beam
	 */
	BeamManager.prototype.draw = function(ctx, vxfBeams) {
		for (var j = 0, c = vxfBeams.length; j < c; j++) {
			if (vxfBeams[j] !== null) vxfBeams[j].setContext(ctx).draw();
		}
	};

	return BeamManager;
});
define('modules/LSViewer/src/TieManager',['vexflow'], function(Vex) {
	function TieManager() {
			this.ties = [];
			this.numTies = 0;
			this.prevTieType = null;
		}
		/**
		 * saves information for drawing ties
		 * @param  {NoteModel} note
		 * @param  {Number} iNote index of note
		 */
	TieManager.prototype.checkTie = function(note, iNote) {
		var tieType;

		if (note.isTie()) {
			tieType = note.getTie();
			if (tieType == "start") {

				this.ties[this.numTies] = [];
				this.ties[this.numTies].push(iNote);
			} else { // (tieType=="stop" || tieType=="stop_start"){ 

				if (this.prevTieType == "stop" || this.prevTieType === null) {

					this.ties[this.numTies] = [];
					this.ties[this.numTies].push(null);
				}
				this.ties[this.numTies].push(iNote);
				this.numTies++;
			}
			if (tieType == "stop_start") {

				this.ties[this.numTies] = [];
				this.ties[this.numTies].push(iNote);
			}
			this.prevTieType = tieType;
		}

	};
	/**
	 * @param  {Context} ctx
	 * @param  {Array} noteViews of LSNoteView
	 * @param  {NoteManagerModel} nm
	 */
	TieManager.prototype.draw = function(ctx, noteViews, nm, barWidthMng, song) {

		function drawTie(note1, note2) {
			var vxTie = new Vex.Flow.StaveTie({
				first_note: note1,
				last_note: note2
			});
			vxTie.setContext(ctx);
			vxTie.draw();
		}
		var iNoteTieStart,
			iNoteTieEnd,
			iTieStartBar,
			iTieEndBar,
			auxStartNote;

		for (var i in this.ties) {
			iNoteTieStart = this.ties[i][0];
			iNoteTieEnd = this.ties[i][1];

			auxStartNote = noteViews[iNoteTieStart].getVexflowNote();

			iTieStartBar = nm.getNoteBarNumber(iNoteTieStart, song);
			iTieEndBar = nm.getNoteBarNumber(iNoteTieEnd, song);

			if (!barWidthMng.inSameLine(iTieStartBar, iTieEndBar)) {
				drawTie(auxStartNote, null);
				auxStartNote = null;
			}
			drawTie(auxStartNote, noteViews[iNoteTieEnd].getVexflowNote());

		}
	};


	return TieManager;
});
define('modules/LSViewer/src/TupletManager',['vexflow'], function(Vex) {
	function TupletManager() {
		this.tuplets = [];
		this.numTuplets = 0;
		this.prevTieType = null;
	}
	/**
	 * saves information for drawing tuplets later
	 * @param  {NoteModel} note  
	 * @param  {Number} iNote index of note
	 */
	TupletManager.prototype.checkTuplet = function(note, iNote) {

		var tuplet = note.getTuplet(),
			isTuplet;
		if (tuplet != null) {
			if (tuplet == 'start') {
				isTuplet = 1;
				this.numTuplets++;
				this.tuplets[this.numTuplets] = [];
				this.tuplets[this.numTuplets][0] = iNote;
			} else if (tuplet == 'stop') { //'stop'
				this.tuplets[this.numTuplets][1] = iNote;
			}
		}
	};
	/**
	 * @param  {Context} ctx          
	 * @param  {Array} noteViews Array of Vex.Flow.StaveNote
	 */
	TupletManager.prototype.draw = function(ctx, noteViews) {
		function convertToVxfNotes (noteViews) {
			var vxfNotes = [];
			for (var i in noteViews){
				vxfNotes.push(noteViews[i].getVexflowNote());
			}
			return vxfNotes;
		}
		var vexflowTuplet,
		tupletNotes;
		for (var i in this.tuplets) {
			tupletNotes = noteViews.slice(this.tuplets[i][0], this.tuplets[i][1] + 1);
			vexflowTuplet = new Vex.Flow.Tuplet(convertToVxfNotes(tupletNotes));
			vexflowTuplet.setContext(ctx).draw();
		}
	};


	return TupletManager;
});
define('modules/LSViewer/src/BarWidthManager',[],function() {
	function BarWidthManager(lineHeight, lineWidth, noteWidth, barsPerLine, marginTop) {
			if (!lineHeight) throw "BarWidthManager - lineHeight not defined";
			if (!lineWidth) throw "BarWidthManager - lineWidth not defined";
			if (!noteWidth) throw "BarWidthManager - noteWidth not defined";
			if (!barsPerLine) throw "BarWidthManager - barsPerLine not defined";
			if (!marginTop) throw "BarWidthManager - marginTop not defined";
			

			this.WIDTH_FACTOR = 1.6; // factor by witch we multiply the minimum width so that notes are not so crammed (always > 1)
			this.barsStruct = [];

			this.lineHeight = Number(lineHeight);
			this.lineWidth = Number(lineWidth);
			this.noteWidth = Number(noteWidth);
			this.barsPerLine = Number(barsPerLine);
			this.marginTop = Number(marginTop);
		}
		/**
		 * calculates the minimum width for each bar depending on the number of notes it has
		 * @param  {SongModel} song
		 * @param  {NoteManagerModel} noteMng
		 * @return {Array} of minimum widths    e.g.: [200,200,100,100,100,200,]
		 */
	BarWidthManager.prototype.getMinWidthList = function(song, noteMng) {
		var self = this,
			width,
			minWidthList = [],
			barNotes;

		song.getSections().forEach(function(section) {
			for (var iBar = 0; iBar < section.numberOfBars; iBar++) {
				barNotes = noteMng.getNotesAtBarNumber(iBar, song);
				width = (barNotes.length * self.noteWidth) * self.WIDTH_FACTOR;
				minWidthList.push(width);
			}
		});

		return minWidthList;
	};


	/**
	 * decides which bars go into which line depending on the width, constraints are: can't be wider than lineWidth
	 * @param  {Array} minWidthList  minimum width for each bar. e.g.: [200,200,500,500, 300,100,100,100]
	 * @return {Array 2-dimenensions}	matrix in which each line represents a line on the score,
	 * and the width for each bar fitting in the line. e.g. (being the line width 1160) [	[200,200,500],		( sum of widths is < 1160)
	 *																						[500,300,100,100,100]	(< 1160)
	 */
	BarWidthManager.prototype.assignBarsToLines = function(minWidthList, pickupAtStart) {

		/**
		 * @param  {Array} bars
		 * @param  {Integer} to   0 based index
		 * @return {Integer}
		 */
		function calculateWidth(bars, to) {
			var totalWidth = 0;
			for (var i = 0; i <= to; i++) {
				totalWidth += bars[i];
			}
			return totalWidth;
		}

		var numBarsProcessed = 0,
			lineMinWidths;
		var widthsByLine = [],
			lineWidthList,
			barWidth = this.lineWidth / this.barsPerLine,
			i,
			barsToGet,
			numCarriedBars = 0,
			numCurrLastBar;

		while (numBarsProcessed < minWidthList.length || numCarriedBars !== 0) {
			lineWidthList = [];
			barsToGet = this.barsPerLine + numCarriedBars;
			if (pickupAtStart && numBarsProcessed == 0) {
				barsToGet++;
			}

			numCurrLastBar = numBarsProcessed + barsToGet;

			lineMinWidths = minWidthList.slice(numBarsProcessed, numBarsProcessed + barsToGet);
			numCarriedBars = 0;

			var lastBarIncluded = lineMinWidths.length - 1;
			var exceedsTotal = true;
			while (exceedsTotal && lastBarIncluded >= 0) {
				// we check every time if all widths fit in line	
				if (calculateWidth(lineMinWidths, lastBarIncluded) < this.lineWidth) {
					// if they fit, we save them in lineWidthList
					exceedsTotal = false;
					for (i = 0; i <= lastBarIncluded; i++) lineWidthList[i] = lineMinWidths[i];
				} else {
					//if not, we take out iteratively last one and put as carry for the next line 
					if (lastBarIncluded > 0) {
						numCarriedBars++;
						lineMinWidths.pop();
						lastBarIncluded--;
					} else {
						// except if there are no widths left to take out. In that case it means that one width is already higher than lineWidth, 
						// in this case we save it as lineWidth (we'll may see crammed bar notes, but we can't make lines wider than linWidth,  this is an exceptional case)
						lineWidthList.push(this.lineWidth);
						exceedsTotal = false;
					}
				}
			}
			widthsByLine.push(lineWidthList);
			numBarsProcessed += lineMinWidths.length;
		}
		return widthsByLine;
	};
	/**
	 * Gets the final widths by recalculating them depending on whether there are bars which are too wide, and making flexible the rest of bars
	 * @param  {Array} minWidthsPerLine  [	[200,200,500],		( sum of widths is < 1160)
	 *                                   [500,300,100,100,100]	(< 1160)
	 *                                    ]
	 *																					]
	 * @return {Array}                 array (2-dimensions) with final widths that will be used to draw
	 */
	BarWidthManager.prototype.getWidths = function(minWidthsPerLine) {

		/**
		 * [getIndexOfWidthsExceedingMean description]
		 * @param  {Array} lineWidthList list of widths in one line
		 * @param  {Number} meanWidth
		 * @return {Array}               indexes of widths that exceede the meanWidth
		 */
		function getIndexOfWidthsExceedingMean(lineWidthList, meanWidth) {
				var indexes = [];
				for (var i = 0; i < lineWidthList.length; i++) {
					if (lineWidthList[i] > meanWidth) indexes.push(i);
				}
				return indexes;
			}
			/**
			 * @param  {Integer} lengthArray
			 * @return {Array}
			 */
		function createZeroArray(lengthArray) {
			var zeroArray = [];
			for (var i = 0; i < lengthArray; i++) {
				zeroArray[i] = 0;
			}
			return zeroArray;
		}

		/**
		 * sets the widths on the line depending on the minimum widths (central part of getWidths)
		 * @param {Array} minLineWidthList , array of one dimension representing the withs of one line
		 * @param {Integer} lineWidth
		 */
		function setLineWidthList(minLineWidthList, lineWidth) {
			var numWidths = minLineWidthList.length; // number of widths (i.e. of bars)  this line has
			var lineWidthList = createZeroArray(numWidths); //list of widths to return, initialized to 0

			var meanWidth = lineWidth / minLineWidthList.length; // if everything normal (no too wide bars), all bars should have meanWidth
			var indexes = getIndexOfWidthsExceedingMean(minLineWidthList, meanWidth); // we get indexes of bars that are too wide

			// in bars which are too wide, we set the original value, we also calculate the total with the wide bars take
			var takenWidth = 0;
			for (var i = 0; i < indexes.length; i++) {
				lineWidthList[indexes[i]] = minLineWidthList[indexes[i]];
				takenWidth += minLineWidthList[indexes[i]];
			}

			var numWidthsLessMean = numWidths - indexes.length; // number of bars that are not too wide
			var totalWidthLessMean = lineWidth - takenWidth; //  total remaining width

			//all bars that are not too wide will have same standard width
			var standardWidth = Math.round(totalWidthLessMean / numWidthsLessMean * 1000) / 1000;

			// we set the standard width to bars that are not too wide
			for (i = 0; i < lineWidthList.length; i++) {
				if (lineWidthList[i] === 0)
					lineWidthList[i] = standardWidth;
			}
			return lineWidthList;
		}

		var finalWidths = [],
			lineFinalWidths;

		for (var i = 0; i < minWidthsPerLine.length; i++) {
			lineFinalWidths = setLineWidthList(minWidthsPerLine[i], this.lineWidth);
			finalWidths.push(lineFinalWidths);
		}
		return finalWidths;
	};
	BarWidthManager.prototype.setBarsStruct = function(barsStruct) {
		this.barsStruct = barsStruct;
	};
	/**
	 * Decides which bar goes into which line depending on its width, and sets the final width depending on the distribution of bars among lines
	 * @param {SongMoel} song
	 * @param {NoteManagerModel} noteMng [description]
	 */

	BarWidthManager.prototype.calculateBarsStructure = function(song, noteMng) {

		var minWidthList = this.getMinWidthList(song, noteMng);
		var pickupAtStart = song.getSection(0).getNumberOfBars() == 1;
		var minWidthPerLineList = this.assignBarsToLines(minWidthList, pickupAtStart);
		this.setBarsStruct(this.getWidths(minWidthPerLineList));

	};



	/**
	 * returns top,left and width of a given bar. Used when drawing
	 * @param  {Integer} numBar
	 * @return {Object} {
	 *						top: topValue,
	 *						left: leftValue,
	 *						width: widthValue
	 *					}
	 */
	BarWidthManager.prototype.getDimensions = function(numBar) {
		var i, j,
			currentNumBar = 0,
			currentLine = 0,
			left = 0;
		for (i = 0; i < this.barsStruct.length; i++) {
			for (j = 0; j < this.barsStruct[i].length; j++) {
				if (currentNumBar == numBar) {
					return {
						left: left,
						width: this.barsStruct[i][j],
						top: currentLine * this.lineHeight + this.marginTop,
						height: this.lineHeight
					};
				}
				currentNumBar++;
				left += this.barsStruct[i][j];
			}
			left = 0;
			currentLine++;
		}
	};

	BarWidthManager.prototype.inSameLine = function(iBar1, iBar2) {
		var numBar = 0,
			line1 = -1,
			line2 = -1;
		labelMainFor: for (var line = 0; line < this.barsStruct.length; line++) {
			for (var j = 0; j < this.barsStruct[line].length; j++) {
				if (numBar == iBar1) line1 = line;
				if (numBar == iBar2) line2 = line;
				if (line1 != -1 && line2 != -1) break labelMainFor;
				numBar++;
			};
		}
		return line1 == line2;

	};
	return BarWidthManager;
});
	/**
	 * CanvasLayer is a canvas place on top of the basic canvas to manage edition and to draw elements such as cursors (to optimize rendering)
	 * @param {LSViewer} viewer 
	 */
define('modules/LSViewer/src/CanvasLayer',['jquery','pubsub'], function($, pubsub) {
	function CanvasLayer(viewer) {
		if (!viewer.canvas) {
			throw "LSViewer cannot create layer because canvas does not exist";
		}
		
		this.viewer = viewer;
		var canvasLayer = this._createLayer(viewer);
		this.canvasLayer = canvasLayer[0];
		this.ctx = canvasLayer[0].getContext('2d');
		this.color = "rgba(0,0,255,1)";
		this.mouseCoordsIni = null;
		this.mouseCoordsEnd = null;
		this.coords = {};
		this.mouseDown = false;
		this._listenEvents(canvasLayer);
		this.elems = {};
	}

	CanvasLayer.prototype._createLayer = function(viewer) {
		var canvasEl = $(viewer.canvas),
			idCanvas = canvasEl.attr('id'),
			idLayer = idCanvas + "-layer",
			offset = canvasEl.offset(),
			//top depends on the position (absolute, static..) of the canvas container element
			top = (canvasEl.parent().css("position") == "absolute") ? 0 : offset.top;

		var layersProps = {
			position: "absolute",
			left: offset.left,
			top: top
		};

		var canvasLayer;
		// we only create it if it does not exist
		if ($("canvas#" + idLayer).length === 0) {
			$("<canvas id='" + idLayer + "' width='" + canvasEl.width() + "' height='" + canvasEl.height() + "'></canvas>").insertAfter(canvasEl);
			canvasLayer = $("#" + idLayer);
			canvasLayer.css(layersProps);
			canvasLayer.css('z-index', 10);
		} else {
			canvasLayer = $("canvas#" + idLayer);
		}
		return canvasLayer;
	};

	CanvasLayer.prototype._getXandY = function(element, event) {
		xpos = event.pageX - element.offset().left;
		ypos = event.pageY - element.offset().top;
		return {
			x: xpos,
			y: ypos
		};
	};

	CanvasLayer.prototype._listenEvents = function() {
		var self = this,
			xy,
			coords;
		this.mouseDown = false;

		function getElemsByYs() {
			var minY = 999999, maxY = 0, minName, maxName, ys;
			var activeElems = [];
			for (var name in self.elems) {
				//self.elems[name].updateCursor([null,null]);
				if (typeof self.elems[name].getYs === 'function'){
					ys = self.elems[name].getYs(self.coords);
					if (ys.topY < minY){
						minY = ys.topY;
						minName = name;
					}
					if (ys.bottomY > maxY){
						maxY = ys.bottomY;
						maxName = name;	
					}
				}
				self.elems[name].cursor.setEditable(false);
				self.elems[name].disable();
			}
			if (minName){
				activeElems.push(self.elems[minName]);
			}
			if (maxName && minName != maxName){
				activeElems.push(self.elems[maxName]);
			}
			return activeElems;
		}

		function selection(mouseUp) {
			var cursorPos,
				activElems = getElemsByYs();
			for (var i in activElems){
				activElems[i].updateCursor(self.coords,mouseUp);
				activElems[i].cursor.setEditable(true);
				activElems[i].enable();
			}
			self.viewer.canvasLayer.refresh();
		}

		$(this.canvasLayer).mousedown(function(evt) {
			coords = self._getXandY($(this), evt);
			self.mouseCoordsIni = [coords.x, coords.y];
			self._setCoords(self.mouseCoordsIni, self.mouseCoordsIni);
			self.mouseDown = true;
		});
		$(this.canvasLayer).mouseup(function(evt) {
			self.mouseDown = false;
			selection(true);
		});
		$(this.canvasLayer).mousemove(function(evt) {
			//draw cursor selection
			var xy = self._getXandY($(this), evt);
			if (self.mouseDown) {
				var ctx = self.ctx;
				self.mouseCoordsEnd = [xy.x, xy.y];
				self._setCoords(self.mouseCoordsIni, self.mouseCoordsEnd);
				selection();
			}
			$.publish('CanvasLayer-mousemove', xy);
		});
		$.subscribe('CanvasLayer-refresh',function(el,name){
			self.viewer.canvasLayer.refresh(name);
		});

	};


	CanvasLayer.prototype._setCoords = function(mouseCoordsIni, mouseCoordsEnd) {

		function get(xory, type) {
			var evaluation;
			var num = (xory == "x") ? 0 : 1;
			if (type == "smaller") evaluation = (mouseCoordsIni[num] < mouseCoordsEnd[num]);
			else if (type == "greater") evaluation = (mouseCoordsIni[num] > mouseCoordsEnd[num]);
			else throw "not valid argument";

			return evaluation ? mouseCoordsIni[num] : mouseCoordsEnd[num];
		}
		this.coords.x = get("x", "smaller");
		this.coords.y = get("y", "smaller");
		this.coords.xe = get("x", "greater");
		this.coords.ye = get("y", "greater");

	};

	CanvasLayer.prototype.getCanvas = function() {
		return this.canvasLayer;
	};
	/**
	 * Elements to draw
	 * @param {String} name
	 * @param {Model} elem any model that has a draw function receiving a ctx
	 */
	CanvasLayer.prototype.addElement = function(elem) {
		if (!elem || !elem.name){
			throw 'CanvasLayer element needs name property';
		}
		this.elems[elem.name] = elem;
	};
	/**
	 * Refresh canvas layer: all elements in canvas layer should be elements cursors or elements that change fast
	 */
	CanvasLayer.prototype.refresh = function() {
		//console.log('refresh');
		this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);
		this.viewer.scale(this.ctx);
		// console.log(name1+","+name2);
		// console.log(this.elems);
		for (var name in this.elems) {
			if (this.elems[name].isEnabled()){
				this.elems[name].draw(this.ctx);
			}
			//TODO refactor, we are doing this only to make it work, but it's bad code
			if (typeof this.elems[name].drawCursor === 'function'){
				this.elems[name].drawCursor(this.ctx);
			}
		}
		this.viewer.resetScale(this.ctx);
		if (this.mouseDown) {
			var style = this.ctx.strokeStyle;
			this.ctx.strokeStyle = this.color;
			this.ctx.strokeRect(
				this.coords.x,
				this.coords.y,
				this.coords.xe - this.coords.x,
				this.coords.ye - this.coords.y
			);
			this.ctx.strokeStyle = style;
		}

	};
	return CanvasLayer;
});
define('modules/LSViewer/src/Scaler',[],function() {
	/**
	 * Scaler helps decoupling from LSViewer all classes that have to scale
	 * @param {[type]} scale [description]
	 */
	function Scaler(scale){
		if (scale){
			this.setScale(scale);			
		}
	}
	Scaler.prototype.setScale = function(scale) {
		this.scale = scale;
	};
	/**
		 * function to scale plain objects, normally they will be positions
		 * @param  {Object} obj normally in the form of {x: 23, y:130, xe: 33, ye: 23}
		 * @return {[type]}     [description]
		 */
	Scaler.prototype.getScaledObj = function(obj) {
		if (obj instanceof Object){
			var r = {};
			for (var prop in obj) {
				r[prop] = obj[prop] * this.scale;
			}
			return r;
		}
		else if (!isNaN(parseFloat(obj)) && isFinite(obj)){
			return obj * this.scale;
		}
		else{
			throw "Scaler only accept obj or number";
		}
	};
	return Scaler;
});
define('modules/LSViewer/src/LSViewer',[
		'vexflow',
		'modules/LSViewer/src/LSNoteView',
		'modules/LSViewer/src/LSChordView',
		'modules/LSViewer/src/LSBarView',
		'modules/LSViewer/src/BeamManager',
		'modules/LSViewer/src/TieManager',
		'modules/LSViewer/src/TupletManager',
		'modules/LSViewer/src/BarWidthManager',
		'modules/core/src/SectionBarsIterator',
		'modules/core/src/SongBarsIterator',
		'modules/LSViewer/src/CanvasLayer',
		'modules/LSViewer/src/Scaler',
		'jquery',
		'pubsub'
	],
	function(Vex, LSNoteView, LSChordView, LSBarView, BeamManager, TieManager, TupletManager, BarWidthManager, SectionBarsIterator, SongBarsIterator, CanvasLayer, Scaler, $, pubsub) {
		/**
		 * LSViewer Constructor
		 * @param {domObject} jQuery divContainer ; e.g.: $("#divContainerId");
		 * @param {Object} params, possible params:
		 *
		 *  - width: in pixels
		 *
		 *  - heightOverflow: "scroll" | "auto".
		 *    If scroll, when canvas is larger than containing div, it will scroll, if not, it will change div width
		 *  - typeResize: "scale" | "fluid",
		 *    If scale, when canvas is wider than containing div, it will scale to fit; if "fluid" it will try to fit withouth scaling.
		 *  - displayTitle
		 *  - displayComposer   // TODO: possibility of combining both (scale partially and then fluid)
		 *  - layer: true
		 *
		 */
		function LSViewer(divContainer, params) {
			this._init(divContainer, params);
			this._initSubscribe();
			this.el = divContainer;
		}
		LSViewer.prototype._init = function(divContainer, params) {
			params = params || {};
			this.DEFAULT_HEIGHT = 1000;
			this.scaler = new Scaler(); //object that scales objects. User in NoteSpaceView and ChordSpaceView
			this.SCALE = null; //scale from 0 to
			//0.999  fixes vexflow bug that doesn't draw last pixel on end bar
			this.setScale(0.999);

			this.CANVAS_DIV_WIDTH_PROPORTION = 0.97; //width proportion between canvas created and divContainer (space between canvas border and divContainer border)
			this.NOTE_WIDTH = 20; // estimated note width in order to be more flexible
			this.LINE_HEIGHT = 150;
			this.LINE_WIDTH = 1160;
			this.BARS_PER_LINE = 4;
			this.ENDINGS_Y = 20; //0 -> thisChordsPosY==40, the greater the closer to stave 
			this.LABELS_Y = 0; //like this.ENDINGS_Y
			this.MARGIN_TOP = 100;
			this.CHORDS_DISTANCE_STAVE = 20; //distance from stave
			this.DISPLAY_TITLE = (params.displayTitle != undefined) ? params.displayTitle : true;
			this.DISPLAY_COMPOSER = (params.displayComposer != undefined) ? params.displayComposer : true;
			this.LINE_MARGIN_TOP = 0;

			this.heightOverflow = params.heightOverflow || "auto";
			this.divContainer = divContainer;

			var idScore = "ls" + ($("canvas").length + 1),
				width = (params.width) ? params.width : $(divContainer).width() * this.CANVAS_DIV_WIDTH_PROPORTION;

			this.canvas = this._createCanvas(idScore, width, this.DEFAULT_HEIGHT);
			var renderer = new Vex.Flow.Renderer(this.canvas, Vex.Flow.Renderer.Backends.CANVAS);
			this.ctx = renderer.getContext("2d");

			if (params.typeResize == 'scale') {
				this.setScale((width / this.LINE_WIDTH));
			} else { // typeResize == 'fluid'
				this._setWidth(width);
			}
			this.layer = params.layer;

		};
		/**
		 * Creates and return a dom element
		 */
		LSViewer.prototype._createCanvas = function(idScore, width, height) {
			var canvas = $("<canvas id='" + idScore + "'></canvas>");
			canvas[0].width = width;
			canvas[0].height = height;

			canvas.appendTo(this.divContainer);
			var divCss = {
				textAlign: "center",
			};
			this.barWidthMng = null;

			$(this.divContainer).css(divCss);
			return canvas[0];
		};

		LSViewer.prototype._initSubscribe = function() {
			var self = this;
			$.subscribe('ToViewer-draw', function(el, songModel) {
				self.draw(songModel);
			});
		};

		LSViewer.prototype._setWidth = function(width) {
			var viewerWidth = width || this.LINE_WIDTH;
			this.LINE_WIDTH = viewerWidth;
		};

		LSViewer.prototype.scale = function(ctx) {
			ctx = ctx || this.ctx;
			ctx.scale(this.SCALE, this.SCALE);
		};
		LSViewer.prototype.resetScale = function(ctx) {
			ctx = ctx || this.ctx;
			ctx.scale(1 / this.SCALE, 1 / this.SCALE);
		};
		/**
		 * function useful to be called in 'draw' function between this.scale() and this.resetScale().
		 * It takes the width without taking into account we are scaling. This way we can place elements correctly (e.g. centering the title)
		 */
		LSViewer.prototype._getNonScaledWidth = function() {
			return this.canvas.width / this.SCALE;
		};

		LSViewer.prototype._displayTitle = function(title) {
			var oldTextAlign = this.ctx.textAlign;
			this.ctx.textAlign = 'center';
			this.ctx.font = "32px lato Verdana";
			this.ctx.fillText(title, this._getNonScaledWidth() / 2, 60, this._getNonScaledWidth());
			this.ctx.textAlign = oldTextAlign;
		};

		LSViewer.prototype._displayComposer = function(composer) {
			var oldTextAlign = this.ctx.textAlign;
			this.ctx.textAlign = 'right';
			this.ctx.font = "24px lato Verdana";
			if (typeof composer === "undefined") {
				composer = 'Unknown';
			}
			this.ctx.fillText(composer, this._getNonScaledWidth() - 20, 20, this._getNonScaledWidth());
			this.ctx.textAlign = oldTextAlign;

		};
		LSViewer.prototype.setScale = function(scale) {
			this.SCALE = scale;
			this.scaler.setScale(scale);

		};
		LSViewer.prototype.setLineMarginTop = function(lineMarginTop, bottom) {
			if (!bottom) {
				this.MARGIN_TOP += lineMarginTop;
			}
			this.LINE_HEIGHT += lineMarginTop;
			this.LINE_MARGIN_TOP = lineMarginTop;
		};
		LSViewer.prototype.setHeight = function(song, barWidthMng) {
			var totalNumBars = song.getComponent("bars").getTotal();
			this.canvas.height = (barWidthMng.getDimensions(totalNumBars - 1).top + this.LINE_HEIGHT) * this.SCALE;
			if (this.canvas.height > $(this.divContainer).height() && this.heightOverflow == 'scroll') {
				$(this.divContainer).css({
					overflowY: "scroll"
				});
			} else {
				$(this.divContainer).height(this.canvas.height);
			}
		};


		LSViewer.prototype.draw = function(song) {
			if (typeof song === "undefined") {
				console.warn('song is empty'); // only for debug, remove after 1 week safe
				return;
			}
			//console.time('whole draw');
			var i, j, v, c;

			var numBar = 0,
				self = this,
				nm = song.getComponent("notes"),
				cm = song.getComponent("chords"),
				barNotes,
				barChords,
				beamMng,
				tupletMng,
				bar,
				noteView,
				chordView,
				iNote = 0,
				stave,
				vxfBeams,
				noteViews = [],
				vxfBars = [],
				barDimensions,
				tieMng = new TieManager();

			this.barWidthMng = new BarWidthManager(this.LINE_HEIGHT, this.LINE_WIDTH, this.NOTE_WIDTH, this.BARS_PER_LINE, this.MARGIN_TOP);
			this.barWidthMng.calculateBarsStructure(song, nm);
			this.setHeight(song, this.barWidthMng);

			this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);
			this.scale();


			var numSection = 0;
			var songIt = new SongBarsIterator(song);
			var barView;
			var sectionIt;

			song.getSections().forEach(function(section) {

				// for each bar
				sectionIt = new SectionBarsIterator(section);
				while (sectionIt.hasNext()) {
					//console.time('whole bar');
					//console.log(sectionIt.getBarIndex());

					beamMng = new BeamManager();
					tupletMng = new TupletManager();
					bar = [];
					//console.time('getNotes');
					barNotes = nm.getNotesAtBarNumber(songIt.getBarIndex(), song);
					//console.timeEnd('getNotes');

					//console.time('drawNotes');
					// for each note of bar
					for (j = 0, v = barNotes.length; j < v; j++) {
						tieMng.checkTie(barNotes[j], iNote);
						tupletMng.checkTuplet(barNotes[j], iNote);
						noteView = new LSNoteView(barNotes[j]);
						beamMng.checkBeam(nm, iNote, noteView);
						
						bar.push(noteView.getVexflowNote());
						noteViews.push(noteView);
						iNote++;
					}
					//console.timeEnd('drawNotes');

					barDimensions = self.barWidthMng.getDimensions(songIt.getBarIndex());
					barView = new LSBarView(barDimensions);
					//console.time('drawBars');
					barView.draw(self.ctx, songIt, sectionIt, self.ENDINGS_Y, self.LABELS_Y);
					//console.timeEnd('drawBars');

					vxfBars.push({
						'barDimensions': barDimensions,
						'timeSignature': songIt.getBarTimeSignature(),
					});

					//console.time('getChords');
					barChords = cm.getChordsByBarNumber(songIt.getBarIndex());
					for (i = 0, c = barChords.length; i < c; i++) {
						chordView = new LSChordView(barChords[i]).draw(
							self.ctx,
							barDimensions,
							songIt.getBarTimeSignature(),
							self.CHORDS_DISTANCE_STAVE
						);
					}
					//console.timeEnd('getChords');
					//console.time('beams');
					vxfBeams = beamMng.getVexflowBeams(); // we need to do getVexflowBeams before drawing notes
					//console.timeEnd('beams');
					//console.time('stave');
					Vex.Flow.Formatter.FormatAndDraw(self.ctx, barView.getVexflowStave(), bar, {
						autobeam: false
					});
					//console.timeEnd('stave');
					//console.time('draw');
					beamMng.draw(self.ctx, vxfBeams); // and draw beams needs to be done after drawing notes
					tupletMng.draw(self.ctx, noteViews);
					//console.timeEnd('draw');

					songIt.next();
					sectionIt.next();
					//console.timeEnd('whole bar');
				}
				numSection++;
			});
			tieMng.draw(this.ctx, noteViews, nm, this.barWidthMng, song);
			this.noteViews = noteViews;
			this.vxfBars = vxfBars;
			this.ctx.fillStyle = "black";
			this.ctx.strokeStyle = "black";
			if (this.DISPLAY_COMPOSER) {
				this._displayComposer(song.getComposer());
			}
			if (this.DISPLAY_TITLE) {
				this._displayTitle(song.getTitle());
			}
			this.resetScale();
			//console.timeEnd('whole draw');
			// if we requested to have a layer and we haven't already created it
			if (this.layer && !this.canvasLayer) {
				this.canvasLayer = new CanvasLayer(this); //the canvasLayer needs to be created after the score has been drawn
			}
			$.publish('LSViewer-drawEnd', this);
		};
		/**
		 * When drawing an element from another module, it has to use this function
		 * @param  {Function} drawFunc function that draws the element, uses context determined by the other param layer
		 */
		LSViewer.prototype.drawElem = function(drawFunc) {
			this.scale(this.ctx);
			drawFunc(this.ctx);
			this.resetScale(this.ctx);
		};
		return LSViewer;

	});
define('utils/apiFlowMachines/ComposerServlet',['jquery'], function($) {
	var ComposerServlet = {};

	/**
	 * Return correct request for simple audio get
	 */
	ComposerServlet.getRequestForSimpleAudio = function(leadsheet, tempo, playComping, playTick, style) {
		var request = {
			'ls.leadsheet': leadsheet,
			'type': 'audio',
			'ex.tempo': tempo,
			'seq.tick.play': playTick,
			'seq.comping.play': playComping,
			'seq.bass.play': playComping,
			'ex.audio.sampleRate': 48000,
			'ex.audio.bitrate': 320,
		};
		return request;
	};
	/**
	 * Return correct request for simple midi get
	 */
	ComposerServlet.getRequestForSimpleMidi = function(leadsheet, tempo, playComping, playTick) {
		var request = {
			'ls.leadsheet': leadsheet,
			'type': 'midi',
			'ex.tempo': tempo,
			'seq.tick.play': playTick,
			'seq.comping.play': playComping,
			'seq.bass.play': playComping,
		};
		return request;
	};

	return ComposerServlet;
});
/** 
 * jsPDF - PDF Document creation from JavaScript
 * Version 1.0.272-git Built on 2014-09-29T15:09
 *                           CommitID d4770725ca
 *
 * Copyright (c) 2010-2014 James Hall, https://github.com/MrRio/jsPDF
 *               2010 Aaron Spike, https://github.com/acspike
 *               2012 Willow Systems Corporation, willow-systems.com
 *               2012 Pablo Hess, https://github.com/pablohess
 *               2012 Florian Jenett, https://github.com/fjenett
 *               2013 Warren Weckesser, https://github.com/warrenweckesser
 *               2013 Youssef Beddad, https://github.com/lifof
 *               2013 Lee Driscoll, https://github.com/lsdriscoll
 *               2013 Stefan Slonevskiy, https://github.com/stefslon
 *               2013 Jeremy Morel, https://github.com/jmorel
 *               2013 Christoph Hartmann, https://github.com/chris-rock
 *               2014 Juan Pablo Gaviria, https://github.com/juanpgaviria
 *               2014 James Makes, https://github.com/dollaruw
 *               2014 Diego Casorran, https://github.com/diegocr
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * Contributor(s):
 *    siefkenj, ahwolf, rickygu, Midnith, saintclair, eaparango,
 *    kim3er, mfo, alnorth,
 */
/**
 * jsPDF addHTML PlugIn
 * Copyright (c) 2014 Diego Casorran
 * Licensed under the MIT License.
 * http://opensource.org/licenses/mit-license
 */
/** 
 * jsPDF addImage plugin
 * Copyright (c) 2012 Jason Siefken, https://github.com/siefkenj/
 *               2013 Chris Dowling, https://github.com/gingerchris
 *               2013 Trinh Ho, https://github.com/ineedfat
 *               2013 Edwin Alejandro Perez, https://github.com/eaparango
 *               2013 Norah Smith, https://github.com/burnburnrocket
 *               2014 Diego Casorran, https://github.com/diegocr
 *               2014 James Robb, https://github.com/jamesbrobb
 */
/**
 * jsPDF Cell plugin
 * Copyright (c) 2013 Youssef Beddad, youssef.beddad@gmail.com
 *               2013 Eduardo Menezes de Morais, eduardo.morais@usp.br
 *               2013 Lee Driscoll, https://github.com/lsdriscoll
 *               2014 Juan Pablo Gaviria, https://github.com/juanpgaviria
 *               2014 James Hall, james@parall.ax
 *               2014 Diego Casorran, https://github.com/diegocr
 */
/** 
 * jsPDF fromHTML plugin. BETA stage. API subject to change. Needs browser
 * Copyright (c) 2012 Willow Systems Corporation, willow-systems.com
 *               2014 Juan Pablo Gaviria, https://github.com/juanpgaviria
 *               2014 Diego Casorran, https://github.com/diegocr
 *               2014 Daniel Husar, https://github.com/danielhusar
 *               2014 Wolfgang Gassler, https://github.com/woolfg
 */
/** 
 * jsPDF JavaScript plugin
 * Copyright (c) 2013 Youssef Beddad, youssef.beddad@gmail.com
 */
/** 
 * jsPDF PNG PlugIn
 * Copyright (c) 2014 James Robb, https://github.com/jamesbrobb
 */
/** 
jsPDF Silly SVG plugin
Copyright (c) 2012 Willow Systems Corporation, willow-systems.com
*/
/** 
 * jsPDF split_text_to_size plugin - MIT license.
 * Copyright (c) 2012 Willow Systems Corporation, willow-systems.com
 *               2014 Diego Casorran, https://github.com/diegocr
 */
/**  
jsPDF standard_fonts_metrics plugin
Copyright (c) 2012 Willow Systems Corporation, willow-systems.com
MIT license.
*/
/** 
 * jsPDF total_pages plugin
 * Copyright (c) 2013 Eduardo Menezes de Morais, eduardo.morais@usp.br
 */
/* Blob.js
 * A Blob implementation.
 * 2014-07-24
 * By Eli Grey, http://eligrey.com
 * By Devin Samarin, https://github.com/dsamarin
 * License: X11/MIT
 *   See https://github.com/eligrey/Blob.js/blob/master/LICENSE.md
 */
/* FileSaver.js
 * A saveAs() FileSaver implementation.
 * 2014-08-29
 * By Eli Grey, http://eligrey.com
 * License: X11/MIT
 *   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md
 */
/*
 * Copyright (c) 2012 chick307 <chick307@gmail.com>
 * Licensed under the MIT License.
 * http://opensource.org/licenses/mit-license
 */
/*
 Deflate.js - https://github.com/gildas-lormeau/zip.js
 Copyright (c) 2013 Gildas Lormeau. All rights reserved.
 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions are met:
 1. Redistributions of source code must retain the above copyright notice,
 this list of conditions and the following disclaimer.
 2. Redistributions in binary form must reproduce the above copyright 
 notice, this list of conditions and the following disclaimer in 
 the documentation and/or other materials provided with the distribution.
 3. The names of the authors may not be used to endorse or promote products
 derived from this software without specific prior written permission.
 THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,
 INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
 FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,
 INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,
 INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
 OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
/*
# PNG.js
# Copyright (c) 2011 Devon Govett
# MIT LICENSE
# 
*/
/*
 * Extracted from pdf.js
 * https://github.com/andreasgal/pdf.js
 * Copyright (c) 2011 Mozilla Foundation
 * Contributors: Andreas Gal <gal@mozilla.com>
 *               Chris G Jones <cjones@mozilla.com>
 *               Shaon Barman <shaon.barman@gmail.com>
 *               Vivien Nicolas <21@vingtetun.org>
 *               Justin D'Arcangelo <justindarc@gmail.com>
 *               Yury Delendik
 */
/**
 * JavaScript Polyfill functions for jsPDF
 * Collected from public resources by
 * https://github.com/diegocr
 */
!function(t,e){e["true"]=t;var n=function(t){function e(e){var n={};this.subscribe=function(t,e,r){if("function"!=typeof e)return!1;n.hasOwnProperty(t)||(n[t]={});var s=Math.random().toString(35);return n[t][s]=[e,!!r],s},this.unsubscribe=function(t){for(var e in n)if(n[e][t])return delete n[e][t],!0;return!1},this.publish=function(r){if(n.hasOwnProperty(r)){var s=Array.prototype.slice.call(arguments,1),i=[];for(var o in n[r]){var a=n[r][o];try{a[0].apply(e,s)}catch(u){t.console&&console.error("jsPDF PubSub Error",u.message,u)}a[1]&&i.push(o)}i.length&&i.forEach(this.unsubscribe)}}}function n(a,u,c,l){var f={};"object"==typeof a&&(f=a,a=f.orientation,u=f.unit||u,c=f.format||c,l=f.compress||f.compressPdf||l),u=u||"mm",c=c||"a4",a=(""+(a||"P")).toLowerCase();var d,h,p,m,w,g,y,v,b,q=((""+c).toLowerCase(),!!l&&"function"==typeof Uint8Array),x=f.textColor||"0 g",k=f.drawColor||"0 G",_=f.fontSize||16,A=f.lineHeight||1.15,C=f.lineWidth||.200025,S=2,E=!1,z=[],T={},I={},B=0,O=[],P={},R=[],F=0,D=0,U=0,N={title:"",subject:"",author:"",keywords:"",creator:""},L={},j=new e(L),M=function(t){return t.toFixed(2)},H=function(t){return t.toFixed(3)},G=function(t){return("0"+parseInt(t)).slice(-2)},W=function(t){E?O[m].push(t):(U+=t.length+1,R.push(t))},V=function(){return S++,z[S]=U,W(S+" 0 obj"),S},J=function(t){W("stream"),W(t),W("endstream")},X=function(){var e,r,i,o,a,u,c,l,f;for(c=t.adler32cs||n.adler32cs,q&&"undefined"==typeof c&&(q=!1),e=1;B>=e;e++){if(V(),l=(w=P[e].width)*h,f=(g=P[e].height)*h,W("<</Type /Page"),W("/Parent 1 0 R"),W("/Resources 2 0 R"),W("/MediaBox [0 0 "+M(l)+" "+M(f)+"]"),W("/Contents "+(S+1)+" 0 R>>"),W("endobj"),r=O[e].join("\n"),V(),q){for(i=[],o=r.length;o--;)i[o]=r.charCodeAt(o);u=c.from(r),a=new s(6),a.append(new Uint8Array(i)),r=a.flush(),i=new Uint8Array(r.length+6),i.set(new Uint8Array([120,156])),i.set(r,2),i.set(new Uint8Array([255&u,u>>8&255,u>>16&255,u>>24&255]),r.length+2),r=String.fromCharCode.apply(null,i),W("<</Length "+r.length+" /Filter [/FlateDecode]>>")}else W("<</Length "+r.length+">>");J(r),W("endobj")}z[1]=U,W("1 0 obj"),W("<</Type /Pages");var d="/Kids [";for(o=0;B>o;o++)d+=3+2*o+" 0 R ";W(d+"]"),W("/Count "+B),W(">>"),W("endobj")},Y=function(t){t.objectNumber=V(),W("<</BaseFont/"+t.PostScriptName+"/Type/Font"),"string"==typeof t.encoding&&W("/Encoding/"+t.encoding),W("/Subtype/Type1>>"),W("endobj")},K=function(){for(var t in T)T.hasOwnProperty(t)&&Y(T[t])},Q=function(){j.publish("putXobjectDict")},$=function(){W("/ProcSet [/PDF /Text /ImageB /ImageC /ImageI]"),W("/Font <<");for(var t in T)T.hasOwnProperty(t)&&W("/"+t+" "+T[t].objectNumber+" 0 R");W(">>"),W("/XObject <<"),Q(),W(">>")},Z=function(){K(),j.publish("putResources"),z[2]=U,W("2 0 obj"),W("<<"),$(),W(">>"),W("endobj"),j.publish("postPutResources")},te=function(t,e,n){I.hasOwnProperty(e)||(I[e]={}),I[e][n]=t},ee=function(t,e,n,r){var s="F"+(Object.keys(T).length+1).toString(10),i=T[s]={id:s,PostScriptName:t,fontName:e,fontStyle:n,encoding:r,metadata:{}};return te(s,e,n),j.publish("addFont",i),s},ne=function(){for(var t="helvetica",e="times",n="courier",r="normal",s="bold",i="italic",o="bolditalic",a="StandardEncoding",u=[["Helvetica",t,r],["Helvetica-Bold",t,s],["Helvetica-Oblique",t,i],["Helvetica-BoldOblique",t,o],["Courier",n,r],["Courier-Bold",n,s],["Courier-Oblique",n,i],["Courier-BoldOblique",n,o],["Times-Roman",e,r],["Times-Bold",e,s],["Times-Italic",e,i],["Times-BoldItalic",e,o]],c=0,l=u.length;l>c;c++){var f=ee(u[c][0],u[c][1],u[c][2],a),d=u[c][0].split("-");te(f,d[0],d[1]||"")}j.publish("addFonts",{fonts:T,dictionary:I})},re=function(e){return e.foo=function(){try{return e.apply(this,arguments)}catch(n){var r=n.stack||"";~r.indexOf(" at ")&&(r=r.split(" at ")[1]);var s="Error in function "+r.split("\n")[0].split("<")[0]+": "+n.message;if(!t.console)throw new Error(s);t.console.error(s,n),t.alert&&alert(s)}},e.foo.bar=e,e.foo},se=function(t,e){var n,r,s,i,o,a,u,c,l;if(e=e||{},s=e.sourceEncoding||"Unicode",o=e.outputEncoding,(e.autoencode||o)&&T[d].metadata&&T[d].metadata[s]&&T[d].metadata[s].encoding&&(i=T[d].metadata[s].encoding,!o&&T[d].encoding&&(o=T[d].encoding),!o&&i.codePages&&(o=i.codePages[0]),"string"==typeof o&&(o=i[o]),o)){for(u=!1,a=[],n=0,r=t.length;r>n;n++)c=o[t.charCodeAt(n)],a.push(c?String.fromCharCode(c):t[n]),a[n].charCodeAt(0)>>8&&(u=!0);t=a.join("")}for(n=t.length;void 0===u&&0!==n;)t.charCodeAt(n-1)>>8&&(u=!0),n--;if(!u)return t;for(a=e.noBOM?[]:[254,255],n=0,r=t.length;r>n;n++){if(c=t.charCodeAt(n),l=c>>8,l>>8)throw new Error("Character at position "+n+" of string '"+t+"' exceeds 16bits. Cannot be encoded into UCS-2 BE");a.push(l),a.push(c-(l<<8))}return String.fromCharCode.apply(void 0,a)},ie=function(t,e){return se(t,e).replace(/\\/g,"\\\\").replace(/\(/g,"\\(").replace(/\)/g,"\\)")},oe=function(){W("/Producer (jsPDF "+n.version+")");for(var t in N)N.hasOwnProperty(t)&&N[t]&&W("/"+t.substr(0,1).toUpperCase()+t.substr(1)+" ("+ie(N[t])+")");var e=new Date,r=e.getTimezoneOffset(),s=0>r?"+":"-",i=Math.floor(Math.abs(r/60)),o=Math.abs(r%60),a=[s,G(i),"'",G(o),"'"].join("");W(["/CreationDate (D:",e.getFullYear(),G(e.getMonth()+1),G(e.getDate()),G(e.getHours()),G(e.getMinutes()),G(e.getSeconds()),a,")"].join(""))},ae=function(){switch(W("/Type /Catalog"),W("/Pages 1 0 R"),v||(v="fullwidth"),v){case"fullwidth":W("/OpenAction [3 0 R /FitH null]");break;case"fullheight":W("/OpenAction [3 0 R /FitV null]");break;case"fullpage":W("/OpenAction [3 0 R /Fit]");break;case"original":W("/OpenAction [3 0 R /XYZ null null 1]");break;default:var t=""+v;"%"===t.substr(t.length-1)&&(v=parseInt(v)/100),"number"==typeof v&&W("/OpenAction [3 0 R /XYZ null null "+M(v)+"]")}switch(b||(b="continuous"),b){case"continuous":W("/PageLayout /OneColumn");break;case"single":W("/PageLayout /SinglePage");break;case"two":case"twoleft":W("/PageLayout /TwoColumnLeft");break;case"tworight":W("/PageLayout /TwoColumnRight")}y&&W("/PageMode /"+y),j.publish("putCatalog")},ue=function(){W("/Size "+(S+1)),W("/Root "+S+" 0 R"),W("/Info "+(S-1)+" 0 R")},ce=function(t,e){var n="string"==typeof e&&e.toLowerCase();if("string"==typeof t){var r=t.toLowerCase();o.hasOwnProperty(r)&&(t=o[r][0]/h,e=o[r][1]/h)}if(Array.isArray(t)&&(e=t[1],t=t[0]),n){switch(n.substr(0,1)){case"l":e>t&&(n="s");break;case"p":t>e&&(n="s")}"s"===n&&(p=t,t=e,e=p)}E=!0,O[++B]=[],P[B]={width:Number(t)||w,height:Number(e)||g},fe(B)},le=function(){ce.apply(this,arguments),W(M(C*h)+" w"),W(k),0!==F&&W(F+" J"),0!==D&&W(D+" j"),j.publish("addPage",{pageNumber:B})},fe=function(t){t>0&&B>=t&&(m=t,w=P[t].width,g=P[t].height)},de=function(t,e){var n;t=void 0!==t?t:T[d].fontName,e=void 0!==e?e:T[d].fontStyle;try{n=I[t][e]}catch(r){}if(!n)throw new Error("Unable to look up font label for font '"+t+"', '"+e+"'. Refer to getFontList() for available fonts.");return n},he=function(){E=!1,S=2,R=[],z=[],W("%PDF-"+i),X(),Z(),V(),W("<<"),oe(),W(">>"),W("endobj"),V(),W("<<"),ae(),W(">>"),W("endobj");var t,e=U,n="0000000000";for(W("xref"),W("0 "+(S+1)),W(n+" 65535 f "),t=1;S>=t;t++)W((n+z[t]).slice(-10)+" 00000 n ");return W("trailer"),W("<<"),ue(),W(">>"),W("startxref"),W(e),W("%%EOF"),E=!0,R.join("\n")},pe=function(t){var e="S";return"F"===t?e="f":"FD"===t||"DF"===t?e="B":("f"===t||"f*"===t||"B"===t||"B*"===t)&&(e=t),e},me=function(){for(var t=he(),e=t.length,n=new ArrayBuffer(e),r=new Uint8Array(n);e--;)r[e]=t.charCodeAt(e);return n},we=function(){return new Blob([me()],{type:"application/pdf"})},ge=re(function(e,n){var s="dataur"===(""+e).substr(0,6)?"data:application/pdf;base64,"+btoa(he()):0;switch(e){case void 0:return he();case"save":if(navigator.getUserMedia&&(void 0===t.URL||void 0===t.URL.createObjectURL))return L.output("dataurlnewwindow");r(we(),n),"function"==typeof r.unload&&t.setTimeout&&setTimeout(r.unload,911);break;case"arraybuffer":return me();case"blob":return we();case"bloburi":case"bloburl":return t.URL&&t.URL.createObjectURL(we())||void 0;case"datauristring":case"dataurlstring":return s;case"dataurlnewwindow":var i=t.open(s);if(i||"undefined"==typeof safari)return i;case"datauri":case"dataurl":return t.document.location.href=s;default:throw new Error('Output type "'+e+'" is not supported.')}});switch(u){case"pt":h=1;break;case"mm":h=72/25.4;break;case"cm":h=72/2.54;break;case"in":h=72;break;case"px":h=96/72;break;case"pc":h=12;break;case"em":h=12;break;case"ex":h=6;break;default:throw"Invalid unit: "+u}L.internal={pdfEscape:ie,getStyle:pe,getFont:function(){return T[de.apply(L,arguments)]},getFontSize:function(){return _},getLineHeight:function(){return _*A},write:function(t){W(1===arguments.length?t:Array.prototype.join.call(arguments," "))},getCoordinateString:function(t){return M(t*h)},getVerticalCoordinateString:function(t){return M((g-t)*h)},collections:{},newObject:V,putStream:J,events:j,scaleFactor:h,pageSize:{get width(){return w},get height(){return g}},output:function(t,e){return ge(t,e)},getNumberOfPages:function(){return O.length-1},pages:O},L.addPage=function(){return le.apply(this,arguments),this},L.setPage=function(){return fe.apply(this,arguments),this},L.setDisplayMode=function(t,e,n){return v=t,b=e,y=n,this},L.text=function(t,e,n,r,s){function i(t){return t=t.split("	").join(Array(f.TabLen||9).join(" ")),ie(t,r)}"number"==typeof t&&(p=n,n=e,e=t,t=p),"string"==typeof t&&t.match(/[\n\r]/)&&(t=t.split(/\r\n|\r|\n/g)),"number"==typeof r&&(s=r,r=null);var o,a="",u="Td";if(s){s*=Math.PI/180;var c=Math.cos(s),l=Math.sin(s);a=[M(c),M(l),M(-1*l),M(c),""].join(" "),u="Tm"}if(r=r||{},"noBOM"in r||(r.noBOM=!0),"autoencode"in r||(r.autoencode=!0),"string"==typeof t)t=i(t);else{if(!(t instanceof Array))throw new Error('Type of text must be string or Array. "'+t+'" is not recognized.');for(var m=t.concat(),w=[],y=m.length;y--;)w.push(i(m.shift()));var v=Math.ceil((g-n)*h/(_*A));v>=0&&v<w.length+1&&(o=w.splice(v-1)),t=w.join(") Tj\nT* (")}return W("BT\n/"+d+" "+_+" Tf\n"+_*A+" TL\n"+x+"\n"+a+M(e*h)+" "+M((g-n)*h)+" "+u+"\n("+t+") Tj\nET"),o&&(this.addPage(),this.text(o,e,1.7*_/h)),this},L.lstext=function(t,e,n,r){for(var s=0,i=t.length;i>s;s++,e+=r)this.text(t[s],e,n)},L.line=function(t,e,n,r){return this.lines([[n-t,r-e]],t,e)},L.clip=function(){W("W"),W("S")},L.lines=function(t,e,n,r,s,i){var o,a,u,c,l,f,d,m,w,y,v;for("number"==typeof t&&(p=n,n=e,e=t,t=p),r=r||[1,1],W(H(e*h)+" "+H((g-n)*h)+" m "),o=r[0],a=r[1],c=t.length,y=e,v=n,u=0;c>u;u++)l=t[u],2===l.length?(y=l[0]*o+y,v=l[1]*a+v,W(H(y*h)+" "+H((g-v)*h)+" l")):(f=l[0]*o+y,d=l[1]*a+v,m=l[2]*o+y,w=l[3]*a+v,y=l[4]*o+y,v=l[5]*a+v,W(H(f*h)+" "+H((g-d)*h)+" "+H(m*h)+" "+H((g-w)*h)+" "+H(y*h)+" "+H((g-v)*h)+" c"));return i&&W(" h"),null!==s&&W(pe(s)),this},L.rect=function(t,e,n,r,s){pe(s);return W([M(t*h),M((g-e)*h),M(n*h),M(-r*h),"re"].join(" ")),null!==s&&W(pe(s)),this},L.triangle=function(t,e,n,r,s,i,o){return this.lines([[n-t,r-e],[s-n,i-r],[t-s,e-i]],t,e,[1,1],o,!0),this},L.roundedRect=function(t,e,n,r,s,i,o){var a=4/3*(Math.SQRT2-1);return this.lines([[n-2*s,0],[s*a,0,s,i-i*a,s,i],[0,r-2*i],[0,i*a,-(s*a),i,-s,i],[-n+2*s,0],[-(s*a),0,-s,-(i*a),-s,-i],[0,-r+2*i],[0,-(i*a),s*a,-i,s,-i]],t+s,e,[1,1],o),this},L.ellipse=function(t,e,n,r,s){var i=4/3*(Math.SQRT2-1)*n,o=4/3*(Math.SQRT2-1)*r;return W([M((t+n)*h),M((g-e)*h),"m",M((t+n)*h),M((g-(e-o))*h),M((t+i)*h),M((g-(e-r))*h),M(t*h),M((g-(e-r))*h),"c"].join(" ")),W([M((t-i)*h),M((g-(e-r))*h),M((t-n)*h),M((g-(e-o))*h),M((t-n)*h),M((g-e)*h),"c"].join(" ")),W([M((t-n)*h),M((g-(e+o))*h),M((t-i)*h),M((g-(e+r))*h),M(t*h),M((g-(e+r))*h),"c"].join(" ")),W([M((t+i)*h),M((g-(e+r))*h),M((t+n)*h),M((g-(e+o))*h),M((t+n)*h),M((g-e)*h),"c"].join(" ")),null!==s&&W(pe(s)),this},L.circle=function(t,e,n,r){return this.ellipse(t,e,n,n,r)},L.setProperties=function(t){for(var e in N)N.hasOwnProperty(e)&&t[e]&&(N[e]=t[e]);return this},L.setFontSize=function(t){return _=t,this},L.setFont=function(t,e){return d=de(t,e),this},L.setFontStyle=L.setFontType=function(t){return d=de(void 0,t),this},L.getFontList=function(){var t,e,n,r={};for(t in I)if(I.hasOwnProperty(t)){r[t]=n=[];for(e in I[t])I[t].hasOwnProperty(e)&&n.push(e)}return r},L.setLineWidth=function(t){return W((t*h).toFixed(2)+" w"),this},L.setDrawColor=function(t,e,n,r){var s;return s=void 0===e||void 0===r&&t===e===n?"string"==typeof t?t+" G":M(t/255)+" G":void 0===r?"string"==typeof t?[t,e,n,"RG"].join(" "):[M(t/255),M(e/255),M(n/255),"RG"].join(" "):"string"==typeof t?[t,e,n,r,"K"].join(" "):[M(t),M(e),M(n),M(r),"K"].join(" "),W(s),this},L.setFillColor=function(t,e,n,r){var s;return s=void 0===e||void 0===r&&t===e===n?"string"==typeof t?t+" g":M(t/255)+" g":void 0===r?"string"==typeof t?[t,e,n,"rg"].join(" "):[M(t/255),M(e/255),M(n/255),"rg"].join(" "):"string"==typeof t?[t,e,n,r,"k"].join(" "):[M(t),M(e),M(n),M(r),"k"].join(" "),W(s),this},L.setTextColor=function(t,e,n){if("string"==typeof t&&/^#[0-9A-Fa-f]{6}$/.test(t)){var r=parseInt(t.substr(1),16);t=r>>16&255,e=r>>8&255,n=255&r}return x=0===t&&0===e&&0===n||"undefined"==typeof e?H(t/255)+" g":[H(t/255),H(e/255),H(n/255),"rg"].join(" "),this},L.CapJoinStyles={0:0,butt:0,but:0,miter:0,1:1,round:1,rounded:1,circle:1,2:2,projecting:2,project:2,square:2,bevel:2},L.setLineCap=function(t){var e=this.CapJoinStyles[t];if(void 0===e)throw new Error("Line cap style of '"+t+"' is not recognized. See or extend .CapJoinStyles property for valid styles");return F=e,W(e+" J"),this},L.setLineJoin=function(t){var e=this.CapJoinStyles[t];if(void 0===e)throw new Error("Line join style of '"+t+"' is not recognized. See or extend .CapJoinStyles property for valid styles");return D=e,W(e+" j"),this},L.output=ge,L.save=function(t){L.output("save",t)};for(var ye in n.API)n.API.hasOwnProperty(ye)&&("events"===ye&&n.API.events.length?!function(t,e){var n,r,s;for(s=e.length-1;-1!==s;s--)n=e[s][0],r=e[s][1],t.subscribe.apply(t,[n].concat("function"==typeof r?[r]:r))}(j,n.API.events):L[ye]=n.API[ye]);return ne(),d="F1",le(c,a),j.publish("initialized"),L}var i="1.3",o={a0:[2383.94,3370.39],a1:[1683.78,2383.94],a2:[1190.55,1683.78],a3:[841.89,1190.55],a4:[595.28,841.89],a5:[419.53,595.28],a6:[297.64,419.53],a7:[209.76,297.64],a8:[147.4,209.76],a9:[104.88,147.4],a10:[73.7,104.88],b0:[2834.65,4008.19],b1:[2004.09,2834.65],b2:[1417.32,2004.09],b3:[1000.63,1417.32],b4:[708.66,1000.63],b5:[498.9,708.66],b6:[354.33,498.9],b7:[249.45,354.33],b8:[175.75,249.45],b9:[124.72,175.75],b10:[87.87,124.72],c0:[2599.37,3676.54],c1:[1836.85,2599.37],c2:[1298.27,1836.85],c3:[918.43,1298.27],c4:[649.13,918.43],c5:[459.21,649.13],c6:[323.15,459.21],c7:[229.61,323.15],c8:[161.57,229.61],c9:[113.39,161.57],c10:[79.37,113.39],dl:[311.81,623.62],letter:[612,792],"government-letter":[576,756],legal:[612,1008],"junior-legal":[576,360],ledger:[1224,792],tabloid:[792,1224],"credit-card":[153,243]};return n.API={events:[]},n.version="1.0.272-git 2014-09-29T15:09:diegocr","function"==typeof define&&define.amd?define("jsPDF",[],function(){return n}):t.jsPDF=n,n}("undefined"!=typeof self&&self||"undefined"!=typeof window&&window||this);!function(t){t.addHTML=function(t,e,n,r,s){if("undefined"==typeof html2canvas&&"undefined"==typeof rasterizeHTML)throw new Error("You need either https://github.com/niklasvh/html2canvas or https://github.com/cburgmer/rasterizeHTML.js");"number"!=typeof e&&(r=e,s=n),"function"==typeof r&&(s=r,r=null);var i=this.internal,o=i.scaleFactor,a=i.pageSize.width,u=i.pageSize.height;if(r=r||{},r.onrendered=function(t){e=parseInt(e)||0,n=parseInt(n)||0;var i=r.dim||{},c=i.h||0,l=i.w||Math.min(a,t.width/o)-e,f="JPEG";if(r.format&&(f=r.format),t.height>u&&r.pagesplit){var d=function(){for(var r=0;;){var i=document.createElement("canvas");i.width=Math.min(a*o,t.width),i.height=Math.min(u*o,t.height-r);var c=i.getContext("2d");c.drawImage(t,0,r,t.width,i.height,0,0,i.width,i.height);var d=[i,e,r?0:n,i.width/o,i.height/o,f,null,"SLOW"];if(this.addImage.apply(this,d),r+=i.height,r>=t.height)break;this.addPage()}s(l,r,null,d)}.bind(this);if("CANVAS"===t.nodeName){var h=new Image;h.onload=d,h.src=t.toDataURL("image/png"),t=h}else d()}else{var p=Math.random().toString(35),m=[t,e,n,l,c,f,p,"SLOW"];this.addImage.apply(this,m),s(l,c,p,m)}}.bind(this),"undefined"!=typeof html2canvas&&!r.rstz)return html2canvas(t,r);if("undefined"!=typeof rasterizeHTML){var c="drawDocument";return"string"==typeof t&&(c=/^http/.test(t)?"drawURL":"drawHTML"),r.width=r.width||a*o,rasterizeHTML[c](t,void 0,r).then(function(t){r.onrendered(t.image)},function(t){s(null,t)})}return null}}(n.API),function(t){var e="addImage_",n=["jpeg","jpg","png"],r=function(t){var e=this.internal.newObject(),n=this.internal.write,s=this.internal.putStream;if(t.n=e,n("<</Type /XObject"),n("/Subtype /Image"),n("/Width "+t.w),n("/Height "+t.h),t.cs===this.color_spaces.INDEXED?n("/ColorSpace [/Indexed /DeviceRGB "+(t.pal.length/3-1)+" "+("smask"in t?e+2:e+1)+" 0 R]"):(n("/ColorSpace /"+t.cs),t.cs===this.color_spaces.DEVICE_CMYK&&n("/Decode [1 0 1 0 1 0 1 0]")),n("/BitsPerComponent "+t.bpc),"f"in t&&n("/Filter /"+t.f),"dp"in t&&n("/DecodeParms <<"+t.dp+">>"),"trns"in t&&t.trns.constructor==Array){for(var i="",o=0,a=t.trns.length;a>o;o++)i+=t.trns[o]+" "+t.trns[o]+" ";n("/Mask ["+i+"]")}if("smask"in t&&n("/SMask "+(e+1)+" 0 R"),n("/Length "+t.data.length+">>"),s(t.data),n("endobj"),"smask"in t){var u="/Predictor 15 /Colors 1 /BitsPerComponent "+t.bpc+" /Columns "+t.w,c={w:t.w,h:t.h,cs:"DeviceGray",bpc:t.bpc,dp:u,data:t.smask};"f"in t&&(c.f=t.f),r.call(this,c)}t.cs===this.color_spaces.INDEXED&&(this.internal.newObject(),n("<< /Length "+t.pal.length+">>"),s(this.arrayBufferToBinaryString(new Uint8Array(t.pal))),n("endobj"))},s=function(){var t=this.internal.collections[e+"images"];for(var n in t)r.call(this,t[n])},i=function(){var t,n=this.internal.collections[e+"images"],r=this.internal.write;for(var s in n)t=n[s],r("/I"+t.i,t.n,"0","R")},o=function(e){return e&&"string"==typeof e&&(e=e.toUpperCase()),e in t.image_compression?e:t.image_compression.NONE},a=function(){var t=this.internal.collections[e+"images"];return t||(this.internal.collections[e+"images"]=t={},this.internal.events.subscribe("putResources",s),this.internal.events.subscribe("putXobjectDict",i)),t},u=function(t){var e=0;return t&&(e=Object.keys?Object.keys(t).length:function(t){var e=0;for(var n in t)t.hasOwnProperty(n)&&e++;return e}(t)),e},c=function(t){return"undefined"==typeof t||null===t},l=function(e){return"string"==typeof e&&t.sHashCode(e)},f=function(t){return-1===n.indexOf(t)},d=function(e){return"function"!=typeof t["process"+e.toUpperCase()]},h=function(t){return"object"==typeof t&&1===t.nodeType},p=function(t,e,n){if("IMG"===t.nodeName&&t.hasAttribute("src")){var r=""+t.getAttribute("src");if(!n&&0===r.indexOf("data:image/"))return r;!e&&/\.png(?:[?#].*)?$/i.test(r)&&(e="png")}if("CANVAS"===t.nodeName)var s=t;else{var s=document.createElement("canvas");s.width=t.clientWidth||t.width,s.height=t.clientHeight||t.height;var i=s.getContext("2d");if(!i)throw"addImage requires canvas to be supported by browser.";if(n){var o,a,u,c,l,f,d,h,p=Math.PI/180;"object"==typeof n&&(o=n.x,a=n.y,u=n.bg,n=n.angle),h=n*p,c=Math.abs(Math.cos(h)),l=Math.abs(Math.sin(h)),f=s.width,d=s.height,s.width=d*l+f*c,s.height=d*c+f*l,isNaN(o)&&(o=s.width/2),isNaN(a)&&(a=s.height/2),i.clearRect(0,0,s.width,s.height),i.fillStyle=u||"white",i.fillRect(0,0,s.width,s.height),i.save(),i.translate(o,a),i.rotate(h),i.drawImage(t,-(f/2),-(d/2)),i.rotate(-h),i.translate(-o,-a),i.restore()}else i.drawImage(t,0,0,s.width,s.height)}return s.toDataURL("png"==(""+e).toLowerCase()?"image/png":"image/jpeg")},m=function(t,e){var n;if(e)for(var r in e)if(t===e[r].alias){n=e[r];break}return n},w=function(t,e,n){return t||e||(t=-96,e=-96),0>t&&(t=-1*n.w*72/t/this.internal.scaleFactor),0>e&&(e=-1*n.h*72/e/this.internal.scaleFactor),0===t&&(t=e*n.w/n.h),0===e&&(e=t*n.h/n.w),[t,e]},g=function(t,e,n,r,s,i,o){var a=w.call(this,n,r,s),u=this.internal.getCoordinateString,c=this.internal.getVerticalCoordinateString;n=a[0],r=a[1],o[i]=s,this.internal.write("q",u(n),"0 0",u(r),u(t),c(e+r),"cm /I"+s.i,"Do Q")};t.color_spaces={DEVICE_RGB:"DeviceRGB",DEVICE_GRAY:"DeviceGray",DEVICE_CMYK:"DeviceCMYK",CAL_GREY:"CalGray",CAL_RGB:"CalRGB",LAB:"Lab",ICC_BASED:"ICCBased",INDEXED:"Indexed",PATTERN:"Pattern",SEPERATION:"Seperation",DEVICE_N:"DeviceN"},t.decode={DCT_DECODE:"DCTDecode",FLATE_DECODE:"FlateDecode",LZW_DECODE:"LZWDecode",JPX_DECODE:"JPXDecode",JBIG2_DECODE:"JBIG2Decode",ASCII85_DECODE:"ASCII85Decode",ASCII_HEX_DECODE:"ASCIIHexDecode",RUN_LENGTH_DECODE:"RunLengthDecode",CCITT_FAX_DECODE:"CCITTFaxDecode"},t.image_compression={NONE:"NONE",FAST:"FAST",MEDIUM:"MEDIUM",SLOW:"SLOW"},t.sHashCode=function(t){return Array.prototype.reduce&&t.split("").reduce(function(t,e){return t=(t<<5)-t+e.charCodeAt(0),t&t},0)},t.isString=function(t){return"string"==typeof t},t.extractInfoFromBase64DataURI=function(t){return/^data:([\w]+?\/([\w]+?));base64,(.+?)$/g.exec(t)},t.supportsArrayBuffer=function(){return"undefined"!=typeof ArrayBuffer&&"undefined"!=typeof Uint8Array},t.isArrayBuffer=function(t){return this.supportsArrayBuffer()?t instanceof ArrayBuffer:!1},t.isArrayBufferView=function(t){return this.supportsArrayBuffer()?"undefined"==typeof Uint32Array?!1:t instanceof Int8Array||t instanceof Uint8Array||"undefined"!=typeof Uint8ClampedArray&&t instanceof Uint8ClampedArray||t instanceof Int16Array||t instanceof Uint16Array||t instanceof Int32Array||t instanceof Uint32Array||t instanceof Float32Array||t instanceof Float64Array:!1},t.binaryStringToUint8Array=function(t){for(var e=t.length,n=new Uint8Array(e),r=0;e>r;r++)n[r]=t.charCodeAt(r);return n},t.arrayBufferToBinaryString=function(t){this.isArrayBuffer(t)&&(t=new Uint8Array(t));for(var e="",n=t.byteLength,r=0;n>r;r++)e+=String.fromCharCode(t[r]);return e},t.arrayBufferToBase64=function(t){for(var e,n,r,s,i,o="",a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",u=new Uint8Array(t),c=u.byteLength,l=c%3,f=c-l,d=0;f>d;d+=3)i=u[d]<<16|u[d+1]<<8|u[d+2],e=(16515072&i)>>18,n=(258048&i)>>12,r=(4032&i)>>6,s=63&i,o+=a[e]+a[n]+a[r]+a[s];return 1==l?(i=u[f],e=(252&i)>>2,n=(3&i)<<4,o+=a[e]+a[n]+"=="):2==l&&(i=u[f]<<8|u[f+1],e=(64512&i)>>10,n=(1008&i)>>4,r=(15&i)<<2,o+=a[e]+a[n]+a[r]+"="),o},t.createImageInfo=function(t,e,n,r,s,i,o,a,u,c,l,f){var d={alias:a,w:e,h:n,cs:r,bpc:s,i:o,data:t};return i&&(d.f=i),u&&(d.dp=u),c&&(d.trns=c),l&&(d.pal=l),f&&(d.smask=f),d},t.addImage=function(t,e,r,s,i,w,y,v,b){if("string"!=typeof e){var q=w;w=i,i=s,s=r,r=e,e=q}if("object"==typeof t&&!h(t)&&"imageData"in t){var x=t;t=x.imageData,e=x.format||e,r=x.x||r||0,s=x.y||s||0,i=x.w||i,w=x.h||w,y=x.alias||y,v=x.compression||v,b=x.rotation||x.angle||b}if(isNaN(r)||isNaN(s))throw console.error("jsPDF.addImage: Invalid coordinates",arguments),new Error("Invalid coordinates passed to jsPDF.addImage");var k,_=a.call(this);if(!(k=m(t,_))){var A;if(h(t)&&(t=p(t,e,b)),c(y)&&(y=l(t)),!(k=m(y,_))){if(this.isString(t)){var C=this.extractInfoFromBase64DataURI(t);C?(e=C[2],t=atob(C[3])):137===t.charCodeAt(0)&&80===t.charCodeAt(1)&&78===t.charCodeAt(2)&&71===t.charCodeAt(3)&&(e="png")}if(e=(e||"JPEG").toLowerCase(),f(e))throw new Error("addImage currently only supports formats "+n+", not '"+e+"'");if(d(e))throw new Error("please ensure that the plugin for '"+e+"' support is added");if(this.supportsArrayBuffer()&&(A=t,t=this.binaryStringToUint8Array(t)),k=this["process"+e.toUpperCase()](t,u(_),y,o(v),A),!k)throw new Error("An unkwown error occurred whilst processing the image")}}return g.call(this,r,s,i,w,k,k.i,_),this};var y=function(t){var e,n,r;if(255===!t.charCodeAt(0)||216===!t.charCodeAt(1)||255===!t.charCodeAt(2)||224===!t.charCodeAt(3)||!t.charCodeAt(6)==="J".charCodeAt(0)||!t.charCodeAt(7)==="F".charCodeAt(0)||!t.charCodeAt(8)==="I".charCodeAt(0)||!t.charCodeAt(9)==="F".charCodeAt(0)||0===!t.charCodeAt(10))throw new Error("getJpegSize requires a binary string jpeg file");for(var s=256*t.charCodeAt(4)+t.charCodeAt(5),i=4,o=t.length;o>i;){if(i+=s,255!==t.charCodeAt(i))throw new Error("getJpegSize could not find the size of the image");if(192===t.charCodeAt(i+1)||193===t.charCodeAt(i+1)||194===t.charCodeAt(i+1)||195===t.charCodeAt(i+1)||196===t.charCodeAt(i+1)||197===t.charCodeAt(i+1)||198===t.charCodeAt(i+1)||199===t.charCodeAt(i+1))return n=256*t.charCodeAt(i+5)+t.charCodeAt(i+6),e=256*t.charCodeAt(i+7)+t.charCodeAt(i+8),r=t.charCodeAt(i+9),[e,n,r];i+=2,s=256*t.charCodeAt(i)+t.charCodeAt(i+1)}},v=function(t){var e=t[0]<<8|t[1];if(65496!==e)throw new Error("Supplied data is not a JPEG");for(var n,r,s,i,o=t.length,a=(t[4]<<8)+t[5],u=4;o>u;){if(u+=a,n=b(t,u),a=(n[2]<<8)+n[3],(192===n[1]||194===n[1])&&255===n[0]&&a>7)return n=b(t,u+5),r=(n[2]<<8)+n[3],s=(n[0]<<8)+n[1],i=n[4],{width:r,height:s,numcomponents:i};u+=2}throw new Error("getJpegSizeFromBytes could not find the size of the image")},b=function(t,e){return t.subarray(e,e+5)};t.processJPEG=function(t,e,n,r,s){var i,o=this.color_spaces.DEVICE_RGB,a=this.decode.DCT_DECODE,u=8;return this.isString(t)?(i=y(t),this.createImageInfo(t,i[0],i[1],1==i[3]?this.color_spaces.DEVICE_GRAY:o,u,a,e,n)):(this.isArrayBuffer(t)&&(t=new Uint8Array(t)),this.isArrayBufferView(t)?(i=v(t),t=s||this.arrayBufferToBinaryString(t),this.createImageInfo(t,i.width,i.height,1==i.numcomponents?this.color_spaces.DEVICE_GRAY:o,u,a,e,n)):null)},t.processJPG=function(){return this.processJPEG.apply(this,arguments)}}(n.API),function(t){t.autoPrint=function(){var t;return this.internal.events.subscribe("postPutResources",function(){t=this.internal.newObject(),this.internal.write("<< /S/Named /Type/Action /N/Print >>","endobj")}),this.internal.events.subscribe("putCatalog",function(){this.internal.write("/OpenAction "+t+" 0 R")}),this}}(n.API),function(t){var e,n,r,s,i=3,o=13,a={x:void 0,y:void 0,w:void 0,h:void 0,ln:void 0},u=1,c=function(t,e,n,r,s){a={x:t,y:e,w:n,h:r,ln:s}},l=function(){return a},f={left:0,top:0,bottom:0};t.setHeaderFunction=function(t){s=t},t.getTextDimensions=function(t){e=this.internal.getFont().fontName,n=this.table_font_size||this.internal.getFontSize(),r=this.internal.getFont().fontStyle;var s,i,o=19.049976/25.4;return i=document.createElement("font"),i.id="jsPDFCell",i.style.fontStyle=r,i.style.fontName=e,i.style.fontSize=n+"pt",i.textContent=t,document.body.appendChild(i),s={w:(i.offsetWidth+1)*o,h:(i.offsetHeight+1)*o},document.body.removeChild(i),s},t.cellAddPage=function(){var t=this.margins||f;this.addPage(),c(t.left,t.top,void 0,void 0),u+=1},t.cellInitialize=function(){a={x:void 0,y:void 0,w:void 0,h:void 0,ln:void 0},u=1},t.cell=function(t,e,n,r,s,a,u){var d=l();if(void 0!==d.ln)if(d.ln===a)t=d.x+d.w,e=d.y;else{var h=this.margins||f;d.y+d.h+r+o>=this.internal.pageSize.height-h.bottom&&(this.cellAddPage(),this.printHeaders&&this.tableHeaderRow&&this.printHeaderRow(a,!0)),e=l().y+l().h}if(void 0!==s[0])if(this.printingHeaderRow?this.rect(t,e,n,r,"FD"):this.rect(t,e,n,r),"right"===u){if(s instanceof Array)for(var p=0;p<s.length;p++){var m=s[p],w=this.getStringUnitWidth(m)*this.internal.getFontSize();this.text(m,t+n-w-i,e+this.internal.getLineHeight()*(p+1))}}else this.text(s,t+i,e+this.internal.getLineHeight());return c(t,e,n,r,a),this},t.arrayMax=function(t,e){var n,r,s,i=t[0];for(n=0,r=t.length;r>n;n+=1)s=t[n],e?-1===e(i,s)&&(i=s):s>i&&(i=s);return i},t.table=function(e,n,r,s,i){if(!r)throw"No data for PDF table";var o,c,l,d,h,p,m,w,g,y,v=[],b=[],q={},x={},k=[],_=[],A=!1,C=!0,S=12,E=f;if(E.width=this.internal.pageSize.width,i&&(i.autoSize===!0&&(A=!0),i.printHeaders===!1&&(C=!1),i.fontSize&&(S=i.fontSize),i.margins&&(E=i.margins)),this.lnMod=0,a={x:void 0,y:void 0,w:void 0,h:void 0,ln:void 0},u=1,this.printHeaders=C,this.margins=E,this.setFontSize(S),this.table_font_size=S,void 0===s||null===s)v=Object.keys(r[0]);else if(s[0]&&"string"!=typeof s[0]){var z=19.049976/25.4;for(c=0,l=s.length;l>c;c+=1)o=s[c],v.push(o.name),b.push(o.prompt),x[o.name]=o.width*z}else v=s;if(A)for(y=function(t){return t[o]},c=0,l=v.length;l>c;c+=1){for(o=v[c],q[o]=r.map(y),k.push(this.getTextDimensions(b[c]||o).w),p=q[o],m=0,d=p.length;d>m;m+=1)h=p[m],k.push(this.getTextDimensions(h).w);x[o]=t.arrayMax(k)}if(C){var T=this.calculateLineHeight(v,x,b.length?b:v);for(c=0,l=v.length;l>c;c+=1)o=v[c],_.push([e,n,x[o],T,String(b.length?b[c]:o)]);this.setTableHeaderRow(_),this.printHeaderRow(1,!1)}for(c=0,l=r.length;l>c;c+=1){var T;for(w=r[c],T=this.calculateLineHeight(v,x,w),m=0,g=v.length;g>m;m+=1)o=v[m],this.cell(e,n,x[o],T,w[o],c+2,o.align)}return this.lastCellPos=a,this.table_x=e,this.table_y=n,this},t.calculateLineHeight=function(t,e,n){for(var r,s=0,o=0;o<t.length;o++){r=t[o],n[r]=this.splitTextToSize(String(n[r]),e[r]-i);var a=this.internal.getLineHeight()*n[r].length+i;a>s&&(s=a)}return s},t.setTableHeaderRow=function(t){this.tableHeaderRow=t},t.printHeaderRow=function(t,e){if(!this.tableHeaderRow)throw"Property tableHeaderRow does not exist.";var n,r,i,o;if(this.printingHeaderRow=!0,void 0!==s){var a=s(this,u);c(a[0],a[1],a[2],a[3],-1)}this.setFontStyle("bold");var l=[];for(i=0,o=this.tableHeaderRow.length;o>i;i+=1)this.setFillColor(200,200,200),n=this.tableHeaderRow[i],e&&(n[1]=this.margins&&this.margins.top||0,l.push(n)),r=[].concat(n),this.cell.apply(this,r.concat(t));l.length>0&&this.setTableHeaderRow(l),this.setFontStyle("normal"),this.printingHeaderRow=!1}}(n.API),function(t){var e,n,r,s,i,o,a,u,c,l,f,d,h,p,m,w,g,y,v;e=function(){function t(){}return function(e){return t.prototype=e,new t}}(),c=function(t){var e,n,r,s,i,o,a;for(n=0,r=t.length,e=void 0,s=!1,o=!1;!s&&n!==r;)e=t[n]=t[n].trimLeft(),e&&(s=!0),n++;for(n=r-1;r&&!o&&-1!==n;)e=t[n]=t[n].trimRight(),e&&(o=!0),n--;for(i=/\s+$/g,a=!0,n=0;n!==r;)e=t[n].replace(/\s+/g," "),a&&(e=e.trimLeft()),e&&(a=i.test(e)),t[n]=e,n++;return t},l=function(t,e,n,r){return this.pdf=t,this.x=e,this.y=n,this.settings=r,this.watchFunctions=[],this.init(),this},f=function(t){var e,n,s;for(e=void 0,s=t.split(","),n=s.shift();!e&&n;)e=r[n.trim().toLowerCase()],n=s.shift();return e},d=function(t){t="auto"===t?"0px":t,t.indexOf("em")>-1&&!isNaN(Number(t.replace("em","")))&&(t=18.719*Number(t.replace("em",""))+"px"),t.indexOf("pt")>-1&&!isNaN(Number(t.replace("pt","")))&&(t=1.333*Number(t.replace("pt",""))+"px");var e,n,r;return n=void 0,e=16,(r=h[t])?r:(r={"xx-small":9,"x-small":11,small:13,medium:16,large:19,"x-large":23,"xx-large":28,auto:0}[{css_line_height_string:t}],r!==n?h[t]=r/e:(r=parseFloat(t))?h[t]=r/e:(r=t.match(/([\d\.]+)(px)/),h[t]=3===r.length?parseFloat(r[1])/e:1))},u=function(t){var e,n,r;return r=function(t){var e;return e=function(t){return document.defaultView&&document.defaultView.getComputedStyle?document.defaultView.getComputedStyle(t,null):t.currentStyle?t.currentStyle:t.style}(t),function(t){return t=t.replace(/-\D/g,function(t){return t.charAt(1).toUpperCase()}),e[t]}}(t),e={},n=void 0,e["font-family"]=f(r("font-family"))||"times",e["font-style"]=s[r("font-style")]||"normal",e["text-align"]=TextAlignMap[r("text-align")]||"left",n=i[r("font-weight")]||"normal","bold"===n&&(e["font-style"]="normal"===e["font-style"]?n:n+e["font-style"]),e["font-size"]=d(r("font-size"))||1,e["line-height"]=d(r("line-height"))||1,e.display="inline"===r("display")?"inline":"block",n="block"===e.display,e["margin-top"]=n&&d(r("margin-top"))||0,e["margin-bottom"]=n&&d(r("margin-bottom"))||0,e["padding-top"]=n&&d(r("padding-top"))||0,e["padding-bottom"]=n&&d(r("padding-bottom"))||0,e["margin-left"]=n&&d(r("margin-left"))||0,e["margin-right"]=n&&d(r("margin-right"))||0,e["padding-left"]=n&&d(r("padding-left"))||0,e["padding-right"]=n&&d(r("padding-right"))||0,e["float"]=o[r("cssFloat")]||"none",e.clear=a[r("clear")]||"none",e},p=function(t,e,n){var r,s,i,o,a;if(i=!1,s=void 0,o=void 0,a=void 0,r=n["#"+t.id])if("function"==typeof r)i=r(t,e);else for(s=0,o=r.length;!i&&s!==o;)i=r[s](t,e),s++;if(r=n[t.nodeName],!i&&r)if("function"==typeof r)i=r(t,e);else for(s=0,o=r.length;!i&&s!==o;)i=r[s](t,e),s++;return i},v=function(t,e){var n,r,s,i,o,a,u,c,l,f;
for(n=[],r=[],s=0,f=t.rows[0].cells.length,c=t.clientWidth;f>s;)l=t.rows[0].cells[s],r[s]={name:l.textContent.toLowerCase().replace(/\s+/g,""),prompt:l.textContent.replace(/\r?\n/g,""),width:l.clientWidth/c*e.pdf.internal.pageSize.width},s++;for(s=1;s<t.rows.length;){for(a=t.rows[s],o={},i=0;i<a.cells.length;)o[r[i].name]=a.cells[i].textContent.replace(/\r?\n/g,""),i++;n.push(o),s++}return u={rows:n,headers:r}};var b={SCRIPT:1,STYLE:1,NOSCRIPT:1,OBJECT:1,EMBED:1,SELECT:1},q=1;n=function(t,e,r){var s,i,o,a,c,l,f,d,h;for(i=t.childNodes,s=void 0,o=u(t),c="block"===o.display,c&&(e.setBlockBoundary(),e.setBlockStyle(o)),f=19.049976/25.4,a=0,l=i.length;l>a;){if(s=i[a],"object"==typeof s){if(e.executeWatchFunctions(s),1===s.nodeType&&"HEADER"===s.nodeName){var w=s,g=e.pdf.margins_doc.top;e.pdf.internal.events.subscribe("addPage",function(){e.y=g,n(w,e,r),e.pdf.margins_doc.top=e.y+10,e.y+=10},!1)}if(8===s.nodeType&&"#comment"===s.nodeName)~s.textContent.indexOf("ADD_PAGE")&&(e.pdf.addPage(),e.y=e.pdf.margins_doc.top);else if(1!==s.nodeType||b[s.nodeName])if(3===s.nodeType){var y=s.nodeValue;if(s.nodeValue&&"LI"===s.parentNode.nodeName)if("OL"===s.parentNode.parentNode.nodeName)y=q++ +". "+y;else{var x=16*o["font-size"],k=2;x>20&&(k=3),h=function(t,e){this.pdf.circle(t,e,k,"FD")}}e.addText(y,o)}else"string"==typeof s&&e.addText(s,o);else{var _;if("IMG"===s.nodeName){var A=s.getAttribute("src");_=m[e.pdf.sHashCode(A)||A]}if(_){e.pdf.internal.pageSize.height-e.pdf.margins_doc.bottom<e.y+s.height&&e.y>e.pdf.margins_doc.top&&(e.pdf.addPage(),e.y=e.pdf.margins_doc.top,e.executeWatchFunctions(s));var C=u(s),S=e.x,E=12/e.pdf.internal.scaleFactor,z=(C["margin-left"]+C["padding-left"])*E,T=(C["margin-right"]+C["padding-right"])*E,I=(C["margin-top"]+C["padding-top"])*E,B=(C["margin-bottom"]+C["padding-bottom"])*E;S+=void 0!==C["float"]&&"right"===C["float"]?e.settings.width-s.width-T:z,e.pdf.addImage(_,S,e.y+I,s.width,s.height),_=void 0,"right"===C["float"]||"left"===C["float"]?(e.watchFunctions.push(function(t,n,r,s){return e.y>=n?(e.x+=t,e.settings.width+=r,!0):s&&1===s.nodeType&&!b[s.nodeName]&&e.x+s.width>e.pdf.margins_doc.left+e.pdf.margins_doc.width?(e.x+=t,e.y=n,e.settings.width+=r,!0):!1}.bind(this,"left"===C["float"]?-s.width-z-T:0,e.y+s.height+I+B,s.width)),e.watchFunctions.push(function(t,n,r){return e.y<t&&n===e.pdf.internal.getNumberOfPages()?1===r.nodeType&&"both"===u(r).clear?(e.y=t,!0):!1:!0}.bind(this,e.y+s.height,e.pdf.internal.getNumberOfPages())),e.settings.width-=s.width+z+T,"left"===C["float"]&&(e.x+=s.width+z+T)):e.y+=s.height+B}else if("TABLE"===s.nodeName)d=v(s,e),e.y+=10,e.pdf.table(e.x,e.y,d.rows,d.headers,{autoSize:!1,printHeaders:!0,margins:e.pdf.margins_doc}),e.y=e.pdf.lastCellPos.y+e.pdf.lastCellPos.h+20;else if("OL"===s.nodeName||"UL"===s.nodeName)q=1,p(s,e,r)||n(s,e,r),e.y+=10;else if("LI"===s.nodeName){var O=e.x;e.x+="UL"===s.parentNode.nodeName?22:10,e.y+=3,p(s,e,r)||n(s,e,r),e.x=O}else"BR"===s.nodeName?e.y+=o["font-size"]*e.pdf.internal.scaleFactor:p(s,e,r)||n(s,e,r)}}a++}return c?e.setBlockBoundary(h):void 0},m={},w=function(t,e,n,r){function s(){e.pdf.internal.events.publish("imagesLoaded"),r(o)}function i(t,n,r){if(t){var i=new Image;o=++c,i.crossOrigin="",i.onerror=i.onload=function(){if(i.complete&&(0===i.src.indexOf("data:image/")&&(i.width=n||i.width||0,i.height=r||i.height||0),i.width+i.height)){var o=e.pdf.sHashCode(t)||t;m[o]=m[o]||i}--c||s()},i.src=t}}for(var o,a=t.getElementsByTagName("img"),u=a.length,c=0;u--;)i(a[u].getAttribute("src"),a[u].width,a[u].height);return c||s()},g=function(t,e,r){var s=t.getElementsByTagName("footer");if(s.length>0){s=s[0];var i=e.pdf.internal.write,o=e.y;e.pdf.internal.write=function(){},n(s,e,r);var a=Math.ceil(e.y-o)+5;e.y=o,e.pdf.internal.write=i,e.pdf.margins_doc.bottom+=a;for(var u=function(t){var i=void 0!==t?t.pageNumber:1,o=e.y;e.y=e.pdf.internal.pageSize.height-e.pdf.margins_doc.bottom,e.pdf.margins_doc.bottom-=a;for(var u=s.getElementsByTagName("span"),c=0;c<u.length;++c)(" "+u[c].className+" ").replace(/[\n\t]/g," ").indexOf(" pageCounter ")>-1&&(u[c].innerHTML=i),(" "+u[c].className+" ").replace(/[\n\t]/g," ").indexOf(" totalPages ")>-1&&(u[c].innerHTML="###jsPDFVarTotalPages###");n(s,e,r),e.pdf.margins_doc.bottom+=a,e.y=o},c=s.getElementsByTagName("span"),l=0;l<c.length;++l)(" "+c[l].className+" ").replace(/[\n\t]/g," ").indexOf(" totalPages ")>-1&&e.pdf.internal.events.subscribe("htmlRenderingFinished",e.pdf.putTotalPages.bind(e.pdf,"###jsPDFVarTotalPages###"),!0);e.pdf.internal.events.subscribe("addPage",u,!1),u(),b.FOOTER=1}},y=function(t,e,r,s,i,o){if(!e)return!1;"string"==typeof e||e.parentNode||(e=""+e.innerHTML),"string"==typeof e&&(e=function(t){var e,n,r,s;return r="jsPDFhtmlText"+Date.now().toString()+(1e3*Math.random()).toFixed(0),s="position: absolute !important;clip: rect(1px 1px 1px 1px); /* IE6, IE7 */clip: rect(1px, 1px, 1px, 1px);padding:0 !important;border:0 !important;height: 1px !important;width: 1px !important; top:auto;left:-100px;overflow: hidden;",n=document.createElement("div"),n.style.cssText=s,n.innerHTML='<iframe style="height:1px;width:1px" name="'+r+'" />',document.body.appendChild(n),e=window.frames[r],e.document.body.innerHTML=t,e.document.body}(e.replace(/<\/?script[^>]*?>/gi,"")));var a,u=new l(t,r,s,i);return w.call(this,e,u,i.elementHandlers,function(t){g(e,u,i.elementHandlers),n(e,u,i.elementHandlers),u.pdf.internal.events.publish("htmlRenderingFinished"),a=u.dispose(),"function"==typeof o?o(a):t&&console.error("jsPDF Warning: rendering issues? provide a callback to fromHTML!")}),a||{x:u.x,y:u.y}},l.prototype.init=function(){return this.paragraph={text:[],style:[]},this.pdf.internal.write("q")},l.prototype.dispose=function(){return this.pdf.internal.write("Q"),{x:this.x,y:this.y,ready:!0}},l.prototype.executeWatchFunctions=function(t){var e=!1,n=[];if(this.watchFunctions.length>0){for(var r=0;r<this.watchFunctions.length;++r)this.watchFunctions[r](t)===!0?e=!0:n.push(this.watchFunctions[r]);this.watchFunctions=n}return e},l.prototype.splitFragmentsIntoLines=function(t,n){var r,s,i,o,a,u,c,l,f,d,h,p,m,w,g;for(s=12,h=this.pdf.internal.scaleFactor,a={},i=void 0,d=void 0,o=void 0,u=void 0,g=void 0,f=void 0,l=void 0,c=void 0,p=[],m=[p],r=0,w=this.settings.width;t.length;)if(u=t.shift(),g=n.shift(),u)if(i=g["font-family"],d=g["font-style"],o=a[i+d],o||(o=this.pdf.internal.getFont(i,d).metadata.Unicode,a[i+d]=o),f={widths:o.widths,kerning:o.kerning,fontSize:g["font-size"]*s,textIndent:r},l=this.pdf.getStringUnitWidth(u,f)*f.fontSize/h,r+l>w){for(c=this.pdf.splitTextToSize(u,w,f),p.push([c.shift(),g]);c.length;)p=[[c.shift(),g]],m.push(p);r=this.pdf.getStringUnitWidth(p[0][0],f)*f.fontSize/h}else p.push([u,g]),r+=l;if(void 0!==g["text-align"]&&("center"===g["text-align"]||"right"===g["text-align"]||"justify"===g["text-align"]))for(var y=0;y<m.length;++y){var v=this.pdf.getStringUnitWidth(m[y][0][0],f)*f.fontSize/h;y>0&&(m[y][0][1]=e(m[y][0][1]));var b=w-v;if("right"===g["text-align"])m[y][0][1]["margin-left"]=b;else if("center"===g["text-align"])m[y][0][1]["margin-left"]=b/2;else if("justify"===g["text-align"]){var q=m[y][0][0].split(" ").length-1;m[y][0][1]["word-spacing"]=b/q,y===m.length-1&&(m[y][0][1]["word-spacing"]=0)}}return m},l.prototype.RenderTextFragment=function(t,e){var n,r,s;s=0,n=12,this.pdf.internal.pageSize.height-this.pdf.margins_doc.bottom<this.y+this.pdf.internal.getFontSize()&&(this.pdf.internal.write("ET","Q"),this.pdf.addPage(),this.y=this.pdf.margins_doc.top,this.pdf.internal.write("q","BT 0 g",this.pdf.internal.getCoordinateString(this.x),this.pdf.internal.getVerticalCoordinateString(this.y),"Td"),s=Math.max(s,e["line-height"],e["font-size"]),this.pdf.internal.write(0,(-1*n*s).toFixed(2),"Td")),r=this.pdf.internal.getFont(e["font-family"],e["font-style"]),void 0!==e["word-spacing"]&&e["word-spacing"]>0&&this.pdf.internal.write(e["word-spacing"].toFixed(2),"Tw"),this.pdf.internal.write("/"+r.id,(n*e["font-size"]).toFixed(2),"Tf","("+this.pdf.internal.pdfEscape(t)+") Tj"),void 0!==e["word-spacing"]&&this.pdf.internal.write(0,"Tw")},l.prototype.renderParagraph=function(t){var e,n,r,s,i,o,a,u,l,f,d,h,p,m,w;if(s=c(this.paragraph.text),m=this.paragraph.style,e=this.paragraph.blockstyle,p=this.paragraph.blockstyle||{},this.paragraph={text:[],style:[],blockstyle:{},priorblockstyle:e},s.join("").trim()){u=this.splitFragmentsIntoLines(s,m),a=void 0,l=void 0,n=12,r=n/this.pdf.internal.scaleFactor,h=(Math.max((e["margin-top"]||0)-(p["margin-bottom"]||0),0)+(e["padding-top"]||0))*r,d=((e["margin-bottom"]||0)+(e["padding-bottom"]||0))*r,f=this.pdf.internal.write,i=void 0,o=void 0,this.y+=h,f("q","BT 0 g",this.pdf.internal.getCoordinateString(this.x),this.pdf.internal.getVerticalCoordinateString(this.y),"Td");for(var g=0;u.length;){for(a=u.shift(),l=0,i=0,o=a.length;i!==o;)a[i][0].trim()&&(l=Math.max(l,a[i][1]["line-height"],a[i][1]["font-size"]),w=7*a[i][1]["font-size"]),i++;var y=0;for(void 0!==a[0][1]["margin-left"]&&a[0][1]["margin-left"]>0&&(wantedIndent=this.pdf.internal.getCoordinateString(a[0][1]["margin-left"]),y=wantedIndent-g,g=wantedIndent),f(y,(-1*n*l).toFixed(2),"Td"),i=0,o=a.length;i!==o;)a[i][0]&&this.RenderTextFragment(a[i][0],a[i][1]),i++;if(this.y+=l*r,this.executeWatchFunctions(a[0][1])&&u.length>0){var v=[],b=[];u.forEach(function(t){for(var e=0,n=t.length;e!==n;)t[e][0]&&(v.push(t[e][0]+" "),b.push(t[e][1])),++e}),u=this.splitFragmentsIntoLines(c(v),b),f("ET","Q"),f("q","BT 0 g",this.pdf.internal.getCoordinateString(this.x),this.pdf.internal.getVerticalCoordinateString(this.y),"Td")}}return t&&"function"==typeof t&&t.call(this,this.x-9,this.y-w/2),f("ET","Q"),this.y+=d}},l.prototype.setBlockBoundary=function(t){return this.renderParagraph(t)},l.prototype.setBlockStyle=function(t){return this.paragraph.blockstyle=t},l.prototype.addText=function(t,e){return this.paragraph.text.push(t),this.paragraph.style.push(e)},r={helvetica:"helvetica","sans-serif":"helvetica","times new roman":"times",serif:"times",times:"times",monospace:"courier",courier:"courier"},i={100:"normal",200:"normal",300:"normal",400:"normal",500:"bold",600:"bold",700:"bold",800:"bold",900:"bold",normal:"normal",bold:"bold",bolder:"bold",lighter:"normal"},s={normal:"normal",italic:"italic",oblique:"italic"},TextAlignMap={left:"left",right:"right",center:"center",justify:"justify"},o={none:"none",right:"right",left:"left"},a={none:"none",both:"both"},h={normal:1},t.fromHTML=function(t,e,n,r,s,i){return this.margins_doc=i||{top:0,bottom:0},r||(r={}),r.elementHandlers||(r.elementHandlers={}),y(this,t,isNaN(e)?4:e,isNaN(n)?4:n,r,s)}}(n.API),function(t){var e,n,r;t.addJS=function(t){return r=t,this.internal.events.subscribe("postPutResources",function(){e=this.internal.newObject(),this.internal.write("<< /Names [(EmbeddedJS) "+(e+1)+" 0 R] >>","endobj"),n=this.internal.newObject(),this.internal.write("<< /S /JavaScript /JS (",r,") >>","endobj")}),this.internal.events.subscribe("putCatalog",function(){void 0!==e&&void 0!==n&&this.internal.write("/Names <</JavaScript "+e+" 0 R>>")}),this}}(n.API),function(t){var e=function(){return"function"!=typeof PNG||"function"!=typeof o},n=function(e){return e!==t.image_compression.NONE&&r()},r=function(){var t="function"==typeof s;if(!t)throw new Error("requires deflate.js for compression");return t},i=function(e,n,r,i){var o=5,l=d;switch(i){case t.image_compression.FAST:o=3,l=f;break;case t.image_compression.MEDIUM:o=6,l=h;break;case t.image_compression.SLOW:o=9,l=p}e=c(e,n,r,l);var m=new Uint8Array(a(o)),w=u(e),g=new s(o),y=g.append(e),v=g.flush(),b=m.length+y.length+v.length,q=new Uint8Array(b+4);return q.set(m),q.set(y,m.length),q.set(v,m.length+y.length),q[b++]=w>>>24&255,q[b++]=w>>>16&255,q[b++]=w>>>8&255,q[b++]=255&w,t.arrayBufferToBinaryString(q)},a=function(t,e){var n=8,r=Math.LOG2E*Math.log(32768)-8,s=r<<4|n,i=s<<8,o=Math.min(3,(e-1&255)>>1);return i|=o<<6,i|=0,i+=31-i%31,[s,255&i&255]},u=function(t,e){for(var n,r=1,s=65535&r,i=r>>>16&65535,o=t.length,a=0;o>0;){n=o>e?e:o,o-=n;do s+=t[a++],i+=s;while(--n);s%=65521,i%=65521}return(i<<16|s)>>>0},c=function(t,e,n,r){for(var s,i,o,a=t.length/e,u=new Uint8Array(t.length+a),c=w(),l=0;a>l;l++){if(o=l*e,s=t.subarray(o,o+e),r)u.set(r(s,n,i),o+l);else{for(var f=0,d=c.length,h=[];d>f;f++)h[f]=c[f](s,n,i);var p=g(h.concat());u.set(h[p],o+l)}i=s}return u},l=function(t){var e=Array.apply([],t);return e.unshift(0),e},f=function(t,e){var n,r=[],s=0,i=t.length;for(r[0]=1;i>s;s++)n=t[s-e]||0,r[s+1]=t[s]-n+256&255;return r},d=function(t,e,n){var r,s=[],i=0,o=t.length;for(s[0]=2;o>i;i++)r=n&&n[i]||0,s[i+1]=t[i]-r+256&255;return s},h=function(t,e,n){var r,s,i=[],o=0,a=t.length;for(i[0]=3;a>o;o++)r=t[o-e]||0,s=n&&n[o]||0,i[o+1]=t[o]+256-(r+s>>>1)&255;return i},p=function(t,e,n){var r,s,i,o,a=[],u=0,c=t.length;for(a[0]=4;c>u;u++)r=t[u-e]||0,s=n&&n[u]||0,i=n&&n[u-e]||0,o=m(r,s,i),a[u+1]=t[u]-o+256&255;return a},m=function(t,e,n){var r=t+e-n,s=Math.abs(r-t),i=Math.abs(r-e),o=Math.abs(r-n);return i>=s&&o>=s?t:o>=i?e:n},w=function(){return[l,f,d,h,p]},g=function(t){for(var e,n,r,s=0,i=t.length;i>s;)e=y(t[s].slice(1)),(n>e||!n)&&(n=e,r=s),s++;return r},y=function(t){for(var e=0,n=t.length,r=0;n>e;)r+=Math.abs(t[e++]);return r};t.processPNG=function(t,r,s,o){var a,u,c,l,f,d,h=this.color_spaces.DEVICE_RGB,p=this.decode.FLATE_DECODE,m=8;if(this.isArrayBuffer(t)&&(t=new Uint8Array(t)),this.isArrayBufferView(t)){if(e())throw new Error("PNG support requires png.js and zlib.js");if(a=new PNG(t),t=a.imgData,m=a.bits,h=a.colorSpace,l=a.colors,-1!==[4,6].indexOf(a.colorType)){if(8===a.bits)for(var w,g,y=window["Uint"+a.pixelBitlength+"Array"],v=new y(a.decodePixels().buffer),b=v.length,q=new Uint8Array(b*a.colors),x=new Uint8Array(b),k=a.pixelBitlength-a.bits,_=0,A=0;b>_;_++){for(w=v[_],g=0;k>g;)q[A++]=w>>>g&255,g+=a.bits;x[_]=w>>>g&255}if(16===a.bits){for(var w,v=new Uint32Array(a.decodePixels().buffer),b=v.length,q=new Uint8Array(b*(32/a.pixelBitlength)*a.colors),x=new Uint8Array(b*(32/a.pixelBitlength)),C=a.colors>1,_=0,A=0,S=0;b>_;)w=v[_++],q[A++]=w>>>0&255,C&&(q[A++]=w>>>16&255,w=v[_++],q[A++]=w>>>0&255),x[S++]=w>>>16&255;m=8}n(o)?(t=i(q,a.width*a.colors,a.colors,o),d=i(x,a.width,1,o)):(t=q,d=x,p=null)}if(3===a.colorType&&(h=this.color_spaces.INDEXED,f=a.palette,a.transparency.indexed)){for(var E=a.transparency.indexed,z=0,_=0,b=E.length;b>_;++_)z+=E[_];if(z/=255,z===b-1&&-1!==E.indexOf(0))c=[E.indexOf(0)];else if(z!==b){for(var v=a.decodePixels(),x=new Uint8Array(v.length),_=0,b=v.length;b>_;_++)x[_]=E[v[_]];d=i(x,a.width,1)}}return u=p===this.decode.FLATE_DECODE?"/Predictor 15 /Colors "+l+" /BitsPerComponent "+m+" /Columns "+a.width:"/Colors "+l+" /BitsPerComponent "+m+" /Columns "+a.width,(this.isArrayBuffer(t)||this.isArrayBufferView(t))&&(t=this.arrayBufferToBinaryString(t)),(d&&this.isArrayBuffer(d)||this.isArrayBufferView(d))&&(d=this.arrayBufferToBinaryString(d)),this.createImageInfo(t,a.width,a.height,h,m,p,r,s,u,c,f,d)}throw new Error("Unsupported PNG image data, try using JPEG instead.")}}(n.API),function(t){t.addSVG=function(t,e,n,r,s){function i(t,e){var n=e.createElement("style");n.type="text/css",n.styleSheet?n.styleSheet.cssText=t:n.appendChild(e.createTextNode(t)),e.getElementsByTagName("head")[0].appendChild(n)}function o(t){var e="childframe",n=t.createElement("iframe");return i(".jsPDF_sillysvg_iframe {display:none;position:absolute;}",t),n.name=e,n.setAttribute("width",0),n.setAttribute("height",0),n.setAttribute("frameborder","0"),n.setAttribute("scrolling","no"),n.setAttribute("seamless","seamless"),n.setAttribute("class","jsPDF_sillysvg_iframe"),t.body.appendChild(n),n}function a(t,e){var n=(e.contentWindow||e.contentDocument).document;return n.write(t),n.close(),n.getElementsByTagName("svg")[0]}function u(t){for(var e=parseFloat(t[1]),n=parseFloat(t[2]),r=[],s=3,i=t.length;i>s;)"c"===t[s]?(r.push([parseFloat(t[s+1]),parseFloat(t[s+2]),parseFloat(t[s+3]),parseFloat(t[s+4]),parseFloat(t[s+5]),parseFloat(t[s+6])]),s+=7):"l"===t[s]?(r.push([parseFloat(t[s+1]),parseFloat(t[s+2])]),s+=3):s+=1;return[e,n,r]}var c;if(e===c||n===c)throw new Error("addSVG needs values for 'x' and 'y'");var l=o(document),f=a(t,l),d=[1,1],h=parseFloat(f.getAttribute("width")),p=parseFloat(f.getAttribute("height"));h&&p&&(r&&s?d=[r/h,s/p]:r?d=[r/h,r/h]:s&&(d=[s/p,s/p]));var m,w,g,y,v=f.childNodes;for(m=0,w=v.length;w>m;m++)g=v[m],g.tagName&&"PATH"===g.tagName.toUpperCase()&&(y=u(g.getAttribute("d").split(" ")),y[0]=y[0]*d[0]+e,y[1]=y[1]*d[1]+n,this.lines.call(this,y[2],y[0],y[1],d));return this}}(n.API),function(t){var e=t.getCharWidthsArray=function(t,e){e||(e={});var n,r,s,i=e.widths?e.widths:this.internal.getFont().metadata.Unicode.widths,o=i.fof?i.fof:1,a=e.kerning?e.kerning:this.internal.getFont().metadata.Unicode.kerning,u=a.fof?a.fof:1,c=0,l=i[0]||o,f=[];for(n=0,r=t.length;r>n;n++)s=t.charCodeAt(n),f.push((i[s]||l)/o+(a[s]&&a[s][c]||0)/u),c=s;return f},n=function(t){for(var e=t.length,n=0;e;)e--,n+=t[e];return n},r=t.getStringUnitWidth=function(t,r){return n(e.call(this,t,r))},s=function(t,e,n,r){for(var s=[],i=0,o=t.length,a=0;i!==o&&a+e[i]<n;)a+=e[i],i++;s.push(t.slice(0,i));var u=i;for(a=0;i!==o;)a+e[i]>r&&(s.push(t.slice(u,i)),a=0,u=i),a+=e[i],i++;return u!==i&&s.push(t.slice(u,i)),s},i=function(t,i,o){o||(o={});var a,u,c,l,f,d,h=[],p=[h],m=o.textIndent||0,w=0,g=0,y=t.split(" "),v=e(" ",o)[0];if(d=-1===o.lineIndent?y[0].length+2:o.lineIndent||0){var b=Array(d).join(" "),q=[];y.map(function(t){t=t.split(/\s*\n/),t.length>1?q=q.concat(t.map(function(t,e){return(e&&t.length?"\n":"")+t})):q.push(t[0])}),y=q,d=r(b,o)}for(c=0,l=y.length;l>c;c++){var x=0;if(a=y[c],d&&"\n"==a[0]&&(a=a.substr(1),x=1),u=e(a,o),g=n(u),m+w+g>i||x){if(g>i){for(f=s(a,u,i-(m+w),i),h.push(f.shift()),h=[f.pop()];f.length;)p.push([f.shift()]);g=n(u.slice(a.length-h[0].length))}else h=[a];p.push(h),m=g+d,w=v}else h.push(a),m+=w+g,w=v}if(d)var k=function(t,e){return(e?b:"")+t.join(" ")};else var k=function(t){return t.join(" ")};return p.map(k)};t.splitTextToSize=function(t,e,n){n||(n={});var r,s=n.fontSize||this.internal.getFontSize(),o=function(t){var e={0:1},n={};if(t.widths&&t.kerning)return{widths:t.widths,kerning:t.kerning};var r=this.internal.getFont(t.fontName,t.fontStyle),s="Unicode";return r.metadata[s]?{widths:r.metadata[s].widths||e,kerning:r.metadata[s].kerning||n}:{widths:e,kerning:n}}.call(this,n);r=Array.isArray(t)?t:t.split(/\r?\n/);var a=1*this.internal.scaleFactor*e/s;o.textIndent=n.textIndent?1*n.textIndent*this.internal.scaleFactor/s:0,o.lineIndent=n.lineIndent;var u,c,l=[];for(u=0,c=r.length;c>u;u++)l=l.concat(i(r[u],a,o));return l}}(n.API),function(t){var e=function(t){for(var e="0123456789abcdef",n="klmnopqrstuvwxyz",r={},s=0;s<n.length;s++)r[n[s]]=e[s];var i,o,a,u,c,l={},f=1,d=l,h=[],p="",m="",w=t.length-1;for(s=1;s!=w;)c=t[s],s+=1,"'"==c?o?(u=o.join(""),o=i):o=[]:o?o.push(c):"{"==c?(h.push([d,u]),d={},u=i):"}"==c?(a=h.pop(),a[0][a[1]]=d,u=i,d=a[0]):"-"==c?f=-1:u===i?r.hasOwnProperty(c)?(p+=r[c],u=parseInt(p,16)*f,f=1,p=""):p+=c:r.hasOwnProperty(c)?(m+=r[c],d[u]=parseInt(m,16)*f,f=1,u=i,m=""):m+=c;return l},n={codePages:["WinAnsiEncoding"],WinAnsiEncoding:e("{19m8n201n9q201o9r201s9l201t9m201u8m201w9n201x9o201y8o202k8q202l8r202m9p202q8p20aw8k203k8t203t8v203u9v2cq8s212m9t15m8w15n9w2dw9s16k8u16l9u17s9z17x8y17y9y}")},r={Unicode:{Courier:n,"Courier-Bold":n,"Courier-BoldOblique":n,"Courier-Oblique":n,Helvetica:n,"Helvetica-Bold":n,"Helvetica-BoldOblique":n,"Helvetica-Oblique":n,"Times-Roman":n,"Times-Bold":n,"Times-BoldItalic":n,"Times-Italic":n}},s={Unicode:{"Courier-Oblique":e("{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}"),"Times-BoldItalic":e("{'widths'{k3o2q4ycx2r201n3m201o6o201s2l201t2l201u2l201w3m201x3m201y3m2k1t2l2r202m2n2n3m2o3m2p5n202q6o2r1w2s2l2t2l2u3m2v3t2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v2l3w3t3x3t3y3t3z3m4k5n4l4m4m4m4n4m4o4s4p4m4q4m4r4s4s4y4t2r4u3m4v4m4w3x4x5t4y4s4z4s5k3x5l4s5m4m5n3r5o3x5p4s5q4m5r5t5s4m5t3x5u3x5v2l5w1w5x2l5y3t5z3m6k2l6l3m6m3m6n2w6o3m6p2w6q2l6r3m6s3r6t1w6u1w6v3m6w1w6x4y6y3r6z3m7k3m7l3m7m2r7n2r7o1w7p3r7q2w7r4m7s3m7t2w7u2r7v2n7w1q7x2n7y3t202l3mcl4mal2ram3man3mao3map3mar3mas2lat4uau1uav3maw3way4uaz2lbk2sbl3t'fof'6obo2lbp3tbq3mbr1tbs2lbu1ybv3mbz3mck4m202k3mcm4mcn4mco4mcp4mcq5ycr4mcs4mct4mcu4mcv4mcw2r2m3rcy2rcz2rdl4sdm4sdn4sdo4sdp4sdq4sds4sdt4sdu4sdv4sdw4sdz3mek3mel3mem3men3meo3mep3meq4ser2wes2wet2weu2wev2wew1wex1wey1wez1wfl3rfm3mfn3mfo3mfp3mfq3mfr3tfs3mft3rfu3rfv3rfw3rfz2w203k6o212m6o2dw2l2cq2l3t3m3u2l17s3x19m3m}'kerning'{cl{4qu5kt5qt5rs17ss5ts}201s{201ss}201t{cks4lscmscnscoscpscls2wu2yu201ts}201x{2wu2yu}2k{201ts}2w{4qx5kx5ou5qx5rs17su5tu}2x{17su5tu5ou}2y{4qx5kx5ou5qx5rs17ss5ts}'fof'-6ofn{17sw5tw5ou5qw5rs}7t{cksclscmscnscoscps4ls}3u{17su5tu5os5qs}3v{17su5tu5os5qs}7p{17su5tu}ck{4qu5kt5qt5rs17ss5ts}4l{4qu5kt5qt5rs17ss5ts}cm{4qu5kt5qt5rs17ss5ts}cn{4qu5kt5qt5rs17ss5ts}co{4qu5kt5qt5rs17ss5ts}cp{4qu5kt5qt5rs17ss5ts}6l{4qu5ou5qw5rt17su5tu}5q{ckuclucmucnucoucpu4lu}5r{ckuclucmucnucoucpu4lu}7q{cksclscmscnscoscps4ls}6p{4qu5ou5qw5rt17sw5tw}ek{4qu5ou5qw5rt17su5tu}el{4qu5ou5qw5rt17su5tu}em{4qu5ou5qw5rt17su5tu}en{4qu5ou5qw5rt17su5tu}eo{4qu5ou5qw5rt17su5tu}ep{4qu5ou5qw5rt17su5tu}es{17ss5ts5qs4qu}et{4qu5ou5qw5rt17sw5tw}eu{4qu5ou5qw5rt17ss5ts}ev{17ss5ts5qs4qu}6z{17sw5tw5ou5qw5rs}fm{17sw5tw5ou5qw5rs}7n{201ts}fo{17sw5tw5ou5qw5rs}fp{17sw5tw5ou5qw5rs}fq{17sw5tw5ou5qw5rs}7r{cksclscmscnscoscps4ls}fs{17sw5tw5ou5qw5rs}ft{17su5tu}fu{17su5tu}fv{17su5tu}fw{17su5tu}fz{cksclscmscnscoscps4ls}}}"),"Helvetica-Bold":e("{'widths'{k3s2q4scx1w201n3r201o6o201s1w201t1w201u1w201w3m201x3m201y3m2k1w2l2l202m2n2n3r2o3r2p5t202q6o2r1s2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v2l3w3u3x3u3y3u3z3x4k6l4l4s4m4s4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3r4v4s4w3x4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v2l5w1w5x2l5y3u5z3r6k2l6l3r6m3x6n3r6o3x6p3r6q2l6r3x6s3x6t1w6u1w6v3r6w1w6x5t6y3x6z3x7k3x7l3x7m2r7n3r7o2l7p3x7q3r7r4y7s3r7t3r7u3m7v2r7w1w7x2r7y3u202l3rcl4sal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3xbq3rbr1wbs2lbu2obv3rbz3xck4s202k3rcm4scn4sco4scp4scq6ocr4scs4mct4mcu4mcv4mcw1w2m2zcy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3res3ret3reu3rev3rew1wex1wey1wez1wfl3xfm3xfn3xfo3xfp3xfq3xfr3ufs3xft3xfu3xfv3xfw3xfz3r203k6o212m6o2dw2l2cq2l3t3r3u2l17s4m19m3r}'kerning'{cl{4qs5ku5ot5qs17sv5tv}201t{2ww4wy2yw}201w{2ks}201x{2ww4wy2yw}2k{201ts201xs}2w{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}2x{5ow5qs}2y{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}'fof'-6o7p{17su5tu5ot}ck{4qs5ku5ot5qs17sv5tv}4l{4qs5ku5ot5qs17sv5tv}cm{4qs5ku5ot5qs17sv5tv}cn{4qs5ku5ot5qs17sv5tv}co{4qs5ku5ot5qs17sv5tv}cp{4qs5ku5ot5qs17sv5tv}6l{17st5tt5os}17s{2kwclvcmvcnvcovcpv4lv4wwckv}5o{2kucltcmtcntcotcpt4lt4wtckt}5q{2ksclscmscnscoscps4ls4wvcks}5r{2ks4ws}5t{2kwclvcmvcnvcovcpv4lv4wwckv}eo{17st5tt5os}fu{17su5tu5ot}6p{17ss5ts}ek{17st5tt5os}el{17st5tt5os}em{17st5tt5os}en{17st5tt5os}6o{201ts}ep{17st5tt5os}es{17ss5ts}et{17ss5ts}eu{17ss5ts}ev{17ss5ts}6z{17su5tu5os5qt}fm{17su5tu5os5qt}fn{17su5tu5os5qt}fo{17su5tu5os5qt}fp{17su5tu5os5qt}fq{17su5tu5os5qt}fs{17su5tu5os5qt}ft{17su5tu5ot}7m{5os}fv{17su5tu5ot}fw{17su5tu5ot}}}"),Courier:e("{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}"),"Courier-BoldOblique":e("{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}"),"Times-Bold":e("{'widths'{k3q2q5ncx2r201n3m201o6o201s2l201t2l201u2l201w3m201x3m201y3m2k1t2l2l202m2n2n3m2o3m2p6o202q6o2r1w2s2l2t2l2u3m2v3t2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v2l3w3t3x3t3y3t3z3m4k5x4l4s4m4m4n4s4o4s4p4m4q3x4r4y4s4y4t2r4u3m4v4y4w4m4x5y4y4s4z4y5k3x5l4y5m4s5n3r5o4m5p4s5q4s5r6o5s4s5t4s5u4m5v2l5w1w5x2l5y3u5z3m6k2l6l3m6m3r6n2w6o3r6p2w6q2l6r3m6s3r6t1w6u2l6v3r6w1w6x5n6y3r6z3m7k3r7l3r7m2w7n2r7o2l7p3r7q3m7r4s7s3m7t3m7u2w7v2r7w1q7x2r7y3o202l3mcl4sal2lam3man3mao3map3mar3mas2lat4uau1yav3maw3tay4uaz2lbk2sbl3t'fof'6obo2lbp3rbr1tbs2lbu2lbv3mbz3mck4s202k3mcm4scn4sco4scp4scq6ocr4scs4mct4mcu4mcv4mcw2r2m3rcy2rcz2rdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3rek3mel3mem3men3meo3mep3meq4ser2wes2wet2weu2wev2wew1wex1wey1wez1wfl3rfm3mfn3mfo3mfp3mfq3mfr3tfs3mft3rfu3rfv3rfw3rfz3m203k6o212m6o2dw2l2cq2l3t3m3u2l17s4s19m3m}'kerning'{cl{4qt5ks5ot5qy5rw17sv5tv}201t{cks4lscmscnscoscpscls4wv}2k{201ts}2w{4qu5ku7mu5os5qx5ru17su5tu}2x{17su5tu5ou5qs}2y{4qv5kv7mu5ot5qz5ru17su5tu}'fof'-6o7t{cksclscmscnscoscps4ls}3u{17su5tu5os5qu}3v{17su5tu5os5qu}fu{17su5tu5ou5qu}7p{17su5tu5ou5qu}ck{4qt5ks5ot5qy5rw17sv5tv}4l{4qt5ks5ot5qy5rw17sv5tv}cm{4qt5ks5ot5qy5rw17sv5tv}cn{4qt5ks5ot5qy5rw17sv5tv}co{4qt5ks5ot5qy5rw17sv5tv}cp{4qt5ks5ot5qy5rw17sv5tv}6l{17st5tt5ou5qu}17s{ckuclucmucnucoucpu4lu4wu}5o{ckuclucmucnucoucpu4lu4wu}5q{ckzclzcmzcnzcozcpz4lz4wu}5r{ckxclxcmxcnxcoxcpx4lx4wu}5t{ckuclucmucnucoucpu4lu4wu}7q{ckuclucmucnucoucpu4lu}6p{17sw5tw5ou5qu}ek{17st5tt5qu}el{17st5tt5ou5qu}em{17st5tt5qu}en{17st5tt5qu}eo{17st5tt5qu}ep{17st5tt5ou5qu}es{17ss5ts5qu}et{17sw5tw5ou5qu}eu{17sw5tw5ou5qu}ev{17ss5ts5qu}6z{17sw5tw5ou5qu5rs}fm{17sw5tw5ou5qu5rs}fn{17sw5tw5ou5qu5rs}fo{17sw5tw5ou5qu5rs}fp{17sw5tw5ou5qu5rs}fq{17sw5tw5ou5qu5rs}7r{cktcltcmtcntcotcpt4lt5os}fs{17sw5tw5ou5qu5rs}ft{17su5tu5ou5qu}7m{5os}fv{17su5tu5ou5qu}fw{17su5tu5ou5qu}fz{cksclscmscnscoscps4ls}}}"),Helvetica:e("{'widths'{k3p2q4mcx1w201n3r201o6o201s1q201t1q201u1q201w2l201x2l201y2l2k1w2l1w202m2n2n3r2o3r2p5t202q6o2r1n2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v1w3w3u3x3u3y3u3z3r4k6p4l4m4m4m4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3m4v4m4w3r4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v1w5w1w5x1w5y2z5z3r6k2l6l3r6m3r6n3m6o3r6p3r6q1w6r3r6s3r6t1q6u1q6v3m6w1q6x5n6y3r6z3r7k3r7l3r7m2l7n3m7o1w7p3r7q3m7r4s7s3m7t3m7u3m7v2l7w1u7x2l7y3u202l3rcl4mal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3rbr1wbs2lbu2obv3rbz3xck4m202k3rcm4mcn4mco4mcp4mcq6ocr4scs4mct4mcu4mcv4mcw1w2m2ncy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3mes3ret3reu3rev3rew1wex1wey1wez1wfl3rfm3rfn3rfo3rfp3rfq3rfr3ufs3xft3rfu3rfv3rfw3rfz3m203k6o212m6o2dw2l2cq2l3t3r3u1w17s4m19m3r}'kerning'{5q{4wv}cl{4qs5kw5ow5qs17sv5tv}201t{2wu4w1k2yu}201x{2wu4wy2yu}17s{2ktclucmucnu4otcpu4lu4wycoucku}2w{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}2x{17sy5ty5oy5qs}2y{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}'fof'-6o7p{17sv5tv5ow}ck{4qs5kw5ow5qs17sv5tv}4l{4qs5kw5ow5qs17sv5tv}cm{4qs5kw5ow5qs17sv5tv}cn{4qs5kw5ow5qs17sv5tv}co{4qs5kw5ow5qs17sv5tv}cp{4qs5kw5ow5qs17sv5tv}6l{17sy5ty5ow}do{17st5tt}4z{17st5tt}7s{fst}dm{17st5tt}dn{17st5tt}5o{ckwclwcmwcnwcowcpw4lw4wv}dp{17st5tt}dq{17st5tt}7t{5ow}ds{17st5tt}5t{2ktclucmucnu4otcpu4lu4wycoucku}fu{17sv5tv5ow}6p{17sy5ty5ow5qs}ek{17sy5ty5ow}el{17sy5ty5ow}em{17sy5ty5ow}en{5ty}eo{17sy5ty5ow}ep{17sy5ty5ow}es{17sy5ty5qs}et{17sy5ty5ow5qs}eu{17sy5ty5ow5qs}ev{17sy5ty5ow5qs}6z{17sy5ty5ow5qs}fm{17sy5ty5ow5qs}fn{17sy5ty5ow5qs}fo{17sy5ty5ow5qs}fp{17sy5ty5qs}fq{17sy5ty5ow5qs}7r{5ow}fs{17sy5ty5ow5qs}ft{17sv5tv5ow}7m{5ow}fv{17sv5tv5ow}fw{17sv5tv5ow}}}"),"Helvetica-BoldOblique":e("{'widths'{k3s2q4scx1w201n3r201o6o201s1w201t1w201u1w201w3m201x3m201y3m2k1w2l2l202m2n2n3r2o3r2p5t202q6o2r1s2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v2l3w3u3x3u3y3u3z3x4k6l4l4s4m4s4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3r4v4s4w3x4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v2l5w1w5x2l5y3u5z3r6k2l6l3r6m3x6n3r6o3x6p3r6q2l6r3x6s3x6t1w6u1w6v3r6w1w6x5t6y3x6z3x7k3x7l3x7m2r7n3r7o2l7p3x7q3r7r4y7s3r7t3r7u3m7v2r7w1w7x2r7y3u202l3rcl4sal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3xbq3rbr1wbs2lbu2obv3rbz3xck4s202k3rcm4scn4sco4scp4scq6ocr4scs4mct4mcu4mcv4mcw1w2m2zcy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3res3ret3reu3rev3rew1wex1wey1wez1wfl3xfm3xfn3xfo3xfp3xfq3xfr3ufs3xft3xfu3xfv3xfw3xfz3r203k6o212m6o2dw2l2cq2l3t3r3u2l17s4m19m3r}'kerning'{cl{4qs5ku5ot5qs17sv5tv}201t{2ww4wy2yw}201w{2ks}201x{2ww4wy2yw}2k{201ts201xs}2w{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}2x{5ow5qs}2y{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}'fof'-6o7p{17su5tu5ot}ck{4qs5ku5ot5qs17sv5tv}4l{4qs5ku5ot5qs17sv5tv}cm{4qs5ku5ot5qs17sv5tv}cn{4qs5ku5ot5qs17sv5tv}co{4qs5ku5ot5qs17sv5tv}cp{4qs5ku5ot5qs17sv5tv}6l{17st5tt5os}17s{2kwclvcmvcnvcovcpv4lv4wwckv}5o{2kucltcmtcntcotcpt4lt4wtckt}5q{2ksclscmscnscoscps4ls4wvcks}5r{2ks4ws}5t{2kwclvcmvcnvcovcpv4lv4wwckv}eo{17st5tt5os}fu{17su5tu5ot}6p{17ss5ts}ek{17st5tt5os}el{17st5tt5os}em{17st5tt5os}en{17st5tt5os}6o{201ts}ep{17st5tt5os}es{17ss5ts}et{17ss5ts}eu{17ss5ts}ev{17ss5ts}6z{17su5tu5os5qt}fm{17su5tu5os5qt}fn{17su5tu5os5qt}fo{17su5tu5os5qt}fp{17su5tu5os5qt}fq{17su5tu5os5qt}fs{17su5tu5os5qt}ft{17su5tu5ot}7m{5os}fv{17su5tu5ot}fw{17su5tu5ot}}}"),"Courier-Bold":e("{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}"),"Times-Italic":e("{'widths'{k3n2q4ycx2l201n3m201o5t201s2l201t2l201u2l201w3r201x3r201y3r2k1t2l2l202m2n2n3m2o3m2p5n202q5t2r1p2s2l2t2l2u3m2v4n2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v2l3w4n3x4n3y4n3z3m4k5w4l3x4m3x4n4m4o4s4p3x4q3x4r4s4s4s4t2l4u2w4v4m4w3r4x5n4y4m4z4s5k3x5l4s5m3x5n3m5o3r5p4s5q3x5r5n5s3x5t3r5u3r5v2r5w1w5x2r5y2u5z3m6k2l6l3m6m3m6n2w6o3m6p2w6q1w6r3m6s3m6t1w6u1w6v2w6w1w6x4s6y3m6z3m7k3m7l3m7m2r7n2r7o1w7p3m7q2w7r4m7s2w7t2w7u2r7v2s7w1v7x2s7y3q202l3mcl3xal2ram3man3mao3map3mar3mas2lat4wau1vav3maw4nay4waz2lbk2sbl4n'fof'6obo2lbp3mbq3obr1tbs2lbu1zbv3mbz3mck3x202k3mcm3xcn3xco3xcp3xcq5tcr4mcs3xct3xcu3xcv3xcw2l2m2ucy2lcz2ldl4mdm4sdn4sdo4sdp4sdq4sds4sdt4sdu4sdv4sdw4sdz3mek3mel3mem3men3meo3mep3meq4mer2wes2wet2weu2wev2wew1wex1wey1wez1wfl3mfm3mfn3mfo3mfp3mfq3mfr4nfs3mft3mfu3mfv3mfw3mfz2w203k6o212m6m2dw2l2cq2l3t3m3u2l17s3r19m3m}'kerning'{cl{5kt4qw}201s{201sw}201t{201tw2wy2yy6q-t}201x{2wy2yy}2k{201tw}2w{7qs4qy7rs5ky7mw5os5qx5ru17su5tu}2x{17ss5ts5os}2y{7qs4qy7rs5ky7mw5os5qx5ru17su5tu}'fof'-6o6t{17ss5ts5qs}7t{5os}3v{5qs}7p{17su5tu5qs}ck{5kt4qw}4l{5kt4qw}cm{5kt4qw}cn{5kt4qw}co{5kt4qw}cp{5kt4qw}6l{4qs5ks5ou5qw5ru17su5tu}17s{2ks}5q{ckvclvcmvcnvcovcpv4lv}5r{ckuclucmucnucoucpu4lu}5t{2ks}6p{4qs5ks5ou5qw5ru17su5tu}ek{4qs5ks5ou5qw5ru17su5tu}el{4qs5ks5ou5qw5ru17su5tu}em{4qs5ks5ou5qw5ru17su5tu}en{4qs5ks5ou5qw5ru17su5tu}eo{4qs5ks5ou5qw5ru17su5tu}ep{4qs5ks5ou5qw5ru17su5tu}es{5ks5qs4qs}et{4qs5ks5ou5qw5ru17su5tu}eu{4qs5ks5qw5ru17su5tu}ev{5ks5qs4qs}ex{17ss5ts5qs}6z{4qv5ks5ou5qw5ru17su5tu}fm{4qv5ks5ou5qw5ru17su5tu}fn{4qv5ks5ou5qw5ru17su5tu}fo{4qv5ks5ou5qw5ru17su5tu}fp{4qv5ks5ou5qw5ru17su5tu}fq{4qv5ks5ou5qw5ru17su5tu}7r{5os}fs{4qv5ks5ou5qw5ru17su5tu}ft{17su5tu5qs}fu{17su5tu5qs}fv{17su5tu5qs}fw{17su5tu5qs}}}"),"Times-Roman":e("{'widths'{k3n2q4ycx2l201n3m201o6o201s2l201t2l201u2l201w2w201x2w201y2w2k1t2l2l202m2n2n3m2o3m2p5n202q6o2r1m2s2l2t2l2u3m2v3s2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v1w3w3s3x3s3y3s3z2w4k5w4l4s4m4m4n4m4o4s4p3x4q3r4r4s4s4s4t2l4u2r4v4s4w3x4x5t4y4s4z4s5k3r5l4s5m4m5n3r5o3x5p4s5q4s5r5y5s4s5t4s5u3x5v2l5w1w5x2l5y2z5z3m6k2l6l2w6m3m6n2w6o3m6p2w6q2l6r3m6s3m6t1w6u1w6v3m6w1w6x4y6y3m6z3m7k3m7l3m7m2l7n2r7o1w7p3m7q3m7r4s7s3m7t3m7u2w7v3k7w1o7x3k7y3q202l3mcl4sal2lam3man3mao3map3mar3mas2lat4wau1vav3maw3say4waz2lbk2sbl3s'fof'6obo2lbp3mbq2xbr1tbs2lbu1zbv3mbz2wck4s202k3mcm4scn4sco4scp4scq5tcr4mcs3xct3xcu3xcv3xcw2l2m2tcy2lcz2ldl4sdm4sdn4sdo4sdp4sdq4sds4sdt4sdu4sdv4sdw4sdz3mek2wel2wem2wen2weo2wep2weq4mer2wes2wet2weu2wev2wew1wex1wey1wez1wfl3mfm3mfn3mfo3mfp3mfq3mfr3sfs3mft3mfu3mfv3mfw3mfz3m203k6o212m6m2dw2l2cq2l3t3m3u1w17s4s19m3m}'kerning'{cl{4qs5ku17sw5ou5qy5rw201ss5tw201ws}201s{201ss}201t{ckw4lwcmwcnwcowcpwclw4wu201ts}2k{201ts}2w{4qs5kw5os5qx5ru17sx5tx}2x{17sw5tw5ou5qu}2y{4qs5kw5os5qx5ru17sx5tx}'fof'-6o7t{ckuclucmucnucoucpu4lu5os5rs}3u{17su5tu5qs}3v{17su5tu5qs}7p{17sw5tw5qs}ck{4qs5ku17sw5ou5qy5rw201ss5tw201ws}4l{4qs5ku17sw5ou5qy5rw201ss5tw201ws}cm{4qs5ku17sw5ou5qy5rw201ss5tw201ws}cn{4qs5ku17sw5ou5qy5rw201ss5tw201ws}co{4qs5ku17sw5ou5qy5rw201ss5tw201ws}cp{4qs5ku17sw5ou5qy5rw201ss5tw201ws}6l{17su5tu5os5qw5rs}17s{2ktclvcmvcnvcovcpv4lv4wuckv}5o{ckwclwcmwcnwcowcpw4lw4wu}5q{ckyclycmycnycoycpy4ly4wu5ms}5r{cktcltcmtcntcotcpt4lt4ws}5t{2ktclvcmvcnvcovcpv4lv4wuckv}7q{cksclscmscnscoscps4ls}6p{17su5tu5qw5rs}ek{5qs5rs}el{17su5tu5os5qw5rs}em{17su5tu5os5qs5rs}en{17su5qs5rs}eo{5qs5rs}ep{17su5tu5os5qw5rs}es{5qs}et{17su5tu5qw5rs}eu{17su5tu5qs5rs}ev{5qs}6z{17sv5tv5os5qx5rs}fm{5os5qt5rs}fn{17sv5tv5os5qx5rs}fo{17sv5tv5os5qx5rs}fp{5os5qt5rs}fq{5os5qt5rs}7r{ckuclucmucnucoucpu4lu5os}fs{17sv5tv5os5qx5rs}ft{17ss5ts5qs}fu{17sw5tw5qs}fv{17sw5tw5qs}fw{17ss5ts5qs}fz{ckuclucmucnucoucpu4lu5os5rs}}}"),"Helvetica-Oblique":e("{'widths'{k3p2q4mcx1w201n3r201o6o201s1q201t1q201u1q201w2l201x2l201y2l2k1w2l1w202m2n2n3r2o3r2p5t202q6o2r1n2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v1w3w3u3x3u3y3u3z3r4k6p4l4m4m4m4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3m4v4m4w3r4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v1w5w1w5x1w5y2z5z3r6k2l6l3r6m3r6n3m6o3r6p3r6q1w6r3r6s3r6t1q6u1q6v3m6w1q6x5n6y3r6z3r7k3r7l3r7m2l7n3m7o1w7p3r7q3m7r4s7s3m7t3m7u3m7v2l7w1u7x2l7y3u202l3rcl4mal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3rbr1wbs2lbu2obv3rbz3xck4m202k3rcm4mcn4mco4mcp4mcq6ocr4scs4mct4mcu4mcv4mcw1w2m2ncy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3mes3ret3reu3rev3rew1wex1wey1wez1wfl3rfm3rfn3rfo3rfp3rfq3rfr3ufs3xft3rfu3rfv3rfw3rfz3m203k6o212m6o2dw2l2cq2l3t3r3u1w17s4m19m3r}'kerning'{5q{4wv}cl{4qs5kw5ow5qs17sv5tv}201t{2wu4w1k2yu}201x{2wu4wy2yu}17s{2ktclucmucnu4otcpu4lu4wycoucku}2w{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}2x{17sy5ty5oy5qs}2y{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}'fof'-6o7p{17sv5tv5ow}ck{4qs5kw5ow5qs17sv5tv}4l{4qs5kw5ow5qs17sv5tv}cm{4qs5kw5ow5qs17sv5tv}cn{4qs5kw5ow5qs17sv5tv}co{4qs5kw5ow5qs17sv5tv}cp{4qs5kw5ow5qs17sv5tv}6l{17sy5ty5ow}do{17st5tt}4z{17st5tt}7s{fst}dm{17st5tt}dn{17st5tt}5o{ckwclwcmwcnwcowcpw4lw4wv}dp{17st5tt}dq{17st5tt}7t{5ow}ds{17st5tt}5t{2ktclucmucnu4otcpu4lu4wycoucku}fu{17sv5tv5ow}6p{17sy5ty5ow5qs}ek{17sy5ty5ow}el{17sy5ty5ow}em{17sy5ty5ow}en{5ty}eo{17sy5ty5ow}ep{17sy5ty5ow}es{17sy5ty5qs}et{17sy5ty5ow5qs}eu{17sy5ty5ow5qs}ev{17sy5ty5ow5qs}6z{17sy5ty5ow5qs}fm{17sy5ty5ow5qs}fn{17sy5ty5ow5qs}fo{17sy5ty5ow5qs}fp{17sy5ty5qs}fq{17sy5ty5ow5qs}7r{5ow}fs{17sy5ty5ow5qs}ft{17sv5tv5ow}7m{5ow}fv{17sv5tv5ow}fw{17sv5tv5ow}}}")}};
t.events.push(["addFonts",function(t){var e,n,i,o,a,u="Unicode";for(n in t.fonts)t.fonts.hasOwnProperty(n)&&(e=t.fonts[n],i=s[u][e.PostScriptName],i&&(o=e.metadata[u]?e.metadata[u]:e.metadata[u]={},o.widths=i.widths,o.kerning=i.kerning),a=r[u][e.PostScriptName],a&&(o=e.metadata[u]?e.metadata[u]:e.metadata[u]={},o.encoding=a,a.codePages&&a.codePages.length&&(e.encoding=a.codePages[0])))}])}(n.API),function(t){t.putTotalPages=function(t){for(var e=new RegExp(t,"g"),n=1;n<=this.internal.getNumberOfPages();n++)for(var r=0;r<this.internal.pages[n].length;r++)this.internal.pages[n][r]=this.internal.pages[n][r].replace(e,this.internal.getNumberOfPages());return this}}(n.API),function(t){if(t.URL=t.URL||t.webkitURL,t.Blob&&t.URL)try{return void new Blob}catch(e){}var n=t.BlobBuilder||t.WebKitBlobBuilder||t.MozBlobBuilder||function(t){var e=function(t){return Object.prototype.toString.call(t).match(/^\[object\s(.*)\]$/)[1]},n=function(){this.data=[]},r=function(t,e,n){this.data=t,this.size=t.length,this.type=e,this.encoding=n},s=n.prototype,i=r.prototype,o=t.FileReaderSync,a=function(t){this.code=this[this.name=t]},u="NOT_FOUND_ERR SECURITY_ERR ABORT_ERR NOT_READABLE_ERR ENCODING_ERR NO_MODIFICATION_ALLOWED_ERR INVALID_STATE_ERR SYNTAX_ERR".split(" "),c=u.length,l=t.URL||t.webkitURL||t,f=l.createObjectURL,d=l.revokeObjectURL,h=l,p=t.btoa,m=t.atob,w=t.ArrayBuffer,g=t.Uint8Array,y=/^[\w-]+:\/*\[?[\w\.:-]+\]?(?::[0-9]+)?/;for(r.fake=i.fake=!0;c--;)a.prototype[u[c]]=c+1;return l.createObjectURL||(h=t.URL=function(t){var e,n=document.createElementNS("http://www.w3.org/1999/xhtml","a");return n.href=t,"origin"in n||("data:"===n.protocol.toLowerCase()?n.origin=null:(e=t.match(y),n.origin=e&&e[1])),n}),h.createObjectURL=function(t){var e,n=t.type;return null===n&&(n="application/octet-stream"),t instanceof r?(e="data:"+n,"base64"===t.encoding?e+";base64,"+t.data:"URI"===t.encoding?e+","+decodeURIComponent(t.data):p?e+";base64,"+p(t.data):e+","+encodeURIComponent(t.data)):f?f.call(l,t):void 0},h.revokeObjectURL=function(t){"data:"!==t.substring(0,5)&&d&&d.call(l,t)},s.append=function(t){var n=this.data;if(g&&(t instanceof w||t instanceof g)){for(var s="",i=new g(t),u=0,c=i.length;c>u;u++)s+=String.fromCharCode(i[u]);n.push(s)}else if("Blob"===e(t)||"File"===e(t)){if(!o)throw new a("NOT_READABLE_ERR");var l=new o;n.push(l.readAsBinaryString(t))}else t instanceof r?"base64"===t.encoding&&m?n.push(m(t.data)):"URI"===t.encoding?n.push(decodeURIComponent(t.data)):"raw"===t.encoding&&n.push(t.data):("string"!=typeof t&&(t+=""),n.push(unescape(encodeURIComponent(t))))},s.getBlob=function(t){return arguments.length||(t=null),new r(this.data.join(""),t,"raw")},s.toString=function(){return"[object BlobBuilder]"},i.slice=function(t,e,n){var s=arguments.length;return 3>s&&(n=null),new r(this.data.slice(t,s>1?e:this.data.length),n,this.encoding)},i.toString=function(){return"[object Blob]"},i.close=function(){this.size=0,delete this.data},n}(t);t.Blob=function(t,e){var r=e?e.type||"":"",s=new n;if(t)for(var i=0,o=t.length;o>i;i++)s.append(t[i]);return s.getBlob(r)}}("undefined"!=typeof self&&self||"undefined"!=typeof window&&window||this.content||this);var r=r||"undefined"!=typeof navigator&&navigator.msSaveOrOpenBlob&&navigator.msSaveOrOpenBlob.bind(navigator)||function(t){if("undefined"==typeof navigator||!/MSIE [1-9]\./.test(navigator.userAgent)){var e=t.document,n=function(){return t.URL||t.webkitURL||t},r=e.createElementNS("http://www.w3.org/1999/xhtml","a"),s="download"in r,i=function(n){var r=e.createEvent("MouseEvents");r.initMouseEvent("click",!0,!1,t,0,0,0,0,0,!1,!1,!1,!1,0,null),n.dispatchEvent(r)},o=t.webkitRequestFileSystem,a=t.requestFileSystem||o||t.mozRequestFileSystem,u=function(e){(t.setImmediate||t.setTimeout)(function(){throw e},0)},c="application/octet-stream",l=0,f=10,d=function(e){var r=function(){"string"==typeof e?n().revokeObjectURL(e):e.remove()};t.chrome?r():setTimeout(r,f)},h=function(t,e,n){e=[].concat(e);for(var r=e.length;r--;){var s=t["on"+e[r]];if("function"==typeof s)try{s.call(t,n||t)}catch(i){u(i)}}},p=function(e,u){var f,p,m,w=this,g=e.type,y=!1,v=function(){h(w,"writestart progress write writeend".split(" "))},b=function(){if((y||!f)&&(f=n().createObjectURL(e)),p)p.location.href=f;else{var r=t.open(f,"_blank");void 0==r&&"undefined"!=typeof safari&&(t.location.href=f)}w.readyState=w.DONE,v(),d(f)},q=function(t){return function(){return w.readyState!==w.DONE?t.apply(this,arguments):void 0}},x={create:!0,exclusive:!1};return w.readyState=w.INIT,u||(u="download"),s?(f=n().createObjectURL(e),r.href=f,r.download=u,i(r),w.readyState=w.DONE,v(),void d(f)):(t.chrome&&g&&g!==c&&(m=e.slice||e.webkitSlice,e=m.call(e,0,e.size,c),y=!0),o&&"download"!==u&&(u+=".download"),(g===c||o)&&(p=t),a?(l+=e.size,void a(t.TEMPORARY,l,q(function(t){t.root.getDirectory("saved",x,q(function(t){var n=function(){t.getFile(u,x,q(function(t){t.createWriter(q(function(n){n.onwriteend=function(e){p.location.href=t.toURL(),w.readyState=w.DONE,h(w,"writeend",e),d(t)},n.onerror=function(){var t=n.error;t.code!==t.ABORT_ERR&&b()},"writestart progress write abort".split(" ").forEach(function(t){n["on"+t]=w["on"+t]}),n.write(e),w.abort=function(){n.abort(),w.readyState=w.DONE},w.readyState=w.WRITING}),b)}),b)};t.getFile(u,{create:!1},q(function(t){t.remove(),n()}),q(function(t){t.code===t.NOT_FOUND_ERR?n():b()}))}),b)}),b)):void b())},m=p.prototype,w=function(t,e){return new p(t,e)};return m.abort=function(){var t=this;t.readyState=t.DONE,h(t,"abort")},m.readyState=m.INIT=0,m.WRITING=1,m.DONE=2,m.error=m.onwritestart=m.onprogress=m.onwrite=m.onabort=m.onerror=m.onwriteend=null,w}}("undefined"!=typeof self&&self||"undefined"!=typeof window&&window||this.content);"undefined"!=typeof module&&null!==module&&(module.exports=r),void function(t,e){"object"==typeof module?module.exports=e():t.adler32cs=e()}(n,function(){var t="function"==typeof ArrayBuffer&&"function"==typeof Uint8Array,e=null,n=function(){if(!t)return function(){return!1};try{var n=require("buffer");"function"==typeof n.Buffer&&(e=n.Buffer)}catch(r){}return function(t){return t instanceof ArrayBuffer||null!==e&&t instanceof e}}(),r=function(){return null!==e?function(t){return new e(t,"utf8").toString("binary")}:function(t){return unescape(encodeURIComponent(t))}}(),s=65521,i=function(t,e){for(var n=65535&t,r=t>>>16,i=0,o=e.length;o>i;i++)n=(n+(255&e.charCodeAt(i)))%s,r=(r+n)%s;return(r<<16|n)>>>0},o=function(t,e){for(var n=65535&t,r=t>>>16,i=0,o=e.length;o>i;i++)n=(n+e[i])%s,r=(r+n)%s;return(r<<16|n)>>>0},a={},u=a.Adler32=function(){var e=function(t){if(!(this instanceof e))throw new TypeError("Constructor cannot called be as a function.");if(!isFinite(t=null==t?1:+t))throw new Error("First arguments needs to be a finite number.");this.checksum=t>>>0},s=e.prototype={};return s.constructor=e,e.from=function(t){return t.prototype=s,t}(function(t){if(!(this instanceof e))throw new TypeError("Constructor cannot called be as a function.");if(null==t)throw new Error("First argument needs to be a string.");this.checksum=i(1,t.toString())}),e.fromUtf8=function(t){return t.prototype=s,t}(function(t){if(!(this instanceof e))throw new TypeError("Constructor cannot called be as a function.");if(null==t)throw new Error("First argument needs to be a string.");var n=r(t.toString());this.checksum=i(1,n)}),t&&(e.fromBuffer=function(t){return t.prototype=s,t}(function(t){if(!(this instanceof e))throw new TypeError("Constructor cannot called be as a function.");if(!n(t))throw new Error("First argument needs to be ArrayBuffer.");var r=new Uint8Array(t);return this.checksum=o(1,r)})),s.update=function(t){if(null==t)throw new Error("First argument needs to be a string.");return t=t.toString(),this.checksum=i(this.checksum,t)},s.updateUtf8=function(t){if(null==t)throw new Error("First argument needs to be a string.");var e=r(t.toString());return this.checksum=i(this.checksum,e)},t&&(s.updateBuffer=function(t){if(!n(t))throw new Error("First argument needs to be ArrayBuffer.");var e=new Uint8Array(t);return this.checksum=o(this.checksum,e)}),s.clone=function(){return new u(this.checksum)},e}();return a.from=function(t){if(null==t)throw new Error("First argument needs to be a string.");return i(1,t.toString())},a.fromUtf8=function(t){if(null==t)throw new Error("First argument needs to be a string.");var e=r(t.toString());return i(1,e)},t&&(a.fromBuffer=function(t){if(!n(t))throw new Error("First argument need to be ArrayBuffer.");var e=new Uint8Array(t);return o(1,e)}),a});var s=function(){function t(){function t(t){var e,n,s,i,a,u,c=r.dyn_tree,l=r.stat_desc.static_tree,f=r.stat_desc.extra_bits,h=r.stat_desc.extra_base,p=r.stat_desc.max_length,m=0;for(i=0;o>=i;i++)t.bl_count[i]=0;for(c[2*t.heap[t.heap_max]+1]=0,e=t.heap_max+1;d>e;e++)n=t.heap[e],i=c[2*c[2*n+1]+1]+1,i>p&&(i=p,m++),c[2*n+1]=i,n>r.max_code||(t.bl_count[i]++,a=0,n>=h&&(a=f[n-h]),u=c[2*n],t.opt_len+=u*(i+a),l&&(t.static_len+=u*(l[2*n+1]+a)));if(0!==m){do{for(i=p-1;0===t.bl_count[i];)i--;t.bl_count[i]--,t.bl_count[i+1]+=2,t.bl_count[p]--,m-=2}while(m>0);for(i=p;0!==i;i--)for(n=t.bl_count[i];0!==n;)s=t.heap[--e],s>r.max_code||(c[2*s+1]!=i&&(t.opt_len+=(i-c[2*s+1])*c[2*s],c[2*s+1]=i),n--)}}function e(t,e){var n=0;do n|=1&t,t>>>=1,n<<=1;while(--e>0);return n>>>1}function n(t,n,r){var s,i,a,u=[],c=0;for(s=1;o>=s;s++)u[s]=c=c+r[s-1]<<1;for(i=0;n>=i;i++)a=t[2*i+1],0!==a&&(t[2*i]=e(u[a]++,a))}var r=this;r.build_tree=function(e){var s,i,o,a=r.dyn_tree,u=r.stat_desc.static_tree,c=r.stat_desc.elems,l=-1;for(e.heap_len=0,e.heap_max=d,s=0;c>s;s++)0!==a[2*s]?(e.heap[++e.heap_len]=l=s,e.depth[s]=0):a[2*s+1]=0;for(;e.heap_len<2;)o=e.heap[++e.heap_len]=2>l?++l:0,a[2*o]=1,e.depth[o]=0,e.opt_len--,u&&(e.static_len-=u[2*o+1]);for(r.max_code=l,s=Math.floor(e.heap_len/2);s>=1;s--)e.pqdownheap(a,s);o=c;do s=e.heap[1],e.heap[1]=e.heap[e.heap_len--],e.pqdownheap(a,1),i=e.heap[1],e.heap[--e.heap_max]=s,e.heap[--e.heap_max]=i,a[2*o]=a[2*s]+a[2*i],e.depth[o]=Math.max(e.depth[s],e.depth[i])+1,a[2*s+1]=a[2*i+1]=o,e.heap[1]=o++,e.pqdownheap(a,1);while(e.heap_len>=2);e.heap[--e.heap_max]=e.heap[1],t(e),n(a,r.max_code,e.bl_count)}}function e(t,e,n,r,s){var i=this;i.static_tree=t,i.extra_bits=e,i.extra_base=n,i.elems=r,i.max_length=s}function n(t,e,n,r,s){var i=this;i.good_length=t,i.max_lazy=e,i.nice_length=n,i.max_chain=r,i.func=s}function r(t,e,n,r){var s=t[2*e],i=t[2*n];return i>s||s==i&&r[e]<=r[n]}function s(){function n(){var t;for(Te=2*Ce,Be[Pe-1]=0,t=0;Pe-1>t;t++)Be[t]=0;Je=N[Xe].max_lazy,Ke=N[Xe].good_length,Qe=N[Xe].nice_length,Ve=N[Xe].max_chain,Me=0,Ue=0,Ge=0,Ne=We=Z-1,je=0,Oe=0}function s(){var t;for(t=0;f>t;t++)$e[2*t]=0;for(t=0;a>t;t++)Ze[2*t]=0;for(t=0;u>t;t++)tn[2*t]=0;$e[2*h]=1,en.opt_len=en.static_len=0,un=ln=0}function i(){nn.dyn_tree=$e,nn.stat_desc=e.static_l_desc,rn.dyn_tree=Ze,rn.stat_desc=e.static_d_desc,sn.dyn_tree=tn,sn.stat_desc=e.static_bl_desc,dn=0,hn=0,fn=8,s()}function o(t,e){var n,r,s=-1,i=t[1],o=0,a=7,u=4;for(0===i&&(a=138,u=3),t[2*(e+1)+1]=65535,n=0;e>=n;n++)r=i,i=t[2*(n+1)+1],++o<a&&r==i||(u>o?tn[2*r]+=o:0!==r?(r!=s&&tn[2*r]++,tn[2*m]++):10>=o?tn[2*w]++:tn[2*g]++,o=0,s=r,0===i?(a=138,u=3):r==i?(a=6,u=3):(a=7,u=4))}function c(){var e;for(o($e,nn.max_code),o(Ze,rn.max_code),sn.build_tree(en),e=u-1;e>=3&&0===tn[2*t.bl_order[e]+1];e--);return en.opt_len+=3*(e+1)+5+5+4,e}function d(t){en.pending_buf[en.pending++]=t}function p(t){d(255&t),d(t>>>8&255)}function O(t){d(t>>8&255),d(255&t&255)}function ne(t,e){var n,r=e;hn>y-r?(n=t,dn|=n<<hn&65535,p(dn),dn=n>>>y-hn,hn+=r-y):(dn|=t<<hn&65535,hn+=r)}function re(t,e){var n=2*t;ne(65535&e[n],65535&e[n+1])}function se(t,e){var n,r,s=-1,i=t[1],o=0,a=7,u=4;for(0===i&&(a=138,u=3),n=0;e>=n;n++)if(r=i,i=t[2*(n+1)+1],!(++o<a&&r==i)){if(u>o){do re(r,tn);while(0!==--o)}else 0!==r?(r!=s&&(re(r,tn),o--),re(m,tn),ne(o-3,2)):10>=o?(re(w,tn),ne(o-3,3)):(re(g,tn),ne(o-11,7));o=0,s=r,0===i?(a=138,u=3):r==i?(a=6,u=3):(a=7,u=4)}}function ie(e,n,r){var s;for(ne(e-257,5),ne(n-1,5),ne(r-4,4),s=0;r>s;s++)ne(tn[2*t.bl_order[s]+1],3);se($e,e-1),se(Ze,n-1)}function oe(){16==hn?(p(dn),dn=0,hn=0):hn>=8&&(d(255&dn),dn>>>=8,hn-=8)}function ae(){ne(Q<<1,3),re(h,e.static_ltree),oe(),9>1+fn+10-hn&&(ne(Q<<1,3),re(h,e.static_ltree),oe()),fn=7}function ue(e,n){var r,s,i;if(en.pending_buf[cn+2*un]=e>>>8&255,en.pending_buf[cn+2*un+1]=255&e,en.pending_buf[on+un]=255&n,un++,0===e?$e[2*n]++:(ln++,e--,$e[2*(t._length_code[n]+l+1)]++,Ze[2*t.d_code(e)]++),0===(8191&un)&&Xe>2){for(r=8*un,s=Me-Ue,i=0;a>i;i++)r+=Ze[2*i]*(5+t.extra_dbits[i]);if(r>>>=3,ln<Math.floor(un/2)&&r<Math.floor(s/2))return!0}return un==an-1}function ce(e,n){var r,s,i,o,a=0;if(0!==un)do r=en.pending_buf[cn+2*a]<<8&65280|255&en.pending_buf[cn+2*a+1],s=255&en.pending_buf[on+a],a++,0===r?re(s,e):(i=t._length_code[s],re(i+l+1,e),o=t.extra_lbits[i],0!==o&&(s-=t.base_length[i],ne(s,o)),r--,i=t.d_code(r),re(i,n),o=t.extra_dbits[i],0!==o&&(r-=t.base_dist[i],ne(r,o)));while(un>a);re(h,e),fn=e[2*h+1]}function le(){hn>8?p(dn):hn>0&&d(255&dn),dn=0,hn=0}function fe(t,e,n){le(),fn=8,n&&(p(e),p(~e)),en.pending_buf.set(ze.subarray(t,t+e),en.pending),en.pending+=e}function de(t,e,n){ne((K<<1)+(n?1:0),3),fe(t,e,!0)}function he(t,n,r){var i,o,a=0;Xe>0?(nn.build_tree(en),rn.build_tree(en),a=c(),i=en.opt_len+3+7>>>3,o=en.static_len+3+7>>>3,i>=o&&(i=o)):i=o=n+5,i>=n+4&&-1!=t?de(t,n,r):o==i?(ne((Q<<1)+(r?1:0),3),ce(e.static_ltree,e.static_dtree)):(ne(($<<1)+(r?1:0),3),ie(nn.max_code+1,rn.max_code+1,a+1),ce($e,Ze)),s(),r&&le()}function pe(t){he(Ue>=0?Ue:-1,Me-Ue,t),Ue=Me,qe.flush_pending()}function me(){var t,e,n,r;do{if(r=Te-Ge-Me,0===r&&0===Me&&0===Ge)r=Ce;else if(-1==r)r--;else if(Me>=Ce+Ce-ee){ze.set(ze.subarray(Ce,Ce+Ce),0),He-=Ce,Me-=Ce,Ue-=Ce,t=Pe,n=t;do e=65535&Be[--n],Be[n]=e>=Ce?e-Ce:0;while(0!==--t);t=Ce,n=t;do e=65535&Ie[--n],Ie[n]=e>=Ce?e-Ce:0;while(0!==--t);r+=Ce}if(0===qe.avail_in)return;t=qe.read_buf(ze,Me+Ge,r),Ge+=t,Ge>=Z&&(Oe=255&ze[Me],Oe=(Oe<<De^255&ze[Me+1])&Fe)}while(ee>Ge&&0!==qe.avail_in)}function we(t){var e,n=65535;for(n>ke-5&&(n=ke-5);;){if(1>=Ge){if(me(),0===Ge&&t==k)return j;if(0===Ge)break}if(Me+=Ge,Ge=0,e=Ue+n,(0===Me||Me>=e)&&(Ge=Me-e,Me=e,pe(!1),0===qe.avail_out))return j;if(Me-Ue>=Ce-ee&&(pe(!1),0===qe.avail_out))return j}return pe(t==C),0===qe.avail_out?t==C?H:j:t==C?G:M}function ge(t){var e,n,r=Ve,s=Me,i=We,o=Me>Ce-ee?Me-(Ce-ee):0,a=Qe,u=Ee,c=Me+te,l=ze[s+i-1],f=ze[s+i];We>=Ke&&(r>>=2),a>Ge&&(a=Ge);do if(e=t,ze[e+i]==f&&ze[e+i-1]==l&&ze[e]==ze[s]&&ze[++e]==ze[s+1]){s+=2,e++;do;while(ze[++s]==ze[++e]&&ze[++s]==ze[++e]&&ze[++s]==ze[++e]&&ze[++s]==ze[++e]&&ze[++s]==ze[++e]&&ze[++s]==ze[++e]&&ze[++s]==ze[++e]&&ze[++s]==ze[++e]&&c>s);if(n=te-(c-s),s=c-te,n>i){if(He=t,i=n,n>=a)break;l=ze[s+i-1],f=ze[s+i]}}while((t=65535&Ie[t&u])>o&&0!==--r);return Ge>=i?i:Ge}function ye(t){for(var e,n=0;;){if(ee>Ge){if(me(),ee>Ge&&t==k)return j;if(0===Ge)break}if(Ge>=Z&&(Oe=(Oe<<De^255&ze[Me+(Z-1)])&Fe,n=65535&Be[Oe],Ie[Me&Ee]=Be[Oe],Be[Oe]=Me),0!==n&&Ce-ee>=(Me-n&65535)&&Ye!=q&&(Ne=ge(n)),Ne>=Z)if(e=ue(Me-He,Ne-Z),Ge-=Ne,Je>=Ne&&Ge>=Z){Ne--;do Me++,Oe=(Oe<<De^255&ze[Me+(Z-1)])&Fe,n=65535&Be[Oe],Ie[Me&Ee]=Be[Oe],Be[Oe]=Me;while(0!==--Ne);Me++}else Me+=Ne,Ne=0,Oe=255&ze[Me],Oe=(Oe<<De^255&ze[Me+1])&Fe;else e=ue(0,255&ze[Me]),Ge--,Me++;if(e&&(pe(!1),0===qe.avail_out))return j}return pe(t==C),0===qe.avail_out?t==C?H:j:t==C?G:M}function ve(t){for(var e,n,r=0;;){if(ee>Ge){if(me(),ee>Ge&&t==k)return j;if(0===Ge)break}if(Ge>=Z&&(Oe=(Oe<<De^255&ze[Me+(Z-1)])&Fe,r=65535&Be[Oe],Ie[Me&Ee]=Be[Oe],Be[Oe]=Me),We=Ne,Le=He,Ne=Z-1,0!==r&&Je>We&&Ce-ee>=(Me-r&65535)&&(Ye!=q&&(Ne=ge(r)),5>=Ne&&(Ye==b||Ne==Z&&Me-He>4096)&&(Ne=Z-1)),We>=Z&&We>=Ne){n=Me+Ge-Z,e=ue(Me-1-Le,We-Z),Ge-=We-1,We-=2;do++Me<=n&&(Oe=(Oe<<De^255&ze[Me+(Z-1)])&Fe,r=65535&Be[Oe],Ie[Me&Ee]=Be[Oe],Be[Oe]=Me);while(0!==--We);if(je=0,Ne=Z-1,Me++,e&&(pe(!1),0===qe.avail_out))return j}else if(0!==je){if(e=ue(0,255&ze[Me-1]),e&&pe(!1),Me++,Ge--,0===qe.avail_out)return j}else je=1,Me++,Ge--}return 0!==je&&(e=ue(0,255&ze[Me-1]),je=0),pe(t==C),0===qe.avail_out?t==C?H:j:t==C?G:M}function be(t){return t.total_in=t.total_out=0,t.msg=null,en.pending=0,en.pending_out=0,xe=J,Ae=k,i(),n(),S}var qe,xe,ke,_e,Ae,Ce,Se,Ee,ze,Te,Ie,Be,Oe,Pe,Re,Fe,De,Ue,Ne,Le,je,Me,He,Ge,We,Ve,Je,Xe,Ye,Ke,Qe,$e,Ze,tn,en=this,nn=new t,rn=new t,sn=new t;en.depth=[];var on,an,un,cn,ln,fn,dn,hn;en.bl_count=[],en.heap=[],$e=[],Ze=[],tn=[],en.pqdownheap=function(t,e){for(var n=en.heap,s=n[e],i=e<<1;i<=en.heap_len&&(i<en.heap_len&&r(t,n[i+1],n[i],en.depth)&&i++,!r(t,s,n[i],en.depth));)n[e]=n[i],e=i,i<<=1;n[e]=s},en.deflateInit=function(t,e,n,r,s,i){return r||(r=Y),s||(s=R),i||(i=x),t.msg=null,e==v&&(e=6),1>s||s>P||r!=Y||9>n||n>15||0>e||e>9||0>i||i>q?T:(t.dstate=en,Se=n,Ce=1<<Se,Ee=Ce-1,Re=s+7,Pe=1<<Re,Fe=Pe-1,De=Math.floor((Re+Z-1)/Z),ze=new Uint8Array(2*Ce),Ie=[],Be=[],an=1<<s+6,en.pending_buf=new Uint8Array(4*an),ke=4*an,cn=Math.floor(an/2),on=3*an,Xe=e,Ye=i,_e=255&r,be(t))},en.deflateEnd=function(){return xe!=V&&xe!=J&&xe!=X?T:(en.pending_buf=null,Be=null,Ie=null,ze=null,en.dstate=null,xe==J?I:S)},en.deflateParams=function(t,e,n){var r=S;return e==v&&(e=6),0>e||e>9||0>n||n>q?T:(N[Xe].func!=N[e].func&&0!==t.total_in&&(r=t.deflate(_)),Xe!=e&&(Xe=e,Je=N[Xe].max_lazy,Ke=N[Xe].good_length,Qe=N[Xe].nice_length,Ve=N[Xe].max_chain),Ye=n,r)},en.deflateSetDictionary=function(t,e,n){var r,s=n,i=0;if(!e||xe!=V)return T;if(Z>s)return S;for(s>Ce-ee&&(s=Ce-ee,i=n-s),ze.set(e.subarray(i,i+s),0),Me=s,Ue=s,Oe=255&ze[0],Oe=(Oe<<De^255&ze[1])&Fe,r=0;s-Z>=r;r++)Oe=(Oe<<De^255&ze[r+(Z-1)])&Fe,Ie[r&Ee]=Be[Oe],Be[Oe]=r;return S},en.deflate=function(t,e){var n,r,s,i,o;if(e>C||0>e)return T;if(!t.next_out||!t.next_in&&0!==t.avail_in||xe==X&&e!=C)return t.msg=L[z-T],T;if(0===t.avail_out)return t.msg=L[z-B],B;if(qe=t,i=Ae,Ae=e,xe==V&&(r=Y+(Se-8<<4)<<8,s=(Xe-1&255)>>1,s>3&&(s=3),r|=s<<6,0!==Me&&(r|=W),r+=31-r%31,xe=J,O(r)),0!==en.pending){if(qe.flush_pending(),0===qe.avail_out)return Ae=-1,S}else if(0===qe.avail_in&&i>=e&&e!=C)return qe.msg=L[z-B],B;if(xe==X&&0!==qe.avail_in)return t.msg=L[z-B],B;if(0!==qe.avail_in||0!==Ge||e!=k&&xe!=X){switch(o=-1,N[Xe].func){case F:o=we(e);break;case D:o=ye(e);break;case U:o=ve(e)}if((o==H||o==G)&&(xe=X),o==j||o==H)return 0===qe.avail_out&&(Ae=-1),S;if(o==M){if(e==_)ae();else if(de(0,0,!1),e==A)for(n=0;Pe>n;n++)Be[n]=0;if(qe.flush_pending(),0===qe.avail_out)return Ae=-1,S}}return e!=C?S:E}}function i(){var t=this;t.next_in_index=0,t.next_out_index=0,t.avail_in=0,t.total_in=0,t.avail_out=0,t.total_out=0}var o=15,a=30,u=19,c=29,l=256,f=l+1+c,d=2*f+1,h=256,p=7,m=16,w=17,g=18,y=16,v=-1,b=1,q=2,x=0,k=0,_=1,A=3,C=4,S=0,E=1,z=2,T=-2,I=-3,B=-5,O=[0,1,2,3,4,4,5,5,6,6,6,6,7,7,7,7,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,16,17,18,18,19,19,20,20,20,20,21,21,21,21,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29];t._length_code=[0,1,2,3,4,5,6,7,8,8,9,9,10,10,11,11,12,12,12,12,13,13,13,13,14,14,14,14,15,15,15,15,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,28],t.base_length=[0,1,2,3,4,5,6,7,8,10,12,14,16,20,24,28,32,40,48,56,64,80,96,112,128,160,192,224,0],t.base_dist=[0,1,2,3,4,6,8,12,16,24,32,48,64,96,128,192,256,384,512,768,1024,1536,2048,3072,4096,6144,8192,12288,16384,24576],t.d_code=function(t){return 256>t?O[t]:O[256+(t>>>7)]},t.extra_lbits=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],t.extra_dbits=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],t.extra_blbits=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],t.bl_order=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],e.static_ltree=[12,8,140,8,76,8,204,8,44,8,172,8,108,8,236,8,28,8,156,8,92,8,220,8,60,8,188,8,124,8,252,8,2,8,130,8,66,8,194,8,34,8,162,8,98,8,226,8,18,8,146,8,82,8,210,8,50,8,178,8,114,8,242,8,10,8,138,8,74,8,202,8,42,8,170,8,106,8,234,8,26,8,154,8,90,8,218,8,58,8,186,8,122,8,250,8,6,8,134,8,70,8,198,8,38,8,166,8,102,8,230,8,22,8,150,8,86,8,214,8,54,8,182,8,118,8,246,8,14,8,142,8,78,8,206,8,46,8,174,8,110,8,238,8,30,8,158,8,94,8,222,8,62,8,190,8,126,8,254,8,1,8,129,8,65,8,193,8,33,8,161,8,97,8,225,8,17,8,145,8,81,8,209,8,49,8,177,8,113,8,241,8,9,8,137,8,73,8,201,8,41,8,169,8,105,8,233,8,25,8,153,8,89,8,217,8,57,8,185,8,121,8,249,8,5,8,133,8,69,8,197,8,37,8,165,8,101,8,229,8,21,8,149,8,85,8,213,8,53,8,181,8,117,8,245,8,13,8,141,8,77,8,205,8,45,8,173,8,109,8,237,8,29,8,157,8,93,8,221,8,61,8,189,8,125,8,253,8,19,9,275,9,147,9,403,9,83,9,339,9,211,9,467,9,51,9,307,9,179,9,435,9,115,9,371,9,243,9,499,9,11,9,267,9,139,9,395,9,75,9,331,9,203,9,459,9,43,9,299,9,171,9,427,9,107,9,363,9,235,9,491,9,27,9,283,9,155,9,411,9,91,9,347,9,219,9,475,9,59,9,315,9,187,9,443,9,123,9,379,9,251,9,507,9,7,9,263,9,135,9,391,9,71,9,327,9,199,9,455,9,39,9,295,9,167,9,423,9,103,9,359,9,231,9,487,9,23,9,279,9,151,9,407,9,87,9,343,9,215,9,471,9,55,9,311,9,183,9,439,9,119,9,375,9,247,9,503,9,15,9,271,9,143,9,399,9,79,9,335,9,207,9,463,9,47,9,303,9,175,9,431,9,111,9,367,9,239,9,495,9,31,9,287,9,159,9,415,9,95,9,351,9,223,9,479,9,63,9,319,9,191,9,447,9,127,9,383,9,255,9,511,9,0,7,64,7,32,7,96,7,16,7,80,7,48,7,112,7,8,7,72,7,40,7,104,7,24,7,88,7,56,7,120,7,4,7,68,7,36,7,100,7,20,7,84,7,52,7,116,7,3,8,131,8,67,8,195,8,35,8,163,8,99,8,227,8],e.static_dtree=[0,5,16,5,8,5,24,5,4,5,20,5,12,5,28,5,2,5,18,5,10,5,26,5,6,5,22,5,14,5,30,5,1,5,17,5,9,5,25,5,5,5,21,5,13,5,29,5,3,5,19,5,11,5,27,5,7,5,23,5],e.static_l_desc=new e(e.static_ltree,t.extra_lbits,l+1,f,o),e.static_d_desc=new e(e.static_dtree,t.extra_dbits,0,a,o),e.static_bl_desc=new e(null,t.extra_blbits,0,u,p);var P=9,R=8,F=0,D=1,U=2,N=[new n(0,0,0,0,F),new n(4,4,8,4,D),new n(4,5,16,8,D),new n(4,6,32,32,D),new n(4,4,16,16,U),new n(8,16,32,32,U),new n(8,16,128,128,U),new n(8,32,128,256,U),new n(32,128,258,1024,U),new n(32,258,258,4096,U)],L=["need dictionary","stream end","","","stream error","data error","","buffer error","",""],j=0,M=1,H=2,G=3,W=32,V=42,J=113,X=666,Y=8,K=0,Q=1,$=2,Z=3,te=258,ee=te+Z+1;return i.prototype={deflateInit:function(t,e){var n=this;return n.dstate=new s,e||(e=o),n.dstate.deflateInit(n,t,e)},deflate:function(t){var e=this;return e.dstate?e.dstate.deflate(e,t):T},deflateEnd:function(){var t=this;if(!t.dstate)return T;var e=t.dstate.deflateEnd();return t.dstate=null,e},deflateParams:function(t,e){var n=this;return n.dstate?n.dstate.deflateParams(n,t,e):T},deflateSetDictionary:function(t,e){var n=this;return n.dstate?n.dstate.deflateSetDictionary(n,t,e):T},read_buf:function(t,e,n){var r=this,s=r.avail_in;return s>n&&(s=n),0===s?0:(r.avail_in-=s,t.set(r.next_in.subarray(r.next_in_index,r.next_in_index+s),e),r.next_in_index+=s,r.total_in+=s,s)},flush_pending:function(){var t=this,e=t.dstate.pending;e>t.avail_out&&(e=t.avail_out),0!==e&&(t.next_out.set(t.dstate.pending_buf.subarray(t.dstate.pending_out,t.dstate.pending_out+e),t.next_out_index),t.next_out_index+=e,t.dstate.pending_out+=e,t.total_out+=e,t.avail_out-=e,t.dstate.pending-=e,0===t.dstate.pending&&(t.dstate.pending_out=0))}},function(t){var e=this,n=new i,r=512,s=k,o=new Uint8Array(r);"undefined"==typeof t&&(t=v),n.deflateInit(t),n.next_out=o,e.append=function(t,e){var i,a,u=[],c=0,l=0,f=0;if(t.length){n.next_in_index=0,n.next_in=t,n.avail_in=t.length;do{if(n.next_out_index=0,n.avail_out=r,i=n.deflate(s),i!=S)throw"deflating: "+n.msg;n.next_out_index&&u.push(n.next_out_index==r?new Uint8Array(o):new Uint8Array(o.subarray(0,n.next_out_index))),f+=n.next_out_index,e&&n.next_in_index>0&&n.next_in_index!=c&&(e(n.next_in_index),c=n.next_in_index)}while(n.avail_in>0||0===n.avail_out);return a=new Uint8Array(f),u.forEach(function(t){a.set(t,l),l+=t.length}),a}},e.flush=function(){var t,e,s=[],i=0,a=0;do{if(n.next_out_index=0,n.avail_out=r,t=n.deflate(C),t!=E&&t!=S)throw"deflating: "+n.msg;r-n.avail_out>0&&s.push(new Uint8Array(o.subarray(0,n.next_out_index))),a+=n.next_out_index}while(n.avail_in>0||0===n.avail_out);return n.deflateEnd(),e=new Uint8Array(a),s.forEach(function(t){e.set(t,i),i+=t.length}),e}}}(this);!function(t){var e;e=function(){function e(t){var e,n,r,s,i,o,a,u,c,l,f,d,h,p,m;for(this.data=t,this.pos=8,this.palette=[],this.imgData=[],this.transparency={},this.animation=null,this.text={},o=null;;){switch(e=this.readUInt32(),l=function(){var t,e;for(e=[],a=t=0;4>t;a=++t)e.push(String.fromCharCode(this.data[this.pos++]));return e}.call(this).join("")){case"IHDR":this.width=this.readUInt32(),this.height=this.readUInt32(),this.bits=this.data[this.pos++],this.colorType=this.data[this.pos++],this.compressionMethod=this.data[this.pos++],this.filterMethod=this.data[this.pos++],this.interlaceMethod=this.data[this.pos++];break;case"acTL":this.animation={numFrames:this.readUInt32(),numPlays:this.readUInt32()||1/0,frames:[]};break;case"PLTE":this.palette=this.read(e);break;case"fcTL":o&&this.animation.frames.push(o),this.pos+=4,o={width:this.readUInt32(),height:this.readUInt32(),xOffset:this.readUInt32(),yOffset:this.readUInt32()},i=this.readUInt16(),s=this.readUInt16()||100,o.delay=1e3*i/s,o.disposeOp=this.data[this.pos++],o.blendOp=this.data[this.pos++],o.data=[];break;case"IDAT":case"fdAT":for("fdAT"===l&&(this.pos+=4,e-=4),t=(null!=o?o.data:void 0)||this.imgData,a=h=0;e>=0?e>h:h>e;a=e>=0?++h:--h)t.push(this.data[this.pos++]);break;case"tRNS":switch(this.transparency={},this.colorType){case 3:if(r=this.palette.length/3,this.transparency.indexed=this.read(e),this.transparency.indexed.length>r)throw new Error("More transparent colors than palette size");if(f=r-this.transparency.indexed.length,f>0)for(a=p=0;f>=0?f>p:p>f;a=f>=0?++p:--p)this.transparency.indexed.push(255);break;case 0:this.transparency.grayscale=this.read(e)[0];break;case 2:this.transparency.rgb=this.read(e)}break;case"tEXt":d=this.read(e),u=d.indexOf(0),c=String.fromCharCode.apply(String,d.slice(0,u)),this.text[c]=String.fromCharCode.apply(String,d.slice(u+1));break;case"IEND":return o&&this.animation.frames.push(o),this.colors=function(){switch(this.colorType){case 0:case 3:case 4:return 1;case 2:case 6:return 3}}.call(this),this.hasAlphaChannel=4===(m=this.colorType)||6===m,n=this.colors+(this.hasAlphaChannel?1:0),this.pixelBitlength=this.bits*n,this.colorSpace=function(){switch(this.colors){case 1:return"DeviceGray";case 3:return"DeviceRGB"}}.call(this),void(this.imgData=new Uint8Array(this.imgData));default:this.pos+=e}if(this.pos+=4,this.pos>this.data.length)throw new Error("Incomplete or corrupt PNG file")}}var n,r,s,i,a,u,c,l;e.load=function(t,n,r){var s;return"function"==typeof n&&(r=n),s=new XMLHttpRequest,s.open("GET",t,!0),s.responseType="arraybuffer",s.onload=function(){var t,i;return t=new Uint8Array(s.response||s.mozResponseArrayBuffer),i=new e(t),"function"==typeof(null!=n?n.getContext:void 0)&&i.render(n),"function"==typeof r?r(i):void 0},s.send(null)},i=0,s=1,a=2,r=0,n=1,e.prototype.read=function(t){var e,n,r;for(r=[],e=n=0;t>=0?t>n:n>t;e=t>=0?++n:--n)r.push(this.data[this.pos++]);return r},e.prototype.readUInt32=function(){var t,e,n,r;return t=this.data[this.pos++]<<24,e=this.data[this.pos++]<<16,n=this.data[this.pos++]<<8,r=this.data[this.pos++],t|e|n|r},e.prototype.readUInt16=function(){var t,e;return t=this.data[this.pos++]<<8,e=this.data[this.pos++],t|e},e.prototype.decodePixels=function(t){var e,n,r,s,i,a,u,c,l,f,d,h,p,m,w,g,y,v,b,q,x,k,_;if(null==t&&(t=this.imgData),0===t.length)return new Uint8Array(0);for(t=new o(t),t=t.getBytes(),h=this.pixelBitlength/8,g=h*this.width,p=new Uint8Array(g*this.height),a=t.length,w=0,m=0,n=0;a>m;){switch(t[m++]){case 0:for(s=b=0;g>b;s=b+=1)p[n++]=t[m++];break;case 1:for(s=q=0;g>q;s=q+=1)e=t[m++],i=h>s?0:p[n-h],p[n++]=(e+i)%256;break;case 2:for(s=x=0;g>x;s=x+=1)e=t[m++],r=(s-s%h)/h,y=w&&p[(w-1)*g+r*h+s%h],p[n++]=(y+e)%256;break;case 3:for(s=k=0;g>k;s=k+=1)e=t[m++],r=(s-s%h)/h,i=h>s?0:p[n-h],y=w&&p[(w-1)*g+r*h+s%h],p[n++]=(e+Math.floor((i+y)/2))%256;break;case 4:for(s=_=0;g>_;s=_+=1)e=t[m++],r=(s-s%h)/h,i=h>s?0:p[n-h],0===w?y=v=0:(y=p[(w-1)*g+r*h+s%h],v=r&&p[(w-1)*g+(r-1)*h+s%h]),u=i+y-v,c=Math.abs(u-i),f=Math.abs(u-y),d=Math.abs(u-v),l=f>=c&&d>=c?i:d>=f?y:v,p[n++]=(e+l)%256;break;default:throw new Error("Invalid filter algorithm: "+t[m-1])}w++}return p},e.prototype.decodePalette=function(){var t,e,n,r,s,i,o,a,u,c;for(r=this.palette,o=this.transparency.indexed||[],i=new Uint8Array((o.length||0)+r.length),s=0,n=r.length,t=0,e=a=0,u=r.length;u>a;e=a+=3)i[s++]=r[e],i[s++]=r[e+1],i[s++]=r[e+2],i[s++]=null!=(c=o[t++])?c:255;return i},e.prototype.copyToImageData=function(t,e){var n,r,s,i,o,a,u,c,l,f,d;if(r=this.colors,l=null,n=this.hasAlphaChannel,this.palette.length&&(l=null!=(d=this._decodedPalette)?d:this._decodedPalette=this.decodePalette(),r=4,n=!0),s=t.data||t,c=s.length,o=l||e,i=a=0,1===r)for(;c>i;)u=l?4*e[i/4]:a,f=o[u++],s[i++]=f,s[i++]=f,s[i++]=f,s[i++]=n?o[u++]:255,a=u;else for(;c>i;)u=l?4*e[i/4]:a,s[i++]=o[u++],s[i++]=o[u++],s[i++]=o[u++],s[i++]=n?o[u++]:255,a=u},e.prototype.decode=function(){var t;return t=new Uint8Array(this.width*this.height*4),this.copyToImageData(t,this.decodePixels()),t};try{c=t.document.createElement("canvas"),l=c.getContext("2d")}catch(f){return-1}return u=function(t){var e;return l.width=t.width,l.height=t.height,l.clearRect(0,0,t.width,t.height),l.putImageData(t,0,0),e=new Image,e.src=c.toDataURL(),e},e.prototype.decodeFrames=function(t){var e,n,r,s,i,o,a,c;if(this.animation){for(a=this.animation.frames,c=[],n=i=0,o=a.length;o>i;n=++i)e=a[n],r=t.createImageData(e.width,e.height),s=this.decodePixels(new Uint8Array(e.data)),this.copyToImageData(r,s),e.imageData=r,c.push(e.image=u(r));return c}},e.prototype.renderFrame=function(t,e){var n,i,o;return i=this.animation.frames,n=i[e],o=i[e-1],0===e&&t.clearRect(0,0,this.width,this.height),(null!=o?o.disposeOp:void 0)===s?t.clearRect(o.xOffset,o.yOffset,o.width,o.height):(null!=o?o.disposeOp:void 0)===a&&t.putImageData(o.imageData,o.xOffset,o.yOffset),n.blendOp===r&&t.clearRect(n.xOffset,n.yOffset,n.width,n.height),t.drawImage(n.image,n.xOffset,n.yOffset)},e.prototype.animate=function(t){var e,n,r,s,i,o,a=this;return n=0,o=this.animation,s=o.numFrames,r=o.frames,i=o.numPlays,(e=function(){var o,u;return o=n++%s,u=r[o],a.renderFrame(t,o),s>1&&i>n/s?a.animation._timeout=setTimeout(e,u.delay):void 0
})()},e.prototype.stopAnimation=function(){var t;return clearTimeout(null!=(t=this.animation)?t._timeout:void 0)},e.prototype.render=function(t){var e,n;return t._png&&t._png.stopAnimation(),t._png=this,t.width=this.width,t.height=this.height,e=t.getContext("2d"),this.animation?(this.decodeFrames(e),this.animate(e)):(n=e.createImageData(this.width,this.height),this.copyToImageData(n,this.decodePixels()),e.putImageData(n,0,0))},e}(),t.PNG=e}("undefined"!=typeof window&&window||this);var i=function(){function t(){this.pos=0,this.bufferLength=0,this.eof=!1,this.buffer=null}return t.prototype={ensureBuffer:function(t){var e=this.buffer,n=e?e.byteLength:0;if(n>t)return e;for(var r=512;t>r;)r<<=1;for(var s=new Uint8Array(r),i=0;n>i;++i)s[i]=e[i];return this.buffer=s},getByte:function(){for(var t=this.pos;this.bufferLength<=t;){if(this.eof)return null;this.readBlock()}return this.buffer[this.pos++]},getBytes:function(t){var e=this.pos;if(t){this.ensureBuffer(e+t);for(var n=e+t;!this.eof&&this.bufferLength<n;)this.readBlock();var r=this.bufferLength;n>r&&(n=r)}else{for(;!this.eof;)this.readBlock();var n=this.bufferLength}return this.pos=n,this.buffer.subarray(e,n)},lookChar:function(){for(var t=this.pos;this.bufferLength<=t;){if(this.eof)return null;this.readBlock()}return String.fromCharCode(this.buffer[this.pos])},getChar:function(){for(var t=this.pos;this.bufferLength<=t;){if(this.eof)return null;this.readBlock()}return String.fromCharCode(this.buffer[this.pos++])},makeSubStream:function(t,e,n){for(var r=t+e;this.bufferLength<=r&&!this.eof;)this.readBlock();return new Stream(this.buffer,t,e,n)},skip:function(t){t||(t=1),this.pos+=t},reset:function(){this.pos=0}},t}(),o=function(){function t(t){throw new Error(t)}function e(e){var n=0,r=e[n++],s=e[n++];(-1==r||-1==s)&&t("Invalid header in flate stream"),8!=(15&r)&&t("Unknown compression method in flate stream"),((r<<8)+s)%31!=0&&t("Bad FCHECK in flate stream"),32&s&&t("FDICT bit set in flate stream"),this.bytes=e,this.bytesPos=n,this.codeSize=0,this.codeBuf=0,i.call(this)}if("undefined"==typeof Uint32Array)return void 0;var n=new Uint32Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),r=new Uint32Array([3,4,5,6,7,8,9,10,65547,65549,65551,65553,131091,131095,131099,131103,196643,196651,196659,196667,262211,262227,262243,262259,327811,327843,327875,327907,258,258,258]),s=new Uint32Array([1,2,3,4,65541,65543,131081,131085,196625,196633,262177,262193,327745,327777,393345,393409,459009,459137,524801,525057,590849,591361,657409,658433,724993,727041,794625,798721,868353,876545]),o=[new Uint32Array([459008,524368,524304,524568,459024,524400,524336,590016,459016,524384,524320,589984,524288,524416,524352,590048,459012,524376,524312,589968,459028,524408,524344,590032,459020,524392,524328,59e4,524296,524424,524360,590064,459010,524372,524308,524572,459026,524404,524340,590024,459018,524388,524324,589992,524292,524420,524356,590056,459014,524380,524316,589976,459030,524412,524348,590040,459022,524396,524332,590008,524300,524428,524364,590072,459009,524370,524306,524570,459025,524402,524338,590020,459017,524386,524322,589988,524290,524418,524354,590052,459013,524378,524314,589972,459029,524410,524346,590036,459021,524394,524330,590004,524298,524426,524362,590068,459011,524374,524310,524574,459027,524406,524342,590028,459019,524390,524326,589996,524294,524422,524358,590060,459015,524382,524318,589980,459031,524414,524350,590044,459023,524398,524334,590012,524302,524430,524366,590076,459008,524369,524305,524569,459024,524401,524337,590018,459016,524385,524321,589986,524289,524417,524353,590050,459012,524377,524313,589970,459028,524409,524345,590034,459020,524393,524329,590002,524297,524425,524361,590066,459010,524373,524309,524573,459026,524405,524341,590026,459018,524389,524325,589994,524293,524421,524357,590058,459014,524381,524317,589978,459030,524413,524349,590042,459022,524397,524333,590010,524301,524429,524365,590074,459009,524371,524307,524571,459025,524403,524339,590022,459017,524387,524323,589990,524291,524419,524355,590054,459013,524379,524315,589974,459029,524411,524347,590038,459021,524395,524331,590006,524299,524427,524363,590070,459011,524375,524311,524575,459027,524407,524343,590030,459019,524391,524327,589998,524295,524423,524359,590062,459015,524383,524319,589982,459031,524415,524351,590046,459023,524399,524335,590014,524303,524431,524367,590078,459008,524368,524304,524568,459024,524400,524336,590017,459016,524384,524320,589985,524288,524416,524352,590049,459012,524376,524312,589969,459028,524408,524344,590033,459020,524392,524328,590001,524296,524424,524360,590065,459010,524372,524308,524572,459026,524404,524340,590025,459018,524388,524324,589993,524292,524420,524356,590057,459014,524380,524316,589977,459030,524412,524348,590041,459022,524396,524332,590009,524300,524428,524364,590073,459009,524370,524306,524570,459025,524402,524338,590021,459017,524386,524322,589989,524290,524418,524354,590053,459013,524378,524314,589973,459029,524410,524346,590037,459021,524394,524330,590005,524298,524426,524362,590069,459011,524374,524310,524574,459027,524406,524342,590029,459019,524390,524326,589997,524294,524422,524358,590061,459015,524382,524318,589981,459031,524414,524350,590045,459023,524398,524334,590013,524302,524430,524366,590077,459008,524369,524305,524569,459024,524401,524337,590019,459016,524385,524321,589987,524289,524417,524353,590051,459012,524377,524313,589971,459028,524409,524345,590035,459020,524393,524329,590003,524297,524425,524361,590067,459010,524373,524309,524573,459026,524405,524341,590027,459018,524389,524325,589995,524293,524421,524357,590059,459014,524381,524317,589979,459030,524413,524349,590043,459022,524397,524333,590011,524301,524429,524365,590075,459009,524371,524307,524571,459025,524403,524339,590023,459017,524387,524323,589991,524291,524419,524355,590055,459013,524379,524315,589975,459029,524411,524347,590039,459021,524395,524331,590007,524299,524427,524363,590071,459011,524375,524311,524575,459027,524407,524343,590031,459019,524391,524327,589999,524295,524423,524359,590063,459015,524383,524319,589983,459031,524415,524351,590047,459023,524399,524335,590015,524303,524431,524367,590079]),9],a=[new Uint32Array([327680,327696,327688,327704,327684,327700,327692,327708,327682,327698,327690,327706,327686,327702,327694,0,327681,327697,327689,327705,327685,327701,327693,327709,327683,327699,327691,327707,327687,327703,327695,0]),5];return e.prototype=Object.create(i.prototype),e.prototype.getBits=function(e){for(var n,r=this.codeSize,s=this.codeBuf,i=this.bytes,o=this.bytesPos;e>r;)"undefined"==typeof(n=i[o++])&&t("Bad encoding in flate stream"),s|=n<<r,r+=8;return n=s&(1<<e)-1,this.codeBuf=s>>e,this.codeSize=r-=e,this.bytesPos=o,n},e.prototype.getCode=function(e){for(var n=e[0],r=e[1],s=this.codeSize,i=this.codeBuf,o=this.bytes,a=this.bytesPos;r>s;){var u;"undefined"==typeof(u=o[a++])&&t("Bad encoding in flate stream"),i|=u<<s,s+=8}var c=n[i&(1<<r)-1],l=c>>16,f=65535&c;return(0==s||l>s||0==l)&&t("Bad encoding in flate stream"),this.codeBuf=i>>l,this.codeSize=s-l,this.bytesPos=a,f},e.prototype.generateHuffmanTable=function(t){for(var e=t.length,n=0,r=0;e>r;++r)t[r]>n&&(n=t[r]);for(var s=1<<n,i=new Uint32Array(s),o=1,a=0,u=2;n>=o;++o,a<<=1,u<<=1)for(var c=0;e>c;++c)if(t[c]==o){for(var l=0,f=a,r=0;o>r;++r)l=l<<1|1&f,f>>=1;for(var r=l;s>r;r+=u)i[r]=o<<16|c;++a}return[i,n]},e.prototype.readBlock=function(){function e(t,e,n,r,s){for(var i=t.getBits(n)+r;i-->0;)e[k++]=s}var i=this.getBits(3);if(1&i&&(this.eof=!0),i>>=1,0==i){var u,c=this.bytes,l=this.bytesPos;"undefined"==typeof(u=c[l++])&&t("Bad block header in flate stream");var f=u;"undefined"==typeof(u=c[l++])&&t("Bad block header in flate stream"),f|=u<<8,"undefined"==typeof(u=c[l++])&&t("Bad block header in flate stream");var d=u;"undefined"==typeof(u=c[l++])&&t("Bad block header in flate stream"),d|=u<<8,d!=(65535&~f)&&t("Bad uncompressed block length in flate stream"),this.codeBuf=0,this.codeSize=0;var h=this.bufferLength,p=this.ensureBuffer(h+f),m=h+f;this.bufferLength=m;for(var w=h;m>w;++w){if("undefined"==typeof(u=c[l++])){this.eof=!0;break}p[w]=u}return void(this.bytesPos=l)}var g,y;if(1==i)g=o,y=a;else if(2==i){for(var v=this.getBits(5)+257,b=this.getBits(5)+1,q=this.getBits(4)+4,x=Array(n.length),k=0;q>k;)x[n[k++]]=this.getBits(3);for(var _=this.generateHuffmanTable(x),A=0,k=0,C=v+b,S=new Array(C);C>k;){var E=this.getCode(_);16==E?e(this,S,2,3,A):17==E?e(this,S,3,3,A=0):18==E?e(this,S,7,11,A=0):S[k++]=A=E}g=this.generateHuffmanTable(S.slice(0,v)),y=this.generateHuffmanTable(S.slice(v,C))}else t("Unknown block type in flate stream");for(var p=this.buffer,z=p?p.length:0,T=this.bufferLength;;){var I=this.getCode(g);if(256>I)T+1>=z&&(p=this.ensureBuffer(T+1),z=p.length),p[T++]=I;else{if(256==I)return void(this.bufferLength=T);I-=257,I=r[I];var B=I>>16;B>0&&(B=this.getBits(B));var A=(65535&I)+B;I=this.getCode(y),I=s[I],B=I>>16,B>0&&(B=this.getBits(B));var O=(65535&I)+B;T+A>=z&&(p=this.ensureBuffer(T+A),z=p.length);for(var P=0;A>P;++P,++T)p[T]=p[T-O]}}},e}();!function(t){var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";"undefined"==typeof t.btoa&&(t.btoa=function(t){var n,r,s,i,o,a,u,c,l=0,f=0,d="",h=[];if(!t)return t;do n=t.charCodeAt(l++),r=t.charCodeAt(l++),s=t.charCodeAt(l++),c=n<<16|r<<8|s,i=c>>18&63,o=c>>12&63,a=c>>6&63,u=63&c,h[f++]=e.charAt(i)+e.charAt(o)+e.charAt(a)+e.charAt(u);while(l<t.length);d=h.join("");var p=t.length%3;return(p?d.slice(0,p-3):d)+"===".slice(p||3)}),"undefined"==typeof t.atob&&(t.atob=function(t){var n,r,s,i,o,a,u,c,l=0,f=0,d="",h=[];if(!t)return t;t+="";do i=e.indexOf(t.charAt(l++)),o=e.indexOf(t.charAt(l++)),a=e.indexOf(t.charAt(l++)),u=e.indexOf(t.charAt(l++)),c=i<<18|o<<12|a<<6|u,n=c>>16&255,r=c>>8&255,s=255&c,h[f++]=64==a?String.fromCharCode(n):64==u?String.fromCharCode(n,r):String.fromCharCode(n,r,s);while(l<t.length);return d=h.join("")}),Array.prototype.map||(Array.prototype.map=function(t){if(void 0===this||null===this||"function"!=typeof t)throw new TypeError;for(var e=Object(this),n=e.length>>>0,r=new Array(n),s=arguments.length>1?arguments[1]:void 0,i=0;n>i;i++)i in e&&(r[i]=t.call(s,e[i],i,e));return r}),Array.isArray||(Array.isArray=function(t){return"[object Array]"===Object.prototype.toString.call(t)}),Array.prototype.forEach||(Array.prototype.forEach=function(t,e){if(void 0===this||null===this||"function"!=typeof t)throw new TypeError;for(var n=Object(this),r=n.length>>>0,s=0;r>s;s++)s in n&&t.call(e,n[s],s,n)}),Object.keys||(Object.keys=function(){var t=Object.prototype.hasOwnProperty,e=!{toString:null}.propertyIsEnumerable("toString"),n=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"],r=n.length;return function(s){if("object"!=typeof s&&("function"!=typeof s||null===s))throw new TypeError;var i,o,a=[];for(i in s)t.call(s,i)&&a.push(i);if(e)for(o=0;r>o;o++)t.call(s,n[o])&&a.push(n[o]);return a}}()),String.prototype.trim||(String.prototype.trim=function(){return this.replace(/^\s+|\s+$/g,"")}),String.prototype.trimLeft||(String.prototype.trimLeft=function(){return this.replace(/^\s+/g,"")}),String.prototype.trimRight||(String.prototype.trimRight=function(){return this.replace(/\s+$/g,"")})}("undefined"!=typeof self&&self||"undefined"!=typeof window&&window||this)}({},function(){return this}());
define('modules/FileEdition/src/FileEditionController',[
	'mustache',
	'modules/core/src/SongModel',
	'modules/converters/MusicCSLJson/src/SongModel_CSLJson',
	'modules/converters/MusicXML/src/SongModel_MusicXML',
	'modules/WaveManager/src/WaveManager',
	'modules/LSViewer/src/LSViewer',
	'pubsub',
	'utils/UserLog',
	'utils/apiFlowMachines/ComposerServlet',
	'utils/AjaxUtils',
	'jsPDF',
], function(Mustache, SongModel, SongModel_CSLJson, SongModel_MusicXML, WaveManager, LSViewer, pubsub, UserLog, ComposerServlet, AjaxUtils, jsPDF) {

	function FileEditionController(songModel, viewerCanvas, waveManager) {
		this.viewerCanvas = viewerCanvas;
		this.songModel = songModel || new SongModel();
		this.waveManager = waveManager;
		this.initSubscribe();
	}

	/**
	 * Subscribe to view events
	 */
	FileEditionController.prototype.initSubscribe = function() {
		var self = this;
		$.subscribe('FileEditionView-importMusicCSLJSON', function(el, JSONSong) {
			self.importMusicCSLJSON(JSONSong);
		});
		$.subscribe('FileEditionView-importMusicXML', function(el, musicXMLSong) {
			self.importMusicXML(musicXMLSong);
		});

		$.subscribe('FileEditionView-sound_export', function(el, options) {
			var exportType = (options && typeof options.exportType !== "undefined") ? options.exportType : 'mp3';
			var chord = (options && typeof options.chord !== "undefined") ? options.chord : true;
			var tick = (options && typeof options.tick !== "undefined") ? options.tick : false;
			var style = (options && typeof options.style !== "undefined") ? options.style : "none";
			var JSONSong = SongModel_CSLJson.exportToMusicCSLJSON(self.songModel);
			JSONSong = JSON.stringify(JSONSong);
			var tempo = self.songModel.getTempo();
			if (exportType === 'mid') {
				self.exportMidiFile(JSONSong, tempo, chord, tick);
			} else {
				self.exportAudioFile(JSONSong, tempo, exportType, chord, tick, style);
			}
		});
		$.subscribe('FileEditionView-exportPNG', function(el) {
			self.exportPNG();
		});
		$.subscribe('FileEditionView-exportPDF', function(el) {
			self.exportAndPromptLeadsheetToPDF(self.songModel.getTitle(), self.songModel.getComposer(), self.songModel.getTimeSignature(), self.songModel.getStyle());
		});
		$.subscribe('FileEditionView-exportMusicCSLJSON', function(el) {
			self.exportLeadsheetJSON();
		});
	};

	FileEditionController.prototype.importMusicCSLJSON = function(JSONSong) {
		if (typeof JSONSong === "undefined") {
			throw 'FileEditionController - importMusicCSLJSON File imported is not defined ' + JSONSong;
		}
		SongModel_CSLJson.importFromMusicCSLJSON(JSONSong, this.songModel);
		$.publish('ToHistory-add', {
			'item': JSONSong,
			'title': 'Open MusicCSLJson - ' + this.songModel.getTitle()
		});
		$.publish('ToViewer-draw', this.songModel);
	};

	FileEditionController.prototype.importMusicXML = function(musicXMLSong) {
		if (typeof musicXMLSong === "undefined") {
			throw 'FileEditionController - importMusicXML File imported is not defined ' + musicXMLSong;
		}
		SongModel_MusicXML.importFromMusicXML(musicXMLSong, this.songModel);
		$.publish('ToHistory-add', {
			'item': musicXMLSong,
			'title': 'Open MusicXML - ' + this.songModel.getTitle()
		});
		$.publish('ToViewer-draw', this.songModel);
	};

	/**
	 * Propose file to be downloaded by user
	 * @param  {String} title     title of file downloaded, title can contain extension eg "my_file" or "my_file.png"
	 * @param  {String} path      Real path to download from eg "www.url.com/my_tmp_file_is_here.mp3"
	 * @param  {String} extension optionnal arguments, if defined, be carefull to write the dot at begining, eg ".mp3"
	 */
	FileEditionController.prototype.promptFile = function(title, path, extension) {
		if (typeof extension === "undefined") {
			extension = '';
		}
		var export_link = $('<a>', {
			download: title + extension,
			href: path
		}).prependTo('body');
		export_link[0].click();
		export_link.remove();
	};

	FileEditionController.prototype.loadWaveDisplay = function(path) {
		if (!this.waveManager instanceof WaveManager){
			throw "FileEditionController -- this.waveManager is incorrect";
		}
		this.waveManager.load(path);
	};

	FileEditionController.prototype.exportAudioFile = function(JSONSong, tempo, exportType, chord, tick, style) {
		var self = this;
		var idLog = UserLog.log('info', 'Computing...');
		var request = ComposerServlet.getRequestForSimpleAudio(JSONSong, tempo, chord, tick, style);
		AjaxUtils.servletRequest('flow', 'composer', request, function(data) {
			UserLog.removeLog(idLog);
			if (typeof data !== "undefined") {
				if (typeof data.file === "undefined") {
					var message = 'Error while trying to build audio from Leadsheet';
					if (typeof data.error !== "undefined") {
						message = data.error;
					} else if (typeof data.message !== "undefined") {
						message = data.message;
					}
					UserLog.logAutoFade('error', message);
				} else {
					self.loadWaveDisplay(data.file);
					// self.promptFile(self.songModel.getTitle() + '.' + exportType, data.file);
				}
			}
		});
	};

	FileEditionController.prototype.exportMidiFile = function(JSONSong, tempo, chord, tick) {
		var self = this;
		var idLog = UserLog.log('info', 'Computing...');
		var request = ComposerServlet.getRequestForSimpleMidi(JSONSong, tempo, chord, tick);
		AjaxUtils.servletRequest('flow', 'composer', request, function(data) {
			UserLog.removeLog(idLog);
			if (typeof data !== "undefined") {
				if (typeof data.file === "undefined") {
					var message = 'Error while trying to build midi from Leadsheet';
					if (typeof data.error !== "undefined") {
						message = data.error;
					} else if (typeof data.message !== "undefined") {
						message = data.message;
					}
					UserLog.logAutoFade('error', message);
				} else {
					self.promptFile(self.songModel.getTitle() + '.mid', data.file);
				}
			}
		});
	};

	FileEditionController.prototype.exportPNG = function() {
		var srcCanvas = this.viewerCanvas;
		var destinationElement = document.createElement("div");
		var currentViewer = new LSViewer(destinationElement, {
			'width': srcCanvas.width * 5,
			'typeResize': 'scale'
		});
		currentViewer.draw(this.songModel);
		this.promptFile(this.songModel.getTitle() + '.png', currentViewer.canvas.toDataURL());
	};

	FileEditionController.prototype.exportAndPromptLeadsheetToPDF = function(title, composer, timeSignature, style, sources_abr) {
		var srcCanvas = this.viewerCanvas;
		// create a dummy CANVAS to create a new viewer without selection or edition
		var destinationElement = document.createElement("div");
		var currentViewer = new LSViewer(destinationElement, {
			'width': srcCanvas.width - 10
		});
		currentViewer.draw(this.songModel);

		// create another dummy CANVAS in which we will draw the first canvas, it prevents black screen to appear
		var destinationCanvas = document.createElement("canvas");
		destinationCanvas.width = srcCanvas.width;
		destinationCanvas.height = srcCanvas.height;
		var destCtx = destinationCanvas.getContext('2d');
		// create a rectangle with the desired color
		destCtx.fillStyle = "#FFFFFF";
		destCtx.fillRect(0, 0, srcCanvas.width, srcCanvas.height);
		// draw the original canvas onto the destination canvas
		destCtx.drawImage(currentViewer.canvas, 0, 0);
		var imgData = destinationCanvas.toDataURL('image/jpeg', 1);

		var totalWidth = 200;
		var totalHeight = totalWidth * (srcCanvas.height / srcCanvas.width);

		var doc = new jsPDF();
		doc.setFontSize(34);
		// doc.text(15, 20, title);
		// doc.setFontSize(18);
		// doc.text(15, 30, composer);
		doc.addImage(imgData, 'JPEG', 10, 23, totalWidth, totalHeight);
		doc.setFontSize(10);
		doc.text(15, 20, style + ' (' + timeSignature + ')');
		if (totalHeight >= 365) {
			doc.addPage();
			doc.addImage(imgData, 'JPEG', 10, -270, totalWidth, totalHeight);
		}
		if (sources_abr && sources_abr !== "") {
			sources_abr = '_' + sources_abr;
		} else {
			sources_abr = '';
		}
		doc.save(title + sources_abr + '.pdf');
	};

	FileEditionController.prototype.exportLeadsheetJSON = function() {
		var JSONSong = SongModel_CSLJson.exportToMusicCSLJSON(this.songModel);
		// Code is a bit special for json because we transform data and we add a 'data:' prefix after href to make it works
		var data = "text/json;charset=utf-8," + encodeURIComponent(JSON.stringify(JSONSong));
		var export_link = $('<a>', {
			download: this.songModel.getTitle() + '.json',
			href: 'data:' + data
		}).prependTo('body');
		export_link[0].click();
		export_link.remove();
	};

	return FileEditionController;
});
define('modules/FileEdition/src/FileEdition',[
	"modules/FileEdition/src/FileEditionView",
	"modules/FileEdition/src/FileEditionController"
	], function(FileEditionView, FileEditionController){

	function FileEdition(songModel, canvas, waveManager){
		this.view = new FileEditionView();
		new FileEditionController(songModel, canvas, waveManager);
	}
	return FileEdition;
});
define('modules/History/src/HistoryController',[
	'modules/converters/MusicCSLJson/src/SongModel_CSLJson',
	'mustache',
	'utils/UserLog',
	'jquery',
	'pubsub',
], function(SongModel_CSLJson, Mustache, UserLog, $, pubsub) {

	function HistoryController(model, songModel) {
		this.model = model || new HistoryModel();
		this.songModel = songModel;
		this.initSubscribe();
	}

	/**
	 * Subscribe to view events
	 */
	HistoryController.prototype.initSubscribe = function() {
		var self = this;
		$.subscribe('HistoryView-selectHistory', function(el, indexItem) {
			self.loadHistory(indexItem);
		});
		$.subscribe('HistoryView-moveSelectHistory', function(el, inc) {
			self.moveSelectHistory(inc);
		});
		$.subscribe('ToHistory-add', function(el, itemObject) {
			var item = '';
			var title = '';
			if (typeof itemObject === "string") {
				item = itemObject;
			} else {
				item = itemObject.item;
				title = itemObject.title;
			}
			self.addToHistory(item, title);
		});
	};


	/**
	 * Function is call to load the state of one history
	 * @param  {int} currentHistory represent the index of history that will be loaded
	 */
	HistoryController.prototype.loadHistory = function(currentHistory) {
		if (typeof this.model.historyList[currentHistory] === "undefined") {
			UserLog.logAutoFade('error', "No history available");
			return;
		}
		this.model.setCurrentPosition(currentHistory);
		if (typeof this.model.getCurrentState().leadsheet !== "undefined") {
			SongModel_CSLJson.importFromMusicCSLJSON(this.model.getCurrentState().leadsheet, this.songModel);
		}
		$.publish('ToViewer-draw', this.songModel);
		// $.publish('toSongModel-load', this.model.getCurrentState().leadsheet); // TODO must work! this or this.songModel
	};

	/**
	 * Function is call to load the state of one history before or after (typically, ctrl+z or ctrl+y)
	 * @param  {int} inc represent the decal of history relative to currentHistory to be loaded
	 */
	HistoryController.prototype.moveSelectHistory = function(inc) {
		if (isNaN(inc)) {
			throw 'HistoryController - moveSelectHistory - inc must be an int ' + inc;
		}
		this.loadHistory(this.model.getCurrentPosition() + inc);
	};

	/**
	 * Function is call to save a state to history
	 * @param  {item} represent the item of history that will be inserted
	 */
	HistoryController.prototype.addToHistory = function(item, title) {
		this.model.addToHistory(item, title);
		this.model.setCurrentPosition(this.model.historyList.length - 1);
	};

	return HistoryController;
});
define('modules/History/src/HistoryView',[
	'mustache',
	'utils/UserLog',
	'jquery',
	'pubsub',
], function(Mustache, UserLog, $, pubsub) {

	function HistoryView(parentHTML) {
		this.el = undefined;
		this.parentHTML = (parentHTML) ? parentHTML : $('#rightPanel');
		this.initController();
		this.initKeyboard();
		this.initSubscribe();
		this.render();
	}

	/**
	 * Render will build and display a new dom in parentHTML using model historyList
	 * @return {[type]} [description]
	 */
	HistoryView.prototype.render = function(model) {
		if (typeof this.parentHTML === "undefined") {
			return;
		}
		var history = '<h3>History</h3>';
		history += '<ul class="history_ul">';
		var text = '',
			classCurrent = "";
		// loop through each history state
		if (typeof model !== "undefined") {
			for (var i = 0, c = model.historyList.length; i < c; i++) {
				classCurrent = "";
				if (i == model.currentPosition) {
					classCurrent = "current_history";
				}
				text = '';
				if (model.historyList[i]['title'] !== '') {
					text += model.historyList[i]['title'] + ' ';
				}
				text += model.historyList[i]['time'];
				history += '<li class="' + classCurrent + '" data-history="' + i + '">' + text + '</li>';
			}
		}
		history += '</ul>';
		this.parentHTML.html(history);
		//$.publish('HistoryView-render');
	};

	HistoryView.prototype.initKeyboard = function(evt) {
		var self = this;
		$(document).keydown(function(evt) {
			if (self.editing === false) {
				return;
			}
			var keyCode = (evt === null) ? event.keyCode : evt.keyCode;
			var key = String.fromCharCode(keyCode).toLowerCase();

			//prevent backspace
			if (keyCode === 8) {
				var doPrevent = false;
				var d = evt.srcElement || evt.target;
				if (d.tagName.toUpperCase() === 'TEXTAREA' || (d.tagName.toUpperCase() === 'INPUT' && (d.type.toUpperCase() === 'TEXT' || d.type.toUpperCase() === 'PASSWORD' || d.type.toUpperCase() === 'FILE'))) {
					doPrevent = d.readOnly || d.disabled;
				} else {
					doPrevent = true;
				}
				if (doPrevent) {
					stopEvent(evt);
				}
			}

			if (keyCode === 90 && evt.ctrlKey) { // Ctrl + z
				$.publish('HistoryView-moveSelectHistory', -1);
				stopEvent(evt);
			} else if (keyCode === 89 && evt.ctrlKey) { // Ctrl + y
				$.publish('HistoryView-moveSelectHistory', 1);
				stopEvent(evt);
			}
			// else console.log(key + " " + keyCode);
		});

		function stopEvent(evt) {
			evt.preventDefault();
			evt.stopPropagation();
		}
	};

	/**
	 * Publish event after receiving dom events
	 */
	HistoryView.prototype.initController = function() {
		var self = this;
		this.parentHTML.on('click', ".history_ul li", function() {
			var indexItem = parseInt($(this).attr('data-history'), 10);
			$.publish('HistoryView-selectHistory', indexItem);
		});
	};

	/**
	 * Subscribe to model events
	 */
	HistoryView.prototype.initSubscribe = function() {
		var self = this;
		$.subscribe('HistoryModel-setCurrentPosition', function(el, model) {
			self.render(model);
		});
		$.subscribe('HistoryModel-addToHistory', function(el, model) {
			self.render(model);
		});
		$.subscribe('toHistoryView-unactiveView', function() {
			self.unactiveView();
		});
		$.subscribe('toHistoryView-activeView', function() {
			self.activeView();
		});
	};

	HistoryView.prototype.unactiveView = function() {
		$('#rightPanel').hide('slow');
	};

	HistoryView.prototype.activeView = function() {
		$('#rightPanel').show('slow');
	};

	return HistoryView;
});
define('modules/History/src/HistoryModel',[
	'mustache',
	'jquery',
	'utils/UserLog',
	'pubsub',
], function(Mustache, $, UserLog, pubsub) {
	/**
	 * HistoryModel is an array of state, it allow a high level management of Historys
	 * @param {object} options
	 */
	var HistoryModel = function(options) {
		this.init();
	};

	/**
	 * Initialise historyList by cleaning historyList
	 * By default currentPosition is on 0
	 */
	HistoryModel.prototype.init = function() {
		this.historyList = []; // state list
		this.currentPosition = 0; // current Position start at 0
	};

	HistoryModel.prototype.getCurrentPosition = function() {
		return this.currentPosition;
	};

	HistoryModel.prototype.getCurrentState = function() {
		return this.historyList[this.currentPosition];
	};

	HistoryModel.prototype.setCurrentPosition = function(position) {
		if (!isNaN(position) && position >= 0 && position < this.historyList.length) {
			this.currentPosition = position;
			$.publish('HistoryModel-setCurrentPosition', this);
		}
	};

	/**
	 * Add a state to History
	 * @param {Object} leadsheet contain a state, it's often a leadsheet
	 * @param {string} title     state name, view can display this message to user.
	 * A date paramateres will automatically be added to history
	 */
	HistoryModel.prototype.addToHistory = function(leadsheet, title) {
		this.historyList = this.historyList.slice(0, this.currentPosition + 1);
		var time = (new Date()).toLocaleString();
		title = title ? title : '';
		var newHistorical = {
			'leadsheet': leadsheet,
			'title': title,
			'time': time
		};
		this.historyList.push(newHistorical);
		$.publish('HistoryModel-addToHistory', this);
	};

	return HistoryModel;
});
define('modules/History/src/HistoryC',[
	'modules/History/src/HistoryController',
	'modules/History/src/HistoryView',
	'modules/History/src/HistoryModel'
	],	function(HistoryController, HistoryView, HistoryModel){

	function HistoryC (songModel) {
		var historyM = new HistoryModel();
		var historyV = new HistoryView();
		new HistoryController(historyM, songModel);
	}
	return HistoryC;

});
define('modules/HarmonicAnalysis/src/HarmonicAnalysisAPI',[
	'utils/AjaxUtils',
], function(AjaxUtils) {

	function HarmonicAnalysisAPI() {}

	HarmonicAnalysisAPI.prototype.harmonicAnalyseFromIdSongAPI = function(idSong, callback) {
		var request = {
			'id': idSong,
		};
		AjaxUtils.servletRequest('jsonsong', 'harmony', request, callback);
	};

	HarmonicAnalysisAPI.prototype.harmonicAnalyseFromLeadsheetAPI = function(leadsheet, callback) {
		var request = {
			'leadsheet': leadsheet,
		};
		AjaxUtils.servletRequest('jsonsong', 'harmony', request, callback);
	};

	return HarmonicAnalysisAPI;
});
define('modules/HarmonicAnalysis/src/HarmonicAnalysisController',[
	'mustache',
	'modules/core/src/SongModel',
	'modules/converters/MusicCSLJson/src/SongModel_CSLJson',
	'modules/HarmonicAnalysis/src/HarmonicAnalysisAPI',
	'modules/Tag/src/TagManager',
	'utils/UserLog',
	'jquery',
	'pubsub',
], function(Mustache, SongModel, SongModel_CSLJson, HarmonicAnalysisAPI, TagManager, UserLog, $, pubsub) {

	function HarmonicAnalysisController(songModel, view) {
		this.songModel = songModel;
		this.initSubscribe();
		this.tagManager = new TagManager(this.songModel, [], undefined, false);
	}

	HarmonicAnalysisController.prototype.initSubscribe = function() {
		var self = this;
		$.subscribe('HarmonicAnalysisView-compute', function(el) {
			self.computeHarmonicAnalysis();
		});
		$.subscribe('HarmonicAnalysisView-remove', function(el) {
			self.removeHarmonicAnalysis();
		});
	};

	HarmonicAnalysisController.prototype.computeHarmonicAnalysis = function() {
		var self = this;
		var JSONSong = SongModel_CSLJson.exportToMusicCSLJSON(this.songModel);
		var harm = new HarmonicAnalysisAPI();
		var idLog = UserLog.log('info', 'Computing...');
		harm.harmonicAnalyseFromLeadsheetAPI(JSON.stringify(JSONSong), function(data) {
			UserLog.removeLog(idLog);
			if (data.success === true) {
				UserLog.logAutoFade('success', 'Harmonic Analysis is finished');
				if (typeof data.analysis !== "undefined") {
					self.tagManager.setActive(true);
					self.tagManager.setTags(data.analysis);
					$.publish('ToViewer-draw', self.songModel);
				}
			} else {
				UserLog.logAutoFade('error', data.error);
			}
		});
	};

	HarmonicAnalysisController.prototype.removeHarmonicAnalysis = function() {
		this.tagManager.setActive(false);
	};


	return HarmonicAnalysisController;
});

define('text!modules/HarmonicAnalysis/src/HarmonicAnalysisTemplate.html',[],function () { return '<div id="harmonic_analysis_second_level">\r\n\t<div id="harmonic_analysis_button_container">\r\n\t\t<a class="btn btn-primary" id="harmonic_analysis" title="Harmonic Analysis of whole song">Harmonic Analysis</a>\r\n\t\t<a class="btn btn-primary" id="remove_harmonic_analysis" title="Remove Harmonic Analysis" style="display:none">Remove Tag Layer</a>\r\n\t</div>\r\n</div>';});

define('modules/HarmonicAnalysis/src/HarmonicAnalysisView',[
	'mustache',
	'modules/core/src/SongModel',
	'utils/UserLog',
	'pubsub',
	'text!modules/HarmonicAnalysis/src/HarmonicAnalysisTemplate.html'
], function(Mustache, SongModel, UserLog, pubsub, HarmonicAnalysisTemplate) {

	function HarmonicAnalysisView(parentHTML) {
		this.el = undefined;
		var self = this;
		/*this.initView(parentHTML, function() {
			self.initController();
			$.publish('HarmonicAnalysisView-render', self);
		});*/
	}

	HarmonicAnalysisView.prototype.render = function(parentHTML, callback) {
		//if (typeof this.el === "undefined" || (typeof this.el !== "undefined" && force === true)) {
		var rendered = Mustache.render(HarmonicAnalysisTemplate);
		if (typeof parentHTML !== "undefined") {
			parentHTML.innerHTML = rendered;
		}
		this.el = rendered;
		this.initController();
		//$.publish('HarmonicAnalysisView-render');
		if (typeof callback === "function") {
			callback();
		}
		return;
	};

	HarmonicAnalysisView.prototype.initController = function() {
		var self = this;
		$('#harmonic_analysis').click(function() {
			$.publish('HarmonicAnalysisView-compute');
			$('#remove_harmonic_analysis').show();
			return false;
		});
		$('#remove_harmonic_analysis').click(function() {
			$.publish('HarmonicAnalysisView-remove');
			$('#remove_harmonic_analysis').hide();
			return false;
		});
	};

	return HarmonicAnalysisView;
});
define('modules/HarmonicAnalysis/src/HarmonicAnalysis',[
		"modules/HarmonicAnalysis/src/HarmonicAnalysisAPI",
		"modules/HarmonicAnalysis/src/HarmonicAnalysisController",
		"modules/HarmonicAnalysis/src/HarmonicAnalysisView"
	],function(HarmonicAnalysisAPI, HarmonicAnalysisController, HarmonicAnalysisView){
	
	function HarmonicAnalysis(songModel){
		this.view = new HarmonicAnalysisView();
		new HarmonicAnalysisController(songModel, this.view);
	}
	return HarmonicAnalysis;
});

define('text!modules/Harmonizer/src/HarmonizerTemplate.html',[],function () { return '<div id="harmonization_second_level">\r\n\t<div id="harmonization_button_container">\r\n\t\t<a class="btn btn-primary" id="harmonize" title="Harmonize current song">Harmonize</a>\r\n\t</div>\r\n\t<div id="harmonization_style_container">\r\n\t\t<div id="harmonization_style">\r\n\t\t\t<select id="harmonization_style_select">\r\n\t\t\t\t<option value="Take6">Take6</option>\r\n\t\t\t\t<option value="Bill Evans">Bill Evans</option>\r\n\t\t\t\t<option value="Wagner">Wagner</option>\r\n\t\t\t\t<!--<option value="gesualdo">Gesualdo</option>\r\n\t\t\t\t<option value="bach">Bach</option>\r\n\t\t\t\t<option value="bartok">Bartok</option>\r\n\t\t\t\t<option value="beethoven">Beethoven</option>\r\n\t\t\t\t<option value="brahms">Brahms</option>\r\n\t\t\t\t<option value="byrd">Byrd</option>\r\n\t\t\t\t<option value="byrdSmall">ByrdSmall</option>\r\n\t\t\t\t<option value="chopin">Chopin</option>\r\n\t\t\t\t<option value="debussy">Debussy</option>\r\n\t\t\t\t<option value="dvorak">Dvorak</option>\r\n\t\t\t\t<option value="faure">Faure</option>\r\n\t\t\t\t<option value="gesualdo">Gesualdo</option>\r\n\t\t\t\t<option value="handel">Handel</option>\r\n\t\t\t\t<option value="haydn">Haydn</option>\r\n\t\t\t\t<option value="hummel">Hummel</option>\r\n\t\t\t\t<option value="hummelSmall">HummelSmall</option>\r\n\t\t\t\t<option value="liszt">Liszt</option>\r\n\t\t\t\t<option value="mendelssohn">Mendelssohn</option>\r\n\t\t\t\t<option value="mozart">Mozart</option>\r\n\t\t\t\t<option value="mozartRequiem">Mozart Requiem</option>\r\n\t\t\t\t<option value="mozartSmall">Mozart Small</option>\r\n\t\t\t\t<option value="mozartSymph40">Mozart Symph40</option>\r\n\t\t\t\t<option value="poulenc">Poulenc</option>\r\n\t\t\t\t<option value="prokofiev">Prokofiev</option>\r\n\t\t\t\t<option value="rachmaninov">Rachmaninov</option>\r\n\t\t\t\t<option value="ravel">Ravel</option>\r\n\t\t\t\t<option value="schumann">Schumann</option>\r\n\t\t\t\t<option value="scriabin">Scriabin</option>\r\n\t\t\t\t<option value="smetana">Smetana</option>\r\n\t\t\t\t<option value="steels">Steels</option>\r\n\t\t\t\t<option value="strauss">Strauss</option>\r\n\t\t\t\t<option value="stravinsky">Stravinsky</option>\r\n\t\t\t\t<option value="tchaikovsky">Tchaikovsky</option>\r\n\t\t\t\t<option value="villa-lObos">villa-lobos</option>\r\n\t\t\t\t<option value="vivaldi">Vivaldi</option>\r\n\t\t\t\t<option value="wagner">Wagner</option>\r\n\t\t\t\t<option value="wagner tristan">Wagner Tristan</option>\r\n\t\t\t\t<option value="wagnerAndSteels">Wagner and Steels</option>-->\r\n\t\t\t</select>\r\n\t\t\t<div class="player_text">\r\n\t\t\t\tStyle\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\t\t\r\n\t<!-- <div id="harmonization_constraint_container">\r\n\t\t<div class="current_button" title="Fix" id="harmonize_anchors_chord">\r\n\t\t\t<img src="../img/general_icons/fix_32.png" alt="anchors" />\r\n\t\t\t<div class="player_text">\r\n\t\t\t\tAnchors chord\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class="current_button" title="Unwanted" id="harmonize_nogood_chord">\r\n\t\t\t<img src="../img/general_icons/forbid_32.png" alt="forbid" />\r\n\t\t\t<div class="player_text">\r\n\t\t\t\tUnwanted chord\r\n\t\t\t</div>\r\n\t\t</div> -->\r\n\t\t<!-- \r\n\t\t<div id="constrains_each_input_container">\r\n\t\t\t<div class="current_button" title="Fix" id="harmonize_fix_chord"><img src="../img/general_icons/fix_32.png" alt="fix" />Fix chord</div>\r\n\t\t\t<div class="current_button" title="Unwanted" id="harmonize_forbid_chord"><img src="../img/general_icons/forbid_32.png" alt="forbid" />Unwanted chord</div>\r\n\t\t</div>\r\n\t\t<div class="button_text">\r\n\t\t\tConstraint Equality\r\n\t\t</div>\r\n\t</div> -->\r\n\t<div id="harmonization_display_constraint_container"></div>\r\n</div>';});

define('modules/Harmonizer/src/HarmonizerView',[
	'jquery',
	'mustache',
	'modules/core/src/SongModel',
	'utils/UserLog',
	'pubsub',
	'text!modules/Harmonizer/src/HarmonizerTemplate.html',
], function($, Mustache, SongModel, UserLog, pubsub, HarmonizerTemplate) {

	function HarmonizerView(parentHTML) {
		this.el = undefined;
		var self = this;
		/*this.initView(parentHTML, function() {
			self.initController();
			$.publish('HarmonizerView-render', self);
		});*/
	}

	HarmonizerView.prototype.render = function(parentHTML, callback) {
		// case el has never been rendered
		//if (typeof this.el === "undefined" || (typeof this.el !== "undefined" && force === true)) {
		var rendered = Mustache.render(HarmonizerTemplate);
		if (typeof parentHTML !== "undefined") {
			parentHTML.innerHTML = rendered;
		}
		this.el = rendered;
		this.initController();
		//$.publish('HarmonizerView-render');
		if (typeof callback === "function") {
			callback();
		}
		return;
	};

	HarmonizerView.prototype.initController = function() {
		var self = this;
		$('#harmonize').click(function() {
			var style = $('#harmonization_style_select').val();
			$.publish('HarmonizerView-compute', style);
			return false;
		});
	};
	
	HarmonizerView.prototype.unactiveView = function(idElement) {
		$.publish('toHistoryView-unactiveView');
	};

	HarmonizerView.prototype.activeView = function(idElement) {
		$.publish('toHistoryView-activeView');
	};

	return HarmonizerView;
});
define('modules/Harmonizer/src/HarmonizerAPI',[
	'utils/AjaxUtils',
], function(AjaxUtils) {

	function HarmonizerAPI() {}

	HarmonizerAPI.prototype.harmonizeFromIdSongAPI = function(idSong, style, callback) {
		var request = {
			'id': idSong,
			'setName': style,
		};
		AjaxUtils.servletRequest('flow', 'harmonize', request, callback);
	};

	HarmonizerAPI.prototype.harmonizeFromLeadsheetAPI = function(leadsheet, style, callback) {
		var request = {
			'leadsheet': leadsheet,
			'setName': style,
		};
		AjaxUtils.servletRequest('flow', 'harmonize', request, callback);
	};

	return HarmonizerAPI;
});
define('modules/Harmonizer/src/HarmonizerController',[
	'mustache',
	'modules/core/src/SongModel',
	'modules/converters/MusicCSLJson/src/SongModel_CSLJson',
	'modules/Harmonizer/src/HarmonizerAPI',
	'utils/UserLog',
	'jquery',
	'pubsub',
], function(Mustache, SongModel, SongModel_CSLJson, HarmonizerAPI, UserLog, $, pubsub) {

	function HarmonizerController(songModel, view) {
		this.songModel = songModel;
		this.view = view;
		var self = this;
		$.subscribe('HarmonizerView-compute', function(el, style) {
			self.computeHarmonize(style);
		});
	}

	HarmonizerController.prototype.computeHarmonize = function(style) {
		var self = this;
		if (!style) {
			style = "Take6";
		}
		var JSONSong = SongModel_CSLJson.exportToMusicCSLJSON(this.songModel);
		var harm = new HarmonizerAPI();
		var logId = UserLog.log('info', 'Computing ...');
		harm.harmonizeFromLeadsheetAPI(JSON.stringify(JSONSong), style, function(data) {
			UserLog.removeLog(logId);
			if (data.success === true) {
				UserLog.logAutoFade('success', 'Harmonization is finished');
				SongModel_CSLJson.importFromMusicCSLJSON(data.sequence, self.songModel);
				$.publish('ToHistory-add', {
					'item': data.sequence,
					'title': 'Harmonization - ' + style
				});
				$.publish('ToViewer-draw', self.songModel);
			} else {
				UserLog.logAutoFade('error', data.error);
			}
		});
	};

	return HarmonizerController;
});
define('modules/Harmonizer/src/Harmonizer',['modules/Harmonizer/src/HarmonizerView',
		'modules/Harmonizer/src/HarmonizerController'
	], function(HarmonizerView, HarmonizerController) {
	
	function Harmonizer(songModel) {

		var hV = new HarmonizerView();
		var hC = new HarmonizerController(songModel, hV);
		
		this.view = hV;
	}
	return Harmonizer;
});
define('modules/LSViewer/src/main',[
		"modules/LSViewer/src/BarWidthManager",
		"modules/LSViewer/src/BeamManager",
		"modules/LSViewer/src/LSBarView",
		"modules/LSViewer/src/LSChordView",
		"modules/LSViewer/src/LSNoteView",
		"modules/LSViewer/src/LSViewer",
		"modules/LSViewer/src/TieManager",
		"modules/LSViewer/src/TupletManager",
		"modules/LSViewer/src/Scaler",
		"modules/LSViewer/src/CanvasLayer",
	],
	function(BarWidthManager, BeamManager, LSBarView, LSChordView, LSNoteView, LSViewer, TieManager, TupletManager, Scaler, CanvasLayer) {
		return {
			"BarWidthManager": BarWidthManager,
			"BeamManager": BeamManager,
			"LSBarView": LSBarView,
			"LSChordView": LSChordView,
			"LSNoteView": LSNoteView,
			"LSViewer": LSViewer,
			"TieManager": TieManager,
			"TupletManager": TupletManager,
			"Scaler": Scaler,
			"CanvasLayer": CanvasLayer
		};
	}
);
define('modules/MainMenu/src/MainMenuModel',[
	'jquery',
	'pubsub',
], function($, pubsub) {

	/**
	 * MainMenuModel is the model containing a set of menuList, each menuList contain a menu, each menu contain at least a title
	 */
	function MainMenuModel() {
		this.menuList = []; // array of menus
		this.currentMenu = this.menuList[0]; // Current menu represent the current selected menu
	}


	MainMenuModel.prototype.getMenuLength = function() {
		return this.menuList.length;
	};

	MainMenuModel.prototype.getMenu = function(index) {
		if (isNaN(index) || typeof this.menuList[index] === "undefined") {
			throw 'MainMenuModel - getMenu - index is undefined or is not a number or doesnt exist ' + index;
		}
		return this.menuList[index];
	};

	MainMenuModel.prototype.addMenu = function(menu) {
		if (typeof menu === "undefined" || menu.title == "undefined") {
			throw 'MainMenuModel - addMenu - menu is undefined' + menu;
		}
		if (this.hasMenu(menu.title) === false) {
			if (typeof menu.order === "undefined") {
				menu.order = this.menuList.length + 1;
			}
			this.menuList.push(menu);
			this.sortMenu();
			window.clearTimeout(this.eventOptimizer);
			this.eventOptimizer = window.setTimeout(function() {
				$.publish('MainMenuModel-addMenu', menu);
			}, 10);
		} else {
			console.warn('MainMenuModel - addMenu - menu ' + menu.title + ' already exist');
		}
	};

	MainMenuModel.prototype.sortMenu = function() {
		this.menuList.sort(function(a, b) {
			if (a.order > b.order) {
				return 1;
			}
			if (a.order < b.order) {
				return -1;
			}
			// a doit être égale à b
			return 0;
		});
	};


	MainMenuModel.prototype.hasMenu = function(menuTitle) {
		if (typeof menuTitle === "") {
			throw "MainMenuModel - hasModule - menuTitle can't be equal to an empty string";
		}
		for (var i = 0, c = this.menuList.length; i < c; i++) {
			if (this.menuList[i].title === menuTitle) {
				return true;
			}
		}
		return false;
	};

	MainMenuModel.prototype.searchMenuIndex = function(menuTitle) {
		if (typeof menuTitle === "") {
			throw "MainMenuModel - searchMenuIndex - menuTitle can't be equal to an empty string";
		}
		for (var i = 0, c = this.menuList.length; i < c; i++) {
			if (this.menuList[i].title === menuTitle) {
				return i;
			}
		}
		return -1;
	};

	MainMenuModel.prototype.removeMenu = function(menuTitle) {
		var index = this.searchMenuIndex(menuTitle);
		if (index !== -1) {
			this.menuList[index] = undefined;
			this.menuList.splice(index, 1);
			$.publish('MainMenuModel-removeMenu', menuTitle);
			return true;
		}
		return false;
	};

	MainMenuModel.prototype.getCurrentMenu = function() {
		return this.currentMenu;
	};

	MainMenuModel.prototype.setCurrentMenu = function(currentMenu) {
		if (typeof currentMenu === "undefined") {
			return;
		}
		this.currentMenu = currentMenu;
		$.publish('MainMenuModel-setCurrentMenu', this.currentMenu);
	};

	return MainMenuModel;
});
define('modules/MainMenu/src/MainMenuController',[
	'modules/MainMenu/src/MainMenuModel',
	'jquery',
	'pubsub',
	'mustache'
], function(MainMenuModel, $, pubsub, Mustache) {
	/**
	 * MainMenuController is the model containing a set of menu, each menu contain at least a title
	 */
	function MainMenuController(model) {
		this.model = model || new MainMenuModel();
		var self = this;
		$.subscribe('MainMenuView-active_menu', function(el, menuTitle) {
			self.activeMenu(menuTitle);
		});
	}

	MainMenuController.prototype.activeMenu = function(menuTitle) {
		var index = this.model.searchMenuIndex(menuTitle);
		if (index !== -1) {
			var currentMenu = this.model.getMenu(index);
			this.model.setCurrentMenu(currentMenu);
			this.pushStateTab(menuTitle);
		}
	};

	MainMenuController.prototype.pushStateTab = function(tabName) {
		var stateObject = {};
		var title = "";
		var newUrl = window.location.href.split("#")[0] + '#' + tabName;
		history.pushState(stateObject, title, newUrl);
	};

	MainMenuController.prototype.loadStateTab = function() {
		// Init menu with current location
		var id = window.location.href.split("#")[1];
		if (typeof id !== "undefined") {
			this.activeMenu(id);
		}
	};

	return MainMenuController;
});

define('text!modules/MainMenu/src/MainMenuTemplate.html',[],function () { return '<div id="view_main_menu" data-spy="affix" data-offset-top="46">\r\n\t<div id="main_menu_first_level"></div>\r\n\t<div id="main_menu_second_level"></div>\r\n</div>';});

define('modules/MainMenu/src/MainMenuView',[
	'modules/MainMenu/src/MainMenuModel',
	'jquery',
	'pubsub',
	'mustache',
	'text!modules/MainMenu/src/MainMenuTemplate.html'
], function(MainMenuModel, $, pubsub, Mustache, MainMenuTemplate) {
	/**
	 * MainMenuView is the model containing a set of menu, each menu contain at least a title
	 */
	function MainMenuView(model, parentHTML) {
		this.model = (model) ? model : new MainMenuModel();
		this.el = undefined;
		this.selectedClassName = 'main_menu_first_level_selected';
		var self = this;

		if (typeof parentHTML !== "undefined") {
			this.initView(parentHTML, function() {
				self.initSubscribe();
				self.initController();
			});
		}
	}

	MainMenuView.prototype.initView = function(parentHTML, callback) {
		var self = this;
		//$.get('/modules/MainMenu/src/MainMenuTemplate.html', function(template) {
			var rendered = Mustache.render(MainMenuTemplate);
			parentHTML.innerHTML += rendered;
			self.el = parentHTML;
			if (typeof callback === "function") {
				callback();
			}
		//});
	};

	MainMenuView.prototype.initSubscribe = function() {
		var self = this;
		$.subscribe('MainMenuModel-addMenu', function(el, menu) {
			// we rebuild everything to take into account the order
			self.removeMenu();
			self.buildMenu();
		});
		$.subscribe('MainMenuModel-removeMenu', function(el, menu) {
			self.removeMenu(menu);
		});
		$.subscribe('MainMenuModel-setCurrentMenu', function(el, menu) {
			self.setCurrentMenu(menu);
		});
	};

	MainMenuView.prototype.initController = function() {
		var self = this;
		$('body').on('click', '.main_menu_item', function() {
			var menuTitle = $(this).attr('data-menuTitle');
			$.publish('MainMenuView-active_menu', menuTitle);
		});
	};

	MainMenuView.prototype.buildMenu = function() {
		var first_level = '';
		var second_level = '';
		$('#main_menu_first_level').html();
		$('#main_menu_second_level').html();
		var currentMenu = this.model.getCurrentMenu();
		var currentMenuIndex = -1;
		if (typeof currentMenu !== "undefined") {
			currentMenuIndex = this.model.searchMenuIndex(currentMenu.title);
		}
		var firstClassName = '';
		var secondStyle = '';
		var menu;
		for (var i = 0, c = this.model.getMenuLength(); i < c; i++) {
			menu = this.model.getMenu(i);
			secondStyle = ' style="display:none"';
			firstClassName = '';
			if (i === currentMenuIndex) {
				firstClassName = this.selectedClassName;
				secondStyle = '';
			}
			first_level += '<div id="' + this._concatTitle(menu.title) + '_first_level" class="first_level main_menu_item ' + firstClassName + '" data-menuTitle="' + menu.title + '">' + menu.title + '</div>';
			second_level += '<div id="' + this._concatTitle(menu.title) + '_second_level" class="second_level" data-menuTitle="' + menu.title + '"' + secondStyle + '>' + menu.view.el + '</div>';
		}
		$('#main_menu_first_level').html(first_level);
		$('#main_menu_second_level').html(second_level);

		// init controller
		for (i = 0, c = this.model.getMenuLength(); i < c; i++) {
			menu = this.model.getMenu(i);
			menu.view.initController();
		}
		$.publish('MainMenuView-render');
	};

	MainMenuView.prototype.removeMenu = function(menuTitle) {
		$('#' + menuTitle + '_first_level').remove();
		$('#' + menuTitle + '_second_level').remove();
	};

	MainMenuView.prototype.setCurrentMenu = function(menu) {
		// update view
		this.hideAllMenus(menu);
		this.showMenu(menu);
	};

	MainMenuView.prototype._concatTitle = function(title) {
		return title.replace(' ', '_');
	};

	MainMenuView.prototype.hideAllMenus = function(menu) {
		$('#main_menu_second_level > div').each(function() {
			$(this).hide();
		});
		var self = this;
		for (var i = 0, c = this.model.menuList.length; i < c; i++) {
			if (this.model.menuList[i] !== menu) {
				if (this.model.menuList[i].view && typeof this.model.menuList[i].view.unactiveView === "function") {
					this.model.menuList[i].view.unactiveView();
				}
			}
		}
		// remove active class
		$('.' + this.selectedClassName).each(function() {
			$(this).removeClass(self.selectedClassName);
		});
	};

	MainMenuView.prototype.showMenu = function(menu) {
		var self = this;
		if (menu.view && typeof menu.view.activeView === "function") {
			menu.view.activeView();
		}
		// add active class
		$('#' + this._concatTitle(menu.title) + '_first_level').addClass(self.selectedClassName);

		$('#' + this._concatTitle(menu.title) + '_second_level').show(0, function() {
			// self.initController(menuTitle);
			// menu.initView('main_menu_second_level');
		});
	};


	MainMenuView.prototype.hide = function() {
		this.el.style.display = "none";
	};

	MainMenuView.prototype.show = function() {
		this.el.style.display = "block";
	};


	return MainMenuView;
});
define('modules/MainMenu/src/MainMenu',[
		"modules/MainMenu/src/MainMenuController",
		"modules/MainMenu/src/MainMenuModel",
		"modules/MainMenu/src/MainMenuView"
	],function(MainMenuController,MainMenuModel,MainMenuView){
	
	function MainMenu(elemContainer){
		this.model = new MainMenuModel();
		this.controller = new MainMenuController(this.model);
		new MainMenuView(this.model, elemContainer);
	}
	return MainMenu;
});
define('modules/MidiCSL/src/model/NoteModel_midiCSL',[], function() {

	function NoteModel_MidiCSL(option) {
		this.currentTime = (typeof option !== "undefined" && typeof(option.currentTime) !== "undefined") ? option.currentTime : 0.0; // currentTime in beat
		this.duration = (typeof option !== "undefined" && typeof(option.duration) !== "undefined") ? option.duration : 0.0; // duration in beat
		this.type = (typeof option !== "undefined" && typeof(option.type) !== "undefined") ? option.type : undefined; // type is melody or chord
		this.midiNote = (typeof option !== "undefined" && typeof(option.midiNote) !== "undefined") ? option.midiNote : [];
	};

	NoteModel_MidiCSL.prototype.getCurrentTime = function() {
		return this.currentTime;
	};

	NoteModel_MidiCSL.prototype.setCurrentTime = function(currentTime) {
		if (typeof currentTime === "undefined" || isNaN(currentTime) || currentTime < 0) {
			throw 'NoteModel_MidiCSL - setCurrentTime - currentTime must be a positive float ' + currentTime;
		}
		this.currentTime = currentTime;
	};

	NoteModel_MidiCSL.prototype.getDuration = function() {
		return this.duration;
	};

	NoteModel_MidiCSL.prototype.setDuration = function(duration) {
		if (typeof duration === "undefined" || isNaN(duration) || duration < 0) {
			throw 'NoteModel_MidiCSL - setCurrentTime - duration must be a positive float ' + duration;
		}
		this.duration = duration;
	};

	NoteModel_MidiCSL.prototype.getType = function() {
		return this.type;
	};

	NoteModel_MidiCSL.prototype.setType = function(type) {
		if (typeof type === "undefined") {
			throw 'NoteModel_MidiCSL - setType - type is undefined ' + type;
		}
		this.type = type;
	};

	NoteModel_MidiCSL.prototype.getMidiNote = function() {
		return this.midiNote;
	};

	NoteModel_MidiCSL.prototype.setMidiNote = function(midiNote) {
		if (typeof midiNote === "undefined") {
			throw 'NoteModel_MidiCSL - setType - midiNote is undefined ' + midiNote;
		}
		this.midiNote = midiNote;
	};

	NoteModel_MidiCSL.prototype.getTransposeMidiNote = function(semi_tons) {
		var midiNote = [];
		var computedMidiNote;
		if(this.midiNote !== "undefined"){
			for (var i = 0, c = this.midiNote.length; i < c; i++) {
				computedMidiNote = this.midiNote[i] + semi_tons;
				if (computedMidiNote >= 21 && computedMidiNote <= 108) {
					midiNote[i] = computedMidiNote;
				}
			}
		}
		return midiNote;
	};

	NoteModel_MidiCSL.prototype.serialize = function() {
		//return JSON.stringify(this.currentTime + this.duration + this.type + this.midiNote);
		var noteModel_midiCSL = {};
		noteModel_midiCSL.currentTime = this.currentTime;
		noteModel_midiCSL.duration = this.duration;
		noteModel_midiCSL.type = this.type;
		noteModel_midiCSL.midiNote = this.midiNote;
		return noteModel_midiCSL;
	};

	NoteModel_MidiCSL.prototype.clone = function() {
		return new NoteModel_MidiCSL(this.serialize());
	};

	return NoteModel_MidiCSL;
});
define('modules/MidiCSL/utils/MidiHelper',[], function() {
	var MidiHelper = {}; // Namespaces

	MidiHelper.convertNotesToMidi = function(allNotes) {
		var allMidiNotes = [];
		if (typeof allNotes !== "undefined") {
			var currentNote;
			for (var i = 0, c = allNotes.length; i < c; i++) {
				currentNote = allNotes[i];
				currentNote = MidiHelper.convertSharp2Flat(currentNote);
				currentNote = MidiHelper.detectImpossibleFlat(currentNote);
				currentNote = MidiHelper.convertDoubleAccidental(currentNote);
				allMidiNotes[i] = MidiHelper.keyToNote[currentNote];
				/*		if(!MIDI.keyToNote[ currentNote ]){
				console.log(this.allNotes[ i ], currentNote);
			}*/
			}
		}
		return allMidiNotes;
	}

	/*
	 * This function convert double accident sharp or flat
	 * @argument noteKey is a String Containing [note + (sharp/flat) + (sharp/flat) + scaleNumber] , e.g C##4
	 * return a string noteKey containing for e.g. D4
	 */
	MidiHelper.convertDoubleAccidental = function(noteKey) {
		if (typeof noteKey === "undefined") {
			return;
		}
		if (noteKey[1] === "#" && noteKey[2] === "#") {
			if (noteKey[0] === "G") {
				noteKey = "A" + noteKey.substring(3);
			} else if (noteKey[0] === "B") {
				noteKey = "C" + (parseInt(noteKey[3]) + 1); // Change to upper scale
			} else {
				noteKey = String.fromCharCode(noteKey.charCodeAt(0) + 1) + noteKey.substring(3);
			}
		} else if (noteKey[1] === "b" && noteKey[2] === "b") {
			if (noteKey[0] === "A") {
				noteKey = "G" + noteKey.substring(3);
			} else if (noteKey[0] === "C") {
				noteKey = "B" + (parseInt(noteKey[3]) - 1); // Change to upper scale
			} else {
				noteKey = String.fromCharCode(noteKey.charCodeAt(0) - 1) + noteKey.substring(3);
			}
		}
		return noteKey;
	}

	/*
	 * This function transform sharp to flat for soundfont use
	 * @argument noteKey is a String Containing [note + (sharp) + scaleNumber] , e.g C#4
	 * return a string noteKey containing for e.g. Db4
	 */
	MidiHelper.convertSharp2Flat = function(noteKey) {
		if (typeof noteKey === "undefined") {
			return;
		}
		if (noteKey[1] === "#") {
			if (noteKey[0] === "G") {
				noteKey = "Ab" + noteKey.substring(2);
			} else if (noteKey[0] === "B") {
				noteKey = "C" + (parseInt(noteKey[2]) + 1); // Change to upper scale
			} else if (noteKey[0] === "E") {
				noteKey = "F" + noteKey.substring(2);
			} else {
				noteKey = String.fromCharCode(noteKey.charCodeAt(0) + 1) + 'b' + noteKey.substring(2);
			}
		}
		return noteKey;
	}

	/*
	 * This function detect non obvious flat (Cb and Fb) and transform them to note
	 * @argument noteKey is a String Containing [note + (sharp) + scaleNumber] , e.g Cb4
	 * return a string noteKey containing for e.g. B4
	 */
	MidiHelper.detectImpossibleFlat = function(noteKey) {
		if (typeof noteKey === "undefined") {
			return;
		}
		if (noteKey[1] === "b") {
			if (noteKey[0] === "C") {
				noteKey = "B" + (parseInt(noteKey[2]) - 1); // Change to lower scale
			} else if (noteKey[0] === "F") {
				noteKey = "E" + noteKey.substring(2);
			}
		}
		return noteKey;
	}

	/*
	 * This function transpose midi notes array, the number of transposition is midiDecal
	 * @argument midiNotes array of int that contain series of midiNotes
	 * @argument midiDecal desired transposition decal (put -x to go lower, +x for higher note)
	 * return the transposed midinotes array
	 */
	MidiHelper.transposeMidiNotes = function(midiNotes, midiDecal) {
		if (typeof midiNotes !== "undefined" && !isNaN(midiDecal)) {
			for (var i = 0, c = midiNotes.length; i < c; i++) {
				midiNotes[i] += midiDecal;
			}
			return midiNotes;
		}
		return undefined;
	};


	//code taken from MidiJS lib
	// note conversions
	MidiHelper.keyToNote = {}; // C8  == 108
	MidiHelper.noteToKey = {}; // 108 ==  C8
	(function () {
		var A0 = 0x15; // first note
		var C8 = 0x6C; // last note
		var number2key = ["C", "Db", "D", "Eb", "E", "F", "Gb", "G", "Ab", "A", "Bb", "B"];
		for (var n = A0; n <= C8; n++) {
			var octave = (n - 12) / 12 >> 0;
			var name = number2key[n % 12] + octave;
			MidiHelper.keyToNote[name] = n;
			MidiHelper.noteToKey[n] = name;
		}
	})();

	return MidiHelper;
});
define('modules/MidiCSL/src/converters/ChordConverterMidi_MidiCSL',['modules/core/src/SongModel', 'modules/core/src/ChordManager', 'modules/core/src/ChordModel', 'modules/MidiCSL/src/model/NoteModel_midiCSL', 'utils/NoteUtils', 'utils/ChordUtils', 'modules/MidiCSL/utils/MidiHelper'],
	function(SongModel, ChordManager, ChordModel, NoteModel_midiCSL, NoteUtils, ChordUtils, MidiHelper) {

		var ChordConverterMidi_MidiCSL = {};

		ChordConverterMidi_MidiCSL.exportToMidiCSL = function(chordModel, callback) {
			if (!chordModel instanceof ChordModel) {
				throw 'ChordConverterMidi_MidiCSL - exportToMidiCSL - chordModel parameters must be an instanceof SongModel';
			}
			var midiNotes = ChordConverterMidi_MidiCSL.getAllMidiNotes(chordModel);
			return midiNotes;
		};

		ChordConverterMidi_MidiCSL.getAllMidiNotes = function(chordModel, callback) {
			// case notes and midinotes are unknown
			var chordTypesNotes = ChordConverterMidi_MidiCSL.getChordTypesNotes(chordModel);
			if (typeof chordTypesNotes !== "undefined") {
				// playing bass chord
				if(chordModel.isEmptyBase() === false) {
					var note = chordModel.getBase().getNote();
					var decalBase = NoteUtils.pitch2Number(note);
					var noteDecalBase = NoteUtils.number2Pitch(decalBase-decal);
					chordTypesNotes.unshift( noteDecalBase + "3");
				}
				// case chordTypeNotes in C are known
				var midiNotes = MidiHelper.convertNotesToMidi(chordTypesNotes);
				var decal = NoteUtils.pitch2Number(chordModel.getNote());
				var allMidiNotes = MidiHelper.transposeMidiNotes(midiNotes, decal);
				return allMidiNotes;
			}
		};

		ChordConverterMidi_MidiCSL.getChordTypesNotes = function(chordModel) {
			var note = chordModel.getNote();
			if (note === "NC") {
				chordModel.allMidiNotes = [];
				if (typeof callback !== "undefined") {
					callback([]);
				}
				return;
			}
			var chordType = chordModel.unformatChordType(chordModel.getChordType());
			var chordTypeToNote = ChordUtils.getAllChordTypes();
			/**
			 * We first try to know if chordModel chord is already known
			 */
			if (typeof chordTypeToNote !== "undefined" && typeof chordTypeToNote[chordType] !== "undefined") {
				var chordNotes = chordTypeToNote[chordType];
				return chordNotes;
			}
			console.warn('ChordConverterMidi_MidiCSL: Unknown chord ' + chordModel.toString());
			return [];
		};


		ChordConverterMidi_MidiCSL.convertNotesToMidi = function(chordModel) {
			chordModel.allMidiNotes = MidiHelper.convertNotesToMidi(chordModel.allNotes);
			return chordModel.allMidiNotes;
		};
		return ChordConverterMidi_MidiCSL;

	});
define('modules/MidiCSL/src/converters/ChordManagerConverterMidi_MidiCSL',['modules/core/src/SongModel', 'modules/core/src/ChordManager', 'modules/MidiCSL/src/converters/ChordConverterMidi_MidiCSL', 'modules/MidiCSL/src/model/NoteModel_midiCSL'],
	function(SongModel, ChordManager, ChordConverterMidi_MidiCSL, NoteModel_midiCSL) {
		var ChordManagerConverterMidi_MidiCSL = {};

		ChordManagerConverterMidi_MidiCSL.exportToMidiCSL = function(songModel) {
			if (!songModel instanceof SongModel) {
				throw 'ChordManagerConverterMidi_MidiCSL - exportToMidiCSL - songModel parameters must be an instanceof SongModel';
			}

			var chords = [];
			if (songModel.getComponent('chords') === "undefined") {
				return undefined;
			}
			var chordManager = songModel.getComponent('chords');
			var currentTime = 0;
			var midiNotes = [];
			var duration = 0.0;
			var chordIndex;
			var chordsInBar = [];
			var numberOfChord = 0;
			var bars = songModel.getUnfoldedSongComponents('chords');
			// first we create midisoundmodel for each chord
			for (var barNum = 0, v = bars.length; barNum < v; barNum++) {
				chordsInBar = bars[barNum];
				if (chordsInBar.length === 0) {
					// case there is no chord in bar, we repeat previous one
					duration = chordManager.getChordDurationFromBarNumber(songModel, chordIndex, barNum) * songModel.timeSignature.getBeatUnitQuarter();
					var msm = new NoteModel_midiCSL({
						'currentTime': currentTime,
						'duration': duration,
						'midiNote': midiNotes,
						'type': 'chord'
					});
					currentTime += duration;
					chords.push(msm);
				} else {
					for (var i = 0, c = chordsInBar.length; i < c; i++) {
						chordIndex = chordManager.getChordIndex(chordsInBar[i]);
						duration = chordManager.getChordDurationFromBarNumber(songModel, chordIndex, barNum) * songModel.timeSignature.getBeatUnitQuarter();
						midiNotes = ChordConverterMidi_MidiCSL.exportToMidiCSL(chordsInBar[i]);
						//console.log(chordsInBar[ i ], chordIndex, duration)
						var msm = new NoteModel_midiCSL({
							'currentTime': currentTime,
							'duration': duration,
							'midiNote': midiNotes,
							'type': 'chord'
						});
						currentTime += duration;
						chords.push(msm);
					}
				}
			}
			return chords;
		};

		return ChordManagerConverterMidi_MidiCSL;
	});
define('modules/MidiCSL/src/model/NoteModel_MidiCSL',[], function() {

	function NoteModel_MidiCSL(option) {
		this.currentTime = (typeof option !== "undefined" && typeof(option.currentTime) !== "undefined") ? option.currentTime : 0.0; // currentTime in beat
		this.duration = (typeof option !== "undefined" && typeof(option.duration) !== "undefined") ? option.duration : 0.0; // duration in beat
		this.type = (typeof option !== "undefined" && typeof(option.type) !== "undefined") ? option.type : undefined; // type is melody or chord
		this.midiNote = (typeof option !== "undefined" && typeof(option.midiNote) !== "undefined") ? option.midiNote : [];
	};

	NoteModel_MidiCSL.prototype.getCurrentTime = function() {
		return this.currentTime;
	};

	NoteModel_MidiCSL.prototype.setCurrentTime = function(currentTime) {
		if (typeof currentTime === "undefined" || isNaN(currentTime) || currentTime < 0) {
			throw 'NoteModel_MidiCSL - setCurrentTime - currentTime must be a positive float ' + currentTime;
		}
		this.currentTime = currentTime;
	};

	NoteModel_MidiCSL.prototype.getDuration = function() {
		return this.duration;
	};

	NoteModel_MidiCSL.prototype.setDuration = function(duration) {
		if (typeof duration === "undefined" || isNaN(duration) || duration < 0) {
			throw 'NoteModel_MidiCSL - setCurrentTime - duration must be a positive float ' + duration;
		}
		this.duration = duration;
	};

	NoteModel_MidiCSL.prototype.getType = function() {
		return this.type;
	};

	NoteModel_MidiCSL.prototype.setType = function(type) {
		if (typeof type === "undefined") {
			throw 'NoteModel_MidiCSL - setType - type is undefined ' + type;
		}
		this.type = type;
	};

	NoteModel_MidiCSL.prototype.getMidiNote = function() {
		return this.midiNote;
	};

	NoteModel_MidiCSL.prototype.setMidiNote = function(midiNote) {
		if (typeof midiNote === "undefined") {
			throw 'NoteModel_MidiCSL - setType - midiNote is undefined ' + midiNote;
		}
		this.midiNote = midiNote;
	};

	NoteModel_MidiCSL.prototype.getTransposeMidiNote = function(semi_tons) {
		var midiNote = [];
		var computedMidiNote;
		if(this.midiNote !== "undefined"){
			for (var i = 0, c = this.midiNote.length; i < c; i++) {
				computedMidiNote = this.midiNote[i] + semi_tons;
				if (computedMidiNote >= 21 && computedMidiNote <= 108) {
					midiNote[i] = computedMidiNote;
				}
			}
		}
		return midiNote;
	};

	NoteModel_MidiCSL.prototype.serialize = function() {
		//return JSON.stringify(this.currentTime + this.duration + this.type + this.midiNote);
		var noteModel_midiCSL = {};
		noteModel_midiCSL.currentTime = this.currentTime;
		noteModel_midiCSL.duration = this.duration;
		noteModel_midiCSL.type = this.type;
		noteModel_midiCSL.midiNote = this.midiNote;
		return noteModel_midiCSL;
	};

	NoteModel_MidiCSL.prototype.clone = function() {
		return new NoteModel_MidiCSL(this.serialize());
	};

	return NoteModel_MidiCSL;
});
define('modules/MidiCSL/src/model/SongModel_midiCSL',['modules/MidiCSL/src/model/NoteModel_MidiCSL'], function(NoteModel_MidiCSL) {
	function SongModel_MidiCSL(option) {
		this.song = (typeof(option) !== "undefined" && typeof(option.song) !== "undefined") ? option.song : [];
	}

	SongModel_MidiCSL.prototype.getSong = function() {
		return this.song;
	};

	SongModel_MidiCSL.prototype.setSong = function(song, replaceBool) {
		if (typeof replaceBool !== "undefined" && replaceBool) {
			this.song = song;
		} else {
			this.song = this.song.concat(song);
		}
	};

	SongModel_MidiCSL.prototype.setFromType = function(song, type) {
		if (typeof type === "undefined") {
			return;
		}
		for (var i = this.song.length - 1; i >= 0; i--) {
			if (this.song[i].getType() === type) {
				this.song.splice(i, 1);
			}
		}
		this.song = this.song.concat(song);
		/*console.log(this.song);*/
	};

	SongModel_MidiCSL.prototype.getFromType = function(type) {
		var elements = [];
		if (typeof type !== "undefined") {
			for (var i = 0, c = this.song.length; i < c; i++) {
				if (this.song[i].getType() === type) {
					elements.push(this.song[i]);
				}
			}
		}
		return elements;
	};

	SongModel_MidiCSL.prototype.removeFromType = function(type) {
		if (typeof type === "undefined") {
			return;
		}
		for (var i = this.song.length - 1; i >= 0; i--) {
			if (this.song[i].getType() === type) {
				this.song.splice(i, 1);
			}
		}
	};

	SongModel_MidiCSL.prototype.getLastNote = function() {
		// Looking for last note
		var lastNote = this.song[0];
		var lastNoteEndTime = lastNote.getCurrentTime() + lastNote.getDuration();
		var currentNote, currentEndTime;
		for (var i = 0, c = this.song.length; i < c; i++) {
			currentNote = this.song[i];
			if (currentNote && currentNote.getType() !== "metronome") {
				currentEndTime = currentNote.getCurrentTime() + currentNote.getDuration();
				if (lastNoteEndTime < currentEndTime) {
					lastNoteEndTime = currentEndTime;
					lastNote = currentNote;
				}
			}
		}
		return lastNote;
	};

	SongModel_MidiCSL.prototype.getMidiSoundModelIndex = function(midiSoundModel) {
		if (typeof midiSoundModel !== "undefined" && midiSoundModel instanceof SongModel_MidiCSL) {
			var comp = midiSoundModel.serialize();
			for (var i = 0, c = this.song.length; i < c; i++) {
				if (this.song[i].serialize() === comp) {
					return i;
				}
			}
		}
		return -1;
	};

	SongModel_MidiCSL.prototype.serialize = function() {
		var songModel_midiCSL = {};
		songModel_midiCSL.song = this.song;
		return songModel_midiCSL;
	};

	SongModel_MidiCSL.prototype.clone = function() {
		return new SongModel_MidiCSL(this.serialize());
	};

	SongModel_MidiCSL.prototype.generateMetronome = function(songModel) {
		var note, duration;
		var noteObject = {};
		var metronome = [];
		var currentTime = 0;
		var notes = [];
		var beatUnit = 4;
		timeSig = 4;
		if (typeof songModel !== "undefined") {
			timeSig = songModel.timeSignature.getBeats();
			beatUnit = songModel.timeSignature.getBeatUnitQuarter();
		}
		for (var i = 0, c = 200; i < c; i++) {
			if (i % timeSig === 0) {
				notes = [105]; // A7
			} else {
				notes = [93]; // A6
			}
			duration = 0.5;
			noteObject = new NoteModel_MidiCSL({
				'midiNote': notes,
				'type': 'metronome',
				'currentTime': currentTime,
				'duration': duration,
			});
			currentTime += beatUnit;
			metronome.push(noteObject);
		}
		return metronome;
	};

	return SongModel_MidiCSL;
});
define('modules/MidiCSL/src/converters/SongConverterMidi_MidiCSL',['modules/core/src/SongModel', 'modules/MidiCSL/src/model/SongModel_midiCSL', 'modules/MidiCSL/src/model/NoteModel_midiCSL', 'modules/MidiCSL/src/converters/ChordManagerConverterMidi_MidiCSL', 'modules/MidiCSL/utils/MidiHelper'],
	function(SongModel, SongModel_midiCSL, NoteModel_midiCSL, ChordManagerConverterMidi_MidiCSL, MidiHelper) {
		var SongConverterMidi_MidiCSL = {};

		SongConverterMidi_MidiCSL.exportToMidiCSL = function(songModel) {
			if (!songModel instanceof SongModel) {
				throw 'SongConverterMidi_MidiCSL - exportToMusicCSLJSON - songModel parameters must be an instanceof SongModel';
			}
			var song = [];
			song = ChordManagerConverterMidi_MidiCSL.exportToMidiCSL(songModel);
			var nm = songModel.getComponent('notes');
			if (typeof nm !== "undefined") {
				var melodySong = SongConverterMidi_MidiCSL.exportNoteToMidiCSL(songModel);
				song = song.concat(melodySong);
			}
			return song;
		};


		SongConverterMidi_MidiCSL.exportNoteToMidiCSL = function(songModel) {
			var song = [];
			if (typeof songModel === "undefined" || typeof MidiHelper === "undefined") {
				return song;
			}
			var key = "C";
			var numBeats = 4;
			if (typeof songModel !== "undefined") {
				key = songModel.getTonality();
			}
			var tonalityNote = convertTonality2AlteredNote(key);
			var currentTime = 0;
			var note, duration, noteKey;
			var midiNote = [];
			var accidental = [];
			var tieNotesObject = {};
			var tieNotesNumber = 0;
			var inTie = false;
			var accidentalMeasure = (JSON.parse(JSON.stringify(tonalityNote))); // clone object
			var numMeasure = 0;
			var repeatMeasure = [];
			var refreshTonalityNote = false;

			var midiSoundModel, notesInBar, currentNote;


			// We could also use songModel.getUnfoldedSongComponents('notes'), in case of unfolded song structure doesnt work with numBars

			var barsIndex = songModel.getUnfoldedSongStructure();
			if (barsIndex.length === 0) {
				barsIndex[0] = 0; // in case there is no bars, use bar 0;
			}
			for (var i = 0, c = barsIndex.length; i < c; i++) {
				numMeasure = barsIndex[i];
				numBeats = songModel.getTimeSignatureAt(numMeasure).getBeats();
				notesInBar = songModel.getComponentsAtBarNumber(numMeasure, 'notes');
				if (inTie === false) {
					refreshTonalityNote = true;
					tonalityNote = convertTonality2AlteredNote(songModel.getTonalityAt(numMeasure));
					accidentalMeasure = (JSON.parse(JSON.stringify(tonalityNote))); // empty accidentalMeasure on each new measure
				} else { // case the last note is in tie, we don't refresh tonality
					refreshTonalityNote = false;
				}
				for (var j = 0, v = notesInBar.length; j < v; j++) {
					note = notesInBar[j];
					duration = note.getDuration(numBeats);
					if (note.isRest) {
						midiSoundModel = new NoteModel_midiCSL({
							'midiNote': [false],
							'type': 'melody',
							'currentTime': currentTime,
							'duration': duration,
							'noteModel': note
						});
						song.push(midiSoundModel);
					} else {
						accidental = getAccidentalNoteKey(note, accidentalMeasure);
						noteKey = accidental[0];
						accidentalMeasure = accidental[1];
						midiNote = [];
						for (var k = 0; k < noteKey.length; k++) {
							midiNote[k] = MidiHelper.keyToNote[noteKey[k]];
						}

						if (note.isTie() && c !== 1) { // don't use tie when there is one note (it happen when we click on one note)
							if (note.getTie() === "start") {
								inTie = true;
								tieNotesNumber = 1;
								tieNotesObject = new NoteModel_midiCSL({
									'midiNote': midiNote,
									'type': 'melody',
									'currentTime': currentTime,
									'duration': duration,
									'noteModel': note
								});
								midiSoundModel = new NoteModel_midiCSL({
									'midiNote': false,
									'type': 'melody',
									'currentTime': currentTime,
									'duration': duration,
									'noteModel': note
								});
								song.push(midiSoundModel);
							}
							if (note.getTie() === "stop_start") {
								tieNotesNumber++;
								tieNotesObject.setDuration(tieNotesObject.getDuration(numBeats) + duration);
								midiSoundModel = new NoteModel_midiCSL({
									'midiNote': false,
									'type': 'melody',
									'currentTime': currentTime,
									'duration': duration,
									'noteModel': note
								});
								song.push(midiSoundModel);
							}
							if (note.getTie() === "stop") {
								if (refreshTonalityNote === false) {
									refreshTonalityNote = true;
									tonalityNote = convertTonality2AlteredNote(songModel.getTonalityAt(numMeasure));
									accidentalMeasure = (JSON.parse(JSON.stringify(tonalityNote))); // empty accidentalMeasure on new measure
								}
								inTie = false;
								tieNotesNumber++;
								if (typeof tieNotesObject.getDuration === "undefined") {
									// case the tieNotes have not been yet created (it's a particular case where tie note is tie with nothing)
									// It happens when we take a chunk of a melody
									tieNotesObject = midiSoundModel = new NoteModel_midiCSL({
										'midiNote': midiNote,
										'type': 'melody',
										'currentTime': currentTime,
										'duration': duration,
										'noteModel': note
									});
								} else {
									// usual case
									tieNotesObject.setDuration(tieNotesObject.getDuration(numBeats) + duration);
								}
								tieNotesObject.tieNotesNumber = tieNotesNumber;
								midiSoundModel = tieNotesObject;
								song.push(tieNotesObject);
								tieNotesNumber = 0;
							}
						} else {
							midiSoundModel = new NoteModel_midiCSL({
								'midiNote': midiNote,
								'type': 'melody',
								'currentTime': currentTime,
								'duration': duration,
								'noteModel': note
							});
							song.push(midiSoundModel);
						}
					}
					currentTime += duration;
				}
			}
			return song;

			function getAccidentalNoteKey(note) {
				if (typeof note === "undefined") {
					return;
				}
				var noteKey = [];
				var currentNoteKey;

				var accidental, pitchClass;
				for (var i = 0, c = note.getNumPitches(); i < c; i++) {
					accidental = note.getAccidental(i);
					pitchClass = note.getPitchClass(i);
					if (accidental === "n") {
						accidentalMeasure[pitchClass] = pitchClass;
					} else if (accidental === "#") {
						accidentalMeasure[pitchClass] = pitchClass + '#';
					} else if (accidental === "b") {
						accidentalMeasure[pitchClass] = pitchClass + 'b';
					} else if (accidental === "##") {
						accidentalMeasure[pitchClass] = pitchClass + '##';
					} else if (accidental === "bb") {
						accidentalMeasure[pitchClass] = pitchClass + 'bb';
					}

					currentNoteKey = accidentalMeasure[pitchClass] + note.getOctave(i);
					currentNoteKey = MidiHelper.convertDoubleAccidental(currentNoteKey);
					currentNoteKey = MidiHelper.convertSharp2Flat(currentNoteKey);
					currentNoteKey = MidiHelper.detectImpossibleFlat(currentNoteKey);
					noteKey[i] = currentNoteKey;
				}

				return [noteKey, accidentalMeasure];
			}


			function convertTonality2AlteredNote(key) {
				if (typeof key === "undefined") {
					return;
				}
				var alteredNote = {
					'A': 'A',
					'B': 'B',
					'C': 'C',
					'D': 'D',
					'E': 'E',
					'F': 'F',
					'G': 'G'
				};
				switch (key) {
					case "Cb":
						jQuery.extend(alteredNote, {
							'B': 'Bb',
							'E': 'Eb',
							'A': 'Ab',
							'D': 'Db',
							'G': 'Gb',
							'C': 'Cb',
							'F': 'Fb'
						});
						break;
					case "Gb":
						jQuery.extend(alteredNote, {
							'B': 'Bb',
							'E': 'Eb',
							'A': 'Ab',
							'D': 'Db',
							'G': 'Gb',
							'C': 'Cb'
						});
						break;
					case "Db":
						jQuery.extend(alteredNote, {
							'B': 'Bb',
							'E': 'Eb',
							'A': 'Ab',
							'D': 'Db',
							'G': 'Gb'
						});
						break;
					case "Ab":
						jQuery.extend(alteredNote, {
							'B': 'Bb',
							'E': 'Eb',
							'A': 'Ab',
							'D': 'Db'
						});
						break;
					case "Eb":
						jQuery.extend(alteredNote, {
							'B': 'Bb',
							'E': 'Eb',
							'A': 'Ab'
						});
						break;
					case "Bb":
						jQuery.extend(alteredNote, {
							'B': 'Bb',
							'E': 'Eb'
						});
						break;
					case "F":
						jQuery.extend(alteredNote, {
							'B': 'Bb'
						});
						break;
					case "C":
						// No alteration on C
						break;
					case "G":
						jQuery.extend(alteredNote, {
							'F': 'F#'
						});
						break;
					case "D":
						jQuery.extend(alteredNote, {
							'F': 'F#',
							'C': 'C#'
						});
						break;
					case "A":
						jQuery.extend(alteredNote, {
							'F': 'F#',
							'C': 'C#',
							'G': 'G#'
						});
						break;
					case "E":
						jQuery.extend(alteredNote, {
							'F': 'F#',
							'C': 'C#',
							'G': 'G#',
							'D': 'D#'
						});
						break;
					case "B":
						jQuery.extend(alteredNote, {
							'F': 'F#',
							'C': 'C#',
							'G': 'G#',
							'D': 'D#',
							'A': 'A#'
						});
						break;
					case "F#":
						jQuery.extend(alteredNote, {
							'F': 'F#',
							'C': 'C#',
							'G': 'G#',
							'D': 'D#',
							'A': 'A#',
							'E': 'E#'
						});
						break;
					case "C#":
						jQuery.extend(alteredNote, {
							'F': 'F#',
							'C': 'C#',
							'G': 'G#',
							'D': 'D#',
							'A': 'A#',
							'E': 'E#',
							'B': 'B#'
						});
						break;
				}
				return alteredNote;
			}
		};

		return SongConverterMidi_MidiCSL;
	});
define('modules/MidiCSL/src/model/SongModel_MidiCSL',['modules/MidiCSL/src/model/NoteModel_MidiCSL'], function(NoteModel_MidiCSL) {
	function SongModel_MidiCSL(option) {
		this.song = (typeof(option) !== "undefined" && typeof(option.song) !== "undefined") ? option.song : [];
	}

	SongModel_MidiCSL.prototype.getSong = function() {
		return this.song;
	};

	SongModel_MidiCSL.prototype.setSong = function(song, replaceBool) {
		if (typeof replaceBool !== "undefined" && replaceBool) {
			this.song = song;
		} else {
			this.song = this.song.concat(song);
		}
	};

	SongModel_MidiCSL.prototype.setFromType = function(song, type) {
		if (typeof type === "undefined") {
			return;
		}
		for (var i = this.song.length - 1; i >= 0; i--) {
			if (this.song[i].getType() === type) {
				this.song.splice(i, 1);
			}
		}
		this.song = this.song.concat(song);
		/*console.log(this.song);*/
	};

	SongModel_MidiCSL.prototype.getFromType = function(type) {
		var elements = [];
		if (typeof type !== "undefined") {
			for (var i = 0, c = this.song.length; i < c; i++) {
				if (this.song[i].getType() === type) {
					elements.push(this.song[i]);
				}
			}
		}
		return elements;
	};

	SongModel_MidiCSL.prototype.removeFromType = function(type) {
		if (typeof type === "undefined") {
			return;
		}
		for (var i = this.song.length - 1; i >= 0; i--) {
			if (this.song[i].getType() === type) {
				this.song.splice(i, 1);
			}
		}
	};

	SongModel_MidiCSL.prototype.getLastNote = function() {
		// Looking for last note
		var lastNote = this.song[0];
		var lastNoteEndTime = lastNote.getCurrentTime() + lastNote.getDuration();
		var currentNote, currentEndTime;
		for (var i = 0, c = this.song.length; i < c; i++) {
			currentNote = this.song[i];
			if (currentNote && currentNote.getType() !== "metronome") {
				currentEndTime = currentNote.getCurrentTime() + currentNote.getDuration();
				if (lastNoteEndTime < currentEndTime) {
					lastNoteEndTime = currentEndTime;
					lastNote = currentNote;
				}
			}
		}
		return lastNote;
	};

	SongModel_MidiCSL.prototype.getMidiSoundModelIndex = function(midiSoundModel) {
		if (typeof midiSoundModel !== "undefined" && midiSoundModel instanceof SongModel_MidiCSL) {
			var comp = midiSoundModel.serialize();
			for (var i = 0, c = this.song.length; i < c; i++) {
				if (this.song[i].serialize() === comp) {
					return i;
				}
			}
		}
		return -1;
	};

	SongModel_MidiCSL.prototype.serialize = function() {
		var songModel_midiCSL = {};
		songModel_midiCSL.song = this.song;
		return songModel_midiCSL;
	};

	SongModel_MidiCSL.prototype.clone = function() {
		return new SongModel_MidiCSL(this.serialize());
	};

	SongModel_MidiCSL.prototype.generateMetronome = function(songModel) {
		var note, duration;
		var noteObject = {};
		var metronome = [];
		var currentTime = 0;
		var notes = [];
		var beatUnit = 4;
		timeSig = 4;
		if (typeof songModel !== "undefined") {
			timeSig = songModel.timeSignature.getBeats();
			beatUnit = songModel.timeSignature.getBeatUnitQuarter();
		}
		for (var i = 0, c = 200; i < c; i++) {
			if (i % timeSig === 0) {
				notes = [105]; // A7
			} else {
				notes = [93]; // A6
			}
			duration = 0.5;
			noteObject = new NoteModel_MidiCSL({
				'midiNote': notes,
				'type': 'metronome',
				'currentTime': currentTime,
				'duration': duration,
			});
			currentTime += beatUnit;
			metronome.push(noteObject);
		}
		return metronome;
	};

	return SongModel_MidiCSL;
});
if(typeof(DOMLoader)==="undefined"){var DOMLoader={}}(function(){DOMLoader.script=function(){this.loaded={};this.loading={};return this};DOMLoader.script.prototype.add=function(c){var g=this;if(typeof(c)==="string"){c={src:c}}var e=c.srcs;if(typeof(e)==="undefined"){e=[{src:c.src,verify:c.verify}]}var j=document.getElementsByTagName("head")[0];var a=function(k,l){if(g.loaded[k.src]){return}if(l&&typeof(window[l])==="undefined"){return}g.loaded[k.src]=true;if(g.loading[k.src]){g.loading[k.src]()}delete g.loading[k.src];if(k.callback){k.callback()}if(typeof(f)!=="undefined"){f()}};var b=[];var d=function(m){if(typeof(m)==="string"){m={src:m,verify:c.verify}}if(/([\w\d.])$/.test(m.verify)){m.test=m.verify;if(typeof(m.test)==="object"){for(var l in m.test){b.push(m.test[l])}}else{b.push(m.test)}}if(g.loaded[m.src]){return}var k=document.createElement("script");k.onreadystatechange=function(){if(this.readyState!=="loaded"&&this.readyState!=="complete"){return}a(m)};k.onload=function(){a(m)};k.onerror=function(){};k.setAttribute("type","text/javascript");k.setAttribute("src",m.src);j.appendChild(k);g.loading[m.src]=function(){}};var i=function(l){if(l){a(l,l.test)}else{for(var p=0;p<e.length;p++){a(e[p],e[p].test)}}var k=true;for(var p=0;p<b.length;p++){var o=b[p];if(o&&o.indexOf(".")!==-1){o=o.split(".");var m=window[o[0]];if(typeof(m)==="undefined"){continue}if(o.length===2){if(typeof(m[o[1]])==="undefined"){k=false}}else{if(o.length===3){if(typeof(m[o[1]][o[2]])==="undefined"){k=false}}}}else{if(typeof(window[o])==="undefined"){k=false}}}if(!c.strictOrder&&k){if(c.callback){c.callback()}}else{setTimeout(function(){i(l)},10)}};if(c.strictOrder){var h=-1;var f=function(){h++;if(!e[h]){if(c.callback){c.callback()}}else{var k=e[h];var l=k.src;if(g.loading[l]){g.loading[l]=function(){if(k.callback){k.callback()}f()}}else{if(!g.loaded[l]){d(k);i(k)}else{f()}}}};f()}else{for(var h=0;h<e.length;h++){d(e[h])}i()}};DOMLoader.script=(new DOMLoader.script())})();if(typeof(DOMLoader)==="undefined"){var DOMLoader={}}if(typeof(XMLHttpRequest)==="undefined"){var XMLHttpRequest;(function(){var b=[function(){return new ActiveXObject("Msxml2.XMLHTTP")},function(){return new ActiveXObject("Msxml3.XMLHTTP")},function(){return new ActiveXObject("Microsoft.XMLHTTP")}];for(var a=0;a<b.length;a++){try{b[a]()}catch(c){continue}break}XMLHttpRequest=b[a]})()}if(typeof((new XMLHttpRequest()).responseText)==="undefined"){var IEBinaryToArray_ByteStr_Script="<!-- IEBinaryToArray_ByteStr -->\r\n<script type='text/vbscript'>\r\nFunction IEBinaryToArray_ByteStr(Binary)\r\n   IEBinaryToArray_ByteStr = CStr(Binary)\r\nEnd Function\r\nFunction IEBinaryToArray_ByteStr_Last(Binary)\r\n   Dim lastIndex\r\n   lastIndex = LenB(Binary)\r\n   if lastIndex mod 2 Then\r\n       IEBinaryToArray_ByteStr_Last = Chr( AscB( MidB( Binary, lastIndex, 1 ) ) )\r\n   Else\r\n       IEBinaryToArray_ByteStr_Last = \"\"\r\n   End If\r\nEnd Function\r\n<\/script>\r\n";document.write(IEBinaryToArray_ByteStr_Script);DOMLoader.sendRequest=function(a){function c(k){var d={};for(var h=0;h<256;h++){for(var g=0;g<256;g++){d[String.fromCharCode(h+g*256)]=String.fromCharCode(h)+String.fromCharCode(g)}}var e=IEBinaryToArray_ByteStr(k);var f=IEBinaryToArray_ByteStr_Last(k);return e.replace(/[\s\S]/g,function(i){return d[i]})+f}var b=XMLHttpRequest();b.open("GET",a.url,true);if(a.responseType){b.responseType=a.responseType}if(a.onerror){b.onerror=a.onerror}if(a.onprogress){b.onprogress=a.onprogress}b.onreadystatechange=function(d){if(b.readyState===4){if(b.status===200){b.responseText=c(b.responseBody)}else{b=false}if(a.onload){a.onload(b)}}};b.setRequestHeader("Accept-Charset","x-user-defined");b.send(null);return b}}else{DOMLoader.sendRequest=function(a){var b=new XMLHttpRequest();b.open(a.data?"POST":"GET",a.url,true);if(b.overrideMimeType){b.overrideMimeType("text/plain; charset=x-user-defined")}if(a.data){b.setRequestHeader("Content-type","application/x-www-form-urlencoded")}if(a.responseType){b.responseType=a.responseType}if(a.onerror){b.onerror=a.onerror}if(a.onprogress){b.onprogress=a.onprogress}b.onreadystatechange=function(c){if(b.readyState===4){if(b.status!==200&&b.status!=304){if(a.onerror){a.onerror(c,false)}return}if(a.onload){a.onload(b)}}};b.send(a.data);return b}}if(typeof(MIDI)==="undefined"){var MIDI={}}(function(){var b={};var c=0;var a=function(f){c++;var d=new Audio();var e=f.split(";")[0];d.id="audio";d.setAttribute("preload","auto");d.setAttribute("audiobuffer",true);d.addEventListener("error",function(){b[e]=false;c--},false);d.addEventListener("canplaythrough",function(){b[e]=true;c--},false);d.src="data:"+f;document.body.appendChild(d)};MIDI.audioDetect=function(i){if(typeof(Audio)==="undefined"){return i({})}var f=new Audio();if(typeof(f.canPlayType)==="undefined"){return i(b)}var h=f.canPlayType('audio/ogg; codecs="vorbis"');h=(h==="probably"||h==="maybe");var e=f.canPlayType("audio/mpeg");e=(e==="probably"||e==="maybe");if(!h&&!e){i(b);return}if(h){a("audio/ogg;base64,T2dnUwACAAAAAAAAAADqnjMlAAAAAOyyzPIBHgF2b3JiaXMAAAAAAUAfAABAHwAAQB8AAEAfAACZAU9nZ1MAAAAAAAAAAAAA6p4zJQEAAAANJGeqCj3//////////5ADdm9yYmlzLQAAAFhpcGguT3JnIGxpYlZvcmJpcyBJIDIwMTAxMTAxIChTY2hhdWZlbnVnZ2V0KQAAAAABBXZvcmJpcw9CQ1YBAAABAAxSFCElGVNKYwiVUlIpBR1jUFtHHWPUOUYhZBBTiEkZpXtPKpVYSsgRUlgpRR1TTFNJlVKWKUUdYxRTSCFT1jFloXMUS4ZJCSVsTa50FkvomWOWMUYdY85aSp1j1jFFHWNSUkmhcxg6ZiVkFDpGxehifDA6laJCKL7H3lLpLYWKW4q91xpT6y2EGEtpwQhhc+211dxKasUYY4wxxsXiUyiC0JBVAAABAABABAFCQ1YBAAoAAMJQDEVRgNCQVQBABgCAABRFcRTHcRxHkiTLAkJDVgEAQAAAAgAAKI7hKJIjSZJkWZZlWZameZaouaov+64u667t6roOhIasBACAAAAYRqF1TCqDEEPKQ4QUY9AzoxBDDEzGHGNONKQMMogzxZAyiFssLqgQBKEhKwKAKAAAwBjEGGIMOeekZFIi55iUTkoDnaPUUcoolRRLjBmlEluJMYLOUeooZZRCjKXFjFKJscRUAABAgAMAQICFUGjIigAgCgCAMAYphZRCjCnmFHOIMeUcgwwxxiBkzinoGJNOSuWck85JiRhjzjEHlXNOSuekctBJyaQTAAAQ4AAAEGAhFBqyIgCIEwAwSJKmWZomipamiaJniqrqiaKqWp5nmp5pqqpnmqpqqqrrmqrqypbnmaZnmqrqmaaqiqbquqaquq6nqrZsuqoum65q267s+rZru77uqapsm6or66bqyrrqyrbuurbtS56nqqKquq5nqq6ruq5uq65r25pqyq6purJtuq4tu7Js664s67pmqq5suqotm64s667s2rYqy7ovuq5uq7Ks+6os+75s67ru2rrwi65r66os674qy74x27bwy7ouHJMnqqqnqq7rmarrqq5r26rr2rqmmq5suq4tm6or26os67Yry7aumaosm64r26bryrIqy77vyrJui67r66Ys67oqy8Lu6roxzLat+6Lr6roqy7qvyrKuu7ru+7JuC7umqrpuyrKvm7Ks+7auC8us27oxuq7vq7It/KosC7+u+8Iy6z5jdF1fV21ZGFbZ9n3d95Vj1nVhWW1b+V1bZ7y+bgy7bvzKrQvLstq2scy6rSyvrxvDLux8W/iVmqratum6um7Ksq/Lui60dd1XRtf1fdW2fV+VZd+3hV9pG8OwjK6r+6os68Jry8ov67qw7MIvLKttK7+r68ow27qw3L6wLL/uC8uq277v6rrStXVluX2fsSu38QsAABhwAAAIMKEMFBqyIgCIEwBAEHIOKQahYgpCCKGkEEIqFWNSMuakZM5JKaWUFEpJrWJMSuaclMwxKaGUlkopqYRSWiqlxBRKaS2l1mJKqcVQSmulpNZKSa2llGJMrcUYMSYlc05K5pyUklJrJZXWMucoZQ5K6iCklEoqraTUYuacpA46Kx2E1EoqMZWUYgupxFZKaq2kFGMrMdXUWo4hpRhLSrGVlFptMdXWWqs1YkxK5pyUzDkqJaXWSiqtZc5J6iC01DkoqaTUYiopxco5SR2ElDLIqJSUWiupxBJSia20FGMpqcXUYq4pxRZDSS2WlFosqcTWYoy1tVRTJ6XFklKMJZUYW6y5ttZqDKXEVkqLsaSUW2sx1xZjjqGkFksrsZWUWmy15dhayzW1VGNKrdYWY40x5ZRrrT2n1mJNMdXaWqy51ZZbzLXnTkprpZQWS0oxttZijTHmHEppraQUWykpxtZara3FXEMpsZXSWiypxNhirLXFVmNqrcYWW62ltVprrb3GVlsurdXcYqw9tZRrrLXmWFNtBQAADDgAAASYUAYKDVkJAEQBAADGMMYYhEYpx5yT0ijlnHNSKucghJBS5hyEEFLKnINQSkuZcxBKSSmUklJqrYVSUmqttQIAAAocAAACbNCUWByg0JCVAEAqAIDBcTRNFFXVdX1fsSxRVFXXlW3jVyxNFFVVdm1b+DVRVFXXtW3bFn5NFFVVdmXZtoWiqrqybduybgvDqKqua9uybeuorqvbuq3bui9UXVmWbVu3dR3XtnXd9nVd+Bmzbeu2buu+8CMMR9/4IeTj+3RCCAAAT3AAACqwYXWEk6KxwEJDVgIAGQAAgDFKGYUYM0gxphhjTDHGmAAAgAEHAIAAE8pAoSErAoAoAADAOeecc84555xzzjnnnHPOOeecc44xxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY0wAwE6EA8BOhIVQaMhKACAcAABACCEpKaWUUkoRU85BSSmllFKqFIOMSkoppZRSpBR1lFJKKaWUIqWgpJJSSimllElJKaWUUkoppYw6SimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaVUSimllFJKKaWUUkoppRQAYPLgAACVYOMMK0lnhaPBhYasBAByAwAAhRiDEEJpraRUUkolVc5BKCWUlEpKKZWUUqqYgxBKKqmlklJKKbXSQSihlFBKKSWUUkooJYQQSgmhlFRCK6mEUkoHoYQSQimhhFRKKSWUzkEoIYUOQkmllNRCSB10VFIpIZVSSiklpZQ6CKGUklJLLZVSWkqpdBJSKamV1FJqqbWSUgmhpFZKSSWl0lpJJbUSSkklpZRSSymFVFJJJYSSUioltZZaSqm11lJIqZWUUkqppdRSSiWlkEpKqZSSUmollZRSaiGVlEpJKaTUSimlpFRCSamlUlpKLbWUSkmptFRSSaWUlEpJKaVSSksppRJKSqmllFpJKYWSUkoplZJSSyW1VEoKJaWUUkmptJRSSymVklIBAEAHDgAAAUZUWoidZlx5BI4oZJiAAgAAQABAgAkgMEBQMApBgDACAQAAAADAAAAfAABHARAR0ZzBAUKCwgJDg8MDAAAAAAAAAAAAAACAT2dnUwAEAAAAAAAAAADqnjMlAgAAADzQPmcBAQA=")}if(e){a("audio/mpeg;base64,/+MYxAAAAANIAUAAAASEEB/jwOFM/0MM/90b/+RhST//w4NFwOjf///PZu////9lns5GFDv//l9GlUIEEIAAAgIg8Ir/JGq3/+MYxDsLIj5QMYcoAP0dv9HIjUcH//yYSg+CIbkGP//8w0bLVjUP///3Z0x5QCAv/yLjwtGKTEFNRTMuOTeqqqqqqqqqqqqq/+MYxEkNmdJkUYc4AKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq")}var g=(new Date()).getTime();var d=window.setInterval(function(){var j=(new Date()).getTime();var k=j-g>5000;if(!c||k){window.clearInterval(d);i(b)}},1)}})();if(typeof(MIDI)==="undefined"){var MIDI={}}if(typeof(MIDI.Soundfont)==="undefined"){MIDI.Soundfont={}}(function(){var e=false;var d=false;MIDI.loadPlugin=function(h){if(typeof(h)==="function"){h={callback:h}}var g=h.instruments||h.instrument||"acoustic_grand_piano";if(typeof(g)!=="object"){g=[g]}for(var j=0;j<g.length;j++){var i=g[j];if(typeof(i)==="number"){g[j]=MIDI.GeneralMIDI.byId[i]}}MIDI.soundfontUrl=h.soundfontUrl||MIDI.soundfontUrl||"./soundfont/";MIDI.audioDetect(function(l){var m="";if(c[h.api]){m=h.api}else{if(c[window.location.hash.substr(1)]){m=window.location.hash.substr(1)}else{if(d&&navigator.requestMIDIAccess){m="webmidi"}else{if(window.webkitAudioContext||window.AudioContext){m="webaudio"}else{if(window.Audio){m="audiotag"}else{m="flash"}}}}}if(!b[m]){return}if(h.targetFormat){var k=h.targetFormat}else{var k=l["audio/ogg"]?"ogg":"mp3"}MIDI.lang=m;MIDI.supports=l;b[m](k,g,h)})};var b={};b.webmidi=function(i,g,h){if(MIDI.loader){MIDI.loader.message("Web MIDI API...")}MIDI.WebMIDI.connect(h)};b.flash=function(i,g,h){if(MIDI.loader){MIDI.loader.message("Flash API...")}DOMLoader.script.add({src:h.soundManagerUrl||"./inc/SoundManager2/script/soundmanager2.js",verify:"SoundManager",callback:function(){MIDI.Flash.connect(g,h)}})};b.audiotag=function(j,h,i){if(MIDI.loader){MIDI.loader.message("HTML5 Audio API...")}var g=a({items:h,getNext:function(k){if(e){DOMLoader.sendRequest({url:MIDI.soundfontUrl+k+"-"+j+".js",onprogress:f,onload:function(l){MIDI.Soundfont[k]=JSON.parse(l.responseText);if(MIDI.loader){MIDI.loader.update(null,"Downloading",100)}g.getNext()}})}else{DOMLoader.script.add({src:MIDI.soundfontUrl+k+"-"+j+".js",verify:"MIDI.Soundfont."+k,callback:function(){if(MIDI.loader){MIDI.loader.update(null,"Downloading...",100)}g.getNext()}})}},onComplete:function(){MIDI.AudioTag.connect(i)}})};b.webaudio=function(j,h,i){if(MIDI.loader){MIDI.loader.message("Web Audio API...")}var g=a({items:h,getNext:function(k){if(e){DOMLoader.sendRequest({url:MIDI.soundfontUrl+k+"-"+j+".js",onprogress:f,onload:function(l){MIDI.Soundfont[k]=JSON.parse(l.responseText);if(MIDI.loader){MIDI.loader.update(null,"Downloading...",100)}g.getNext()}})}else{DOMLoader.script.add({src:MIDI.soundfontUrl+k+"-"+j+".js",verify:"MIDI.Soundfont."+k,callback:function(){if(MIDI.loader){MIDI.loader.update(null,"Downloading...",100)}g.getNext()}})}},onComplete:function(){MIDI.WebAudio.connect(i)}})};var c={webmidi:true,webaudio:true,audiotag:true,flash:true};var f=function(h){if(!this.totalSize){if(this.getResponseHeader("Content-Length-Raw")){this.totalSize=parseInt(this.getResponseHeader("Content-Length-Raw"))}else{this.totalSize=h.total}}var g=this.totalSize?Math.round(h.loaded/this.totalSize*100):"";if(MIDI.loader){MIDI.loader.update(null,"Downloading...",g)}};var a=function(h){var g={};g.queue=[];for(var i in h.items){g.queue.push(h.items[i])}g.getNext=function(){if(!g.queue.length){return h.onComplete()}h.getNext(g.queue.shift())};setTimeout(g.getNext,1);return g}})();if(typeof(MIDI)==="undefined"){var MIDI={}}if(typeof(MIDI.Player)==="undefined"){MIDI.Player={}}(function(){var g=MIDI.Player;g.callback=undefined;g.currentTime=0;g.endTime=0;g.restart=0;g.playing=false;g.timeWarp=1;g.start=g.resume=function(){if(g.currentTime<-1){g.currentTime=-1}e(g.currentTime)};g.pause=function(){var l=g.restart;d();g.restart=l};g.stop=function(){d();g.restart=0;g.currentTime=0};g.addListener=function(l){j=l};g.removeListener=function(){j=undefined};g.clearAnimation=function(){if(g.interval){window.clearInterval(g.interval)}};g.setAnimation=function(n){var q=(typeof(n)==="function")?n:n.callback;var m=n.interval||30;var p=0;var o=0;var l=0;g.clearAnimation();g.interval=window.setInterval(function(){if(g.endTime===0){return}if(g.playing){p=(l===g.currentTime)?o-(new Date).getTime():0;if(g.currentTime===0){p=0}else{p=g.currentTime-p}if(l!==g.currentTime){o=(new Date).getTime();l=g.currentTime}}else{p=g.currentTime}var r=g.endTime;var w=p/r;var v=p/1000;var s=v/60;var x=v-(s*60);var u=s*60+x;var t=(r/1000);if(t-u<-1){return}q({now:u,end:t,events:c})},m)};g.loadMidiFile=function(){g.replayer=new Replayer(MidiFile(g.currentData),g.timeWarp);g.data=g.replayer.getData();g.endTime=f()};g.loadFile=function(m,o){g.stop();if(m.indexOf("base64,")!==-1){var n=window.atob(m.split(",")[1]);g.currentData=n;g.loadMidiFile();if(o){o(n)}return}var l=new XMLHttpRequest();l.open("GET",m);l.overrideMimeType("text/plain; charset=x-user-defined");l.onreadystatechange=function(){if(this.readyState===4&&this.status===200){var r=this.responseText||"";var q=[];var v=r.length;var p=String.fromCharCode;for(var u=0;u<v;u++){q[u]=p(r.charCodeAt(u)&255)}var s=q.join("");g.currentData=s;g.loadMidiFile();if(o){o(s)}}};l.send()};var k=[];var a;var b=0;var c={};var j=undefined;var i=function(q,m,p,r,o,n){var l=window.setTimeout(function(){var s={channel:q,note:m,now:p,end:g.endTime,message:o,velocity:n};if(o===128){delete c[m]}else{c[m]=s}if(j){j(s)}g.currentTime=p;if(g.currentTime===a&&a<g.endTime){e(a,true)}},p-r);return l};var h=function(){if(MIDI.lang==="WebAudioAPI"){return MIDI.Player.ctx}else{if(!g.ctx){g.ctx={currentTime:0}}}return g.ctx};var f=function(){var o=g.data;var m=o.length;var l=0.5;for(var p=0;p<m;p++){l+=o[p][1]}return l};var e=function(m,q){if(!g.replayer){return}if(!q){if(typeof(m)==="undefined"){m=g.restart}if(g.playing){d()}g.playing=true;g.data=g.replayer.getData();g.endTime=f()}var v;var r=0;var s=0;var t=g.data;var w=h();var o=t.length;a=0.5;b=w.currentTime;for(var p=0;p<o&&s<100;p++){a+=t[p][1];if(a<m){r=a;continue}m=a-r;var l=t[p][0].event;if(l.type!=="channel"){continue}var u=l.channel;switch(l.subtype){case"noteOn":if(MIDI.channels[u].mute){break}v=l.noteNumber-(g.MIDIOffset||0);k.push({event:l,source:MIDI.noteOn(u,l.noteNumber,l.velocity,m/1000+w.currentTime),interval:i(u,v,a,r,144,l.velocity)});s++;break;case"noteOff":if(MIDI.channels[u].mute){break}v=l.noteNumber-(g.MIDIOffset||0);k.push({event:l,source:MIDI.noteOff(u,l.noteNumber,m/1000+w.currentTime),interval:i(u,v,a,r,128)});break;default:break}}};var d=function(){var l=h();g.playing=false;g.restart+=(l.currentTime-b)*1000;while(k.length){var p=k.pop();window.clearInterval(p.interval);if(!p.source){continue}if(typeof(p.source)==="number"){window.clearTimeout(p.source)}else{var n=p.source;n.disconnect(0);if(n.noteOff){n.noteOff(0)}else{n.stop(0)}}}for(var m in c){var p=c[m];if(c[m].message===144&&j){j({channel:p.channel,note:p.note,now:p.now,end:p.end,message:128,velocity:p.velocity})}}c={}}})();if(typeof(MIDI)==="undefined"){var MIDI={}}(function(){var a=function(b){MIDI.api=b.api;MIDI.setVolume=b.setVolume;MIDI.programChange=b.programChange;MIDI.noteOn=b.noteOn;MIDI.noteOff=b.noteOff;MIDI.chordOn=b.chordOn;MIDI.chordOff=b.chordOff;MIDI.stopAllNotes=b.stopAllNotes;MIDI.getInput=b.getInput;MIDI.getOutputs=b.getOutputs};(function(){var e=null;var d=null;var b=[];var c=MIDI.WebMIDI={api:"webmidi"};c.setVolume=function(g,f){d.send([176+g,7,f])};c.programChange=function(g,f){d.send([192+g,f])};c.noteOn=function(i,g,h,f){d.send([144+i,g,h],f*1000)};c.noteOff=function(h,g,f){d.send([128+h,g,0],f*1000)};c.chordOn=function(i,j,h,f){for(var k=0;k<j.length;k++){var g=j[k];d.send([144+i,g,h],f*1000)}};c.chordOff=function(h,i,f){for(var j=0;j<i.length;j++){var g=i[j];d.send([128+h,g,0],f*1000)}};c.stopAllNotes=function(){for(var f=0;f<16;f++){d.send([176+f,123,0])}};c.getInput=function(){return e.getInputs()};c.getOutputs=function(){return e.getOutputs()};c.connect=function(f){a(c);navigator.requestMIDIAccess().then(function(g){e=g;d=e.outputs()[0];if(f.callback){f.callback()}},function(g){if(window.AudioContext||window.webkitAudioContext){f.api="webaudio"}else{if(window.Audio){f.api="audiotag"}else{f.api="flash"}}MIDI.loadPlugin(f)})}})();if(window.AudioContext||window.webkitAudioContext){(function(){var h=window.AudioContext||window.webkitAudioContext;var c=MIDI.WebAudio={api:"webaudio"};var b;var d={};var g=127;var f={};var e=function(r,q,n,o,p){var l=MIDI.GeneralMIDI.byName[r];var i=l.number;var j=q[n];if(!MIDI.Soundfont[r][j]){return p(r)}var m=MIDI.Soundfont[r][j].split(",")[1];var k=Base64Binary.decodeArrayBuffer(m);b.decodeAudioData(k,function(s){var u=j;while(u.length<3){u+="&nbsp;"}if(typeof(MIDI.loader)!=="undefined"){MIDI.loader.update(null,l.instrument+"<br>Processing: "+(n/87*100>>0)+"%<br>"+u)}s.id=j;o[n]=s;if(o.length===q.length){while(o.length){s=o.pop();if(!s){continue}var t=MIDI.keyToNote[s.id];f[i+""+t]=s}p(r)}})};c.setVolume=function(j,i){g=i};c.programChange=function(j,i){MIDI.channels[j].instrument=i};c.noteOn=function(m,k,l,i){if(!MIDI.channels[m]){return}var j=MIDI.channels[m].instrument;if(!f[j+""+k]){return}if(i<b.currentTime){i+=b.currentTime}var o=b.createBufferSource();d[m+""+k]=o;o.buffer=f[j+""+k];o.connect(b.destination);if(b.createGain){o.gainNode=b.createGain()}else{o.gainNode=b.createGainNode()}var n=(l/127)*(g/127)*2-1;o.gainNode.connect(b.destination);o.gainNode.gain.value=Math.max(-1,n);o.connect(o.gainNode);if(o.noteOn){o.noteOn(i||0)}else{o.start(i||0)}return o};c.noteOff=function(k,j,i){i=i||0;if(i<b.currentTime){i+=b.currentTime}var m=d[k+""+j];if(!m){return}if(m.gainNode){var l=m.gainNode.gain;l.linearRampToValueAtTime(l.value,i);l.linearRampToValueAtTime(-1,i+0.2)}if(m.noteOff){m.noteOff(i+0.3)}else{m.stop(i+0.3)}delete d[k+""+j]};c.chordOn=function(o,p,m,j){var i={},k;for(var q=0,l=p.length;q<l;q++){i[k=p[q]]=c.noteOn(o,k,m,j)}return i};c.chordOff=function(m,o,j){var i={},k;for(var p=0,l=o.length;p<l;p++){i[k=o[p]]=c.noteOff(m,k,j)}return i};c.stopAllNotes=function(){for(var j in d){var i=0;if(i<b.currentTime){i+=b.currentTime}d[j].gain.linearRampToValueAtTime(1,i);d[j].gain.linearRampToValueAtTime(0,i+0.2);d[j].noteOff(i+0.3)}};c.connect=function(n){a(c);MIDI.Player.ctx=b=new h();var q=[];var j=MIDI.keyToNote;for(var p in j){q.push(p)}var o=[];var k={};var l=function(s){delete k[s];for(var i in k){break}if(!i){n.callback()}};for(var r in MIDI.Soundfont){k[r]=true;for(var m=0;m<q.length;m++){e(r,q,m,o,l)}}}})()}if(window.Audio){(function(){var k=MIDI.AudioTag={api:"audiotag"};var d={};var e=127;var j=-1;var f=[];var c=[];var g={};for(var b=0;b<12;b++){f[b]=new Audio()}var i=function(q,o){if(!MIDI.channels[q]){return}var n=MIDI.channels[q].instrument;var m=MIDI.GeneralMIDI.byId[n].id;var o=g[o];if(!o){return}var l=m+""+o.id;var r=(j+1)%f.length;var p=f[r];c[r]=l;p.src=MIDI.Soundfont[m][o.id];p.volume=e/127;p.play();j=r};var h=function(r,q){if(!MIDI.channels[r]){return}var p=MIDI.channels[r].instrument;var o=MIDI.GeneralMIDI.byId[p].id;var q=g[q];if(!q){return}var m=o+""+q.id;for(var n=0;n<f.length;n++){var s=(n+j+1)%f.length;var l=c[s];if(l&&l==m){f[s].pause();c[s]=null;return}}};k.programChange=function(m,l){MIDI.channels[m].instrument=l};k.setVolume=function(l,m){e=m};k.noteOn=function(o,m,n,l){var p=d[m];if(!g[p]){return}if(l){return window.setTimeout(function(){i(o,p)},l*1000)}else{i(o,p)}};k.noteOff=function(n,m,l){var o=d[m];if(!g[o]){return}if(l){return setTimeout(function(){h(n,o)},l*1000)}else{h(n,o)}};k.chordOn=function(p,q,o,m){for(var l=0;l<q.length;l++){var s=q[l];var r=d[s];if(!g[r]){continue}if(m){return window.setTimeout(function(){i(p,r)},m*1000)}else{i(p,r)}}};k.chordOff=function(o,p,m){for(var l=0;l<p.length;l++){var r=p[l];var q=d[r];if(!g[q]){continue}if(m){return window.setTimeout(function(){h(o,q)},m*1000)}else{h(o,q)}}};k.stopAllNotes=function(){for(var m=0,l=f.length;m<l;m++){f[m].pause()}};k.connect=function(l){for(var m in MIDI.keyToNote){d[MIDI.keyToNote[m]]=m;g[m]={id:m}}a(k);if(l.callback){l.callback()}}})()}(function(){var b=MIDI.Flash={api:"flash"};var d={};var c={};b.programChange=function(f,e){MIDI.channels[f].instrument=e};b.setVolume=function(f,e){};b.noteOn=function(i,g,h,e){if(!MIDI.channels[i]){return}var f=MIDI.channels[i].instrument;var j=MIDI.GeneralMIDI.byId[f].number;g=j+""+d[g];if(!c[g]){return}if(e){return window.setTimeout(function(){c[g].play({volume:h*2})},e*1000)}else{c[g].play({volume:h*2})}};b.noteOff=function(g,f,e){};b.chordOn=function(j,h,g,i){if(!MIDI.channels[j]){return}var m=MIDI.channels[j].instrument;var e=MIDI.GeneralMIDI.byId[m].number;for(var l in h){var f=h[l];var k=e+""+d[f];if(c[k]){c[k].play({volume:g*2})}}};b.chordOff=function(f,g,e){};b.stopAllNotes=function(){};b.connect=function(e,f){soundManager.flashVersion=9;soundManager.useHTML5Audio=true;soundManager.url=f.soundManagerSwfUrl||"../inc/SoundManager2/swf/";soundManager.useHighPerformance=true;soundManager.wmode="transparent";soundManager.flashPollingInterval=1;soundManager.debugMode=false;soundManager.onload=function(){var r=function(t,v,u){var i=MIDI.GeneralMIDI.byName[t];var j=i.number;c[j+""+v]=soundManager.createSound({id:v,url:MIDI.soundfontUrl+t+"-mp3/"+v+".mp3",multiShot:true,autoLoad:true,onload:u})};var p=[];var l=88;var q=e.length*l;for(var o=0;o<e.length;o++){var s=e[o];var m=function(){p.push(this.sID);if(typeof(MIDI.loader)==="undefined"){return}MIDI.loader.update(null,"Processing: "+this.sID)};for(var n=0;n<l;n++){var h=d[n+21];r(s,h,m)}}a(b);var k=window.setInterval(function(){if(p.length<q){return}window.clearInterval(k);if(f.callback){f.callback()}},25)};soundManager.onerror=function(){};for(var g in MIDI.keyToNote){d[MIDI.keyToNote[g]]=g}}})();MIDI.GeneralMIDI=(function(e){var h=function(k){return k.replace(/[^a-z0-9 ]/gi,"").replace(/[ ]/g,"_").toLowerCase()};var g={byName:{},byId:{},byCategory:{}};for(var i in e){var f=e[i];for(var c=0,b=f.length;c<b;c++){var j=f[c];if(!j){continue}var d=parseInt(j.substr(0,j.indexOf(" ")),10);j=j.replace(d+" ","");g.byId[--d]=g.byName[h(j)]=g.byCategory[h(i)]={id:h(j),instrument:j,number:d,category:i}}}return g})({Piano:["1 Acoustic Grand Piano","2 Bright Acoustic Piano","3 Electric Grand Piano","4 Honky-tonk Piano","5 Electric Piano 1","6 Electric Piano 2","7 Harpsichord","8 Clavinet"],"Chromatic Percussion":["9 Celesta","10 Glockenspiel","11 Music Box","12 Vibraphone","13 Marimba","14 Xylophone","15 Tubular Bells","16 Dulcimer"],Organ:["17 Drawbar Organ","18 Percussive Organ","19 Rock Organ","20 Church Organ","21 Reed Organ","22 Accordion","23 Harmonica","24 Tango Accordion"],Guitar:["25 Acoustic Guitar (nylon)","26 Acoustic Guitar (steel)","27 Electric Guitar (jazz)","28 Electric Guitar (clean)","29 Electric Guitar (muted)","30 Overdriven Guitar","31 Distortion Guitar","32 Guitar Harmonics"],Bass:["33 Acoustic Bass","34 Electric Bass (finger)","35 Electric Bass (pick)","36 Fretless Bass","37 Slap Bass 1","38 Slap Bass 2","39 Synth Bass 1","40 Synth Bass 2"],Strings:["41 Violin","42 Viola","43 Cello","44 Contrabass","45 Tremolo Strings","46 Pizzicato Strings","47 Orchestral Harp","48 Timpani"],Ensemble:["49 String Ensemble 1","50 String Ensemble 2","51 Synth Strings 1","52 Synth Strings 2","53 Choir Aahs","54 Voice Oohs","55 Synth Choir","56 Orchestra Hit"],Brass:["57 Trumpet","58 Trombone","59 Tuba","60 Muted Trumpet","61 French Horn","62 Brass Section","63 Synth Brass 1","64 Synth Brass 2"],Reed:["65 Soprano Sax","66 Alto Sax","67 Tenor Sax","68 Baritone Sax","69 Oboe","70 English Horn","71 Bassoon","72 Clarinet"],Pipe:["73 Piccolo","74 Flute","75 Recorder","76 Pan Flute","77 Blown Bottle","78 Shakuhachi","79 Whistle","80 Ocarina"],"Synth Lead":["81 Lead 1 (square)","82 Lead 2 (sawtooth)","83 Lead 3 (calliope)","84 Lead 4 (chiff)","85 Lead 5 (charang)","86 Lead 6 (voice)","87 Lead 7 (fifths)","88 Lead 8 (bass + lead)"],"Synth Pad":["89 Pad 1 (new age)","90 Pad 2 (warm)","91 Pad 3 (polysynth)","92 Pad 4 (choir)","93 Pad 5 (bowed)","94 Pad 6 (metallic)","95 Pad 7 (halo)","96 Pad 8 (sweep)"],"Synth Effects":["97 FX 1 (rain)","98 FX 2 (soundtrack)","99 FX 3 (crystal)","100 FX 4 (atmosphere)","101 FX 5 (brightness)","102 FX 6 (goblins)","103 FX 7 (echoes)","104 FX 8 (sci-fi)"],Ethnic:["105 Sitar","106 Banjo","107 Shamisen","108 Koto","109 Kalimba","110 Bagpipe","111 Fiddle","112 Shanai"],Percussive:["113 Tinkle Bell","114 Agogo","115 Steel Drums","116 Woodblock","117 Taiko Drum","118 Melodic Tom","119 Synth Drum"],"Sound effects":["120 Reverse Cymbal","121 Guitar Fret Noise","122 Breath Noise","123 Seashore","124 Bird Tweet","125 Telephone Ring","126 Helicopter","127 Applause","128 Gunshot"]});MIDI.channels=(function(){var b={};for(var c=0;c<16;c++){b[c]={instrument:0,mute:false,mono:false,omni:false,solo:false}}return b})();MIDI.pianoKeyOffset=21;MIDI.keyToNote={};MIDI.noteToKey={};(function(){var f=21;var b=108;var c=["C","Db","D","Eb","E","F","Gb","G","Ab","A","Bb","B"];for(var g=f;g<=b;g++){var e=(g-12)/12>>0;var d=c[g%12]+e;MIDI.keyToNote[d]=g;MIDI.noteToKey[g]=d}})()})();function MidiFile(g){function a(q){var r=q.read(4);var i=q.readInt32();return{id:r,length:i,data:q.read(i)}}var o;function c(w){var u={};u.deltaTime=w.readVarInt();var t=w.readInt8();if((t&240)==240){if(t==255){u.type="meta";var r=w.readInt8();var s=w.readVarInt();switch(r){case 0:u.subtype="sequenceNumber";if(s!=2){throw"Expected length for sequenceNumber event is 2, got "+s}u.number=w.readInt16();return u;case 1:u.subtype="text";u.text=w.read(s);return u;case 2:u.subtype="copyrightNotice";u.text=w.read(s);return u;case 3:u.subtype="trackName";u.text=w.read(s);return u;case 4:u.subtype="instrumentName";u.text=w.read(s);return u;case 5:u.subtype="lyrics";u.text=w.read(s);return u;case 6:u.subtype="marker";u.text=w.read(s);return u;case 7:u.subtype="cuePoint";u.text=w.read(s);return u;case 32:u.subtype="midiChannelPrefix";if(s!=1){throw"Expected length for midiChannelPrefix event is 1, got "+s}u.channel=w.readInt8();return u;case 47:u.subtype="endOfTrack";if(s!=0){throw"Expected length for endOfTrack event is 0, got "+s}return u;case 81:u.subtype="setTempo";if(s!=3){throw"Expected length for setTempo event is 3, got "+s}u.microsecondsPerBeat=((w.readInt8()<<16)+(w.readInt8()<<8)+w.readInt8());return u;case 84:u.subtype="smpteOffset";if(s!=5){throw"Expected length for smpteOffset event is 5, got "+s}var q=w.readInt8();u.frameRate={0:24,32:25,64:29,96:30}[q&96];u.hour=q&31;u.min=w.readInt8();u.sec=w.readInt8();u.frame=w.readInt8();u.subframe=w.readInt8();return u;case 88:u.subtype="timeSignature";if(s!=4){console.warn("Expected length for timeSignature event is 4, got "+s);break;}u.numerator=w.readInt8();u.denominator=Math.pow(2,w.readInt8());u.metronome=w.readInt8();u.thirtyseconds=w.readInt8();return u;case 89:u.subtype="keySignature";if(s!=2){throw"Expected length for keySignature event is 2, got "+s}u.key=w.readInt8(true);u.scale=w.readInt8();return u;case 127:u.subtype="sequencerSpecific";u.data=w.read(s);return u;default:u.subtype="unknown";u.data=w.read(s);return u}u.data=w.read(s);return u}else{if(t==240){u.type="sysEx";var s=w.readVarInt();u.data=w.read(s);return u}else{if(t==247){u.type="dividedSysEx";var s=w.readVarInt();u.data=w.read(s);return u}else{throw"Unrecognised MIDI event type byte: "+t}}}}else{var v;if((t&128)==0){v=t;t=o}else{v=w.readInt8();o=t}var i=t>>4;u.channel=t&15;u.type="channel";switch(i){case 8:u.subtype="noteOff";u.noteNumber=v;u.velocity=w.readInt8();return u;case 9:u.noteNumber=v;u.velocity=w.readInt8();if(u.velocity==0){u.subtype="noteOff"}else{u.subtype="noteOn"}return u;case 10:u.subtype="noteAftertouch";u.noteNumber=v;u.amount=w.readInt8();return u;case 11:u.subtype="controller";u.controllerType=v;u.value=w.readInt8();return u;case 12:u.subtype="programChange";u.programNumber=v;return u;case 13:u.subtype="channelAftertouch";u.amount=v;return u;case 14:u.subtype="pitchBend";u.value=v+(w.readInt8()<<7);return u;default:throw"Unrecognised MIDI event type: "+i}}}stream=Stream(g);var k=a(stream);if(k.id!="MThd"||k.length!=6){throw"Bad .mid file - header not found"}var f=Stream(k.data);var d=f.readInt16();var h=f.readInt16();var p=f.readInt16();if(p&32768){throw"Expressing time division in SMTPE frames is not supported yet"}else{ticksPerBeat=p}var j={formatType:d,trackCount:h,ticksPerBeat:ticksPerBeat};var m=[];for(var e=0;e<j.trackCount;e++){m[e]=[];var l=a(stream);if(l.id!="MTrk"){throw"Unexpected chunk - expected MTrk, got "+l.id}var n=Stream(l.data);while(!n.eof()){var b=c(n);m[e].push(b)}}return{header:j,tracks:m}}var clone=function(c){if(typeof c!="object"){return(c)}if(c==null){return(c)}var a=(typeof c.length=="number")?[]:{};for(var b in c){a[b]=clone(c[b])}return a};function Replayer(f,j,e){var k=[];var n=120;var l=f.header.ticksPerBeat;for(var b=0;b<f.tracks.length;b++){k[b]={nextEventIndex:0,ticksToNextEvent:(f.tracks[b].length?f.tracks[b][0].deltaTime:null)}}var m;var c=0;function d(){var r=null;var s=null;var o=null;for(var q=0;q<k.length;q++){if(k[q].ticksToNextEvent!=null&&(r==null||k[q].ticksToNextEvent<r)){r=k[q].ticksToNextEvent;s=q;o=k[q].nextEventIndex}}if(s!=null){var p=f.tracks[s][o];if(f.tracks[s][o+1]){k[s].ticksToNextEvent+=f.tracks[s][o+1].deltaTime}else{k[s].ticksToNextEvent=null}k[s].nextEventIndex+=1;for(var q=0;q<k.length;q++){if(k[q].ticksToNextEvent!=null){k[q].ticksToNextEvent-=r}}return{ticksToEvent:r,event:p,track:s}}else{return null}}var h;var a=[];function g(){function i(){if(h.event.type=="meta"&&h.event.subtype=="setTempo"){n=60000000/h.event.microsecondsPerBeat}if(h.ticksToEvent>0){var q=h.ticksToEvent/l;var o=q/(n/60)}var p=(o*1000*j)||0;a.push([h,p]);h=d()}if(h=d()){while(h){i(true)}}}g();return{getData:function(){return clone(a)}}}function Stream(g){var b=0;function e(j){var i=g.substr(b,j);b+=j;return i}function f(){var i=((g.charCodeAt(b)<<24)+(g.charCodeAt(b+1)<<16)+(g.charCodeAt(b+2)<<8)+g.charCodeAt(b+3));b+=4;return i}function a(){var i=((g.charCodeAt(b)<<8)+g.charCodeAt(b+1));b+=2;return i}function h(j){var i=g.charCodeAt(b);if(j&&i>127){i-=256}b+=1;return i}function c(){return b>=g.length}function d(){var j=0;while(true){var i=h();if(i&128){j+=(i&127);j<<=7}else{return j+i}}}return{eof:c,read:e,readInt32:f,readInt16:a,readInt8:h,readVarInt:d}}(function(c){var a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";c.btoa||(c.btoa=function b(f){f=escape(f);var d="";var n,l,j="";var m,k,h,g="";var e=0;do{n=f.charCodeAt(e++);l=f.charCodeAt(e++);j=f.charCodeAt(e++);m=n>>2;k=((n&3)<<4)|(l>>4);h=((l&15)<<2)|(j>>6);g=j&63;if(isNaN(l)){h=g=64}else{if(isNaN(j)){g=64}}d=d+a.charAt(m)+a.charAt(k)+a.charAt(h)+a.charAt(g);n=l=j="";m=k=h=g=""}while(e<f.length);return d});c.atob||(c.atob=function(g){var e="";var o,m,k="";var n,l,j,h="";var f=0;var d=/[^A-Za-z0-9\+\/\=]/g;if(d.exec(g)){alert("There were invalid base64 characters in the input text.\nValid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\nExpect errors in decoding.")}g=g.replace(/[^A-Za-z0-9\+\/\=]/g,"");do{n=a.indexOf(g.charAt(f++));l=a.indexOf(g.charAt(f++));j=a.indexOf(g.charAt(f++));h=a.indexOf(g.charAt(f++));o=(n<<2)|(l>>4);m=((l&15)<<4)|(j>>2);k=((j&3)<<6)|h;e=e+String.fromCharCode(o);if(j!=64){e=e+String.fromCharCode(m)}if(h!=64){e=e+String.fromCharCode(k)}o=m=k="";n=l=j=h=""}while(f<g.length);return unescape(e)})}(this));var Base64Binary={_keyStr:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",decodeArrayBuffer:function(b){var a=Math.ceil((3*b.length)/4);var c=new ArrayBuffer(a);this.decode(b,c);return c},decode:function(g,f){var d=this._keyStr.indexOf(g.charAt(g.length-1));var b=this._keyStr.indexOf(g.charAt(g.length-1));var q=Math.ceil((3*g.length)/4);if(d==64){q--}if(b==64){q--}var e;var p,n,l;var o,m,k,h;var c=0;var a=0;if(f){e=new Uint8Array(f)}else{e=new Uint8Array(q)}g=g.replace(/[^A-Za-z0-9\+\/\=]/g,"");for(c=0;c<q;c+=3){o=this._keyStr.indexOf(g.charAt(a++));m=this._keyStr.indexOf(g.charAt(a++));k=this._keyStr.indexOf(g.charAt(a++));h=this._keyStr.indexOf(g.charAt(a++));p=(o<<2)|(m>>4);n=((m&15)<<4)|(k>>2);l=((k&3)<<6)|h;e[c]=p;if(k!=64){e[c+1]=n}if(h!=64){e[c+2]=l}}return e}};
define("Midijs", (function (global) {
    return function () {
        var ret, fn;
        return ret || global.MIDI;
    };
}(this)));

/**
 * Publishable Events
 * PlayerModel_MidiCSL-onload
 * PlayerModel_MidiCSL-onplay
 * PlayerModel_MidiCSL-onstop
 * PlayerModel_MidiCSL-onpause
 * PlayerModel_MidiCSL-onloopstart
 * PlayerModel_MidiCSL-onfinish
 * PlayerModel_MidiCSL-onvolumechange
 */

//var NoteModel_MidiCSL = require('modules/MidiCSL/src/model/NoteModel_MidiCSL');


define('modules/MidiCSL/src/model/PlayerModel_MidiCSL',['jquery', 'modules/core/src/SongModel', 'modules/MidiCSL/src/converters/SongConverterMidi_MidiCSL', 'modules/MidiCSL/src/model/SongModel_MidiCSL', 'Midijs', 'pubsub'],
	function($, SongModel, SongConverterMidi_MidiCSL, SongModel_MidiCSL, MIDI, pubsub) {
		/* option contain
			editor				// Score Editor Object, it is use mainly for viewer to display cursor
			chordsInstrument
			melodyInstrument
			loop				// make the player loop over and over
			activeMetronome		// Boolean that indicates whether the metronome is active or not
			volume				// Float Main volume for all instruments it vary between 0 and 1
		*/
		function PlayerModel_MidiCSL(songModel, soundfontPath, option) {
			this.isReady = false; // boolean that indicates if player is ready to be played
			this.indexPosition = 0; // represent which notes have been lastly played
			this.playState = false; // playState indicate if the player is currently playing or not, (paused player will return false)

			this.songModel = songModel;
			this.soundfontPath = soundfontPath;

			var initVolume;
			if ((typeof option !== "undefined" && typeof(option.volume) !== "undefined")) {
				// case that developper explicitly declared volume
				initVolume = option.volume;
			} else {
				// natural case (it use storage item to get last user volume)
				initVolume = this.initVolume(0.7);
			}


			this.chords = {
				volume: initVolume,
				tmpVolume: initVolume,
				instrument: (typeof option !== "undefined" && typeof(option.chordsInstrument) !== "undefined") ? option.chordsInstrument : 0,
			};
			this.melody = {
				volume: initVolume,
				tmpVolume: initVolume,
				instrument: (typeof option !== "undefined" && typeof(option.melodyInstrument) !== "undefined") ? option.melodyInstrument : 0,
			};
			this.activeMetronome = (typeof option !== "undefined" && typeof(option.activeMetronome) !== "undefined") ? option.activeMetronome : false;
			// When loop attributes is set to true, player will restart after the last note (indefinitively)
			this.loop = (typeof option !== "undefined" && typeof option.loop !== "undefined") ? option.loop : false;

			if (typeof option !== "undefined" && typeof option.editor !== "undefined") {
				this.editor = option.editor;
				this.showCursorBool = (typeof option !== "undefined" && typeof option.showCursorBool !== "undefined") ? option.showCursorBool : true;
			} else {
				this.showCursorBool = false;
			}

			this.autoload = (typeof option !== "undefined" && typeof option.autoload !== "undefined") ? option.autoload : true;
			if (!!this.autoload) {
				this.load();
			}
			this._startTime = 0; // it contain the start timestamp  (when play is pressed), (it change only if player is in pause)
		}

		PlayerModel_MidiCSL.prototype.setSong = function(songModel) {
			if (typeof songModel === "undefined" || !(songModel instanceof SongModel)) {
				throw "PlayerModel_MidiCSL- setSong, song model shouldn't be empty and should be a SongModel instance" + songModel;
			}
			this.songModel = songModel;
		};

		PlayerModel_MidiCSL.prototype.load = function() {
			if (typeof MIDI !== "undefined") {
				this.instrumentsIndex = this.getAllInstrumentsIndex();
				this.instrumentsName = this.getAllInstrumentsName();
				this.initMidiChannels(this.instrumentsIndex);
				this.initMidiPlugin(this.instrumentsName);
			}
		};

		PlayerModel_MidiCSL.prototype.getReady = function() {
			return this.isReady;
		};

		PlayerModel_MidiCSL.prototype.setReady = function(isReady) {
			if (typeof isReady !== "undefined") {
				this.isReady = isReady;
			}
		};

		PlayerModel_MidiCSL.prototype.getPlayState = function() {
			return this.playState;
		};

		PlayerModel_MidiCSL.prototype.doLoop = function() {
			return this.loop;
		};

		PlayerModel_MidiCSL.prototype.setLoop = function(loop) {
			if (typeof loop !== "undefined") {
				this.loop = !!loop;
				$.publish('PlayerModel_MidiCSL-toggleLoop', loop);
				return true;
			} else {
				return false;
			}
		};

		PlayerModel_MidiCSL.prototype.toggleLoop = function(loop) {
			if (this.loop === true) {
				this.setLoop(false);
			} else {
				this.setLoop(true);
			}
			return this.loop;
		};

		PlayerModel_MidiCSL.prototype.mute = function() {
			this.chords.tmpVolume = this.getChordsVolume();
			this.melody.tmpVolume = this.getMelodyVolume();
			this.setVolume(0);
		};

		PlayerModel_MidiCSL.prototype.unmute = function() {
			this.setVolume(this.chords.tmpVolume);
		};

		PlayerModel_MidiCSL.prototype.doMetronome = function() {
			return this.activeMetronome;
		};

		PlayerModel_MidiCSL.prototype.muteMetronome = function() {
			this.activeMetronome = false;
			$.publish('PlayerModel_MidiCSL-toggleMetronome', false);
		};

		PlayerModel_MidiCSL.prototype.unmuteMetronome = function() {
			this.activeMetronome = true;
			$.publish('PlayerModel_MidiCSL-toggleMetronome', true);
		};



		PlayerModel_MidiCSL.prototype.initVolume = function(volume, force) {
			var oldVolume = localStorage.getItem("player-volume");
			if (oldVolume === null) {
				return volume;
			}
			return oldVolume;
		};

		PlayerModel_MidiCSL.prototype.setVolume = function(volume) {
			if (typeof volume === "undefined" || isNaN(volume)) {
				throw 'PlayerModel_MidiCSL - setVolume - volume must be a number ' + volume;
			}
			$.publish('PlayerModel_MidiCSL-onvolumechange', volume);
			this.setMelodyVolume(volume);
			this.setChordsVolume(volume);
			localStorage.setItem("player-volume", volume);
		};

		PlayerModel_MidiCSL.prototype.getChordsVolume = function() {
			return this.chords.volume;
		};

		PlayerModel_MidiCSL.prototype.setChordsVolume = function(volume) {
			if (typeof volume === "undefined" || isNaN(volume)) {
				throw 'PlayerModel_MidiCSL - setChordsVolume - volume must be a number ' + volume;
			}
			/*MIDI.setVolume(1, volume * 127);*/
			this.chords.volume = volume;
		};

		PlayerModel_MidiCSL.prototype.getMelodyVolume = function() {
			return this.melody.volume;
		};

		PlayerModel_MidiCSL.prototype.setMelodyVolume = function(volume) {
			if (typeof volume === "undefined" || isNaN(volume)) {
				throw 'PlayerModel_MidiCSL - setMelodyVolume - volume must be a number ' + volume;
			}
			/*MIDI.setVolume(0, volume * 127);*/
			this.melody.volume = volume;
		};

		PlayerModel_MidiCSL.prototype.getChordsInstrument = function() {
			return this.chords.instrument;
		};

		PlayerModel_MidiCSL.prototype.setChordsInstrument = function(instrument) {
			if (typeof instrument !== "undefined") {
				this.chords.instrument = instrument;
				$.publish('PlayerModel_MidiCSL-onChordsInstrument', instrument);
				return true;
			} else {
				return false;
			}
		};

		PlayerModel_MidiCSL.prototype.getMelodyInstrument = function() {
			return this.melody.instrument;
		};

		PlayerModel_MidiCSL.prototype.setMelodyInstrument = function(instrument) {
			if (typeof instrument !== "undefined") {
				this.melody.instrument = instrument;
				$.publish('PlayerModel_MidiCSL-onMelodyInstrument', instrument);
				return true;
			} else {
				return false;
			}
		};

		PlayerModel_MidiCSL.prototype.getPositionIndex = function() {
			return this.indexPosition;
		};

		PlayerModel_MidiCSL.prototype.setPositionIndex = function(indexPosition, lastNote) {
			if (typeof indexPosition === "undefined" || isNaN(indexPosition)) {
				throw 'PlayerModel_MidiCSL - setPositionIndex - indexPosition must be a number ' + indexPosition;
			}
			this.indexPosition = indexPosition;
		};

		/**
		 * Function set position between 0 and 1
		 * @param {int} between 0 and 1
		 */
		PlayerModel_MidiCSL.prototype.setPositionInPercent = function(positionInPercent) {
			if (typeof positionInPercent === "undefined" || isNaN(positionInPercent)) {
				throw 'PlayerModel_MidiCSL - setPositionInPercent - positionInPercent must be a float ' + positionInPercent;
			}
			this.positionInPercent = positionInPercent;
			$.publish('PlayerModel_MidiCSL-onPosition', {
				'positionInPercent': positionInPercent,
				'songDuration': this.songDuration
			});
		};

		/**
		 * Give position of player in the song
		 * @return {float} between 0 (not started) and 1 (finished)
		 */
		PlayerModel_MidiCSL.prototype.getPosition = function() {
			if (typeof this._startTime === "undefined" || isNaN(this._startTime) || typeof this.songDuration === "undefined" || isNaN(this.songDuration)) {
				throw 'PlayerModel_MidiCSL - getPosition - _startTime and songDuration must be numbers ' + this._startTime + ' ' + this.songDuration;
			}
			var position = (Date.now() - this._startTime) / this.songDuration;
			if (position > 1) {
				position = 1;
			}
			return position;
		};

		PlayerModel_MidiCSL.prototype.getSongDuration = function() {
			return this.songDuration ? this.songDuration : 0;
		};

		PlayerModel_MidiCSL.prototype.getBeatDuration = function(tempo) {
			if (typeof tempo === "undefined" || isNaN(tempo)) {
				throw 'PlayerModel_MidiCSL - getBeatDuration - tempo must be a number ' + tempo;
			}
			return 1000 * (60 / tempo);
		};

		/**
		 * Launch midi.noteon and noteoff instructions, this function is the main play function
		 * @param  {int} tempo in bpm, it influence how fast the song will be played
		 * @param  {float} playFrom is an optionnal attributes, if it's filled then player will start to play the note after playFrom, in sec
		 * @param  {float} playTo is an optionnal attributes, if it's filled then player will play until playTo in sec, otherwise it play til the end
		 */
		PlayerModel_MidiCSL.prototype.play = function(tempo, playFrom, playTo) {
			if (typeof tempo === "undefined" || isNaN(tempo)) {
				throw 'PlayerModel_MidiCSL - play - tempo must be a number ' + tempo;
			}
			this.emptyPlayNotes();
			// Convert songmodel to a readable model that we can insert in SongModel_MidiCSL
			var midiSong = SongConverterMidi_MidiCSL.exportToMidiCSL(this.songModel);
			var midiSongModel = new SongModel_MidiCSL({
				'song': midiSong
			});
			var metronome = midiSongModel.generateMetronome(this.songModel);
			midiSongModel.setFromType(metronome, 'metronome');
			var song = midiSongModel.getSong();
			if (song.length !== 0 && this.getReady() === true) {
				var self = this;
				var lastNote = midiSongModel.getLastNote(); // Looking for last note
				var beatDuration = this.getBeatDuration(tempo);
				this.noteTimeOut = []; // Keep every setTimeout so we can clear them on pause/stop
				var beatOfLastNoteOff = lastNote.getCurrentTime() + lastNote.getDuration();
				var endTime = beatOfLastNoteOff * beatDuration + Date.now();
				this.songDuration = beatOfLastNoteOff * beatDuration;

				this.playState = true;
				$.publish('PlayerModel_MidiCSL-onplay');
				if (typeof playFrom === "undefined" || isNaN(playFrom)) {
					playFrom = song[this.indexPosition].getCurrentTime() * beatDuration;
				}
				this._startTime = Date.now() - playFrom;

				var velocityMin = 80;
				var randomVelocityRange = 40;

				var realIndex = 0;
				var metronomeChannel = this.instrumentsIndex.length-1;

				var currentNote, currentMidiNote, duration, velocityNote, channel, volume;
				var playNote = false;
				// for each different position in the song
				for (var i = 0, c = song.length; i < c; i++) {
					currentNote = song[i];
					if (currentNote && (currentNote.getCurrentTime() * beatDuration) >= playFrom) {
						// for each notes on a position (polyphonic song will have j > 1)
						for (var j = 0, v = currentNote.getMidiNote().length; j < v; j++) {
							(function(currentNote, realIndex, i, j) {
								self.noteTimeOut[realIndex] = setTimeout(function() {
									if (currentNote.getMidiNote() === "undefined") {
										return;
									}
									currentMidiNote = currentNote.getMidiNote()[j];
									playNote = false;
									/*if(currentMidiNote === false){}// Silence
						else {*/
									if (currentNote.getType() == "melody") {
										channel = self.getMelodyInstrument();
										volume = 127 * self.getMelodyVolume();
										velocityNote = Math.random() * randomVelocityRange + velocityMin;
										playNote = true;
									} else if (currentNote.getType() == "chord") {
										channel = self.getChordsInstrument();
										volume = 80 * self.getChordsVolume();
										velocityNote = Math.random() * randomVelocityRange + velocityMin;
										MIDI.setVolume(channel, 80 * self.getChordsVolume());
										playNote = true;
									} else if (currentNote.getType() == "metronome" && self.doMetronome() === true) {
										channel = metronomeChannel;
										volume = 127 * self.getMelodyVolume();
										velocityNote = Math.random() * randomVelocityRange + velocityMin;
										playNote = true;
									}
									if (playNote === true) {
										MIDI.setVolume(channel, volume);
										duration = currentNote.getDuration() * (60 / tempo);
										MIDI.noteOn(channel, currentMidiNote, velocityNote);
										MIDI.noteOff(channel, currentMidiNote, duration);
									}
									if (currentNote.getType() == "melody") {
										self.setPositionIndex(i);
										self.setPositionInPercent((Date.now() - self._startTime) / self.songDuration);
									}
									/*}*/
									if (currentNote == lastNote || (currentNote.getCurrentTime() * self.getBeatDuration(tempo) >= playTo)) {
										self.setPositionIndex(i);
										self.setPositionInPercent(1);
										setTimeout((function() {
											self.setPositionIndex(0, beatOfLastNoteOff);
											self.setPositionInPercent(0);
											if (self.doLoop() === false) {
												$.publish('PlayerModel_MidiCSL-onfinish');
												self.stop();
											} else {
												$.publish('PlayerModel_MidiCSL-onloopstart');
												self.play(tempo);
											}
										}), duration * 1000);
									}
								}, currentNote.getCurrentTime() * self.getBeatDuration(tempo) - playFrom);
							})(currentNote, realIndex, i, j);
							realIndex++;
						}
					}
				}
			}
		};


		PlayerModel_MidiCSL.prototype.emptyPlayNotes = function() {
			if (typeof MIDI.stopAllNotes !== "undefined") {
				MIDI.stopAllNotes();
			}
			// melody and metronome
			for (var i in this.noteTimeOut) {
				window.clearTimeout(this.noteTimeOut[i]);
			}
		};

		PlayerModel_MidiCSL.prototype.pause = function() {
			this.playState = false;
			if (typeof MIDI.stopAllNotes !== "undefined") {
				MIDI.stopAllNotes();
			}
			// melody and metronome
			for (var i in this.noteTimeOut) {
				window.clearTimeout(this.noteTimeOut[i]);
			}
			$.publish('PlayerModel_MidiCSL-onpause');
		};

		PlayerModel_MidiCSL.prototype.stop = function() {
			this.playState = false;
			if (typeof MIDI.stopAllNotes !== "undefined") {
				MIDI.stopAllNotes();
			}
			for (var i in this.noteTimeOut) {
				window.clearTimeout(this.noteTimeOut[i]);
			}
			this.setPositionIndex(0);
			this.setPositionInPercent(0);
			$.publish('PlayerModel_MidiCSL-onstop');
		};


		PlayerModel_MidiCSL.prototype.getAllInstruments = function() {
			// check MIDI/Plugin.js for number (you have to remove 1)
			var instruments = {
				0: "acoustic_grand_piano",
				/*		27 : "electric_guitar_clean",
				30 : "distortion_guitar",
				24 : "acoustic_guitar_nylon",
				25 : "acoustic_guitar_steel",
				26 : "electric_guitar_jazz",
				33 : "electric_bass_finger",
				34 : "electric_bass_pick",
				56 : "trumpet",
				61 : "brass_section",
				64 : "soprano_sax",*/
				/*65: "alto_sax",*/
				/*		66 : "tenor_sax",
				67 : "baritone_sax",
				73 : "flute",*/
				116: "taiko_drum"
			};
			return instruments;
		};

		PlayerModel_MidiCSL.prototype.getAllInstrumentsIndex = function() {
			var instruments = this.getAllInstruments();
			var instrumentsIndex = [];
			for (var instru in instruments) {
				instrumentsIndex.push(instru);
			}
			return instrumentsIndex;
		};

		PlayerModel_MidiCSL.prototype.getAllInstrumentsName = function() {
			var instruments = this.getAllInstruments();
			var instrumentsName = [];
			for (var instru in instruments) {
				instrumentsName.push(instruments[instru]);
			}
			return instrumentsName;
		};

		PlayerModel_MidiCSL.prototype.initMidiChannels = function(instruments) {
			if (typeof instruments === "undefined") {
				throw 'PlayerModel_MidiCSL - initMidiChannels - instruments must be defined';
			}
			var channels = {};
			if (typeof instruments !== "undefined") {
				for (var i = 0, c = instruments.length; i < c; i++) {
					channels[i] = {
						instrument: instruments[i],
						mute: false,
						mono: false,
						omni: false,
						solo: false
					};
				}
			}
			channels[9] = {
				instrument: 116,
				mute: false,
				mono: false,
				omni: false,
				solo: false
			};
			MIDI.channels = channels;
		};

		PlayerModel_MidiCSL.prototype.initMidiPlugin = function(instruments) {
			if (typeof instruments === "undefined") {
				throw 'PlayerModel_MidiCSL - initMidiPlugin - instruments must be defined';
			}
			var self = this;
			MIDI.loadPlugin({
				soundfontUrl: self.soundfontPath,
				instruments: instruments,
				callback: self.MidiPluginIsReady.bind(self)
			});
		};

		PlayerModel_MidiCSL.prototype.MidiPluginIsReady = function() {
			this.setReady(true);
			$.publish('PlayerModel_MidiCSL-onload');
		};

		return PlayerModel_MidiCSL;
	});
define('modules/MidiCSL/src/PlayerController_MidiCSL',[
	'jquery',
	'mustache',
	'modules/MidiCSL/src/model/PlayerModel_MidiCSL',
	'utils/UserLog',
	'pubsub',
], function($, Mustache, PlayerModel_MidiCSL, UserLog, pubsub) {

	function PlayerController(model, view) {
		this.model = model || new PlayerModel_MidiCSL();
		this.view = view;
		this.initView();
		this.initSubscribe();
	}

	/**
	 * Subscribe to view events
	 */
	PlayerController.prototype.initSubscribe = function() {
		var self = this;
		$.subscribe('ToPlayer-play', function(el, tempo) {
			self.play(tempo);
		});
		$.subscribe('ToPlayer-playFromPercent', function(el, obj) {
			self.playFromPercent(obj.tempo, obj.percent);
		});

		$.subscribe('ToPlayer-stop', function(el) {
			self.stop();
		});

		$.subscribe('ToPlayer-pause', function(el) {
			self.pause();
		});

		$.subscribe('ToPlayer-playPause', function(el, tempo) {
			self.pause();
		});

		$.subscribe('ToPlayer-onToggleMute', function(el, volume) {
			self.toggleMute(volume);
		});
		$.subscribe('ToPlayer-onVolume', function(el, volume) {
			self.onVolumeChange(volume);
		});
		$.subscribe('ToPlayer-onToggleMetronome', function(el, isMetronome) {
			self.metronomeChange(isMetronome);
		});
		$.subscribe('ToPlayer-onTempo', function(el, tempo) {});
		$.subscribe('ToPlayer-onChordInstrumentChange', function(el, instrument) {
			self.onChordInstrumentChange(instrument);
		});
		$.subscribe('ToPlayer-onMelodyInstrumentChange', function(el, instrument) {
			self.onMelodyInstrumentChange(instrument);
		});
		$.subscribe('ToPlayer-toggleLoop', function(el) {
			self.toggleLoop();
		});

		$.subscribe('PlayerView-render', function(el) {
			self.initView();
		});
	};

	/**
	 * Function playpause call play if player is in pause, and call pause if player is in play state
	 * @param  {int} tempo in BPM
	 */
	PlayerController.prototype.playPause = function(tempo) {
		if (this.model.playState) {
			this.model.pause();
		} else {
			this.model.play(tempo);
		}
	};

	PlayerController.prototype.playFromPercent = function(tempo, percent) {
		var timeSec = this.model.getSongDuration() * percent;
		this.model.play(tempo, timeSec);
	};

	PlayerController.prototype.play = function(tempo, playFrom) {
		this.model.play(tempo, playFrom);
	};

	PlayerController.prototype.stop = function() {
		this.model.stop();
	};

	PlayerController.prototype.pause = function() {
		this.model.pause();
	};

	PlayerController.prototype.tempoChange = function(tempo) {
		this.model.setTempo(tempo);
		this.model.stop();
	};

	PlayerController.prototype.toggleLoop = function(volume) {
		this.model.toggleLoop();
	};

	PlayerController.prototype.toggleMute = function(volume) {
		if (volume === 0) {
			this.model.mute();
		} else {
			this.model.unmute();
		}
	};


	PlayerController.prototype.metronomeChange = function(isMetronome) {
		if (isMetronome) {
			this.model.unmuteMetronome();
		} else {
			this.model.muteMetronome();
		}
	};

	PlayerController.prototype.onVolumeChange = function(volume) {
		if (volume === 0) {
			this.model.mute();
		} else {
			this.model.setVolume(volume);
		}
	};

	PlayerController.prototype.onChordInstrumentChange = function(instrument) {
		this.model.setChordsInstrument(instrument);
	};
	PlayerController.prototype.onMelodyInstrumentChange = function(instrument) {
		this.model.setMelodyInstrument(instrument);
	};

	/**
	 * Function is call to load the state of the player
	 */
	PlayerController.prototype.initView = function() {
		$.publish('PlayerModel_MidiCSL-onvolumechange', this.model.getMelodyVolume());
	};

	return PlayerController;
});
/*!
 * Bootstrap v3.1.1 (http://getbootstrap.com)
 * Copyright 2011-2014 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 */
define('bootstrap',['jquery'], function($) {if("undefined"==typeof jQuery)throw new Error("Bootstrap's JavaScript requires jQuery");+function(a){function b(){var a=document.createElement("bootstrap"),b={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd otransitionend",transition:"transitionend"};for(var c in b)if(void 0!==a.style[c])return{end:b[c]};return!1}a.fn.emulateTransitionEnd=function(b){var c=!1,d=this;a(this).one(a.support.transition.end,function(){c=!0});var e=function(){c||a(d).trigger(a.support.transition.end)};return setTimeout(e,b),this},a(function(){a.support.transition=b()})}(jQuery),+function(a){var b='[data-dismiss="alert"]',c=function(c){a(c).on("click",b,this.close)};c.prototype.close=function(b){function c(){f.trigger("closed.bs.alert").remove()}var d=a(this),e=d.attr("data-target");e||(e=d.attr("href"),e=e&&e.replace(/.*(?=#[^\s]*$)/,""));var f=a(e);b&&b.preventDefault(),f.length||(f=d.hasClass("alert")?d:d.parent()),f.trigger(b=a.Event("close.bs.alert")),b.isDefaultPrevented()||(f.removeClass("in"),a.support.transition&&f.hasClass("fade")?f.one(a.support.transition.end,c).emulateTransitionEnd(150):c())};var d=a.fn.alert;a.fn.alert=function(b){return this.each(function(){var d=a(this),e=d.data("bs.alert");e||d.data("bs.alert",e=new c(this)),"string"==typeof b&&e[b].call(d)})},a.fn.alert.Constructor=c,a.fn.alert.noConflict=function(){return a.fn.alert=d,this},a(document).on("click.bs.alert.data-api",b,c.prototype.close)}(jQuery),+function(a){var b=function(c,d){this.$element=a(c),this.options=a.extend({},b.DEFAULTS,d),this.isLoading=!1};b.DEFAULTS={loadingText:"loading..."},b.prototype.setState=function(b){var c="disabled",d=this.$element,e=d.is("input")?"val":"html",f=d.data();b+="Text",f.resetText||d.data("resetText",d[e]()),d[e](f[b]||this.options[b]),setTimeout(a.proxy(function(){"loadingText"==b?(this.isLoading=!0,d.addClass(c).attr(c,c)):this.isLoading&&(this.isLoading=!1,d.removeClass(c).removeAttr(c))},this),0)},b.prototype.toggle=function(){var a=!0,b=this.$element.closest('[data-toggle="buttons"]');if(b.length){var c=this.$element.find("input");"radio"==c.prop("type")&&(c.prop("checked")&&this.$element.hasClass("active")?a=!1:b.find(".active").removeClass("active")),a&&c.prop("checked",!this.$element.hasClass("active")).trigger("change")}a&&this.$element.toggleClass("active")};var c=a.fn.button;a.fn.button=function(c){return this.each(function(){var d=a(this),e=d.data("bs.button"),f="object"==typeof c&&c;e||d.data("bs.button",e=new b(this,f)),"toggle"==c?e.toggle():c&&e.setState(c)})},a.fn.button.Constructor=b,a.fn.button.noConflict=function(){return a.fn.button=c,this},a(document).on("click.bs.button.data-api","[data-toggle^=button]",function(b){var c=a(b.target);c.hasClass("btn")||(c=c.closest(".btn")),c.button("toggle"),b.preventDefault()})}(jQuery),+function(a){var b=function(b,c){this.$element=a(b),this.$indicators=this.$element.find(".carousel-indicators"),this.options=c,this.paused=this.sliding=this.interval=this.$active=this.$items=null,"hover"==this.options.pause&&this.$element.on("mouseenter",a.proxy(this.pause,this)).on("mouseleave",a.proxy(this.cycle,this))};b.DEFAULTS={interval:5e3,pause:"hover",wrap:!0},b.prototype.cycle=function(b){return b||(this.paused=!1),this.interval&&clearInterval(this.interval),this.options.interval&&!this.paused&&(this.interval=setInterval(a.proxy(this.next,this),this.options.interval)),this},b.prototype.getActiveIndex=function(){return this.$active=this.$element.find(".item.active"),this.$items=this.$active.parent().children(),this.$items.index(this.$active)},b.prototype.to=function(b){var c=this,d=this.getActiveIndex();return b>this.$items.length-1||0>b?void 0:this.sliding?this.$element.one("slid.bs.carousel",function(){c.to(b)}):d==b?this.pause().cycle():this.slide(b>d?"next":"prev",a(this.$items[b]))},b.prototype.pause=function(b){return b||(this.paused=!0),this.$element.find(".next, .prev").length&&a.support.transition&&(this.$element.trigger(a.support.transition.end),this.cycle(!0)),this.interval=clearInterval(this.interval),this},b.prototype.next=function(){return this.sliding?void 0:this.slide("next")},b.prototype.prev=function(){return this.sliding?void 0:this.slide("prev")},b.prototype.slide=function(b,c){var d=this.$element.find(".item.active"),e=c||d[b](),f=this.interval,g="next"==b?"left":"right",h="next"==b?"first":"last",i=this;if(!e.length){if(!this.options.wrap)return;e=this.$element.find(".item")[h]()}if(e.hasClass("active"))return this.sliding=!1;var j=a.Event("slide.bs.carousel",{relatedTarget:e[0],direction:g});return this.$element.trigger(j),j.isDefaultPrevented()?void 0:(this.sliding=!0,f&&this.pause(),this.$indicators.length&&(this.$indicators.find(".active").removeClass("active"),this.$element.one("slid.bs.carousel",function(){var b=a(i.$indicators.children()[i.getActiveIndex()]);b&&b.addClass("active")})),a.support.transition&&this.$element.hasClass("slide")?(e.addClass(b),e[0].offsetWidth,d.addClass(g),e.addClass(g),d.one(a.support.transition.end,function(){e.removeClass([b,g].join(" ")).addClass("active"),d.removeClass(["active",g].join(" ")),i.sliding=!1,setTimeout(function(){i.$element.trigger("slid.bs.carousel")},0)}).emulateTransitionEnd(1e3*d.css("transition-duration").slice(0,-1))):(d.removeClass("active"),e.addClass("active"),this.sliding=!1,this.$element.trigger("slid.bs.carousel")),f&&this.cycle(),this)};var c=a.fn.carousel;a.fn.carousel=function(c){return this.each(function(){var d=a(this),e=d.data("bs.carousel"),f=a.extend({},b.DEFAULTS,d.data(),"object"==typeof c&&c),g="string"==typeof c?c:f.slide;e||d.data("bs.carousel",e=new b(this,f)),"number"==typeof c?e.to(c):g?e[g]():f.interval&&e.pause().cycle()})},a.fn.carousel.Constructor=b,a.fn.carousel.noConflict=function(){return a.fn.carousel=c,this},a(document).on("click.bs.carousel.data-api","[data-slide], [data-slide-to]",function(b){var c,d=a(this),e=a(d.attr("data-target")||(c=d.attr("href"))&&c.replace(/.*(?=#[^\s]+$)/,"")),f=a.extend({},e.data(),d.data()),g=d.attr("data-slide-to");g&&(f.interval=!1),e.carousel(f),(g=d.attr("data-slide-to"))&&e.data("bs.carousel").to(g),b.preventDefault()}),a(window).on("load",function(){a('[data-ride="carousel"]').each(function(){var b=a(this);b.carousel(b.data())})})}(jQuery),+function(a){var b=function(c,d){this.$element=a(c),this.options=a.extend({},b.DEFAULTS,d),this.transitioning=null,this.options.parent&&(this.$parent=a(this.options.parent)),this.options.toggle&&this.toggle()};b.DEFAULTS={toggle:!0},b.prototype.dimension=function(){var a=this.$element.hasClass("width");return a?"width":"height"},b.prototype.show=function(){if(!this.transitioning&&!this.$element.hasClass("in")){var b=a.Event("show.bs.collapse");if(this.$element.trigger(b),!b.isDefaultPrevented()){var c=this.$parent&&this.$parent.find("> .panel > .in");if(c&&c.length){var d=c.data("bs.collapse");if(d&&d.transitioning)return;c.collapse("hide"),d||c.data("bs.collapse",null)}var e=this.dimension();this.$element.removeClass("collapse").addClass("collapsing")[e](0),this.transitioning=1;var f=function(){this.$element.removeClass("collapsing").addClass("collapse in")[e]("auto"),this.transitioning=0,this.$element.trigger("shown.bs.collapse")};if(!a.support.transition)return f.call(this);var g=a.camelCase(["scroll",e].join("-"));this.$element.one(a.support.transition.end,a.proxy(f,this)).emulateTransitionEnd(350)[e](this.$element[0][g])}}},b.prototype.hide=function(){if(!this.transitioning&&this.$element.hasClass("in")){var b=a.Event("hide.bs.collapse");if(this.$element.trigger(b),!b.isDefaultPrevented()){var c=this.dimension();this.$element[c](this.$element[c]())[0].offsetHeight,this.$element.addClass("collapsing").removeClass("collapse").removeClass("in"),this.transitioning=1;var d=function(){this.transitioning=0,this.$element.trigger("hidden.bs.collapse").removeClass("collapsing").addClass("collapse")};return a.support.transition?void this.$element[c](0).one(a.support.transition.end,a.proxy(d,this)).emulateTransitionEnd(350):d.call(this)}}},b.prototype.toggle=function(){this[this.$element.hasClass("in")?"hide":"show"]()};var c=a.fn.collapse;a.fn.collapse=function(c){return this.each(function(){var d=a(this),e=d.data("bs.collapse"),f=a.extend({},b.DEFAULTS,d.data(),"object"==typeof c&&c);!e&&f.toggle&&"show"==c&&(c=!c),e||d.data("bs.collapse",e=new b(this,f)),"string"==typeof c&&e[c]()})},a.fn.collapse.Constructor=b,a.fn.collapse.noConflict=function(){return a.fn.collapse=c,this},a(document).on("click.bs.collapse.data-api","[data-toggle=collapse]",function(b){var c,d=a(this),e=d.attr("data-target")||b.preventDefault()||(c=d.attr("href"))&&c.replace(/.*(?=#[^\s]+$)/,""),f=a(e),g=f.data("bs.collapse"),h=g?"toggle":d.data(),i=d.attr("data-parent"),j=i&&a(i);g&&g.transitioning||(j&&j.find('[data-toggle=collapse][data-parent="'+i+'"]').not(d).addClass("collapsed"),d[f.hasClass("in")?"addClass":"removeClass"]("collapsed")),f.collapse(h)})}(jQuery),+function(a){function b(b){a(d).remove(),a(e).each(function(){var d=c(a(this)),e={relatedTarget:this};d.hasClass("open")&&(d.trigger(b=a.Event("hide.bs.dropdown",e)),b.isDefaultPrevented()||d.removeClass("open").trigger("hidden.bs.dropdown",e))})}function c(b){var c=b.attr("data-target");c||(c=b.attr("href"),c=c&&/#[A-Za-z]/.test(c)&&c.replace(/.*(?=#[^\s]*$)/,""));var d=c&&a(c);return d&&d.length?d:b.parent()}var d=".dropdown-backdrop",e="[data-toggle=dropdown]",f=function(b){a(b).on("click.bs.dropdown",this.toggle)};f.prototype.toggle=function(d){var e=a(this);if(!e.is(".disabled, :disabled")){var f=c(e),g=f.hasClass("open");if(b(),!g){"ontouchstart"in document.documentElement&&!f.closest(".navbar-nav").length&&a('<div class="dropdown-backdrop"/>').insertAfter(a(this)).on("click",b);var h={relatedTarget:this};if(f.trigger(d=a.Event("show.bs.dropdown",h)),d.isDefaultPrevented())return;f.toggleClass("open").trigger("shown.bs.dropdown",h),e.focus()}return!1}},f.prototype.keydown=function(b){if(/(38|40|27)/.test(b.keyCode)){var d=a(this);if(b.preventDefault(),b.stopPropagation(),!d.is(".disabled, :disabled")){var f=c(d),g=f.hasClass("open");if(!g||g&&27==b.keyCode)return 27==b.which&&f.find(e).focus(),d.click();var h=" li:not(.divider):visible a",i=f.find("[role=menu]"+h+", [role=listbox]"+h);if(i.length){var j=i.index(i.filter(":focus"));38==b.keyCode&&j>0&&j--,40==b.keyCode&&j<i.length-1&&j++,~j||(j=0),i.eq(j).focus()}}}};var g=a.fn.dropdown;a.fn.dropdown=function(b){return this.each(function(){var c=a(this),d=c.data("bs.dropdown");d||c.data("bs.dropdown",d=new f(this)),"string"==typeof b&&d[b].call(c)})},a.fn.dropdown.Constructor=f,a.fn.dropdown.noConflict=function(){return a.fn.dropdown=g,this},a(document).on("click.bs.dropdown.data-api",b).on("click.bs.dropdown.data-api",".dropdown form",function(a){a.stopPropagation()}).on("click.bs.dropdown.data-api",e,f.prototype.toggle).on("keydown.bs.dropdown.data-api",e+", [role=menu], [role=listbox]",f.prototype.keydown)}(jQuery),+function(a){var b=function(b,c){this.options=c,this.$element=a(b),this.$backdrop=this.isShown=null,this.options.remote&&this.$element.find(".modal-content").load(this.options.remote,a.proxy(function(){this.$element.trigger("loaded.bs.modal")},this))};b.DEFAULTS={backdrop:!0,keyboard:!0,show:!0},b.prototype.toggle=function(a){return this[this.isShown?"hide":"show"](a)},b.prototype.show=function(b){var c=this,d=a.Event("show.bs.modal",{relatedTarget:b});this.$element.trigger(d),this.isShown||d.isDefaultPrevented()||(this.isShown=!0,this.escape(),this.$element.on("click.dismiss.bs.modal",'[data-dismiss="modal"]',a.proxy(this.hide,this)),this.backdrop(function(){var d=a.support.transition&&c.$element.hasClass("fade");c.$element.parent().length||c.$element.appendTo(document.body),c.$element.show().scrollTop(0),d&&c.$element[0].offsetWidth,c.$element.addClass("in").attr("aria-hidden",!1),c.enforceFocus();var e=a.Event("shown.bs.modal",{relatedTarget:b});d?c.$element.find(".modal-dialog").one(a.support.transition.end,function(){c.$element.focus().trigger(e)}).emulateTransitionEnd(300):c.$element.focus().trigger(e)}))},b.prototype.hide=function(b){b&&b.preventDefault(),b=a.Event("hide.bs.modal"),this.$element.trigger(b),this.isShown&&!b.isDefaultPrevented()&&(this.isShown=!1,this.escape(),a(document).off("focusin.bs.modal"),this.$element.removeClass("in").attr("aria-hidden",!0).off("click.dismiss.bs.modal"),a.support.transition&&this.$element.hasClass("fade")?this.$element.one(a.support.transition.end,a.proxy(this.hideModal,this)).emulateTransitionEnd(300):this.hideModal())},b.prototype.enforceFocus=function(){a(document).off("focusin.bs.modal").on("focusin.bs.modal",a.proxy(function(a){this.$element[0]===a.target||this.$element.has(a.target).length||this.$element.focus()},this))},b.prototype.escape=function(){this.isShown&&this.options.keyboard?this.$element.on("keyup.dismiss.bs.modal",a.proxy(function(a){27==a.which&&this.hide()},this)):this.isShown||this.$element.off("keyup.dismiss.bs.modal")},b.prototype.hideModal=function(){var a=this;this.$element.hide(),this.backdrop(function(){a.removeBackdrop(),a.$element.trigger("hidden.bs.modal")})},b.prototype.removeBackdrop=function(){this.$backdrop&&this.$backdrop.remove(),this.$backdrop=null},b.prototype.backdrop=function(b){var c=this.$element.hasClass("fade")?"fade":"";if(this.isShown&&this.options.backdrop){var d=a.support.transition&&c;if(this.$backdrop=a('<div class="modal-backdrop '+c+'" />').appendTo(document.body),this.$element.on("click.dismiss.bs.modal",a.proxy(function(a){a.target===a.currentTarget&&("static"==this.options.backdrop?this.$element[0].focus.call(this.$element[0]):this.hide.call(this))},this)),d&&this.$backdrop[0].offsetWidth,this.$backdrop.addClass("in"),!b)return;d?this.$backdrop.one(a.support.transition.end,b).emulateTransitionEnd(150):b()}else!this.isShown&&this.$backdrop?(this.$backdrop.removeClass("in"),a.support.transition&&this.$element.hasClass("fade")?this.$backdrop.one(a.support.transition.end,b).emulateTransitionEnd(150):b()):b&&b()};var c=a.fn.modal;a.fn.modal=function(c,d){return this.each(function(){var e=a(this),f=e.data("bs.modal"),g=a.extend({},b.DEFAULTS,e.data(),"object"==typeof c&&c);f||e.data("bs.modal",f=new b(this,g)),"string"==typeof c?f[c](d):g.show&&f.show(d)})},a.fn.modal.Constructor=b,a.fn.modal.noConflict=function(){return a.fn.modal=c,this},a(document).on("click.bs.modal.data-api",'[data-toggle="modal"]',function(b){var c=a(this),d=c.attr("href"),e=a(c.attr("data-target")||d&&d.replace(/.*(?=#[^\s]+$)/,"")),f=e.data("bs.modal")?"toggle":a.extend({remote:!/#/.test(d)&&d},e.data(),c.data());c.is("a")&&b.preventDefault(),e.modal(f,this).one("hide",function(){c.is(":visible")&&c.focus()})}),a(document).on("show.bs.modal",".modal",function(){a(document.body).addClass("modal-open")}).on("hidden.bs.modal",".modal",function(){a(document.body).removeClass("modal-open")})}(jQuery),+function(a){var b=function(a,b){this.type=this.options=this.enabled=this.timeout=this.hoverState=this.$element=null,this.init("tooltip",a,b)};b.DEFAULTS={animation:!0,placement:"top",selector:!1,template:'<div class="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover focus",title:"",delay:0,html:!1,container:!1},b.prototype.init=function(b,c,d){this.enabled=!0,this.type=b,this.$element=a(c),this.options=this.getOptions(d);for(var e=this.options.trigger.split(" "),f=e.length;f--;){var g=e[f];if("click"==g)this.$element.on("click."+this.type,this.options.selector,a.proxy(this.toggle,this));else if("manual"!=g){var h="hover"==g?"mouseenter":"focusin",i="hover"==g?"mouseleave":"focusout";this.$element.on(h+"."+this.type,this.options.selector,a.proxy(this.enter,this)),this.$element.on(i+"."+this.type,this.options.selector,a.proxy(this.leave,this))}}this.options.selector?this._options=a.extend({},this.options,{trigger:"manual",selector:""}):this.fixTitle()},b.prototype.getDefaults=function(){return b.DEFAULTS},b.prototype.getOptions=function(b){return b=a.extend({},this.getDefaults(),this.$element.data(),b),b.delay&&"number"==typeof b.delay&&(b.delay={show:b.delay,hide:b.delay}),b},b.prototype.getDelegateOptions=function(){var b={},c=this.getDefaults();return this._options&&a.each(this._options,function(a,d){c[a]!=d&&(b[a]=d)}),b},b.prototype.enter=function(b){var c=b instanceof this.constructor?b:a(b.currentTarget)[this.type](this.getDelegateOptions()).data("bs."+this.type);return clearTimeout(c.timeout),c.hoverState="in",c.options.delay&&c.options.delay.show?void(c.timeout=setTimeout(function(){"in"==c.hoverState&&c.show()},c.options.delay.show)):c.show()},b.prototype.leave=function(b){var c=b instanceof this.constructor?b:a(b.currentTarget)[this.type](this.getDelegateOptions()).data("bs."+this.type);return clearTimeout(c.timeout),c.hoverState="out",c.options.delay&&c.options.delay.hide?void(c.timeout=setTimeout(function(){"out"==c.hoverState&&c.hide()},c.options.delay.hide)):c.hide()},b.prototype.show=function(){var b=a.Event("show.bs."+this.type);if(this.hasContent()&&this.enabled){if(this.$element.trigger(b),b.isDefaultPrevented())return;var c=this,d=this.tip();this.setContent(),this.options.animation&&d.addClass("fade");var e="function"==typeof this.options.placement?this.options.placement.call(this,d[0],this.$element[0]):this.options.placement,f=/\s?auto?\s?/i,g=f.test(e);g&&(e=e.replace(f,"")||"top"),d.detach().css({top:0,left:0,display:"block"}).addClass(e),this.options.container?d.appendTo(this.options.container):d.insertAfter(this.$element);var h=this.getPosition(),i=d[0].offsetWidth,j=d[0].offsetHeight;if(g){var k=this.$element.parent(),l=e,m=document.documentElement.scrollTop||document.body.scrollTop,n="body"==this.options.container?window.innerWidth:k.outerWidth(),o="body"==this.options.container?window.innerHeight:k.outerHeight(),p="body"==this.options.container?0:k.offset().left;e="bottom"==e&&h.top+h.height+j-m>o?"top":"top"==e&&h.top-m-j<0?"bottom":"right"==e&&h.right+i>n?"left":"left"==e&&h.left-i<p?"right":e,d.removeClass(l).addClass(e)}var q=this.getCalculatedOffset(e,h,i,j);this.applyPlacement(q,e),this.hoverState=null;var r=function(){c.$element.trigger("shown.bs."+c.type)};a.support.transition&&this.$tip.hasClass("fade")?d.one(a.support.transition.end,r).emulateTransitionEnd(150):r()}},b.prototype.applyPlacement=function(b,c){var d,e=this.tip(),f=e[0].offsetWidth,g=e[0].offsetHeight,h=parseInt(e.css("margin-top"),10),i=parseInt(e.css("margin-left"),10);isNaN(h)&&(h=0),isNaN(i)&&(i=0),b.top=b.top+h,b.left=b.left+i,a.offset.setOffset(e[0],a.extend({using:function(a){e.css({top:Math.round(a.top),left:Math.round(a.left)})}},b),0),e.addClass("in");var j=e[0].offsetWidth,k=e[0].offsetHeight;if("top"==c&&k!=g&&(d=!0,b.top=b.top+g-k),/bottom|top/.test(c)){var l=0;b.left<0&&(l=-2*b.left,b.left=0,e.offset(b),j=e[0].offsetWidth,k=e[0].offsetHeight),this.replaceArrow(l-f+j,j,"left")}else this.replaceArrow(k-g,k,"top");d&&e.offset(b)},b.prototype.replaceArrow=function(a,b,c){this.arrow().css(c,a?50*(1-a/b)+"%":"")},b.prototype.setContent=function(){var a=this.tip(),b=this.getTitle();a.find(".tooltip-inner")[this.options.html?"html":"text"](b),a.removeClass("fade in top bottom left right")},b.prototype.hide=function(){function b(){"in"!=c.hoverState&&d.detach(),c.$element.trigger("hidden.bs."+c.type)}var c=this,d=this.tip(),e=a.Event("hide.bs."+this.type);return this.$element.trigger(e),e.isDefaultPrevented()?void 0:(d.removeClass("in"),a.support.transition&&this.$tip.hasClass("fade")?d.one(a.support.transition.end,b).emulateTransitionEnd(150):b(),this.hoverState=null,this)},b.prototype.fixTitle=function(){var a=this.$element;(a.attr("title")||"string"!=typeof a.attr("data-original-title"))&&a.attr("data-original-title",a.attr("title")||"").attr("title","")},b.prototype.hasContent=function(){return this.getTitle()},b.prototype.getPosition=function(){var b=this.$element[0];return a.extend({},"function"==typeof b.getBoundingClientRect?b.getBoundingClientRect():{width:b.offsetWidth,height:b.offsetHeight},this.$element.offset())},b.prototype.getCalculatedOffset=function(a,b,c,d){return"bottom"==a?{top:b.top+b.height,left:b.left+b.width/2-c/2}:"top"==a?{top:b.top-d,left:b.left+b.width/2-c/2}:"left"==a?{top:b.top+b.height/2-d/2,left:b.left-c}:{top:b.top+b.height/2-d/2,left:b.left+b.width}},b.prototype.getTitle=function(){var a,b=this.$element,c=this.options;return a=b.attr("data-original-title")||("function"==typeof c.title?c.title.call(b[0]):c.title)},b.prototype.tip=function(){return this.$tip=this.$tip||a(this.options.template)},b.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".tooltip-arrow")},b.prototype.validate=function(){this.$element[0].parentNode||(this.hide(),this.$element=null,this.options=null)},b.prototype.enable=function(){this.enabled=!0},b.prototype.disable=function(){this.enabled=!1},b.prototype.toggleEnabled=function(){this.enabled=!this.enabled},b.prototype.toggle=function(b){var c=b?a(b.currentTarget)[this.type](this.getDelegateOptions()).data("bs."+this.type):this;c.tip().hasClass("in")?c.leave(c):c.enter(c)},b.prototype.destroy=function(){clearTimeout(this.timeout),this.hide().$element.off("."+this.type).removeData("bs."+this.type)};var c=a.fn.tooltip;a.fn.tooltip=function(c){return this.each(function(){var d=a(this),e=d.data("bs.tooltip"),f="object"==typeof c&&c;(e||"destroy"!=c)&&(e||d.data("bs.tooltip",e=new b(this,f)),"string"==typeof c&&e[c]())})},a.fn.tooltip.Constructor=b,a.fn.tooltip.noConflict=function(){return a.fn.tooltip=c,this}}(jQuery),+function(a){var b=function(a,b){this.init("popover",a,b)};if(!a.fn.tooltip)throw new Error("Popover requires tooltip.js");b.DEFAULTS=a.extend({},a.fn.tooltip.Constructor.DEFAULTS,{placement:"right",trigger:"click",content:"",template:'<div class="popover"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'}),b.prototype=a.extend({},a.fn.tooltip.Constructor.prototype),b.prototype.constructor=b,b.prototype.getDefaults=function(){return b.DEFAULTS},b.prototype.setContent=function(){var a=this.tip(),b=this.getTitle(),c=this.getContent();a.find(".popover-title")[this.options.html?"html":"text"](b),a.find(".popover-content")[this.options.html?"string"==typeof c?"html":"append":"text"](c),a.removeClass("fade top bottom left right in"),a.find(".popover-title").html()||a.find(".popover-title").hide()},b.prototype.hasContent=function(){return this.getTitle()||this.getContent()},b.prototype.getContent=function(){var a=this.$element,b=this.options;return a.attr("data-content")||("function"==typeof b.content?b.content.call(a[0]):b.content)},b.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".arrow")},b.prototype.tip=function(){return this.$tip||(this.$tip=a(this.options.template)),this.$tip};var c=a.fn.popover;a.fn.popover=function(c){return this.each(function(){var d=a(this),e=d.data("bs.popover"),f="object"==typeof c&&c;(e||"destroy"!=c)&&(e||d.data("bs.popover",e=new b(this,f)),"string"==typeof c&&e[c]())})},a.fn.popover.Constructor=b,a.fn.popover.noConflict=function(){return a.fn.popover=c,this}}(jQuery),+function(a){function b(c,d){var e,f=a.proxy(this.process,this);this.$element=a(a(c).is("body")?window:c),this.$body=a("body"),this.$scrollElement=this.$element.on("scroll.bs.scroll-spy.data-api",f),this.options=a.extend({},b.DEFAULTS,d),this.selector=(this.options.target||(e=a(c).attr("href"))&&e.replace(/.*(?=#[^\s]+$)/,"")||"")+" .nav li > a",this.offsets=a([]),this.targets=a([]),this.activeTarget=null,this.refresh(),this.process()}b.DEFAULTS={offset:10},b.prototype.refresh=function(){var b=this.$element[0]==window?"offset":"position";this.offsets=a([]),this.targets=a([]);{var c=this;this.$body.find(this.selector).map(function(){var d=a(this),e=d.data("target")||d.attr("href"),f=/^#./.test(e)&&a(e);return f&&f.length&&f.is(":visible")&&[[f[b]().top+(!a.isWindow(c.$scrollElement.get(0))&&c.$scrollElement.scrollTop()),e]]||null}).sort(function(a,b){return a[0]-b[0]}).each(function(){c.offsets.push(this[0]),c.targets.push(this[1])})}},b.prototype.process=function(){var a,b=this.$scrollElement.scrollTop()+this.options.offset,c=this.$scrollElement[0].scrollHeight||this.$body[0].scrollHeight,d=c-this.$scrollElement.height(),e=this.offsets,f=this.targets,g=this.activeTarget;if(b>=d)return g!=(a=f.last()[0])&&this.activate(a);if(g&&b<=e[0])return g!=(a=f[0])&&this.activate(a);for(a=e.length;a--;)g!=f[a]&&b>=e[a]&&(!e[a+1]||b<=e[a+1])&&this.activate(f[a])},b.prototype.activate=function(b){this.activeTarget=b,a(this.selector).parentsUntil(this.options.target,".active").removeClass("active");var c=this.selector+'[data-target="'+b+'"],'+this.selector+'[href="'+b+'"]',d=a(c).parents("li").addClass("active");d.parent(".dropdown-menu").length&&(d=d.closest("li.dropdown").addClass("active")),d.trigger("activate.bs.scrollspy")};var c=a.fn.scrollspy;a.fn.scrollspy=function(c){return this.each(function(){var d=a(this),e=d.data("bs.scrollspy"),f="object"==typeof c&&c;e||d.data("bs.scrollspy",e=new b(this,f)),"string"==typeof c&&e[c]()})},a.fn.scrollspy.Constructor=b,a.fn.scrollspy.noConflict=function(){return a.fn.scrollspy=c,this},a(window).on("load",function(){a('[data-spy="scroll"]').each(function(){var b=a(this);b.scrollspy(b.data())})})}(jQuery),+function(a){var b=function(b){this.element=a(b)};b.prototype.show=function(){var b=this.element,c=b.closest("ul:not(.dropdown-menu)"),d=b.data("target");if(d||(d=b.attr("href"),d=d&&d.replace(/.*(?=#[^\s]*$)/,"")),!b.parent("li").hasClass("active")){var e=c.find(".active:last a")[0],f=a.Event("show.bs.tab",{relatedTarget:e});if(b.trigger(f),!f.isDefaultPrevented()){var g=a(d);this.activate(b.parent("li"),c),this.activate(g,g.parent(),function(){b.trigger({type:"shown.bs.tab",relatedTarget:e})})}}},b.prototype.activate=function(b,c,d){function e(){f.removeClass("active").find("> .dropdown-menu > .active").removeClass("active"),b.addClass("active"),g?(b[0].offsetWidth,b.addClass("in")):b.removeClass("fade"),b.parent(".dropdown-menu")&&b.closest("li.dropdown").addClass("active"),d&&d()}var f=c.find("> .active"),g=d&&a.support.transition&&f.hasClass("fade");g?f.one(a.support.transition.end,e).emulateTransitionEnd(150):e(),f.removeClass("in")};var c=a.fn.tab;a.fn.tab=function(c){return this.each(function(){var d=a(this),e=d.data("bs.tab");e||d.data("bs.tab",e=new b(this)),"string"==typeof c&&e[c]()})},a.fn.tab.Constructor=b,a.fn.tab.noConflict=function(){return a.fn.tab=c,this},a(document).on("click.bs.tab.data-api",'[data-toggle="tab"], [data-toggle="pill"]',function(b){b.preventDefault(),a(this).tab("show")})}(jQuery),+function(a){var b=function(c,d){this.options=a.extend({},b.DEFAULTS,d),this.$window=a(window).on("scroll.bs.affix.data-api",a.proxy(this.checkPosition,this)).on("click.bs.affix.data-api",a.proxy(this.checkPositionWithEventLoop,this)),this.$element=a(c),this.affixed=this.unpin=this.pinnedOffset=null,this.checkPosition()};b.RESET="affix affix-top affix-bottom",b.DEFAULTS={offset:0},b.prototype.getPinnedOffset=function(){if(this.pinnedOffset)return this.pinnedOffset;this.$element.removeClass(b.RESET).addClass("affix");var a=this.$window.scrollTop(),c=this.$element.offset();return this.pinnedOffset=c.top-a},b.prototype.checkPositionWithEventLoop=function(){setTimeout(a.proxy(this.checkPosition,this),1)},b.prototype.checkPosition=function(){if(this.$element.is(":visible")){var c=a(document).height(),d=this.$window.scrollTop(),e=this.$element.offset(),f=this.options.offset,g=f.top,h=f.bottom;"top"==this.affixed&&(e.top+=d),"object"!=typeof f&&(h=g=f),"function"==typeof g&&(g=f.top(this.$element)),"function"==typeof h&&(h=f.bottom(this.$element));var i=null!=this.unpin&&d+this.unpin<=e.top?!1:null!=h&&e.top+this.$element.height()>=c-h?"bottom":null!=g&&g>=d?"top":!1;if(this.affixed!==i){this.unpin&&this.$element.css("top","");var j="affix"+(i?"-"+i:""),k=a.Event(j+".bs.affix");this.$element.trigger(k),k.isDefaultPrevented()||(this.affixed=i,this.unpin="bottom"==i?this.getPinnedOffset():null,this.$element.removeClass(b.RESET).addClass(j).trigger(a.Event(j.replace("affix","affixed"))),"bottom"==i&&this.$element.offset({top:c-h-this.$element.height()}))}}};var c=a.fn.affix;a.fn.affix=function(c){return this.each(function(){var d=a(this),e=d.data("bs.affix"),f="object"==typeof c&&c;e||d.data("bs.affix",e=new b(this,f)),"string"==typeof c&&e[c]()})},a.fn.affix.Constructor=b,a.fn.affix.noConflict=function(){return a.fn.affix=c,this},a(window).on("load",function(){a('[data-spy="affix"]').each(function(){var b=a(this),c=b.data();c.offset=c.offset||{},c.offsetBottom&&(c.offset.bottom=c.offsetBottom),c.offsetTop&&(c.offset.top=c.offsetTop),b.affix(c)})})}(jQuery);});

define('text!modules/MidiCSL/src/PlayerTemplate_MidiCSL.html',[],function () { return '<div id="playerview">\r\n\t{{#progressBar}}\r\n\t<div class="progress progress_bar_player">\r\n\t\t<div class="progress bar warning" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%">\r\n\t\t\t<span>00:00 - 00:00</span>\r\n\t\t</div>\r\n\t</div>\r\n\t{{/progressBar}}\r\n\t<!--<div id="switch_player" class="current_button">Player</div>-->\r\n\t<div id="player_buttons_container">\r\n\t\t<div id="stop_button_container" class="player_button">\r\n\t\t\t<div id="stop_button">\r\n\t\t\t\t<img src="{{imgPath}}/stop.png" alt="stop" title="Stop" />\r\n\t\t\t</div>\r\n\t\t\t<div class="player_text">\r\n\t\t\t\tStop\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div id="play_button_container" class="player_button">\r\n\t\t\t<div id="play_button">\r\n\t\t\t\t<img src="{{imgPath}}/play_grey.png" alt="play" title="Play" />\r\n\t\t\t</div>\r\n\t\t\t<div class="player_text">\r\n\t\t\t\tLoading\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div id="pause_button_container" class="player_button">\r\n\t\t\t<div id="pause_button">\r\n\t\t\t\t<img src="{{imgPath}}/pause.png" alt="pause" title="Pause" />\r\n\t\t\t</div>\r\n\t\t\t<div class="player_text">\r\n\t\t\t\tPause\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div id="volume_container" class="player_button">\r\n\t\t\t<span id="all-sound">\r\n\t\t\t\t<img src="{{imgPath}}/sound_on.png" class="sound_on" alt="sound_on" title="Mute" /><img src="{{imgPath}}/sound_2.png" class="sound_2" alt="sound_2" title="Mute" /><img src="{{imgPath}}/sound_1.png" class="sound_1" alt="sound_1" title="Mute" /><img src="{{imgPath}}/sound_off.png" class="sound_off" alt="sound_off" title="Unmute" />\r\n\t\t\t</span>\r\n\t\t\t<div class="player_text">\r\n\t\t\t\tVolume\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div id="volume_slider_container">\r\n\t\t\t<img id="volume_controller_barre" src="{{imgPath}}/barre.png" width="33" height="19" alt="" />\r\n\t\t\t<img id="volume_controller" src="{{imgPath}}/control_sansbarre.png" width="28" height="68" alt="" />\r\n\t\t</div>\r\n\t\t\r\n\t\t{{#displayTempo}}\r\n\t\t<div id="tempo_container" style="margin-left:20px">\r\n\t\t\t<input type="number" value="120" min="20" max="300" id="tempo" name="tempo" />\r\n\t\t\t<div class="player_text">\r\n\t\t\t\tTempo\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t{{/displayTempo}}\r\n\r\n\t\t{{#displayLoop}}\r\n\t\t<div id="loop_button_container" class="player_button">\r\n\t\t\t<div id="loop_button">\r\n\t\t\t\t<img src="{{imgPath}}/loop_grey.png" alt="loop" title="Loop is off" />\r\n\t\t\t</div>\r\n\t\t\t<div class="player_text">\r\n\t\t\t\tLoop\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t{{/displayLoop}}\r\n\r\n\t\t{{#displayMetronome}}\r\n\t\t<div id="metronome_container" class="player_button">\r\n\t\t\t<span id="all-metronome">\r\n\t\t\t\t<img src="{{imgPath}}/metronome_on.png" class="metronome_on" alt="metronome_on" title="Active Metronome" /><img src="{{imgPath}}/metronome_off.png" class="metronome_off" alt="metronome_off" title="Mute Metronome" />\r\n\t\t\t</span>\r\n\t\t\t<div class="player_text">\r\n\t\t\t\tMetronome\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t{{/displayMetronome}}\r\n\r\n\t</div>\r\n\t{{#changeInstrument}}\r\n\t<div id="player_instrument_container">\r\n\t\t<div id="player_chords">\r\n\t\t\t<div id="chords_instrument_container">\r\n\t\t\t\t<select>\r\n\t\t\t\t\t<option>--None--</option>\r\n\t\t\t\t\t<optgroup label="Midi instrument">\r\n\t\t\t\t\t\t<option value="0" selected>acoustic_grand_piano</option>\r\n\t<!-- \t\t\t\t\t\t<option value="1">electric_guitar_clean</option>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t<option value="1">acoustic_guitar_nylon</option>\r\n\t\t\t\t\t\t<option value="1">electric_guitar_jazz</option>\r\n\t\t\t\t\t\t<option value="2">acoustic_guitar_steel</option>\r\n\t\t\t\t\t\t<option value="3">electric_guitar_jazz</option>\r\n\t\t\t\t\t\t<option value="4">distortion_guitar</option>\r\n\t\t\t\t\t\t<option value="5">electric_bass_finger</option>\r\n\t\t\t\t\t\t<option value="6">electric_bass_pick</option>\r\n\t\t\t\t\t\t<option value="7">trumpet</option>\r\n\t\t\t\t\t\t<option value="8">brass_section</option>\r\n\t\t\t\t\t\t<option value="9">soprano_sax</option> -->\r\n\t\t\t\t\t\t<!--<option value="1">alto_sax</option>-->\r\n\t<!-- \t\t\t\t\t\t\t\t<option value="11">tenor_sax</option>\r\n\t\t\t\t\t\t<option value="12">baritone_sax</option>\r\n\t\t\t\t\t\t<option value="13">flute</option>\r\n\t\t\t\t\t\t<option value="14">synth_drum</option> -->\r\n\t\t\t\t\t</optgroup>\r\n\t\t\t\t</select>\r\n\t\t\t\t<div class="player_text">\r\n\t\t\t\t\tChords\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\r\n\r\n\t\t<div id="player_melody">\r\n\t\t\t<div id="melody_instrument_container">\r\n\t\t\t\t<select>\r\n\t\t\t\t\t<option>--None--</option>\r\n\t\t\t\t\t<optgroup label="Midi instrument">\r\n\t\t\t\t\t\t<option value="0" selected>acoustic_grand_piano</option>\r\n\t<!--\t\t\t\t\t<option value="1">electric_guitar_clean</option>\r\n\t \t\t\t\t\t\t\t\t<option value="1">electric_guitar_jazz</option>\r\n\t\t\t\t\t\t<option value="1">acoustic_guitar_nylon</option>\r\n\t\t\t\t\t\t<option value="2">acoustic_guitar_steel</option>\r\n\t\t\t\t\t\t<option value="4">distortion_guitar</option>\r\n\t\t\t\t\t\t<option value="5">electric_bass_finger</option>\r\n\t\t\t\t\t\t<option value="6">electric_bass_pick</option>\r\n\t\t\t\t\t\t<option value="7">trumpet</option>\r\n\t\t\t\t\t\t<option value="8">brass_section</option>\r\n\t\t\t\t\t\t<option value="9">soprano_sax</option> -->\r\n\t\t\t\t\t\t<!--<option value="1">alto_sax</option>-->\r\n\t<!-- \t\t\t\t\t\t\t\t<option value="11">tenor_sax</option>\r\n\t\t\t\t\t\t<option value="12">baritone_sax</option>\r\n\t\t\t\t\t\t<option value="13">flute</option> -->\r\n\t\t\t\t\t\t<!-- <option value="2">taiko_drum</option> -->\r\n\t\t\t\t\t</optgroup>\r\n\t\t\t\t</select>\r\n\t\t\t\t<div class="player_text">\r\n\t\t\t\t\tMelody\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t\r\n\t</div>\r\n\t{{/changeInstrument}}\r\n\r\n</div>';});

define('modules/MidiCSL/src/PlayerView_MidiCSL',[
	'jquery',
	'mustache',
	'utils/UserLog',
	'pubsub',
	'bootstrap',
	'text!modules/MidiCSL/src/PlayerTemplate_MidiCSL.html',
], function($, Mustache, UserLog, pubsub, bootstrap, PlayerTemplate_MidiCSL) {

	function PlayerView(parentHTML, imgPath, option) {
		this.displayMetronome = (typeof(option) !== "undefined" && typeof(option.displayMetronome) !== "undefined") ? option.displayMetronome : false;
		this.displayLoop = (typeof(option) !== "undefined" && typeof(option.displayLoop) !== "undefined") ? option.displayLoop : false;
		this.displayTempo = (typeof(option) !== "undefined" && typeof(option.displayTempo) !== "undefined") ? option.displayTempo : false;
		this.changeInstrument = (typeof(option) !== "undefined" && typeof(option.changeInstrument) !== "undefined") ? option.changeInstrument : false;
		this.progressBar = (typeof(option) !== "undefined" && typeof(option.progressBar) !== "undefined") ? option.progressBar : false;
		this.el = undefined;
		this.imgPath = imgPath;
		this.initSubscribe();
		var self = this;
		this.render(parentHTML, true);
	}

	PlayerView.prototype.render = function(parentHTML, force, callback) {
		force = force || false;
		// case el has never been rendered
		var self = this;
		if (typeof this.el === "undefined" || (typeof this.el !== "undefined" && force === true)) {
			this.initView(parentHTML, function() {
				self.initTemplate();
				self.initController();
				$.publish('PlayerView-render');
				if (typeof callback === "function") {
					callback();
				}
				return;
			});
		} else {
			if (typeof callback === "function") {
				callback();
			}
			return;
		}
	};

	PlayerView.prototype.initView = function(parentHTML, callback) {
		var self = this;
		//$.get('/modules/MidiCSL/src/PlayerTemplate_MidiCSL.html', function(template) {
			var rendered = Mustache.render(PlayerTemplate_MidiCSL, {
				imgPath: self.imgPath,
				displayLoop: self.displayLoop,
				displayMetronome: self.displayMetronome,
				displayTempo: self.displayTempo,
				changeInstrument: self.changeInstrument,
				progressBar: self.progressBar,
			});
			if (typeof parentHTML !== "undefined") {
				parentHTML.innerHTML = rendered;
			}
			self.el = parentHTML;
			if (typeof callback === "function") {
				callback();
			}
		//});
	};

	PlayerView.prototype.initTemplate = function() {
		// init tempo
		var tempo = this.getTempo();

		/*if (typeof globalVariables !== "undefined" && globalVariables.tempo !== "undefined" && globalVariables.tempo !== null) {
			var minTempo = parseInt(globalVariables.tempo['minTempo'], 10);
			var maxTempo = parseInt(globalVariables.tempo['maxTempo'], 10);
			var range = maxTempo - minTempo;
			tempo = Math.round((Math.random() * range) + minTempo);
			$('#tempo_container #tempo').val(tempo);
		}*/
	};

	/**
	 * Publish event after receiving dom events
	 */
	PlayerView.prototype.initController = function() {
		var self = this;
		$('#play_button_container').click(function() {
			var tempo = self.getTempo();
			$.publish('ToPlayer-play', tempo);
		});
		$('#stop_button_container').click(function() {
			$.publish('ToPlayer-stop');
		});
		$('#pause_button_container').click(function() {
			$.publish('ToPlayer-pause');
		});

		$('#loop_button_container').click(function() {
			$.publish('ToPlayer-toggleLoop');
		});

		// .on('input') Event is fired every time the input changes (work with paste, delete, type things)
		$('#tempo_container #tempo').on('change', function() {
			var tempo = $(this).val();
			$('#pause_button_container').hide();
			$('#play_button_container').show();
			$.publish('ToPlayer-onTempo', tempo);
		});

		$('#metronome_container').click(function() {
			if ($('#metronome_container .metronome_on').is(":visible")) {
				//mute
				$.publish('ToPlayer-onToggleMetronome', false);

			} else {
				//unmute
				$.publish('ToPlayer-onToggleMetronome', true);
			}
		});

		// volume - toggle mute icons
		$('#volume_container').click(function() {
			if ($('#volume_container .sound_off').is(":visible")) {
				$.publish('ToPlayer-onToggleMute');
			} else {
				$.publish('ToPlayer-onToggleMute', 0);
			}
		});

		// volume slider
		var dragStart = false;
		$('#volume_controller_barre').bind('dragstart', function(e) {
			e.preventDefault();
			return false;
		});
		$('#volume_controller').bind('dragstart', function(e) {
			e.preventDefault();
			return false;
		});
		$('#volume_controller_barre').mousedown(function() {
			dragStart = true;
		});
		$('#volume_controller_barre').mouseup(function() {
			dragStart = false;
		});
		$('body').mouseup(function() {
			dragStart = false;
		});
		$('#volume_controller').mousemove(function(evt) {
			if (dragStart) {
				self._dragVolumeController(evt);
			}
		});
		$('#volume_controller').mousedown(function(evt) {
			self._dragVolumeController(evt);
			dragStart = true;
		});
		$('#volume_controller').mouseup(function() {
			dragStart = false;
		});
		$('#volume_controller_barre').mousemove(function(evt) {
			if (dragStart) {
				self._dragVolumeController(evt);
			}
		});

		// instument selection
		$('#chords_instrument_container select').change(function() {
			$.publish('ToPlayer-onChordInstrumentChange', $(this).val());
		});

		$('#melody_instrument_container select').change(function() {
			$.publish('ToPlayer-onMelodyInstrumentChange', $(this).val());
		});

		$('.progress_bar_player').click(function(e) {
			var width = $(this).width();
			var relX = e.pageX - $(this).parent().offset().left;
			var tempo = self.getTempo();
			$.publish('ToPlayer-playFromPercent', {
				'tempo': tempo,
				'percent': relX / width
			});

			e.preventDefault();
		});

		$(document).keydown(function(evt) {
			if (evt.keyCode == 32) { //barPressed
				var d = evt.srcElement || evt.target;
				if (!(d.tagName.toUpperCase() === 'TEXTAREA' || (d.tagName.toUpperCase() === 'INPUT' && (d.type.toUpperCase() === 'TEXT' || d.type.toUpperCase() === 'PASSWORD' || d.type.toUpperCase() === 'FILE')))) {
					var tempo = self.getTempo();
					$.publish('ToPlayer-play-pause', tempo);
					evt.preventDefault();
				}
			}
		});
	};


	/**
	 * Subscribe to model events
	 */
	PlayerView.prototype.initSubscribe = function() {
		var self = this;
		$.subscribe('PlayerModel_MidiCSL-onplay', function(el) {
			self.play();
		});
		$.subscribe('PlayerModel_MidiCSL-onpause', function(el) {
			self.pause();
		});
		$.subscribe('PlayerModel_MidiCSL-onstop', function(el) {
			self.pause();
		});
		$.subscribe('PlayerModel_MidiCSL-onfinish', function(el) {
			self.pause();
		});
		$.subscribe('PlayerModel_MidiCSL-onloopstart', function(el) {});

		$.subscribe('PlayerModel_MidiCSL-toggleLoop', function(el, isLoop) {
			if (isLoop) {
				self.activeLoop();
			} else {
				self.unactiveLoop();
			}
		});

		$.subscribe('PlayerModel_MidiCSL-onvolumechange', function(el, volume) {
			self.setVolume(volume);
		});

		$.subscribe('PlayerModel_MidiCSL-onload', function(el) {
			self.playerIsReady();
		});

		$.subscribe('PlayerModel_MidiCSL-onChordsInstrument', function(el, instrument) {});
		$.subscribe('PlayerModel_MidiCSL-onMelodyInstrument', function(el, instrument) {});

		$.subscribe('PlayerModel_MidiCSL-toggleMetronome', function(el, isMetronome) {
			if (isMetronome) {
				self.muteMetronome();
			} else {
				self.unmuteMetronome();
			}
		});
		$.subscribe('PlayerModel_MidiCSL-onPosition', function(el, obj) {
			self.updateProgressbar(obj.positionInPercent * 100, obj.songDuration);
		});
	};


	// play / pause
	PlayerView.prototype.play = function() {
		$('#pause_button_container').show();
		$('#pause_button_container').css('display', 'inline-block');
		$('#play_button_container').hide();
	};

	PlayerView.prototype.pause = function() {
		$('#pause_button_container').hide();
		$('#play_button_container').show();
	};


	// ready
	PlayerView.prototype.playerIsReady = function() {
		$('#play_button img').attr('src', this.imgPath + '/play.png');
		$('#play_button_container').css('color', 'black');
		$('#play_button_container .player_text').html('Play');
	};

	PlayerView.prototype.playerIsNotReady = function() {
		$('#play_button img').attr('src', this.imgPath + '/play_grey.png');
		$('#play_button_container').css('color', 'grey');
		$('#play_button_container .player_text').html('Loading');
	};


	// loop
	PlayerView.prototype.activeLoop = function() {
		$('#loop_button img').attr('src', this.imgPath + '/loop.png').attr('title', 'Loop is on');
	};

	PlayerView.prototype.unactiveLoop = function() {
		$('#loop_button img').attr('src', this.imgPath + '/loop_grey.png').attr('title', 'Loop is off');
	};


	// volume interface
	PlayerView.prototype.setVolume = function(volume) {
		if (isNaN(volume) || volume < 0) {
			return;
		}
		this.adaptSoundButton(volume);
		this.setControllerPosition(1 - volume);
	};

	// metronome
	PlayerView.prototype.muteMetronome = function() {
		$('#metronome_container .metronome_off').hide();
		$('#metronome_container .metronome_on').show();
	};

	PlayerView.prototype.unmuteMetronome = function() {
		$('#metronome_container .metronome_on').hide();
		$('#metronome_container .metronome_off').show();
	};


	PlayerView.prototype.adaptSoundButton = function(volume) {
		if(volume < 0.33 ){
			pic = 'sound_off';
		}
		if( 0 < volume && volume <= 0.33 ){
			pic = 'sound_1';
		}
		else if( 0.33 < volume && volume <= 0.66 ){
			pic = 'sound_2';
		}
		else if( 0.66 < volume){
			pic = 'sound_on';
		}
		if (!$('#volume_container .' + pic).is(":visible")) {
			$('#volume_container .sound_off').hide();
			$('#volume_container .sound_on').hide();
			$('#volume_container .sound_1').hide();
			$('#volume_container .sound_2').hide();
			$('#volume_container .' + pic).show();
		}
	};

	PlayerView.prototype.getTempo = function() {
		var tempo = $('#tempo_container #tempo').val();
		if (typeof tempo === "undefined") {
			tempo = 120;
		}
		return tempo;
	};


	PlayerView.prototype._convertSecondToPrintableTime = function(seconds) {
		if (isNaN(seconds)) {
			throw 'PlayerView - _convertSecondToPrintableTime, seconds is not a number ' + seconds;
		}
		var date = new Date(null);
		date.setSeconds(seconds); // specify value for SECONDS here
		return date.toISOString().substr(14, 5);
	};

	PlayerView.prototype.updateProgressbar = function(value, duration) {
		var $div = $('.progress_bar_player').find('div');
		$div.attr('aria-valuenow', value);
		$div.css('width', value + '%');
		var $span = $div.find('span');

		var currentTime = value / 100 * duration / 1000;
		var durationTime = duration / 1000;

		var ct = this._convertSecondToPrintableTime(currentTime);
		var dt = this._convertSecondToPrintableTime(durationTime);
		$span.text(ct + ' / ' + dt);
	};


	PlayerView.prototype._dragVolumeController = function(evt) {
		var heightParent = $('#volume_controller').height();
		var topPositionParent = $('#volume_controller').offset().top;
		var topPosition = evt.pageY;
		var decal = 5; // shadow of barre at the top/bottom

		var realHeight = heightParent - (2 * decal);
		var relativePosition = topPosition - topPositionParent;
		if (relativePosition < decal) {
			relativePosition = decal;
		}
		if (relativePosition > heightParent - decal) {
			relativePosition = heightParent - decal;
		}
		var volume = 1 - ((relativePosition - decal) / realHeight);
		//this.setControllerPosition((relativePosition - decal) / realHeight);
		$.publish('ToPlayer-onVolume', volume);
	};

	/**
	 * Set position of volume controller
	 * @param {float} position of controller as a float. 0(volume = 1) <= position <= 1(volume = 0)
	 */
	PlayerView.prototype.setControllerPosition = function(position) {
		var decal = 5; // shadow of barre at the top/bottom
		var heightParent = $('#volume_controller').height();
		if (heightParent === null) {
			heightParent = 68;
		}
		var realHeight = heightParent - (2 * decal);
		var relativePosition = position * realHeight;
		if (relativePosition < decal) {
			relativePosition = decal;
		}
		if (relativePosition > heightParent - decal) {
			relativePosition = heightParent;
		}
		var middleController = $('#volume_controller_barre').height() / 2; // to be at the center of controller
		$('#volume_controller_barre').css({
			top: (relativePosition - middleController) + 'px'
		});
	};

	PlayerView.prototype.hide = function() {
		this.el.style.display = "none";
	};

	PlayerView.prototype.show = function() {
		this.el.style.display = "inline-block";
	};


	return PlayerView;
});
define('modules/MidiCSL/src/main',[
		"modules/MidiCSL/src/converters/ChordConverterMidi_MidiCSL",
		"modules/MidiCSL/src/converters/ChordManagerConverterMidi_MidiCSL",
		"modules/MidiCSL/src/converters/SongConverterMidi_MidiCSL",
		"modules/MidiCSL/src/model/NoteModel_MidiCSL",
		"modules/MidiCSL/src/model/PlayerModel_MidiCSL",
		"modules/MidiCSL/src/model/SongModel_MidiCSL",
		"modules/MidiCSL/src/PlayerController_MidiCSL",
		"modules/MidiCSL/src/PlayerView_MidiCSL",
	],
	function(
		ChordConverterMidi_MidiCSL,
		ChordManagerConverterMidi_MidiCSL,
		SongConverterMidi_MidiCSL,
		NoteModel_MidiCSL,
		PlayerModel_MidiCSL,
		SongModel_MidiCSL,
		PlayerController,
		PlayerView
	) {
		return {
			"ChordConverterMidi_MidiCSL": ChordConverterMidi_MidiCSL,
			"ChordManagerConverterMidi_MidiCSL": ChordManagerConverterMidi_MidiCSL,
			"SongConverterMidi_MidiCSL": SongConverterMidi_MidiCSL,
			"NoteModel_MidiCSL": NoteModel_MidiCSL,
			"PlayerModel_MidiCSL": PlayerModel_MidiCSL,
			"SongModel_MidiCSL": SongModel_MidiCSL,
			"PlayerController": PlayerController,
			"PlayerView": PlayerView
		};
	}
);
define('modules/NoteEdition/src/NoteEditionController',[
	'mustache',
	'modules/core/src/SongModel',
	'modules/core/src/NoteManager',
	'modules/Cursor/src/CursorModel',
	'utils/NoteUtils',
	'utils/UserLog',
	'jquery',
	'pubsub',
], function(Mustache, SongModel, NoteManager, CursorModel, NoteUtils, UserLog, $, pubsub) {

	function NoteEditionController(songModel, cursor, noteSpaceMng) {
		this.songModel = songModel || new SongModel();
		this.cursor = cursor || new CursorModel();
		this.noteSpaceMng = noteSpaceMng;
		this.initSubscribe();
	}

	/**
	 * Subscribe to view events
	 */
	NoteEditionController.prototype.initSubscribe = function() {
		var self = this;
/*
		$.subscribe('NoteEditionView-setPitch', function(el, decal) {
			self.setPitch(decal);
		});
		$.subscribe('NoteEditionView-addAccidental', function(el, accidental) {
			// Accidental contain as first argument the type of accidental (b,#,n) and as second argument true or false for double accidental
			// Or it may contain a string
			var acc = '';
			if (accidental.hasOwnProperty('acc')) {
				acc = accidental.acc;
			} else {
				acc = accidental;
			}
			var doubleAccidental = false;
			if (accidental.hasOwnProperty('double')) {
				doubleAccidental = accidental.double;
			}
			self.addAccidental(acc, doubleAccidental);
		});
		$.subscribe('NoteEditionView-setCurrDuration', function(el, duration) {
			self.setCurrDuration(duration);
		});
		$.subscribe('NoteEditionView-setDot', function(el) {
			self.setDot();
		});
		$.subscribe('NoteEditionView-setTie', function(el) {
			self.setTie();
		});
		$.subscribe('NoteEditionView-setTuplet', function(el) {
			self.setTuplet();
		});
		$.subscribe('NoteEditionView-setSilence', function(el) {
			self.setSilence();
		});
		$.subscribe('NoteEditionView-deleteNote', function(el) {
			self.setSilence();
		});
		$.subscribe('NoteEditionView-addNote', function(el) {
			self.addNote();
		});
		$.subscribe('NoteEditionView-copyNotes', function(el) {
			self.copyNotes();
		});
		$.subscribe('NoteEditionView-pasteNotes', function(el) {
			self.pasteNotes();
		});
*/

		//TODO: these two function are not verified / tested after refactoring

		$.subscribe('NoteEditionView-activeView', function(el) {
			self.changeEditMode(true);
			$.publish('ToViewer-draw', self.songModel);
		});
		$.subscribe('NoteEditionView-unactiveView', function(el) {
			self.changeEditMode(false);
		});

		// cursor view subscribe
		$.subscribe('Cursor-moveCursorByElement-notes', function(el, inc) {
			if (self.cursor.getEditable()) {
				self.moveCursorByBar(inc);
				$.publish('CanvasLayer-refresh');
			}
		});
		// All functions related with note edition go here
		$.subscribe('NoteEditionView', function(el, fn, param) {
			if (self.noteSpaceMng.isEnabled()) {
				self[fn].call(self, param);
				$.publish('ToViewer-draw', self.songModel);
			}
		});

	};

	/**
	 * Set selected notes to a key
	 * @param {int|letter} If decal is a int, than it will be a decal between current note and wanted note in semi tons, if decal is a letter then current note is the letter
	 */
	NoteEditionController.prototype.setPitch = function(decalOrNote) {
		var selNotes = this.getSelectedNotes();
		var note;
		for (var i = 0, c = selNotes.length; i < c; i++) {
			note = selNotes[i];
			if (note.isRest) {
				note.setRest(false);
			}
			var newKey;
			if (NoteUtils.getValidPitch(decalOrNote) !== -1) {
				//find closest key
				newKey = NoteUtils.getClosestKey(note.getPitch(), decalOrNote);
				note.setNoteFromString(newKey);
			} else {
				newKey = NoteUtils.getKey(note.getPitch(), decalOrNote); // decalOrNote is 1 or -1
				note.setNoteFromString(newKey);
			}
		}
	};



	NoteEditionController.prototype.addAccidental = function(accidental) {
		var selNotes = this.getSelectedNotes();
		var note;
		if (typeof doubleAccidental !== "undefined" && doubleAccidental === true && accidental !== "n") {
			accidental += accidental;
		}
		for (var i = 0; i < selNotes.length; i++) {
			note = selNotes[i];
			if (note.isRest) continue;
			if (note.getAccidental() == accidental) {
				note.removeAccidental();
			} else {
				note.setAccidental(accidental);
			}
		}
	};

	/**
	 * setCurrDuration("4")
	 * @param {String} duration	represents the duration
	 */
	NoteEditionController.prototype.setCurrDuration = function(duration) {
		var arrDurs = {
			"1": "64",
			"2": "32",
			"3": "16",
			"4": "8",
			"5": "q",
			"6": "h",
			"7": "w",
			"8": "w" //should be double whole but not supported yet
		};

		var noteManager = this.songModel.getComponent('notes');
		var tmpNm = this.cloneSelectedNotes();

		//check if durations fit in the bar duration
		if (!this.fitsInBar(tmpNm)) {
			UserLog.logAutoFade('error', "Duration doesn't fit the bar");
			return;
		}

		var selNotes = tmpNm.getNotes();
		var newDur = arrDurs[duration];
		if (typeof newDur === "undefined") {
			throw 'NoteEditionController - setCurrDuration not accepted duration ' + duration;
		}
		var durBefore = tmpNm.getTotalDuration();
		for (var i = 0; i < selNotes.length; i++) {
			selNotes[i].setDuration(newDur);
		}
		var durAfter = tmpNm.getTotalDuration();
		tmpNm = this.checkDuration(tmpNm, durBefore, durAfter);
		noteManager.notesSplice(this.cursor.getPos(), tmpNm.getNotes());
		noteManager.reviseNotes();

		$.publish('ToViewer-draw', this.songModel);

	};


	NoteEditionController.prototype.setDot = function() {
		var noteManager = this.songModel.getComponent('notes');
		var tmpNm = this.cloneSelectedNotes();

		//check if durations fit in the bar duration
		if (!this.fitsInBar(tmpNm)) {
			UserLog.logAutoFade('error', "Duration doesn't fit the bar");
			return;
		}

		var selNotes = tmpNm.getNotes();
		var durBefore = tmpNm.getTotalDuration();
		var numberOfDots = 0;
		for (var i = 0, c = selNotes.length; i < c; i++) {
			numberOfDots = selNotes[i].getDot();
			if (numberOfDots >= 2) {
				numberOfDots = 0;
			} else {
				numberOfDots++;
			}
			selNotes[i].setDot(numberOfDots);
		}
		tmpNm = this.checkDuration(tmpNm, durBefore, tmpNm.getTotalDuration());
		noteManager.notesSplice(this.cursor.getPos(), tmpNm.getNotes());
		noteManager.reviseNotes();

		$.publish('ToViewer-draw', this.songModel);
	};

	NoteEditionController.prototype.setTie = function() {
		var selNotes = this.getSelectedNotes();
		var note;
		if (selNotes.length == 2) {
			for (var i = 0; i < selNotes.length; i++) {
				note = selNotes[i];
				if (i === 0) {
					if (note.isTie("start"))
						note.removeTie("start");
					else
						note.setTie("start");
				} else {
					if (note.isTie("stop"))
						note.removeTie("stop");
					else
						note.setTie("stop");
				}
			}
		}
	};


	NoteEditionController.prototype.setTuplet = function() {
		function getDuration(notes) {
			var dur = 0;
			for (var i = 0; i < notes.length; i++) {
				dur += notes[i].getDuration();
			}
			return dur;
		}

		function validDur(dur) {
			var initDur = 4;
			for (var i = 0; i < 6; i++) {
				if (initDur == dur) return true;
				initDur /= 2;
			}
			return false;
		}

		function createTupletFromNotes(arrNotes, timeModif) {
			var firstNote = arrNotes[0],
				tmpNote,
				newDuration = (arrNotes.length == 1) ? firstNote.getDuration() / 2 : firstNote.getDuration();
			tupletsNote = [];

			for (var i = 0; i < 3; i++) {
				tmpNote = firstNote.clone();
				tmpNote.setDuration(newDuration);

				if (i === 0) tmpNote.setTuplet("start", timeModif);
				else if (i === 1) tmpNote.setTuplet("middle", timeModif);
				else tmpNote.setTuplet("stop", timeModif);

				tupletsNote.push(tmpNote);
			}
			return tupletsNote;
		}
		var selNotes = this.getSelectedNotes();
		var note;
		var timeModif = "3/2";
		if (selNotes.length > 3) {
			return {
				'error': 'You must select 3 notes or less'
			};
		}
		//check all notes have same dur
		for (var i = 0; i < selNotes.length - 1; i++) {
			if (selNotes[i].getDuration() != selNotes[i + 1].getDuration()) {
				return {
					'error': 'Notes have not same duration'
				};
			}
		}
		if (selNotes.length < 3) {
			if (!validDur(getDuration(selNotes))) {
				return {
					'error': 'You must choose to make a tuplet over simple durations'
				};
			}
		}
		if (selNotes.length == 1 || selNotes.length == 2) {
			var tupletsNote = createTupletFromNotes(selNotes, timeModif);
			this.pasteNotes(tupletsNote);
		} else if (selNotes.length == 3) {
			for (var i = 0; i < selNotes.length; i++) {
				note = selNotes[i];
				if (note.isTuplet()) {
					note.removeTuplet();
				} else {
					if (i === 0) note.setTuplet("start", timeModif);
					else if (i == selNotes.length - 1) note.setTuplet("stop", timeModif);
					else note.setTuplet("middle", timeModif);
				}
			}
		}
	};



	NoteEditionController.prototype.setSilence = function() {
		var nm = this.songModel.getComponent('notes');
		var selNotes = this.getSelectedNotes();
		var note;
		for (var i = 0; i < selNotes.length; i++) {
			note = selNotes[i];
			if (note.isTie()) {
				note.removeTie();
			}
			if (note.isTuplet()) {
				note.removeTuplet();
			}
			if (!note.isRest) note.setRest(true);
		}
		nm.reviseNotes();
		$.publish('ToViewer-draw', this.songModel);
	};


	NoteEditionController.prototype.deleteNote = function() {
		var noteManager = this.songModel.getComponent('notes');
		var position = this.cursor.getPos();
		var durBefore = 0;
		for (var cInit = position[0], cEnd = position[1]; cInit <= cEnd; cInit++) {
			durBefore += noteManager.getNote(cInit).getDuration();
			noteManager.deleteNote(cInit);
		}
		this.checkDuration(durBefore, 0);
		var numNotes = noteManager.getTotal();
		this.cursor.revisePos(numNotes);
		$.publish('ToViewer-draw', this.songModel);
	};

	NoteEditionController.prototype.addNote = function() {
		var noteManager = this.songModel.getComponent('notes');
		var tmpNm = this.cloneSelectedNotes();
		var durationBefore = tmpNm.getTotalDuration();

		// copy previous note and add it
		var cloned = tmpNm.getNotes()[0].clone(false);
		tmpNm.insertNote(0, cloned);

		// ensure the size
		tmpNm = this.checkDuration(tmpNm, durationBefore, tmpNm.getTotalDuration());

		// Once the size is ensured, we can set it to real notemanager
		noteManager.notesSplice(this.cursor.getPos(), tmpNm.getNotes());
		noteManager.reviseNotes();

		this.cursor.setPos(this.cursor.getStart() + 1);
		$.publish('ToViewer-draw', this.songModel);
	};


	NoteEditionController.prototype.copyNotes = function() {
		var noteManager = this.songModel.getComponent('notes');
		this.buffer = noteManager.cloneElems(this.cursor.getStart(), this.cursor.getEnd() + 1);
	};


	NoteEditionController.prototype.pasteNotes = function(notesToPaste) {
		notesToPaste = notesToPaste || this.buffer;
		var tmpNm = new NoteManager();
		tmpNm.setNotes(notesToPaste);
		tmpNm.reviseNotes();
		notesToPaste = tmpNm.getNotes();
		var noteManager = this.songModel.getComponent('notes');
		//this.checkDuration(0, noteManager.getTotalDuration());
		noteManager.notesSplice(this.cursor.getPos(), notesToPaste);
	};

	NoteEditionController.prototype.moveCursorByBar = function(inc) {
		if (this.cursor.getEditable() === false) {
			return;
		}
		var noteManager = this.songModel.getComponent('notes');
		var barNum = noteManager.getNoteBarNumber(this.cursor.getPos()[0], this.songModel);

		if (barNum === 0 && inc === -1) {
			this.cursor.setPos(0);
			$.publish('ToViewer-draw', this.songModel);
			return;
		}

		var startBeat = this.songModel.getStartBeatFromBarNumber(barNum + inc);
		var indexFirstNoteInNewBar = noteManager.getNextIndexNoteByBeat(startBeat);

		this.cursor.setPos(indexFirstNoteInNewBar);
		$.publish('ToViewer-draw', this.songModel);
	};

	NoteEditionController.prototype.getSelectedNotes = function() {
		var noteManager = this.songModel.getComponent('notes');
		var selectedNotes = noteManager.getNotes(this.cursor.getStart(), this.cursor.getEnd() + 1);
		return selectedNotes;
	};


	/**
	 * Function clones selectedNotes and insert it in a new Note Manager
	 * @return {NoteManager} return a cloned notemanager that contain as many notes as the cursor selection
	 */
	NoteEditionController.prototype.cloneSelectedNotes = function() {
		/*we run it in a temporal NoteManager, and then we check if there are duration differences to fill with silences or not*/
		var nm = this.songModel.getComponent('notes');
		var selectedNotes = nm.cloneElems(this.cursor.getStart(), this.cursor.getEnd() + 1);
		var localCursor = new CursorModel(selectedNotes.length);
		localCursor.setPos([0, selectedNotes.length - 1]);
		var tmpNm = new NoteManager();
		tmpNm.setNotes(selectedNotes);
		return tmpNm;
	};


	NoteEditionController.prototype.checkDuration = function(tmpNm, durBefore, durAfter) {
		function checkIfBreaksTuplet(initBeat, endBeat, nm) {
			/**
			 * means that is a 0.33333 or something like that
			 * @return {Boolean}
			 */
			function isTupletBeat(beat) {
				beat = beat * 16;
				return Math.round(beat) != beat;
			}
			var iPrevNote = nm.getNextIndexNoteByBeat(initBeat);
			var iNextNote = nm.getNextIndexNoteByBeat(endBeat);
			return isTupletBeat(nm.getNoteBeat(iPrevNote)) || isTupletBeat(nm.getNoteBeat(iNextNote));
		}

		var nm = this.songModel.getComponent('notes');
		this._reviseTuplets();
		var initBeat = nm.getNoteBeat(this.cursor.getStart());
		var endBeat = initBeat + durAfter;
		if (durAfter < durBefore) {
			tmpNm.fillGapWithRests(durBefore - durAfter, initBeat);
		} else if (durAfter > durBefore) {
			if (checkIfBreaksTuplet(initBeat, endBeat, nm)) {
				UserLog.logAutoFade('error', "Can't break tuplet");
				return;
			}
			var endIndex = nm.getNextIndexNoteByBeat(endBeat);
			var beatEndNote = nm.getNoteBeat(endIndex);
			if (endBeat < beatEndNote) {
				tmpNm.fillGapWithRests(beatEndNote - endBeat, initBeat);
			}
			//this.cursor.setPos([this.cursor.getStart(), endIndex - 1]);
		}

		return tmpNm;
	};

	NoteEditionController.prototype.fitsInBar = function(tmpNm) {
		var noteManager = this.songModel.getComponent('notes');
		var initIndex = this.cursor.getStart();
		var initBeat = noteManager.getNoteBeat(initIndex);
		var numBar = noteManager.getNoteBarNumber(initIndex, this.songModel);
		var barBeatDuration = this.songModel.getTimeSignatureAt(numBar).getQuarterBeats();
		var barRelativeBeat = initBeat - this.songModel.getStartBeatFromBarNumber(numBar);

		var notesNew = tmpNm.getNotes();
		var duration;
		for (var i = 0; i < notesNew.length; i++) {
			duration = notesNew[i].getDuration();
			if (barRelativeBeat < barBeatDuration && Math.round((barRelativeBeat + duration) * 100000) / 100000 > barBeatDuration) {
				return false;
			}
			barRelativeBeat += duration;
		}
		return true;
	};

	/**
	 * if a duration function applied to a tuplet note, we expand cursor to include the other tuplet notes (to avoid strange durations
	 */
	NoteEditionController.prototype._reviseTuplets = function() {
		var noteManager = this.songModel.getComponent('notes');
		var notes = noteManager.getNotes();
		var c = this.cursor.getStart();
		if (notes[c].isTuplet()) {
			c--;
			while (c >= 0 && notes[c].isTuplet() && !notes[c].isTuplet('stop')) {
				this.cursor.setPos([c, this.cursor.getEnd()]);
				c--;
			}
		}
		c = this.cursor.getEnd();
		if (notes[c].isTuplet()) {
			c++;
			while (c < notes.length && notes[c].isTuplet() && !notes[c].isTuplet('start')) {
				this.cursor.setPos([this.cursor.getStart(), c]);
				c++;
			}
		}
	};

	NoteEditionController.prototype.changeEditMode = function(isEditable) {
		this.cursor.setEditable(isEditable);
	};

	return NoteEditionController;
});

define('text!modules/NoteEdition/src/NoteEditionTemplate.html',[],function () { return '<div id="edit_notes_second_level">\r\n\t<div id="edit_pitch_container">\r\n\t\t<div id="edit_each_pitch_container">\r\n\t\t\t<div class="current_button" title="Add 1 ton (+)" id="aug-note">+</div>\r\n\t\t\t<div class="current_button" title="Substract 1 ton (-)" id="sub-note">-</div>\r\n\t\t</div>\r\n\t\t<div class="button_text">\r\n\t\t\tPitch\r\n\t\t</div>\r\n\t</div>\r\n\t<div id="edit_alteration_container">\r\n\t\t<div id="edit_each_alteration_container">\r\n\t\t\t<div class="current_button" title="Double Flat (Shift+V)" id="double_flat"><img src="{{imgPath}}/double_flat.png" alt="double_flat" /></div>\r\n\t\t\t<div class="current_button" title="Flat (V)" id="flat">&#9837;</div>\r\n\t\t\t<div class="current_button" title="Natural (N)" id="natural">&#9838;</div>\r\n\t\t\t<div class="current_button" title="Sharp (S)" id="sharp">&#9839;</div>\r\n\t\t\t<div class="current_button" title="Double Sharp (Shitf+S)" id="double_sharp"><img src="{{imgPath}}/double_sharp.png" alt="double_sharp" /></div>\r\n\t\t</div>\r\n\t\t<div class="button_text">\r\n\t\t\tAlteration\r\n\t\t</div>\r\n\t</div>\r\n\t<div id="edit_rhythm_container">\r\n\t\t<div id="edit_each_rhythm_container">\r\n\t\t\t<div class="current_button" id="sixty-four-note" title="Sixty-four note (1)"><img src="{{imgPath}}/sixty-four-note.png" alt="1/64" /></div>\r\n\t\t\t<div class="current_button" id="thirty-second-note" title="Thirty-second note (2)"><img src="{{imgPath}}/thirty-second-note.png" alt="1/32" /></div>\r\n\t\t\t<div class="current_button" id="sixteenth-note" title="Sixteenth note (3)"><img src="{{imgPath}}/sixteenth-note.png" alt="1/16" /></div>\r\n\t\t\t<div class="current_button" id="eight-note" title="Eight note (4)"><img src="{{imgPath}}/eight-note.png" alt="1/8" /></div>\r\n\t\t\t<div class="current_button" id="quarter-note" title="Quarter note (5)"><img src="{{imgPath}}/quarter-note.png" alt="1/4" /></div>\r\n\t\t\t<div class="current_button" id="half-note" title="Half note (6)"><img src="{{imgPath}}/half-note.png" alt="1/2" /></div>\r\n\t\t\t<div class="current_button" id="whole-note" title="Whole note (7)"><img src="{{imgPath}}/whole-note.png" alt="1" /></div>\r\n\t\t\t<div class="current_button" id="dot" title="dot (.)">.</div>\r\n\t\t</div>\r\n\t\t<div class="button_text">\r\n\t\t\tRhythm\r\n\t\t</div>\r\n\t</div>\r\n\t<div id="edit_symbol_container">\r\n\t\t<div id="edit_each_symbol_container">\r\n\t\t\t<div class="current_button" id="tie-note" title="Tie note (T)"><img src="{{imgPath}}/tie-note.png" alt="tie" /></div>\r\n\t\t\t<div class="current_button" id="tuplet" title="Tuplet (Shift+T)"><img src="{{imgPath}}/tuplet.png" alt="tuplet" /></div>\r\n\t\t</div>\r\n\t\t<div class="button_text">\r\n\t\t\tSymbol\r\n\t\t</div>\r\n\t</div>\r\n\t<div id="edit_note_container">\r\n\t\t<div id="edit_each_note_container">\r\n\t\t\t<div class="current_button" id="regular-note" title="Regular mode (D)"><img src="{{imgPath}}/quarter-note.png" alt="regular" /></div>\r\n\t\t\t<div class="current_button" id="silent-note" title="Silent mode (R)"><img src="{{imgPath}}/silent.png" alt="silent" /></div>\r\n\t\t\t<div class="current_button" id="delete-note" title="Remove note (Del)"><img src="{{imgPath}}/remove.png" alt="delete" /></div>\r\n\t\t\t<div class="current_button" id="add-note" title="Add note (Space)"><img src="{{imgPath}}/add.png" alt="add" /></div>\r\n\t\t</div>\r\n\t\t<div class="button_text">\r\n\t\t\tNote\r\n\t\t</div>\r\n\t</div>\r\n\t<div id="selection_container">\r\n\t\t<div id="edit_each_selection_container">\r\n\t\t\t<div class="current_button" id="copy-note" title="Copy (Ctrl+C)"><img src="{{imgPath}}/copy.png" alt="copy" /></div>\r\n\t\t\t<div class="current_button" id="paste-note" title="Paste (Ctrl+V)"><img src="{{imgPath}}/paste.png" alt="paste" /></div>\r\n\t\t</div>\r\n\t\t<div class="button_text">\r\n\t\t\tSelection\r\n\t\t</div>\r\n\t</div>\r\n</div>';});

define('modules/NoteEdition/src/NoteEditionView',[
	'jquery',
	'mustache',
	'modules/core/src/SongModel',
	'utils/UserLog',
	'utils/NoteUtils',
	'pubsub',
	'text!modules/NoteEdition/src/NoteEditionTemplate.html',
], function($, Mustache, SongModel, UserLog, NoteUtils, pubsub, NoteEditionTemplate) {

	function NoteEditionView(imgPath) {
		this.el = undefined;
		this.imgPath = imgPath;
		this.initKeyboard();
	}

	NoteEditionView.prototype.render = function(parentHTML, callback) {
		//if (typeof this.el === "undefined" || (typeof this.el !== "undefined" && force === true)) {
		var rendered = Mustache.render(NoteEditionTemplate, {
			'imgPath': this.imgPath
		});
		if (typeof parentHTML !== "undefined") {
			parentHTML.innerHTML = rendered;
		}
		this.el = rendered;
		if (typeof callback === "function") {
			callback();
		}
		return;
	};

	/**
	 * manages events that come from the keyboard
	 */
	NoteEditionView.prototype.initKeyboard = function() {
		$.subscribe('updown-arrows', function(el, inc) {
			fn = 'setPitch';
			$.publish('NoteEditionView', [fn, inc]);
		});
		$.subscribe('pitch-letter-key', function(el, key) {
			fn = 'setPitch';
			$.publish('NoteEditionView', [fn, key]);
		});
		$.subscribe('accidental-key', function(el, acc) {
			fn = 'addAccidental';
			$.publish('NoteEditionView', [fn, acc]);
		});
		$.subscribe('shift-accidental-key', function(el, acc) {
			fn = 'addAccidental';
			$.publish('NoteEditionView', [fn, acc+acc]);
		});
		$.subscribe('number-key', function(el, key) {
			fn = 'setCurrDuration';
			$.publish('NoteEditionView', [fn, key]);
		});
		$.subscribe('dot-key', function(el) {
			fn = 'setDot';
			$.publish('NoteEditionView', fn);
		});
		$.subscribe('shift-t-key', function(el) {
			fn = 'setTuplet';
			$.publish('NoteEditionView', fn);
		});
		$.subscribe('t-key', function(el) {
			fn = 'setTie';
			$.publish('NoteEditionView', fn);
		});
		$.subscribe('R-key', function(el) {
			fn = 'setSilence';
			$.publish('NoteEditionView', fn);
		});
		$.subscribe('supr-key', function(el) {
			fn = 'setSilence';
			$.publish('NoteEditionView', fn);
		});
		$.subscribe('enter-key', function(el) {
			fn = 'addNote';
			$.publish('NoteEditionView', fn);
		});
		$.subscribe('ctrl-c-key', function(el) {
			fn = 'copyNotes';
			$.publish('NoteEditionView', fn);
		});
		$.subscribe('ctrl-v-key', function(el) {
			fn = 'pasteNotes';
			$.publish('NoteEditionView', fn);
		});

	};
	/**
	 * Manages events clicked from the menu
	 * this function is called by MainMenuView, after view is rendered
	 *
	 */
	NoteEditionView.prototype.initController = function() {
		// pitch
		var fn;
		$('#aug-note').click(function() {
			fn = 'setPitch';
			$.publish('NoteEditionView', [fn, 1]);
		});
		$('#sub-note').click(function() {
			fn = 'setPitch';
			$.publish('NoteEditionView', [fn, -1]);
		});

		// Alteration
		$('#double_flat').click(function() {
			fn = 'addAccidental';
			$.publish('NoteEditionView', [fn, 'bb']);
		});
		$('#flat').click(function() {
			fn = 'addAccidental';
			$.publish('NoteEditionView', [fn, 'b']);
		});
		$('#natural').click(function() {
			fn = 'addAccidental';
			$.publish('NoteEditionView', [fn, 'n']);
		});
		$('#sharp').click(function() {
			fn = 'addAccidental';
			$.publish('NoteEditionView', [fn, '#']);
		});
		$('#double_sharp').click(function() {
			fn = 'addAccidental';
			$.publish('NoteEditionView', [fn, '##']);
		});
		// Rhythm
		$('#whole-note').click(function() {
			fn = 'setCurrDuration';
			$.publish('NoteEditionView', [fn, 7]);
		});
		$('#half-note').click(function() {
			fn = 'setCurrDuration';
			$.publish('NoteEditionView', [fn, 6]);
		});
		$('#quarter-note').click(function() {
			fn = 'setCurrDuration';
			$.publish('NoteEditionView', [fn, 5]);
		});
		$('#eight-note').click(function() {
			fn = 'setCurrDuration';
			$.publish('NoteEditionView', [fn, 4]);
		});
		$('#sixteenth-note').click(function() {
			fn = 'setCurrDuration';
			$.publish('NoteEditionView', [fn, 3]);
		});
		$('#thirty-second-note').click(function() {
			fn = 'setCurrDuration';
			$.publish('NoteEditionView', [fn, 2]);
		});
		$('#sixty-four-note').click(function() {
			fn = 'setCurrDuration';
			$.publish('NoteEditionView', [fn, 1]);
		});
		$('#dot').click(function() {
			fn = 'setDot';
			$.publish('NoteEditionView', fn);
		});

		// Symbol
		$('#tie-note').click(function() {
			fn = 'setTie';
			$.publish('NoteEditionView', fn);
		});
		$('#tuplet').click(function() {
			fn = 'setTuplet';
			$.publish('NoteEditionView', fn);
		});

		// Note
		$('#silent-note').click(function() {
			fn = 'setSilence';
			$.publish('NoteEditionView', fn);
		});
		$('#regular-note').click(function() {
			fn = 'setPitch';
			$.publish('NoteEditionView', [fn, 0]);
		});
		$('#delete-note').click(function() {
			// in our editor we want to replace note by silence and not delete note
			fn = 'setSilence';
			$.publish('NoteEditionView', fn);
		});
		$('#add-note').click(function() {
			fn = 'addNote';
			$.publish('NoteEditionView', fn);
		});

		// Selection
		$('#copy-note').click(function() {
			fn = 'copyNotes';
			$.publish('NoteEditionView', fn);
		});
		$('#paste-note').click(function() {
			fn = 'pasteNotes';
			$.publish('NoteEditionView', fn);
		});
	};

	//TODO: not verified, nor tested, nor used
	NoteEditionView.prototype.unactiveView = function(idElement) {
		this.editMode = '';
		$.publish('NoteEditionView-unactiveView');
	};

	NoteEditionView.prototype.activeView = function(idElement) {
		this.editMode = 'notes';
		$.publish('NoteEditionView-activeView', 'notes');
	};

	return NoteEditionView;
});
define('modules/NoteEdition/src/NoteSpaceView',['modules/Edition/src/ElementView'], function(ElementView) {
	/**
	 * @param {Object} position {x:439.25, y:33,w:10,h:10} //position
	 * @param {[type]} viewer   [description]
	 */
	function NoteSpaceView(position, viewerScaler) {
		this.position = position;
		this.scaler = viewerScaler;
	}
	/**
	 * @interface
	 * @param  {Object}  coords [description]
	 * @return {Boolean}        [description]
	 */
	NoteSpaceView.prototype.isInPath = function(coords) {
		return ElementView.isInPath(coords, this.position, this.scaler);
	};
	/**
	 * @interface
	 */
	NoteSpaceView.prototype.getArea = function() {
		return this.position;
	};

	return NoteSpaceView;
});
define('modules/NoteEdition/src/NoteSpaceManager',[
	'modules/core/src/NoteModel',
	'modules/NoteEdition/src/NoteSpaceView',
	'modules/Cursor/src/CursorModel',
	'utils/UserLog',
	'modules/Edition/src/ElementManager',
	'jquery',
	'pubsub',
], function(NoteModel, NoteSpaceView, CursorModel, UserLog, ElementManager,$, pubsub) {

	function NoteSpaceManager(cursor, viewer) {

		if (!cursor) {
			throw "NoteSpaceManager - missing cursor";
		}
		if (!viewer) {
			throw "NoteSpaceManager - missing viewer";
		}
		this.name = 'NotesCursor';
		this.cursor = cursor;
		this.viewer = viewer;
		this.elemMng = new ElementManager();
		this.noteSpace = [];
		this.initSubscribe();
		this.enabled = true;

		this.CURSOR_HEIGHT = 80;
		this.CURSOR_MARGIN_TOP = 20;
		this.CURSOR_MARGIN_LEFT = 6;
		this.CURSOR_MARGIN_RIGHT = 9;

	}

	/**
	 * Subscribe to view events
	 */
	NoteSpaceManager.prototype.initSubscribe = function() {
		var self = this;
		$.subscribe('CanvasLayer-mousemove', function(el, position) {


			var inPath = self.elemMng.getElemsInPath(self.noteSpace, position);
			if (typeof self.viewer.el.style !== 'undefined'){
				if (inPath) {
					self.viewer.el.style.cursor = 'pointer';
				} else {
					self.viewer.el.style.cursor = 'default';
				}
			}
		});

		$.subscribe('LSViewer-drawEnd', function(el, viewer) {
			if (!self.viewer.canvasLayer) {
				throw "NoteSpaceManager needs CanvasLayer";
			}

			//if (self.cursor.getEditable()) {
			self.noteSpace = self.createNoteSpace(self.viewer);
			self.viewer.canvasLayer.addElement(self); 
			self.viewer.canvasLayer.refresh();

		});
		// $.subscribe('CanvasLayer-updateCursors',function(el,coords){
		// 	self.updateCursor(coords);
		// });
	};
	NoteSpaceManager.prototype.createNoteSpace = function(viewer) {
		var noteSpace = [];
		if (typeof viewer.vxfBars === "undefined") {
			return;
		}
		var area;

		for (var i = 0, c = viewer.noteViews.length; i < c; i++) {
			currentNote = viewer.noteViews[i];
			area = currentNote.getArea();
			//apply cursor margin changes
			area.x -= this.CURSOR_MARGIN_LEFT;
			area.y += this.CURSOR_MARGIN_TOP;
			area.w += this.CURSOR_MARGIN_LEFT + this.CURSOR_MARGIN_RIGHT;
			area.h = this.CURSOR_HEIGHT;
			noteSpace.push(new NoteSpaceView(area, viewer.scaler));
		}
		return noteSpace;
	};
	/**
	 * @inteface
	 * @param  {Object} coords
	 */
	NoteSpaceManager.prototype.getYs = function(coords) {
		return this.elemMng.getYs(this.noteSpace, coords);
	};
	/**
	 * @interface
	 * @param  {Object} coords 
	 */
	NoteSpaceManager.prototype.updateCursor = function(coords) {

		var notes = this.elemMng.getElemsInPath(this.noteSpace, coords);

		if (notes) {
			this.cursor.setPos(notes);
			//$.publish('ToViewer-draw',self.songModel);
		}
	};

	/**
	 * @interface
	 * @param  {CanvasContext} ctx 
	 */
	NoteSpaceManager.prototype.draw = function(ctx) {
		if (this.noteSpace.length === 0) return;
		var position = this.cursor.getPos();
		var saveFillColor = ctx.fillStyle;
		ctx.fillStyle = "#0099FF";
		ctx.globalAlpha = 0.2;
		var currentNoteSpace;
		var areas = [];

		if (position[0] !== null) {
			if (position[0] === position[1]) {
				areas.push({
					x: this.noteSpace[position[0]].position.x,
					y: this.noteSpace[position[0]].position.y,
					w: this.noteSpace[position[0]].position.w,
					h: this.noteSpace[position[0]].position.h
				});
			} else {
				var cursorDims = {
					right: this.CURSOR_MARGIN_RIGHT,
					left: this.CURSOR_MARGIN_LEFT,
					top: 0,
					height: this.CURSOR_HEIGHT
				};
				areas = this.elemMng.getElementsAreaFromCursor(this.noteSpace, position, cursorDims);
			}
			for (i = 0, c = areas.length; i < c; i++) {
				ctx.fillRect(
					areas[i].x,
					areas[i].y,
					areas[i].w,
					areas[i].h
				);
			}
			ctx.fillStyle = saveFillColor;
			ctx.globalAlpha = 1;
		}

	};

	/**
	 * @interface
	 */
	NoteSpaceManager.prototype.isEnabled = function() {
		return this.enabled;
	};

	/**
	 * @interface
	 */
	NoteSpaceManager.prototype.enable = function() {
		this.enabled = true;
	};

	/**
	 * @interface
	 */
	NoteSpaceManager.prototype.disable = function() {
		this.enabled = false;
	};

	return NoteSpaceManager;
});
define('modules/NoteEdition/src/NoteEdition',[
	"modules/NoteEdition/src/NoteEditionController",
	"modules/NoteEdition/src/NoteEditionView",
	"modules/NoteEdition/src/NoteSpaceManager"
], function(NoteEditionController, NoteEditionView, NoteSpaceManager) {

	function NoteEdition(songModel, cursorModel, viewer, imgPath) {
		var noteSpaceMng = new NoteSpaceManager(cursorModel, viewer);
		new NoteEditionController(songModel, cursorModel, noteSpaceMng);
		this.view = new NoteEditionView(imgPath);
	}
	return NoteEdition;
});
define('modules/StructureEdition/src/StructureEditionController',[
	'jquery',
	'mustache',
	'modules/Cursor/src/CursorModel',
	'modules/core/src/SongModel',
	'modules/core/src/SectionModel',
	'modules/core/src/NoteManager',
	'modules/core/src/NoteModel',
	'utils/UserLog',
	'pubsub',
], function($, Mustache, CursorModel, SongModel, SectionModel, NoteManager, NoteModel, UserLog, pubsub) {

	function StructureEditionController(songModel, cursor, view, structEditionModel) {
		this.songModel = songModel || new SongModel();
		this.cursor = cursor || new CursorModel();
		this.initSubscribe();
		this.structEditionModel = structEditionModel;
	}

	/**
	 * Subscribe to view events
	 */
	StructureEditionController.prototype.initSubscribe = function() {
		var self = this;
		$.subscribe('StructureEditionView-addSection', function(el) {
			self.addSection();
		});
		$.subscribe('StructureEditionView-removeSection', function(el) {
			self.removeSection();
		});
		$.subscribe('StructureEditionView-sectionName', function(el, name) {
			self.setSectionName(name);
		});
		$.subscribe('StructureEditionView-repeatTimes', function(el, repeatTimes) {
			self.setRepeatTimes(repeatTimes);
		});
		$.subscribe('StructureEditionView-addBar', function(el) {
			self.addBar();
		});
		$.subscribe('StructureEditionView-removeBar', function(el) {
			self.removeBar();
		});
		$.subscribe('StructureEditionView-timeSignature', function(el, timeSignature) {
			self.timeSignature(timeSignature);
		});
		$.subscribe('StructureEditionView-tonality', function(el, tonality) {
			self.tonality(tonality);
		});
		$.subscribe('StructureEditionView-ending', function(el, ending) {
			self.ending(ending);
		});
		$.subscribe('StructureEditionView-style', function(el, style) {
			self.style(style);
		});
		$.subscribe('StructureEditionView-label', function(el, label) {
			self.label(label);
		});
		$.subscribe('StructureEditionView-sublabel', function(el, sublabel) {
			self.subLabel(sublabel);
		});
		$.subscribe('StructureEditionView-activeView', function(el) {
			self.changeEditMode(true);
			$.publish('ToViewer-draw', self.songModel);
		});
		$.subscribe('StructureEditionView-unactiveView', function(el) {
			self.changeEditMode(false);
		});
		$.subscribe('StructureEditionView-unfold', function() {
			self.unfold();
		});

	};


	StructureEditionController.prototype.addSection = function() {
		/*var selBars = this._getSelectedBars();
		if (selBars.length !== 0) {
			return;
		}*/

		// TODO add section after current section position
		var numberOfBarsToCreate = 2;
		var barManager = this.songModel.getComponent('bars');

		// clone last bar
		var indexLastBar = barManager.getTotal() - 1;
		var newBar = barManager.getBar(indexLastBar).clone();

		// now we add bar to this section and fill them with silence
		var noteManager = this.songModel.getComponent('notes');
		var indexLastNote = noteManager.getTotal() - 1;
		var initBeat = noteManager.getNoteBeat(indexLastNote);
		var beatDuration = this.songModel.getTimeSignatureAt(indexLastBar).getQuarterBeats();

		for (var i = 0; i < numberOfBarsToCreate; i++) {
			barManager.addBar(newBar);
			noteManager.fillGapWithRests(beatDuration, initBeat);
			initBeat += beatDuration;
		}
		var section = new SectionModel({
			'numberOfBars': numberOfBarsToCreate
		});
		this.songModel.addSection(section);
		$.publish('ToViewer-draw', this.songModel);
	};

	StructureEditionController.prototype.removeSection = function() {
		if (this.songModel.getSections().length === 1) {
			UserLog.logAutoFade('error', "You can't delete last section");
			return;
		}
		var selBars = this._getSelectedBars();
		if (selBars.length === 0) {
			return;
		}
		var sectionNumber = this.songModel.getSectionNumberFromBarNumber(selBars[0]);

		var startBar = this.songModel.getStartBarNumberFromSectionNumber(sectionNumber);
		var numberOfBars = this.songModel.getSection(sectionNumber).getNumberOfBars();

		var barManager = this.songModel.getComponent('bars');
		var noteManager = this.songModel.getComponent('notes');
		//var notes;
		for (var i = 0; i < numberOfBars; i++) {
			//notes = noteManager.getNotesAtBarNumber(startBar, this.songModel);
			//for (var j = notes.length - 1; j >= 0; j--) {
			//	noteManager.deleteNote(noteManager.getNoteIndex(notes[j]));
			//}
			barManager.removeBar(startBar); // each time we remove index move so we don't need to sum startBar with i

		}
		// check if cursor not outside
		var indexLastNote = noteManager.getTotal() - 1;
		if (this.cursor.getEnd() > indexLastNote) {
			this.cursor.setPos(indexLastNote);
		}
		this.songModel.removeSection(sectionNumber);
		$.publish('ToViewer-draw', this.songModel);
	};

	StructureEditionController.prototype.setSectionName = function(name) {
		if (typeof name === "undefined") {
			return;
		}
		var selBars = this._getSelectedBars();
		if (selBars.length === 0) {
			return;
		}
		var sectionNumber = this.songModel.getSectionNumberFromBarNumber(selBars[0]);
		this.songModel.getSection(sectionNumber).setName(name);
		$.publish('ToViewer-draw', this.songModel);
	};

	// Carefull, if a section is played 2 times, repeatTimes = 1
	StructureEditionController.prototype.setRepeatTimes = function(repeatTimes) {
		if (typeof repeatTimes === "undefined") {
			return;
		}
		var selBars = this._getSelectedBars();
		if (selBars.length === 0) {
			return;
		}
		var sectionNumber = this.songModel.getSectionNumberFromBarNumber(selBars[0]);
		this.songModel.getSection(sectionNumber).setRepeatTimes(repeatTimes);
		$.publish('ToViewer-draw', this.songModel);
	};

	StructureEditionController.prototype.addBar = function() {
		var selBars = this._getSelectedBars();
		var numBar = 0;
		if (selBars.length !== 0) {
			numBar = selBars[0];
		}

		var nm = this.songModel.getComponent('notes');
		//get the duration of the bar, and create a new bar with silences
		var beatDuration = this.songModel.getTimeSignatureAt(numBar).getQuarterBeats();
		var newBarNm = new NoteManager(); //Create new Bar NoteManager
		//if is first bar we add a note, otherwise there are inconsistencies with duration of a bar
		var startBeat = 0;
		if (numBar === 0) {
			newBarNm.addNote(new NoteModel("E/4-q"));
			beatDuration = beatDuration - 1;
			startBeat = 1;
		}
		//insert those silences
		newBarNm.fillGapWithRests(beatDuration, startBeat);

		//get numBeat from first note of current bar
		var numBeat = this.songModel.getStartBeatFromBarNumber(numBar);
		// get the index of that note
		var index = nm.getNextIndexNoteByBeat(numBeat);
		nm.notesSplice([index, index - 1], newBarNm.getNotes());

		//add bar to barManager
		var barManager = this.songModel.getComponent('bars');
		var newBar = barManager.getBar(numBar).clone();
		barManager.addBar(newBar);

		//increment the number of bars of current section
		var section = this.songModel.getSection(this.songModel.getSectionNumberFromBarNumber(numBar));
		section.setNumberOfBars(section.getNumberOfBars() + 1);

		// decal chords
		this.songModel.getComponent('chords').incrementChordsBarNumberFromBarNumber(1, numBar);

		$.publish('ToViewer-draw', this.songModel);
	};

	StructureEditionController.prototype.removeBar = function() {
		var selBars = this._getSelectedBars();
		if (selBars.length === 0) {
			return;
		}
		var bm = this.songModel.getComponent('bars');
		var sectionNumber;
		var sectionNumberOfBars;
		var nm = this.songModel.getComponent('notes');
		var cm = this.songModel.getComponent('chords');
		var beatDuration, numBeat, index, index2;
		var section;
		for (var i = selBars.length - 1; i > 0; i--) {
			sectionNumber = this.songModel.getSectionNumberFromBarNumber(selBars[i]);
			section = this.songModel.getSection(sectionNumber);
			sectionNumberOfBars = section.getNumberOfBars();
			if (sectionNumberOfBars === 1) {
				if (this.songModel.getSections().length === 1) {
					UserLog.logAutoFade('warn', "Can't delete the last bar of the last section.");
				} else {
					this.removeSection(sectionNumber);
				}
			} else {
				// adjust section number of bars
				section.setNumberOfBars(sectionNumberOfBars - 1);

				// remove notes in bar
				beatDuration = this.songModel.getTimeSignatureAt(selBars[i]).getQuarterBeats() - 1; // I am not sure why we remove 1 here
				numBeat = this.songModel.getStartBeatFromBarNumber(selBars[i]);
				index = nm.getNextIndexNoteByBeat(numBeat);
				index2 = nm.getNextIndexNoteByBeat(numBeat + beatDuration);
				nm.notesSplice([index, index2], []);

				// remove chords in bar
				cm.removeChordsByBarNumber(selBars[i]);
				// adjust all chords bar number
				cm.incrementChordsBarNumberFromBarNumber(-1, selBars[i]);

				bm.removeBar(selBars[i]);
			}
		}
		this.cursor.setPos(index - 1);
		/*console.log(this.cursor.getPos());
		console.log(nm.getNotes());*/

		$.publish('ToViewer-draw', this.songModel);
	};

	StructureEditionController.prototype.timeSignature = function(timeSignature) {
		var selBars = this._getSelectedBars();
		if (selBars.length === 0) {
			return;
		}
		var durationBefore = this.songModel.getSongTotalBeats();
		for (var i = 0, c = selBars.length; i < c; i++) {
			if (timeSignature === "none") {
				timeSignature = undefined;
			}
			this.songModel.getComponent("bars").getBar(selBars[i]).setTimeSignature(timeSignature);
		}
		var durationAfter = this.songModel.getSongTotalBeats();
		this._checkDuration(durationBefore, durationAfter);
		$.publish('ToViewer-draw', this.songModel);
	};

	StructureEditionController.prototype._checkDuration = function(durBefore, durAfter) {
		function checkIfBreaksTuplet(initBeat, endBeat, nm) {
			/**
			 * means that is a 0.33333 or something like that
			 * @return {Boolean}
			 */
			function isTupletBeat(beat) {
				beat = beat * 16;
				return Math.round(beat) != beat;
			}
			var iPrevNote = nm.getNextIndexNoteByBeat(initBeat);
			var iNextNote = nm.getNextIndexNoteByBeat(endBeat);
			return isTupletBeat(nm.getNoteBeat(iPrevNote)) || isTupletBeat(nm.getNoteBeat(iNextNote));
		}
		var nm = this.songModel.getComponent('notes');
		var initBeat = 1;
		var endBeat = durAfter + 1;

		if (durBefore < durAfter) {
			nm.fillGapWithRests(durAfter - durBefore, initBeat);
		} else if (durBefore > durAfter) {
			if (checkIfBreaksTuplet(initBeat, durAfter, nm)) {
				UserLog.logAutoFade('error', "Can't break tuplet");
				return;
			}
			var endIndex = nm.getNextIndexNoteByBeat(endBeat);
			var beatEndNote = nm.getNoteBeat(endIndex);

			if (endBeat < beatEndNote) {
				nm.fillGapWithRests(beatEndNote - endBeat, initBeat);
			}
		}
		//nm.notesSplice(this.cursor.getPos(), tmpNm.getNotes());
		nm.reviseNotes();
	};

	StructureEditionController.prototype.tonality = function(tonality) {
		var selBars = this._getSelectedBars();
		if (selBars.length === 0) {
			return;
		}
		for (var i = 0, c = selBars.length; i < c; i++) {
			this.songModel.getComponent("bars").getBar(selBars[i]).setTonality(tonality);
		}
		$.publish('ToViewer-draw', this.songModel);
	};

	StructureEditionController.prototype.ending = function(ending) {
		var selBars = this._getSelectedBars();
		if (selBars.length === 0) {
			return;
		}
		for (var i = 0, c = selBars.length; i < c; i++) {
			if (ending === "none") {
				ending = undefined;
			}
			this.songModel.getComponent("bars").getBar(selBars[i]).setEnding(ending);
		}
		$.publish('ToViewer-draw', this.songModel);
	};

	StructureEditionController.prototype.style = function(style) {
		var selBars = this._getSelectedBars();
		if (selBars.length === 0) {
			return;
		}
		for (var i = 0, c = selBars.length; i < c; i++) {
			if (style === "none") {
				style = undefined;
			}
			this.songModel.getComponent("bars").getBar(selBars[i]).setStyle(style);
		}
		$.publish('ToViewer-draw', this.songModel);
	};

	StructureEditionController.prototype.label = function(label) {
		var selBars = this._getSelectedBars();
		if (selBars.length === 0) {
			return;
		}
		for (var i = 0, c = selBars.length; i < c; i++) {
			if (label === "none") {
				label = '';
			}
			this.songModel.getComponent("bars").getBar(selBars[i]).setLabel(label);
		}
		$.publish('ToViewer-draw', this.songModel);
	};

	StructureEditionController.prototype.subLabel = function(sublabel) {
		var selBars = this._getSelectedBars();
		if (selBars.length === 0) {
			return;
		}
		for (var i = 0, c = selBars.length; i < c; i++) {
			if (sublabel === "none") {
				sublabel = undefined;
			}
			this.songModel.getComponent("bars").getBar(selBars[i]).setSublabel(sublabel);
		}
		$.publish('ToViewer-draw', this.songModel);
	};

	StructureEditionController.prototype._getSelectedBars = function() {
		var selectedBars = [];
		selectedBars[0] = this.songModel.getComponent('notes').getNoteBarNumber(this.cursor.getStart(), this.songModel);
		selectedBars[1] = this.songModel.getComponent('notes').getNoteBarNumber(this.cursor.getEnd(), this.songModel);
		return selectedBars;
	};

	StructureEditionController.prototype.changeEditMode = function(isEditable) {
		this.cursor.setEditable(isEditable);
	};

	StructureEditionController.prototype.unfold = function() {
		if (!this.structEditionModel.unfolded) {
			this.oldSong = this.songModel;
			var newSongModel = this.songModel.unfold();
			$.publish('ToViewer-draw', newSongModel);
		} else {
			$.publish('ToViewer-draw', this.oldSong);
		}
		this.structEditionModel.toggleUnfolded();

	};

	return StructureEditionController;
});
define('modules/StructureEdition/src/StructureEditionModel',['pubsub'], function() {
	function StructureEditionModel() {
		this.unfolded = false;
	}
	StructureEditionModel.prototype.toggleUnfolded = function() {
		this.unfolded = !this.unfolded;
		$.publish('StructureEditionModel-toggleUnfolded',this.unfolded);
	};
	return StructureEditionModel;
});

define('text!modules/StructureEdition/src/StructureEditionTemplate.html',[],function () { return '<div id="edit_bars_second_level">\r\n\t<div id="edit_bar_container">\r\n\t\t<div id="edit_each_bar_container">\r\n\t\t\t<div class="current_button" title="Add section" id="add-section"><img src="{{imgPath}}/add.png" alt="Add section" /></div>\r\n\t\t\t<div class="current_button" title="Remove section" id="rem-section"><img src="{{imgPath}}/remove.png" alt="Delete section" /></div>\r\n\t\t\t<span><input type="input" id="inputSectionName" name="inputSectionName" placeholder="Section title" />\r\n\t\t\t<input type="button" value="Ok" id="validateSectionTitle" /></span>\r\n\t\t\t<select id="selectSectionRepeatTimes">\r\n\t\t\t\t<option value="1">1</option>\r\n\t\t\t\t<option value="2">2</option>\r\n\t\t\t\t<option value="3">3</option>\r\n\t\t\t\t<option value="4">4</option>\r\n\t\t\t\t<option value="5">5</option>\r\n\t\t\t\t<option value="6">6</option>\r\n\t\t\t\t<option value="7">7</option>\r\n\t\t\t\t<option value="8">8</option>\r\n\t\t\t\t<option value="9">9</option>\r\n\t\t\t\t<option value="10">10</option>\r\n\t\t\t\t<option value="11">11</option>\r\n\t\t\t\t<option value="12">12</option>\r\n\t\t\t</select>\r\n\t\t</div>\r\n\t\t<div class="button_text">\r\n\t\t\tSections\r\n\t\t</div>\r\n\t</div>\r\n\t<div id="edit_bar_container">\r\n\t\t<div id="edit_each_bar_container">\r\n\t\t\t<div class="current_button" title="Add bar after" id="add-bar"><img src="{{imgPath}}/add.png" alt="Add bar" /></div>\r\n\t\t\t<div class="current_button" title="Remove bar" id="rem-bar"><img src="{{imgPath}}/remove.png" alt="Delete bar" /></div>\r\n\t\t</div>\r\n\t\t<div class="button_text">\r\n\t\t\tBars\r\n\t\t</div>\r\n\t</div>\r\n\t<!--div id="selection_bar_container">\r\n\t\t<div id="edit_each_selection_bar_container">\r\n\t\t\t<div class="current_button" id="copy-bar" title="Copy (Ctrl+C)"><img src="{{static}}/img/general_icons/copy.png" alt="copy" /></div>\r\n\t\t\t<div class="current_button" id="paste-bar" title="Paste (Ctrl+V)"><img src="{{static}}/img/general_icons/paste.png" alt="paste" /></div>\r\n\t\t</div>\r\n\t\t<div class="button_text">\r\n\t\t\tSelection\r\n\t\t</div>\r\n\t</div-->\r\n\t<div id="edit_time_signature_container">\r\n\t\t<div id="edit_each_time_signature_container">\r\n\t\t\t<select>\r\n\t\t\t\t<option value="none">none</option>\r\n\t\t\t\t<option value="2/2">2/2</option>\r\n\t\t\t\t<option value="2/4">2/4</option>\r\n\t\t\t\t<option value="3/4">3/4</option>\r\n\t\t\t\t<option value="4/4">4/4</option>\r\n\t\t\t\t<option value="5/4">5/4</option>\r\n\t\t\t\t<option value="6/4">6/4</option>\r\n\t\t\t\t<option value="7/4">7/4</option>\r\n\t\t\t\t<option value="9/4">9/4</option>\r\n\t\t\t\t<option value="3/8">3/8</option>\r\n\t\t\t\t<option value="6/8">6/8</option>\r\n\t\t\t\t<option value="9/8">9/8</option>\r\n\t\t\t\t<option value="12/8">12/8</option>\r\n\t\t\t</select>\r\n\t\t</div>\r\n\t\t<div class="button_text">\r\n\t\t\tTime Signature\r\n\t\t</div>\r\n\t</div>\r\n\t<div id="edit_tonality_container">\r\n\t\t<div id="edit_each_tonality_container">\r\n\t\t\t<select>\r\n\t\t\t\t<option value="C">C</option>\r\n\t\t\t\t<option value="C#">C#</option>\r\n\t\t\t\t<option value="Db">Db</option>\r\n\t\t\t\t<option value="D">D</option>\r\n\t\t\t\t<option value="Eb">Eb</option>\r\n\t\t\t\t<option value="E">E</option>\r\n\t\t\t\t<option value="F">F</option>\r\n\t\t\t\t<option value="F#">F#</option>\r\n\t\t\t\t<option value="Gb">Gb</option>\r\n\t\t\t\t<option value="G">G</option>\r\n\t\t\t\t<option value="Ab">Ab</option>\r\n\t\t\t\t<option value="A">A</option>\r\n\t\t\t\t<option value="Bb">Bb</option>\r\n\t\t\t\t<option value="B">B</option>\r\n\t\t\t</select>\r\n\t\t</div>\r\n\t\t<div class="button_text">\r\n\t\t\tTonality\r\n\t\t</div>\r\n\t</div>\r\n\t<div id="edit_ending_container">\r\n\t\t<div id="edit_each_ending_container">\r\n\t\t\t<select>\r\n\t\t\t\t<option value="none">none</option>\r\n\t\t\t\t<option value="1">1</option>\r\n\t\t\t\t<option value="2">2</option>\r\n\t\t\t\t<option value="3">3</option>\r\n\t\t\t\t<option value="4">4</option>\r\n\t\t\t</select>\r\n\t\t</div>\r\n\t\t<div class="button_text">\r\n\t\t\tEnding\r\n\t\t</div>\r\n\t</div>\r\n\t<div id="edit_style_container">\r\n\t\t<div id="edit_each_style_container">\r\n\t\t\t<select>\r\n\t\t\t\t<option value="none">none</option>\r\n\t\t\t</select>\r\n\t\t</div>\r\n\t\t<div class="button_text">\r\n\t\t\tStyle\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<div id="edit_label_container">\r\n\t\t<div id="edit_each_label_container">\r\n\t\t\t<select>\r\n\t\t\t\t<option value="none">none</option>\r\n\t\t\t\t<option value="segno">segno</option>\r\n\t\t\t\t<option value="segno2">segno2</option>\r\n\t\t\t\t<option value="fine">fine</option>\r\n\t\t\t\t<option value="coda">coda</option>\r\n\t\t\t\t<option value="coda2">coda2</option>\r\n\t\t\t\t<option value="on cue">on cue</option>\r\n\t\t\t</select>\r\n\t\t</div>\r\n\t\t<div class="button_text">\r\n\t\t\tLabel\r\n\t\t</div>\r\n\t</div>\r\n\t<div id="edit_sublabel_container">\r\n\t\t<div id="edit_each_sublabel_container">\r\n\t\t\t<select>\r\n\t\t\t\t<option value="none">none</option>\r\n\t\t\t\t<option value="DS">DS</option>\r\n\t\t\t\t<option value="DS2">DS2</option>\r\n\t\t\t\t<option value="DS al Fine">DS al Fine</option>\r\n\t\t\t\t<option value="DC al Fine">DC al Fine</option>\r\n\t\t\t\t<option value="DS al Coda">DS al Coda</option>\r\n\t\t\t\t<option value="DS al Coda2">DS al Coda2</option>\r\n\t\t\t\t<option value="DC al Coda">DC al Coda</option>\r\n\t\t\t\t<option value="DC al Coda2">DC al Coda2</option>\r\n\t\t\t\t<option value="DS al 2nd ending">DS al 2nd ending</option>\r\n\t\t\t\t<option value="DS2 al Fine">DS2 al Fine</option>\r\n\t\t\t\t<option value="DS2 al Coda">DS2 al Coda</option>\r\n\t\t\t\t<option value="DS2 al Coda2">DS2 al Coda2</option>\r\n\t\t\t\t<option value="Da capo no rep">Da capo no rep</option>\r\n\t\t\t</select>\r\n\t\t</div>\r\n\t\t<div class="button_text">\r\n\t\t\tSublabel\r\n\t\t</div>\r\n\t</div>\r\n\t<div id="unfold_container">\r\n\t\t<input type="button" value="Unfold" id="unfold" />\r\n\t</div>\r\n</div>';});

define('modules/StructureEdition/src/StructureEditionView',[
	'mustache',
	'modules/core/src/SongModel',
	'utils/UserLog',
	'jquery',
	'pubsub',
	'text!modules/StructureEdition/src/StructureEditionTemplate.html',
], function(Mustache, SongModel, UserLog, $, pubsub, StructureEditionTemplate) {

	function StructureEditionView(imgPath) {
		this.el = undefined;
		this.initSubscribe();
		this.initKeyboard();
		this.imgPath = imgPath;
	}

	StructureEditionView.prototype.render = function(parentHTML, callback) {
		//if (typeof this.el === "undefined" || (typeof this.el !== "undefined" && force === true)) {
		var rendered = Mustache.render(StructureEditionTemplate, {
			'imgPath': this.imgPath
		});
		if (typeof parentHTML !== "undefined") {
			parentHTML.innerHTML = rendered;
		}
		this.el = rendered;
		this.initController();
		//$.publish('StructureEditionView-render');
		if (typeof callback === "function") {
			callback();
		}
		return;
	};

	/**
	 * Publish event after receiving dom events
	 */
	StructureEditionView.prototype.initController = function() {
		$('#add-section').click(function() {
			$.publish('StructureEditionView-addSection');
		});
		$('#rem-section').click(function() {
			$.publish('StructureEditionView-removeSection');
		});
		$('#validateSectionTitle').click(function() {
			var name = $('#inputSectionName').val();
			$.publish('StructureEditionView-sectionName', name);
		});
		$('#selectSectionRepeatTimes').change(function() {
			var repeatTimes = parseInt($(this).val(), 10) - 1; // number of repetition is the number of played times minus 1
			$.publish('StructureEditionView-repeatTimes', repeatTimes);
		});

		$('#add-bar').click(function() {
			$.publish('StructureEditionView-addBar');
		});
		$('#rem-bar').click(function() {
			$.publish('StructureEditionView-removeBar');
		});

		// Time Signature change
		$('#edit_each_time_signature_container select').change(function() {
			var timeSignature = $(this).val();
			$.publish('StructureEditionView-timeSignature', timeSignature);
		});

		// Tonality change
		$('#edit_each_tonality_container select').change(function() {
			var tonality = $(this).val();
			$.publish('StructureEditionView-tonality', tonality);
		});

		// Ending change
		$('#edit_each_ending_container select').change(function() {
			var ending = $(this).val();
			$.publish('StructureEditionView-ending', ending);
		});

		// Style change
		$('#edit_each_style_container select').change(function() {
			var style = $(this).val();
			$.publish('StructureEditionView-style', style);
		});

		// Label change
		$('#edit_each_label_container select').change(function() {
			var label = $(this).val();
			$.publish('StructureEditionView-label', label);
		});

		// Sublabel change
		$('#edit_each_sublabel_container select').change(function() {
			var sublabel = $(this).val();
			$.publish('StructureEditionView-sublabel', sublabel);
		});
		$('#unfold').click(function() {
			var sublabel = $(this).val();
			$.publish('StructureEditionView-unfold');
		});
	};

	StructureEditionView.prototype.initKeyboard = function(evt) {};



	/**
	 * Subscribe to model events
	 */
	StructureEditionView.prototype.initSubscribe = function() {
		$.subscribe('StructureEditionModel-toggleUnfolded', function(el, unfolded) {
			var textButton = unfolded ? "Fold" : "Unfold";
			$("#unfold").val(textButton);
		});
	};


	StructureEditionView.prototype.unactiveView = function(idElement) {
		$.publish('StructureEditionView-unactiveView');
	};

	StructureEditionView.prototype.activeView = function(idElement) {
		$.publish('StructureEditionView-activeView', 'notes');
	};

	return StructureEditionView;
});
define('modules/StructureEdition/src/StructureEdition',[
	"modules/StructureEdition/src/StructureEditionController",
	"modules/StructureEdition/src/StructureEditionModel",
	"modules/StructureEdition/src/StructureEditionView",
	], function(StructureEditionController, StructureEditionModel, StructureEditionView){
	
	function StructureEdition(songModel, cursorModel, imgPath ){
		this.view = new StructureEditionView(imgPath);
		var seM = new StructureEditionModel();
		var seC = new StructureEditionController(songModel, cursorModel, this.view, seM);
	}
	return StructureEdition;
});
define('modules/Tag/src/main',[
		"modules/Tag/src/TagManager",
		"modules/Tag/src/TagSpaceView",
	],
	function(TagManager, TagSpaceView) {
		return {
			"TagManager": TagManager,
			"TagSpaceView": TagSpaceView
		};
	}
);
define('modules/WaveManager/src/WaveManagerController',[
	'jquery',
	'pubsub'
], function($, pubsub) {

	function WaveManagerController(waveMng) {
		if (!waveMng) throw "WaveManagerController - WaveMng not defined";

		$.subscribe("ToPlayer-play", function() {
			console.log(waveMng);
			waveMng.play();
		});
		$.subscribe("ToPlayer-pause", function() {
			waveMng.pause();
		});
		$.subscribe('ToPlayer-stop', function() {
			waveMng.pause();
		});
		//when 
		$.subscribe("ToViewer-draw", function(el, songModel) {
			if (waveMng.isReady()) {
				waveMng.drawer.drawAudio(waveMng.barTimesMng);
			}
		});
	}
	return WaveManagerController;
});
define('modules/WaveManager/src/WaveManagerView',[],function(){
	function WaveManagerView(parentHTML){
		this.parentHTML = parentHTML;
		this.playId = "audio-play";
		this.pauseId = "audio-pause";
	}
	WaveManagerView.prototype.render = function(callback) {
		
		// case el has never been rendered
		var self = this;
		this.initView(this.parentHTML, function() {
			self.initController();
		});
		
	};
	WaveManagerView.prototype.initView = function(parentHTML, callback) {
		//create div for buttons
		var divButtons = $("<div></div>");
		divButtons.css({
			position:'absolute'
		});
		divButtons.prependTo($(parentHTML));
		
		$("<button id="+ this.playId +">Play</button>").appendTo(divButtons);
		$("<button id="+ this.pauseId +">Pause</button>").appendTo(divButtons);
		
		callback();
	};

	WaveManagerView.prototype.initController = function() {
		var self = this;
		$("#"+ this.playId).click(function(e){
			e.preventDefault();
			$.publish('ToPlayer-play');
		});
		$("#"+this.pauseId).click(function(e){
			e.preventDefault();
			$.publish('ToPlayer-pause');
		});
	};
	return WaveManagerView;
});
define('modules/WaveManager/src/main',[
		"modules/WaveManager/src/WaveManager",
		"modules/WaveManager/src/WaveManagerController",
		"modules/WaveManager/src/WaveManagerView",
	],
	function(WaveManager, WaveManagerController, WaveManagerView) {
		return {
			"WaveManager": WaveManager,
			"WaveManagerController": WaveManagerController,
			"WaveManagerView": WaveManagerView
		};
	}
);
define('utils/PopIn',[
	'mustache',
], function(Mustache) {

	/**
	 * Create a popin view, it can contain directly content or it can be a link to a template
	 * @param {String}  title
	 * @param {String}  content    Can be the content or the link to a template to load (in case it's a template set istemplate to true)
	 * @param {Boolean} isTemplate If true, the url will be loaded as a template, otherwise content will be directly included
	 */
	function PopIn(title, content, options) {
		this.title = title;
		this.content = content;

		this.classTitle = (typeof options.classTitle !== "undefined") ? options.classTitle : '';
		this.footerButtonTitle = (typeof options.footerButtonTitle !== "undefined") ? options.footerButtonTitle : 'Ok';
		if (typeof options.isTemplate !== "undefined" && options.isTemplate === true) {
			this.isTemplate = true;
			this.template = content;
		} else {
			this.isTemplate = false;
			this.content = content;
		}
		this.onSubmitFunction = (typeof options.onSubmit !== "undefined") ? options.onSubmit : undefined;
		this.backgroundOpacity = 0.5;
	}


	PopIn.prototype.render = function() {
		this.initView();
		if (this.isTemplate) {
			var self = this;
			this.renderTemplate(function() {
				self.initController();
				self.initKeyboard();
			});
		} else {
			this.initController();
			this.initKeyboard();
		}
	};

	/**
	 * Function initializes background and foreground of the popin.
	 * When content is available (in case it's not a template) it's directly inserted
	 */
	PopIn.prototype.initView = function() {
		var backgroundPopin = '<div class="backgroundPopin" style="display:none;opacity:' + this.backgroundOpacity + '"></div>';
		$(document.body).append(backgroundPopin);
		var content = '';
		if (!this.isTemplate) {
			content = this.content;
		}
		var txt = '';
		txt += '<div style="display:none" class="modal foregroundPopin ' + this.classTitle + '" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">';
		txt += '<div class="modal-dialog">';
		txt += '<div class="modal-content">';
		txt += '<div class="modal-header">';
		txt += '<button type="button" class="popin_close close" data-dismiss="modal" aria-hidden="true">&times;</button>';
		txt += '<h4 class="modal-title">' + this.title + '</h4>';
		txt += '</div>';
		txt += '<div class="modal-body contentPopIn">' + content + '</div>';

		txt += '<div class="modal-footer"><span class="modal-footer-text"></span><button type="button" class="btn btn-default popin_close">Close</button>';
		txt += ' <button type="button" class="btn btn-primary popin_close modal_submit">' + this.footerButtonTitle + '</button></div>';

		txt += '</div>';
		txt += '</div>';
		txt += '</div>';
		$(document.body).append(txt);
	};

	/**
	 * Function gets the template, render it and insert as the content
	 * @param  {Function} callback [description]
	 * @return {[type]}            [description]
	 */
	PopIn.prototype.renderTemplate = function(callback) {
		$.get(this.template, function(template) {
			var rendered = Mustache.render(template);
			$('.contentPopIn').html(rendered);
			if (typeof callback === "function") {
				callback();
			}
			return rendered;
		});
	};


	PopIn.prototype.initController = function() {
		var self = this;
		$('.backgroundPopin, .popin_close').click(function() {
			self.hide();
		});
		$('.modal_submit').click(function() {
			if(typeof self.onSubmitFunction !== "undefined"){
				self.onSubmitFunction();
			}
		});
	};

	PopIn.prototype.initKeyboard = function() {
		var self = this;
		$(document).keydown(function(evt) {
			var keyCode = (evt === null) ? event.keyCode : evt.keyCode;
			if (keyCode === 27) { // Escape touch close view
				self.hide();
			}
		});
	};

	PopIn.prototype.show = function() {
		$('.backgroundPopin').fadeIn('slow');
		$('.foregroundPopin').fadeIn('slow');
	};

	PopIn.prototype.hide = function() {
		$('.backgroundPopin').fadeOut('slow');
		$('.foregroundPopin').fadeOut('slow');
	};

	return PopIn;
});
define('utils/main',[
		"utils/AjaxUtils",
		"utils/ChordUtils",
		"utils/NoteUtils",
		"utils/PopIn",
		"utils/UserLog",
	],
	function(
		AjaxUtils,
		ChordUtils,
		NoteUtils,
		PopIn,
		UserLog
	) {
		return {
			"AjaxUtils": AjaxUtils,
			"ChordUtils": ChordUtils,
			"NoteUtils": NoteUtils,
			"PopIn": PopIn,
			"UserLog": UserLog,
		};
	}
);
define('LJS',[
		"modules/ChordEdition/src/ChordEdition",
		"modules/chordSequence/src/SongView_chordSequence",
		"modules/Constraint/src/Constraint",
		"modules/converters/MusicCSLJson/src/main",
		"modules/converters/MusicXML/src/main",
		"modules/core/src/main", // most important module
		"modules/Cursor/src/Cursor",
		"modules/Edition/src/main",
		"modules/FileEdition/src/FileEdition",
		"modules/History/src/HistoryC",
		"modules/HarmonicAnalysis/src/HarmonicAnalysis",
		"modules/Harmonizer/src/Harmonizer",
		"modules/LSViewer/src/main",
		"modules/MainMenu/src/MainMenu",
		"modules/MidiCSL/src/main",
		"modules/NoteEdition/src/NoteEdition",
		"modules/StructureEdition/src/StructureEdition",
		"modules/Tag/src/main",
		"modules/WaveManager/src/main",
		"utils/main"
	],
	function(
		ChordEdition,
		chordSequence,
		Constraint,
		convertersMusicCSLJson,
		convertersMusicXML,
		core,
		Cursor,
		Edition,
		FileEdition,
		HistoryC,
		HarmonicAnalysis,
		Harmonizer,
		LSViewer,
		MainMenu,
		MidiCSL,
		NoteEdition,
		StructureEdition,
		Tag,
		WaveManager,
		utils
	) {
		return {
			"ChordEdition": ChordEdition,
			"chordSequence": chordSequence,
			"Constraint": Constraint,
			"converters": {
				"MusicCSLJson": convertersMusicCSLJson,
				"MusicXML": convertersMusicXML
			},
			"core": core,
			"Cursor": Cursor,
			"Edition": Edition,
			"FileEdition": FileEdition,
			"HistoryC": HistoryC,
			"HarmonicAnalysis": HarmonicAnalysis,
			"Harmonizer": Harmonizer,
			"LSViewer": LSViewer,
			"MainMenu": MainMenu,
			"MidiCSL": MidiCSL,
			"NoteEdition": NoteEdition,
			"StructureEdition": StructureEdition,
			"Tag": Tag,
			"WaveManager": WaveManager,
			"utils": utils
		};
	}
);
